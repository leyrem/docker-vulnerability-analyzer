{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2023-42363",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42363",
              "help": {
                "text": "Vulnerability CVE-2023-42363\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)\nA use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "**Vulnerability CVE-2023-42363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r7|[CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)|\n\nA use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-42364",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42364",
              "help": {
                "text": "Vulnerability CVE-2023-42364\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)\nA use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "**Vulnerability CVE-2023-42364**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r7|[CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)|\n\nA use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-42365",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox:  use-after-free"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42365",
              "help": {
                "text": "Vulnerability CVE-2023-42365\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)\nA use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "**Vulnerability CVE-2023-42365**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r7|[CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)|\n\nA use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-42366",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: A heap-buffer-overflow"
              },
              "fullDescription": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42366",
              "help": {
                "text": "Vulnerability CVE-2023-42366\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r6\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "**Vulnerability CVE-2023-42366**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r6|[CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)|\n\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-4603",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Excessive time spent checking DSA keys and parameters"
              },
              "fullDescription": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4603",
              "help": {
                "text": "Vulnerability CVE-2024-4603\nSeverity: MEDIUM\nPackage: libssl3\nFixed Version: 3.1.5-r0\nLink: [CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)\nIssue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-4603**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl3|3.1.5-r0|[CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)|\n\nIssue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-2511",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Unbounded memory growth with session handling in TLSv1.3"
              },
              "fullDescription": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-2511",
              "help": {
                "text": "Vulnerability CVE-2024-2511\nSeverity: LOW\nPackage: libssl3\nFixed Version: 3.1.4-r6\nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-2511**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libssl3|3.1.4-r6|[CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)|\n\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-35255",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability"
              },
              "fullDescription": {
                "text": "Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-35255",
              "help": {
                "text": "Vulnerability CVE-2024-35255\nSeverity: MEDIUM\nPackage: github.com/Azure/azure-sdk-for-go/sdk/azidentity\nFixed Version: 1.6.0\nLink: [CVE-2024-35255](https://avd.aquasec.com/nvd/cve-2024-35255)\nAzure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability",
                "markdown": "**Vulnerability CVE-2024-35255**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/Azure/azure-sdk-for-go/sdk/azidentity|1.6.0|[CVE-2024-35255](https://avd.aquasec.com/nvd/cve-2024-35255)|\n\nAzure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29018",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: external DNS requests from \u0026#39;internal\u0026#39; networks could lead to data exfiltration"
              },
              "fullDescription": {
                "text": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby\u0026#39;s networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel\u0026#39;s various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container\u0026#39;s network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host\u0026#39;s configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace\u0026#39;s normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container\u0026#39;s network namespace."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29018",
              "help": {
                "text": "Vulnerability CVE-2024-29018\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 26.0.0-rc3, 25.0.5, 23.0.11\nLink: [CVE-2024-29018](https://avd.aquasec.com/nvd/cve-2024-29018)\nMoby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby's networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container's network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container's network namespace.",
                "markdown": "**Vulnerability CVE-2024-29018**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|26.0.0-rc3, 25.0.5, 23.0.11|[CVE-2024-29018](https://avd.aquasec.com/nvd/cve-2024-29018)|\n\nMoby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby's networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container's network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container's network namespace."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-27289",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pgx: SQL Injection via Line Comment Creation"
              },
              "fullDescription": {
                "text": "pgx is a PostgreSQL driver and toolkit for Go. Prior to version 4.18.2, SQL injection can occur when all of the following conditions are met: the non-default simple protocol is used; a placeholder for a numeric value must be immediately preceded by a minus; there must be a second placeholder for a string value after the first placeholder; both must be on the same line; and both parameter values must be user-controlled. The problem is resolved in v4.18.2. As a workaround, do not use the simple protocol or do not place a minus directly before a placeholder.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-27289",
              "help": {
                "text": "Vulnerability CVE-2024-27289\nSeverity: MEDIUM\nPackage: github.com/jackc/pgx\nFixed Version: 4.18.2\nLink: [CVE-2024-27289](https://avd.aquasec.com/nvd/cve-2024-27289)\npgx is a PostgreSQL driver and toolkit for Go. Prior to version 4.18.2, SQL injection can occur when all of the following conditions are met: the non-default simple protocol is used; a placeholder for a numeric value must be immediately preceded by a minus; there must be a second placeholder for a string value after the first placeholder; both must be on the same line; and both parameter values must be user-controlled. The problem is resolved in v4.18.2. As a workaround, do not use the simple protocol or do not place a minus directly before a placeholder.\n",
                "markdown": "**Vulnerability CVE-2024-27289**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/jackc/pgx|4.18.2|[CVE-2024-27289](https://avd.aquasec.com/nvd/cve-2024-27289)|\n\npgx is a PostgreSQL driver and toolkit for Go. Prior to version 4.18.2, SQL injection can occur when all of the following conditions are met: the non-default simple protocol is used; a placeholder for a numeric value must be immediately preceded by a minus; there must be a second placeholder for a string value after the first placeholder; both must be on the same line; and both parameter values must be user-controlled. The problem is resolved in v4.18.2. As a workaround, do not use the simple protocol or do not place a minus directly before a placeholder.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-27304",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pgx: SQL Injection via Protocol Message Size Overflow"
              },
              "fullDescription": {
                "text": "pgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker\u0026#39;s control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-27304",
              "help": {
                "text": "Vulnerability CVE-2024-27304\nSeverity: MEDIUM\nPackage: github.com/jackc/pgx\nFixed Version: 4.18.2, 5.5.4\nLink: [CVE-2024-27304](https://avd.aquasec.com/nvd/cve-2024-27304)\npgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size.",
                "markdown": "**Vulnerability CVE-2024-27304**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/jackc/pgx|4.18.2, 5.5.4|[CVE-2024-27304](https://avd.aquasec.com/nvd/cve-2024-27304)|\n\npgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-0406",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mholt/archiver: path traversal vulnerability"
              },
              "fullDescription": {
                "text": "A flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user\u0026#39;s or application\u0026#39;s privileges using the library."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-0406",
              "help": {
                "text": "Vulnerability CVE-2024-0406\nSeverity: MEDIUM\nPackage: github.com/mholt/archiver/v3\nFixed Version: \nLink: [CVE-2024-0406](https://avd.aquasec.com/nvd/cve-2024-0406)\nA flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user's or application's privileges using the library.",
                "markdown": "**Vulnerability CVE-2024-0406**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/mholt/archiver/v3||[CVE-2024-0406](https://avd.aquasec.com/nvd/cve-2024-0406)|\n\nA flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user's or application's privileges using the library."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28180",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jose-go: improper handling of highly compressed data"
              },
              "fullDescription": {
                "text": "Package jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28180",
              "help": {
                "text": "Vulnerability CVE-2024-28180\nSeverity: MEDIUM\nPackage: gopkg.in/square/go-jose.v2\nFixed Version: \nLink: [CVE-2024-28180](https://avd.aquasec.com/nvd/cve-2024-28180)\nPackage jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.\n",
                "markdown": "**Vulnerability CVE-2024-28180**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|gopkg.in/square/go-jose.v2||[CVE-2024-28180](https://avd.aquasec.com/nvd/cve-2024-28180)|\n\nPackage jose aims to provide an implementation of the Javascript Object Signing and Encryption set of standards. An attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). This vulnerability has been patched in versions 4.0.1, 3.0.3 and 2.6.3.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24789",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The archive/zip package\u0026#39;s handling of certain types of invalid zip fil ..."
              },
              "fullDescription": {
                "text": "The archive/zip package\u0026#39;s handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24789",
              "help": {
                "text": "Vulnerability CVE-2024-24789\nSeverity: UNKNOWN\nPackage: stdlib\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)\nThe archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
                "markdown": "**Vulnerability CVE-2024-24789**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|stdlib|1.21.11, 1.22.4|[CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)|\n\nThe archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2024-24790",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as ex ..."
              },
              "fullDescription": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24790",
              "help": {
                "text": "Vulnerability CVE-2024-24790\nSeverity: UNKNOWN\nPackage: stdlib\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)\nThe various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
                "markdown": "**Vulnerability CVE-2024-24790**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|stdlib|1.21.11, 1.22.4|[CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)|\n\nThe various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            }
          ],
          "version": "0.52.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-42363",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42363\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42364\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42365\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.36.1-r6\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42363\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox-binsh@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42364\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox-binsh@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42365\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox-binsh@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.36.1-r6\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: busybox-binsh@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-4603\nSeverity: MEDIUM\nFixed Version: 3.1.5-r0\nLink: [CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: libcrypto3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Package: libcrypto3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-2511\nSeverity: LOW\nFixed Version: 3.1.4-r6\nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: libcrypto3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: libssl3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-4603\nSeverity: MEDIUM\nFixed Version: 3.1.5-r0\nLink: [CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: libssl3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Package: libssl3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-2511\nSeverity: LOW\nFixed Version: 3.1.4-r6\nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: libssl3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42363\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: ssl_client@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42364\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: ssl_client@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42365\nSeverity: MEDIUM\nFixed Version: 1.36.1-r7\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: ssl_client@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r5\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.36.1-r6\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hashicorp/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "hashicorp/vault: ssl_client@1.36.1-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35255",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Package: github.com/Azure/azure-sdk-for-go/sdk/azidentity\nInstalled Version: v1.5.1\nVulnerability CVE-2024-35255\nSeverity: MEDIUM\nFixed Version: 1.6.0\nLink: [CVE-2024-35255](https://avd.aquasec.com/nvd/cve-2024-35255)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: github.com/Azure/azure-sdk-for-go/sdk/azidentity@v1.5.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29018",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v25.0.2+incompatible\nVulnerability CVE-2024-29018\nSeverity: MEDIUM\nFixed Version: 26.0.0-rc3, 25.0.5, 23.0.11\nLink: [CVE-2024-29018](https://avd.aquasec.com/nvd/cve-2024-29018)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: github.com/docker/docker@v25.0.2+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-27289",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: github.com/jackc/pgx\nInstalled Version: v3.3.0+incompatible\nVulnerability CVE-2024-27289\nSeverity: MEDIUM\nFixed Version: 4.18.2\nLink: [CVE-2024-27289](https://avd.aquasec.com/nvd/cve-2024-27289)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: github.com/jackc/pgx@v3.3.0+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-27304",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: github.com/jackc/pgx\nInstalled Version: v3.3.0+incompatible\nVulnerability CVE-2024-27304\nSeverity: MEDIUM\nFixed Version: 4.18.2, 5.5.4\nLink: [CVE-2024-27304](https://avd.aquasec.com/nvd/cve-2024-27304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: github.com/jackc/pgx@v3.3.0+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0406",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: github.com/mholt/archiver/v3\nInstalled Version: v3.5.1\nVulnerability CVE-2024-0406\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2024-0406](https://avd.aquasec.com/nvd/cve-2024-0406)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: github.com/mholt/archiver/v3@v3.5.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28180",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: gopkg.in/square/go-jose.v2\nInstalled Version: v2.6.0\nVulnerability CVE-2024-28180\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2024-28180](https://avd.aquasec.com/nvd/cve-2024-28180)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: gopkg.in/square/go-jose.v2@v2.6.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.21.9\nVulnerability CVE-2024-24789\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: stdlib@1.21.9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.21.9\nVulnerability CVE-2024-24790\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "bin/vault",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "bin/vault: stdlib@1.21.9"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageName": "hashicorp/vault:1.16.2",
        "repoDigests": [
          "hashicorp/vault@sha256:e139ff28c23e1f22a6e325696318141259b177097d8e238a3a4c5b84862fadd8"
        ],
        "repoTags": [
          "hashicorp/vault:1.16.2"
        ]
      }
    }
  ]
}