{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Docker Scout",
          "informationUri": "https://docker.com/products/docker-scout",
          "name": "docker scout",
          "rules": [
            {
              "id": "CVE-2024-2511",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-2511"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-2511?s=amazon&n=openssl-libs&ns=amazonlinux&t=rpm&osn=amazonlinux&osv=2023&vr=%3C3.0.8-1.amzn2023.0.12",
              "help": {
                "text": "Package updates are available for Amazon Linux 2023 that fix the following vulnerabilities:\nCVE-2024-2511:\n\tIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.\n",
                "markdown": "> Package updates are available for Amazon Linux 2023 that fix the following vulnerabilities:\nCVE-2024-2511:\n\tIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.\n\n|                |                                                                                              |\n|----------------|----------------------------------------------------------------------------------------------|\n| Package        | pkg:rpm/amazonlinux/openssl-libs@1:3.0.8-1.amzn2023.0.11?os_name=amazonlinux&os_version=2023 |\n| Affected range | <3.0.8-1.amzn2023.0.12                                                                       |\n| Fixed version  | 3.0.8-1.amzn2023.0.12                                                                        |\n"
              },
              "properties": {
                "affected_version": "<3.0.8-1.amzn2023.0.12",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "3.0.8-1.amzn2023.0.12",
                "purls": [
                  "pkg:rpm/amazonlinux/openssl-libs@1:3.0.8-1.amzn2023.0.11?os_name=amazonlinux&os_version=2023",
                  "pkg:rpm/amazonlinux/openssl@1:3.0.8-1.amzn2023.0.11?os_name=amazonlinux&os_version=2023"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29025",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-29025: Allocation of Resources Without Limits or Throttling"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-29025?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.108.Final",
              "help": {
                "text": "### Summary\nThe `HttpPostRequestDecoder` can be tricked to accumulate data. I have spotted currently two attack vectors \n\n### Details\n1. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list.\n2. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits\n\n### PoC\n\nHere is a Netty branch that provides a fix + tests : https://github.com/vietj/netty/tree/post-request-decoder\n\n\nHere is a reproducer with Vert.x (which uses this decoder) https://gist.github.com/vietj/f558b8ea81ec6505f1e9a6ca283c9ae3\n\n### Impact\nAny Netty based HTTP server that uses the `HttpPostRequestDecoder` to decode a form.\n",
                "markdown": "> ### Summary\nThe `HttpPostRequestDecoder` can be tricked to accumulate data. I have spotted currently two attack vectors \n\n### Details\n1. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list.\n2. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits\n\n### PoC\n\nHere is a Netty branch that provides a fix + tests : https://github.com/vietj/netty/tree/post-request-decoder\n\n\nHere is a reproducer with Vert.x (which uses this decoder) https://gist.github.com/vietj/f558b8ea81ec6505f1e9a6ca283c9ae3\n\n### Impact\nAny Netty based HTTP server that uses the `HttpPostRequestDecoder` to decode a form.\n\n|                |                                                   |\n|----------------|---------------------------------------------------|\n| Package        | pkg:maven/io.netty/netty-codec-http@4.1.104.Final |\n| Affected range | <4.1.108.Final                                    |\n| Fixed version  | 4.1.108.Final                                     |\n| CVSS Score     |                                               5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L      |\n"
              },
              "properties": {
                "affected_version": "<4.1.108.Final",
                "cvssV3": 5.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "4.1.108.Final",
                "purls": [
                  "pkg:maven/io.netty/netty-codec-http@4.1.104.Final"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-21634",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-21634: Allocation of Resources Without Limits or Throttling"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-21634?s=github&n=ion-java&ns=software.amazon.ion&t=maven&vr=%3C1.10.5",
              "help": {
                "text": "### Impact\n\nA potential denial-of-service issue exists in `ion-java` for applications that use `ion-java` to:\n\n* Deserialize Ion text encoded data, or\n* Deserialize Ion text or binary encoded data into the `IonValue` model and then invoke certain `IonValue` methods on that in-memory representation.\n\nAn actor could craft Ion data that, when loaded by the affected application and/or processed using the `IonValue` model, results in a `StackOverflowError` originating from the `ion-java` library.\n\nImpacted versions: <1.10.5\n\n### Patches\n\nThe patch is included in `ion-java` >= 1.10.5.\n\n### Workarounds\n\nDo not load data which originated from an untrusted source or that could have been tampered with. **Only load data you trust.**\n\n----\n\nIf you have any questions or comments about this advisory, we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.\n\n[1] https://aws.amazon.com/security/vulnerability-reporting\n",
                "markdown": "> ### Impact\n\nA potential denial-of-service issue exists in `ion-java` for applications that use `ion-java` to:\n\n* Deserialize Ion text encoded data, or\n* Deserialize Ion text or binary encoded data into the `IonValue` model and then invoke certain `IonValue` methods on that in-memory representation.\n\nAn actor could craft Ion data that, when loaded by the affected application and/or processed using the `IonValue` model, results in a `StackOverflowError` originating from the `ion-java` library.\n\nImpacted versions: <1.10.5\n\n### Patches\n\nThe patch is included in `ion-java` >= 1.10.5.\n\n### Workarounds\n\nDo not load data which originated from an untrusted source or that could have been tampered with. **Only load data you trust.**\n\n----\n\nIf you have any questions or comments about this advisory, we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.\n\n[1] https://aws.amazon.com/security/vulnerability-reporting\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:maven/software.amazon.ion/ion-java@1.5.1 |\n| Affected range | <1.10.5                                      |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<1.10.5",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:maven/software.amazon.ion/ion-java@1.5.1"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-1471",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-1471: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33",
              "help": {
                "text": "### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows any type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the target class. A `ConstructorException` is thrown, but only after a malicious payload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\nA fix was released in version 2.0. See https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314 for more information.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**: \n**Date disclosed**: 10/13/2022\n",
                "markdown": "> ### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows any type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the target class. A `ConstructorException` is thrown, but only after a malicious payload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\nA fix was released in version 2.0. See https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314 for more information.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**: \n**Date disclosed**: 10/13/2022\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:maven/org.yaml/snakeyaml@1.33            |\n| Affected range | <=1.33                                       |\n| Fixed version  |                                          2.0 |\n| CVSS Score     |                                          8.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L |\n"
              },
              "properties": {
                "affected_version": "<=1.33",
                "cvssV3": 8.3,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L",
                "fixed_version": "2.0",
                "purls": [
                  "pkg:maven/org.yaml/snakeyaml@1.33"
                ],
                "security-severity": "8.3",
                "tags": [
                  "HIGH"
                ]
              }
            }
          ],
          "version": "1.9.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-2511                                                                            \n  Severity        : MEDIUM                                                                                   \n  Package         : pkg:rpm/amazonlinux/openssl@1:3.0.8-1.amzn2023.0.11?os_name=amazonlinux&os_version=2023  \n  Affected range  : <3.0.8-1.amzn2023.0.12                                                                   \n  Fixed version   : 3.0.8-1.amzn2023.0.12                                                                    \n  EPSS Score      : 0.000440                                                                                 \n  EPSS Percentile : 0.102930                                                                                 \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/var/lib/rpm/rpmdb.sqlite"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/etc/pki/tls/ct_log_list.cnf"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/libcrypto.so.3.0.8"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/ossl-modules/legacy.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/loader_attic.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/licenses/openssl-libs/LICENSE.txt"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/etc/pki/tls/openssl.cnf"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/capi.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/ossl-modules/fips.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/afalg.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/padlock.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/libssl.so.3.0.8"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-2511                                                                                 \n  Severity        : MEDIUM                                                                                        \n  Package         : pkg:rpm/amazonlinux/openssl-libs@1:3.0.8-1.amzn2023.0.11?os_name=amazonlinux&os_version=2023  \n  Affected range  : <3.0.8-1.amzn2023.0.12                                                                        \n  Fixed version   : 3.0.8-1.amzn2023.0.12                                                                         \n  EPSS Score      : 0.000440                                                                                      \n  EPSS Percentile : 0.102930                                                                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/var/lib/rpm/rpmdb.sqlite"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/etc/pki/tls/ct_log_list.cnf"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/libcrypto.so.3.0.8"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/ossl-modules/legacy.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/loader_attic.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/licenses/openssl-libs/LICENSE.txt"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/etc/pki/tls/openssl.cnf"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/capi.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/ossl-modules/fips.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/afalg.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/engines-3/padlock.so"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib64/libssl.so.3.0.8"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29025",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-29025                                     \n  Severity        : MEDIUM                                             \n  Package         : pkg:maven/io.netty/netty-codec-http@4.1.104.Final  \n  Affected range  : <4.1.108.Final                                     \n  Fixed version   : 4.1.108.Final                                      \n  CVSS Score      : 5.3                                                \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L       \n  EPSS Score      : 0.000450                                           \n  EPSS Percentile : 0.154300                                           \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/dynamodblocal/DynamoDBLocal_lib/netty-codec-http-4.1.jar"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21634",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-21634                                \n  Severity        : HIGH                                          \n  Package         : pkg:maven/software.amazon.ion/ion-java@1.5.1  \n  Affected range  : <1.10.5                                       \n  Fixed version   : not fixed                                     \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.000460                                      \n  EPSS Percentile : 0.168950                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/dynamodblocal/DynamoDBLocal_lib/ion-java-1.5.1.jar"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1471",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-1471                                 \n  Severity        : HIGH                                          \n  Package         : pkg:maven/org.yaml/snakeyaml@1.33             \n  Affected range  : <=1.33                                        \n  Fixed version   : 2.0                                           \n  CVSS Score      : 8.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L  \n  EPSS Score      : 0.008110                                      \n  EPSS Percentile : 0.818210                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/dynamodblocal/DynamoDBLocal_lib/Log4j-core-2.x.jar:org.yaml:snakeyaml"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
