{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Docker Scout",
          "informationUri": "https://docker.com/products/docker-scout",
          "name": "docker scout",
          "rules": [
            {
              "id": "CVE-2023-45288",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45288: Uncontrolled Resource Consumption"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0",
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.\n",
                "markdown": "> An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/golang.org/x/net@0.19.0           |\n| Affected range | <0.23.0                                      |\n| Fixed version  | 0.23.0                                       |\n| CVSS Score     |                                          5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": "<1.21.9",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.9",
                "purls": [
                  "pkg:golang/golang.org/x/net@0.17.0",
                  "pkg:golang/golang.org/x/net@0.19.0",
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2023-45289",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45289"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.\n",
                "markdown": "> When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.\n\n|                |                            |\n|----------------|----------------------------|\n| Package        | pkg:golang/stdlib@1.21.5.1 |\n| Affected range | <1.21.8                    |\n| Fixed version  | 1.21.8                     |\n"
              },
              "properties": {
                "affected_version": ">=1.22.0-0,<1.22.1",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.22.1",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2023-45290",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45290"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3E%3D1.22.0-0%2C%3C1.22.1",
              "help": {
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.\n",
                "markdown": "> When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.22.0 |\n| Affected range | >=1.22.0-0,<1.22.1       |\n| Fixed version  | 1.22.1                   |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24783",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24783"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3E%3D1.22.0-0%2C%3C1.22.1",
              "help": {
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.\n",
                "markdown": "> Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.22.0 |\n| Affected range | >=1.22.0-0,<1.22.1       |\n| Fixed version  | 1.22.1                   |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24784",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24784"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.\n",
                "markdown": "> The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.\n\n|                |                            |\n|----------------|----------------------------|\n| Package        | pkg:golang/stdlib@1.21.5.1 |\n| Affected range | <1.21.8                    |\n| Fixed version  | 1.21.8                     |\n"
              },
              "properties": {
                "affected_version": ">=1.22.0-0,<1.22.1",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.22.1",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24785",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24785"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3E%3D1.22.0-0%2C%3C1.22.1",
              "help": {
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.\n",
                "markdown": "> If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.22.0 |\n| Affected range | >=1.22.0-0,<1.22.1       |\n| Fixed version  | 1.22.1                   |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24788",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24788"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24788?s=golang&n=stdlib&t=golang&vr=%3E%3D1.22.0-0%2C%3C1.22.3",
              "help": {
                "text": "A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop.\n",
                "markdown": "> A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.22.0 |\n| Affected range | >=1.22.0-0,<1.22.3       |\n| Fixed version  | 1.22.3                   |\n"
              },
              "properties": {
                "affected_version": ">=1.22.0-0,<1.22.3",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.22.3",
                "purls": [
                  "pkg:golang/stdlib@1.22.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24789",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24789"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11",
              "help": {
                "text": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.\n",
                "markdown": "> The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.21.9 |\n| Affected range | <1.21.11                 |\n| Fixed version  | 1.21.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.21.11",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.11",
                "purls": [
                  "pkg:golang/stdlib@1.21.10",
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.21.9",
                  "pkg:golang/stdlib@1.22.0",
                  "pkg:golang/stdlib@1.22.3"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24790",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24790"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3E%3D1.22.0-0%2C%3C1.22.4",
              "help": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.\n",
                "markdown": "> The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.22.0 |\n| Affected range | >=1.22.0-0,<1.22.4       |\n| Fixed version  | 1.22.4                   |\n"
              },
              "properties": {
                "affected_version": "<1.21.11",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.11",
                "purls": [
                  "pkg:golang/stdlib@1.21.10",
                  "pkg:golang/stdlib@1.21.5.1",
                  "pkg:golang/stdlib@1.21.9",
                  "pkg:golang/stdlib@1.22.0",
                  "pkg:golang/stdlib@1.22.3"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2020-8912",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-8912"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-8912?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0",
              "help": {
                "text": "The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n",
                "markdown": "> The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n\n|                |                                               |\n|----------------|-----------------------------------------------|\n| Package        | pkg:golang/github.com/aws/aws-sdk-go@1.44.288 |\n| Affected range | >=0                                           |\n| Fixed version  | not fixed                                     |\n"
              },
              "properties": {
                "affected_version": ">=0",
                "cvssV3_severity": "LOW",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/aws/aws-sdk-go@1.44.288"
                ],
                "security-severity": "2.5",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-24786",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24786: Loop with Unreachable Exit Condition ('Infinite Loop')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0",
              "help": {
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.\n",
                "markdown": "> The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/google.golang.org/protobuf@1.31.0 |\n| Affected range | <1.33.0                                      |\n| Fixed version  | 1.33.0                                       |\n"
              },
              "properties": {
                "affected_version": "<1.33.0",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.33.0",
                "purls": [
                  "pkg:golang/google.golang.org/protobuf@1.31.0"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8552",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-8552: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-8552?s=gitlab&n=apiserver&ns=k8s.io&t=golang&vr=%3C1.15.10",
              "help": {
                "text": "The Kubernetes API server component has been found to be vulnerable to a denial of service attack via successful API requests.\n",
                "markdown": "> The Kubernetes API server component has been found to be vulnerable to a denial of service attack via successful API requests.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/apiserver@0.29.0           |\n| Affected range | <1.15.10                                     |\n| Fixed version  | 1.15.10, 1.16.7, 1.17.3                      |\n| CVSS Score     |                                          4.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": "<1.15.10",
                "cvssV3": 4.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "1.15.10, 1.16.7, 1.17.3",
                "purls": [
                  "pkg:golang/k8s.io/apiserver@0.29.0",
                  "pkg:golang/k8s.io/apiserver@0.29.3"
                ],
                "security-severity": "4.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39326",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-39326"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3E%3D1.21.0-0%2C%3C1.21.5",
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.\n",
                "markdown": "> A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.\n\n|                |                            |\n|----------------|----------------------------|\n| Package        | pkg:golang/stdlib@1.21.5.1 |\n| Affected range | >=1.21.0-0,<1.21.5         |\n| Fixed version  | 1.21.5                     |\n"
              },
              "properties": {
                "affected_version": ">=1.21.0-0,<1.21.5",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.21.5",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8911",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-8911"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-8911?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0",
              "help": {
                "text": "The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n",
                "markdown": "> The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n\n|                |                                               |\n|----------------|-----------------------------------------------|\n| Package        | pkg:golang/github.com/aws/aws-sdk-go@1.44.288 |\n| Affected range | >=0                                           |\n| Fixed version  | not fixed                                     |\n"
              },
              "properties": {
                "affected_version": ">=0",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/aws/aws-sdk-go@1.44.288"
                ],
                "security-severity": "5.6",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-0406",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-0406: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-0406?s=github&n=v3&ns=github.com%2Fmholt%2Farchiver&t=golang&vr=%3E%3D3.0.0%2C%3C%3D3.5.1",
              "help": {
                "text": "A flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user's or application's privileges using the library.\n",
                "markdown": "> A flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user's or application's privileges using the library.\n\n|                |                                               |\n|----------------|-----------------------------------------------|\n| Package        | pkg:golang/github.com/mholt/archiver@3.5.1#v3 |\n| Affected range | >=3.0.0,<=3.5.1                               |\n| Fixed version  | not fixed                                     |\n| CVSS Score     |                                           6.1 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N  |\n"
              },
              "properties": {
                "affected_version": ">=3.0.0,<=3.5.1",
                "cvssV3": 6.1,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/mholt/archiver@3.5.1#v3"
                ],
                "security-severity": "6.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24557",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24557: Insufficient Verification of Data Authenticity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24557?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C24.0.9",
              "help": {
                "text": "The classic builder cache system is prone to cache poisoning if the image is built `FROM scratch`.\nAlso, changes to some instructions (most important being `HEALTHCHECK` and `ONBUILD`) would not cause a cache miss.\n\n\nAn attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.\n\nFor example, an attacker could create an image that is considered as a valid cache candidate for:\n```\nFROM scratch\nMAINTAINER Pawel\n```\n\nwhen in fact the malicious image used as a cache would be an image built from a different Dockerfile.\n\nIn the second case, the attacker could for example substitute a different `HEALTCHECK` command.\n\n\n### Impact\n\n23.0+ users are only affected if they explicitly opted out of Buildkit (`DOCKER_BUILDKIT=0` environment variable) or are using the `/build` API endpoint (which uses the classic builder by default).\n\nAll users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.\n\nImage build API endpoint (`/build`) and `ImageBuild` function from `github.com/docker/docker/client` is also affected as it the uses classic builder by default. \n\n\n### Patches\n\nPatches are included in Moby releases:\n\n- v25.0.2\n- v24.0.9\n- v23.0.10\n\n### Workarounds\n\n- Use `--no-cache` or use Buildkit if possible (`DOCKER_BUILDKIT=1`, it's default on 23.0+ assuming that the buildx plugin is installed).\n- Use `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for `ImageBuild` call.\n\n\n",
                "markdown": "> The classic builder cache system is prone to cache poisoning if the image is built `FROM scratch`.\nAlso, changes to some instructions (most important being `HEALTHCHECK` and `ONBUILD`) would not cause a cache miss.\n\n\nAn attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.\n\nFor example, an attacker could create an image that is considered as a valid cache candidate for:\n```\nFROM scratch\nMAINTAINER Pawel\n```\n\nwhen in fact the malicious image used as a cache would be an image built from a different Dockerfile.\n\nIn the second case, the attacker could for example substitute a different `HEALTCHECK` command.\n\n\n### Impact\n\n23.0+ users are only affected if they explicitly opted out of Buildkit (`DOCKER_BUILDKIT=0` environment variable) or are using the `/build` API endpoint (which uses the classic builder by default).\n\nAll users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.\n\nImage build API endpoint (`/build`) and `ImageBuild` function from `github.com/docker/docker/client` is also affected as it the uses classic builder by default. \n\n\n### Patches\n\nPatches are included in Moby releases:\n\n- v25.0.2\n- v24.0.9\n- v23.0.10\n\n### Workarounds\n\n- Use `--no-cache` or use Buildkit if possible (`DOCKER_BUILDKIT=1`, it's default on 23.0+ assuming that the buildx plugin is installed).\n- Use `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for `ImageBuild` call.\n\n\n\n|                |                                                                    |\n|----------------|--------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@24.0.7%!B(MISSING)incompatible |\n| Affected range | <24.0.9                                                            |\n| Fixed version  | 24.0.9                                                             |\n| CVSS Score     |                                                                6.9 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                       |\n"
              },
              "properties": {
                "affected_version": "<24.0.9",
                "cvssV3": 6.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L",
                "fixed_version": "24.0.9",
                "purls": [
                  "pkg:golang/github.com/docker/docker@24.0.7%2Bincompatible"
                ],
                "security-severity": "6.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45283",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45283"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3E%3D1.21.4%2C%3C1.21.5",
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.\n",
                "markdown": "> The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.\n\n|                |                            |\n|----------------|----------------------------|\n| Package        | pkg:golang/stdlib@1.21.5.1 |\n| Affected range | >=1.21.4,<1.21.5           |\n| Fixed version  | 1.21.5                     |\n"
              },
              "properties": {
                "affected_version": ">=1.21.4,<1.21.5",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.21.5",
                "purls": [
                  "pkg:golang/stdlib@1.21.5.1"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-3817",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-3817: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-3817?s=github&n=go-getter&ns=github.com%2Fhashicorp&t=golang&vr=%3E%3D1.5.9%2C%3C1.7.4",
              "help": {
                "text": "When go-getter is performing a Git operation, go-getter will try to clone the given repository. If a Git reference is not passed along with the Git url, go-getter will then try to check the remote repository’s HEAD reference of its default branch by passing arguments to the Git binary on the host it is executing on.\n\nAn attacker may format a Git URL in order to inject additional Git arguments to the Git call.\n\nConsumers of the go-getter library should evaluate the risk associated with these issues in the context of their go-getter usage and upgrade go-getter to 1.7.4 or later. \n",
                "markdown": "> When go-getter is performing a Git operation, go-getter will try to clone the given repository. If a Git reference is not passed along with the Git url, go-getter will then try to check the remote repository’s HEAD reference of its default branch by passing arguments to the Git binary on the host it is executing on.\n\nAn attacker may format a Git URL in order to inject additional Git arguments to the Git call.\n\nConsumers of the go-getter library should evaluate the risk associated with these issues in the context of their go-getter usage and upgrade go-getter to 1.7.4 or later. \n\n|                |                                                 |\n|----------------|-------------------------------------------------|\n| Package        | pkg:golang/github.com/hashicorp/go-getter@1.7.3 |\n| Affected range | >=1.5.9,<1.7.4                                  |\n| Fixed version  | 1.7.4                                           |\n| CVSS Score     |                                             9.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H    |\n"
              },
              "properties": {
                "affected_version": ">=1.5.9,<1.7.4",
                "cvssV3": 9.8,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.7.4",
                "purls": [
                  "pkg:golang/github.com/hashicorp/go-getter@1.7.3"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            }
          ],
          "version": "1.9.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.9                     \n  Fixed version   : 1.21.9                      \n  EPSS Score      : 0.000440                    \n  EPSS Percentile : 0.132280                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.2        \n  Fixed version   : 1.22.2                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.1        \n  Fixed version   : 1.22.1                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.8                     \n  Fixed version   : 1.21.8                      \n  EPSS Score      : 0.000440                    \n  EPSS Percentile : 0.102930                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.8                     \n  Fixed version   : 1.21.8                      \n  EPSS Score      : 0.000440                    \n  EPSS Percentile : 0.102930                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.1        \n  Fixed version   : 1.22.1                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.8                     \n  Fixed version   : 1.21.8                      \n  EPSS Score      : 0.000440                    \n  EPSS Percentile : 0.102930                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.1        \n  Fixed version   : 1.22.1                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.1        \n  Fixed version   : 1.22.1                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.8                     \n  Fixed version   : 1.21.8                      \n  EPSS Score      : 0.000440                    \n  EPSS Percentile : 0.102930                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.8                     \n  Fixed version   : 1.21.8                      \n  EPSS Score      : 0.000440                    \n  EPSS Percentile : 0.102930                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.1        \n  Fixed version   : 1.22.1                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24788",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24788            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.3        \n  Fixed version   : 1.22.3                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.11                    \n  Fixed version   : 1.21.11                     \n  EPSS Score      : 0.000450                    \n  EPSS Percentile : 0.154300                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.4        \n  Fixed version   : 1.22.4                    \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.21.10  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.3  \n  Affected range  : >=1.22.0-0,<1.22.4        \n  Fixed version   : 1.22.4                    \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/helm"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.9  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/kubectl"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.9  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/kubectl"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790              \n  Severity        : UNSPECIFIED                 \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : <1.21.11                    \n  Fixed version   : 1.21.11                     \n  EPSS Score      : 0.000450                    \n  EPSS Percentile : 0.154300                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.3  \n  Affected range  : >=1.22.0-0,<1.22.4        \n  Fixed version   : 1.22.4                    \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/helm"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.21.10  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.0  \n  Affected range  : >=1.22.0-0,<1.22.4        \n  Fixed version   : 1.22.4                    \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8912",
          "ruleIndex": 9,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8912                                  \n  Severity        : LOW                                            \n  Package         : pkg:golang/github.com/aws/aws-sdk-go@1.44.288  \n  Affected range  : >=0                                            \n  Fixed version   : not fixed                                      \n  EPSS Score      : 0.000440                                       \n  EPSS Percentile : 0.128200                                       \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 10,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24786                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/protobuf@1.31.0  \n  Affected range  : <1.33.0                                       \n  Fixed version   : 1.33.0                                        \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/helm"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.29.3            \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.29.0            \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/helm"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 12,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39326              \n  Severity        : MEDIUM                      \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : >=1.21.0-0,<1.21.5          \n  Fixed version   : 1.21.5                      \n  EPSS Score      : 0.000520                    \n  EPSS Percentile : 0.202910                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.17.0            \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/helm"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.19.0            \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8911",
          "ruleIndex": 13,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8911                                  \n  Severity        : MEDIUM                                         \n  Package         : pkg:golang/github.com/aws/aws-sdk-go@1.44.288  \n  Affected range  : >=0                                            \n  Fixed version   : not fixed                                      \n  EPSS Score      : 0.000510                                       \n  EPSS Percentile : 0.200700                                       \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0406",
          "ruleIndex": 14,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-0406                                  \n  Severity        : MEDIUM                                         \n  Package         : pkg:golang/github.com/mholt/archiver@3.5.1#v3  \n  Affected range  : >=3.0.0,<=3.5.1                                \n  Fixed version   : not fixed                                      \n  CVSS Score      : 6.1                                            \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N   \n  EPSS Score      : 0.000440                                       \n  EPSS Percentile : 0.104870                                       \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 15,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                      \n  Severity        : MEDIUM                                                              \n  Package         : pkg:golang/github.com/docker/docker@24.0.7%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                             \n  Fixed version   : 24.0.9                                                              \n  CVSS Score      : 6.9                                                                 \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                        \n  EPSS Score      : 0.000530                                                            \n  EPSS Percentile : 0.214410                                                            \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/helm"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 16,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45283              \n  Severity        : HIGH                        \n  Package         : pkg:golang/stdlib@1.21.5.1  \n  Affected range  : >=1.21.4,<1.21.5            \n  Fixed version   : 1.21.5                      \n  EPSS Score      : 0.000980                    \n  EPSS Percentile : 0.411420                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/container-suseconnect"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3817",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-3817                                    \n  Severity        : CRITICAL                                         \n  Package         : pkg:golang/github.com/hashicorp/go-getter@1.7.3  \n  Affected range  : >=1.5.9,<1.7.4                                   \n  Fixed version   : 1.7.4                                            \n  CVSS Score      : 9.8                                              \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H     \n  EPSS Score      : 0.000430                                         \n  EPSS Percentile : 0.089770                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/bin/k9s"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
