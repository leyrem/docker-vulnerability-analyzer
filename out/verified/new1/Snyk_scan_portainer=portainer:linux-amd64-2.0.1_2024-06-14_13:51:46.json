{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 401
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515",
              "shortDescription": {
                "text": "High severity - Access Restriction Bypass vulnerability in github.com/dgrijalva/jwt-go"
              },
              "fullDescription": {
                "text": "(CVE-2020-26160) github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/dgrijalva/jwt-go](https://github.com/dgrijalva/jwt-go) is a go implementation of JSON Web Tokens.\n\nAffected versions of this package are vulnerable to Access Restriction Bypass if `m[\"aud\"]` happens to be `[]string{}`, as allowed by the spec, the type assertion fails and the value of `aud` is `\"\"`. This can cause audience verification to succeed even if the audiences being passed are incorrect if `required` is set to `false`.\n## Remediation\nUpgrade `github.com/dgrijalva/jwt-go` to version 4.0.0-preview1 or higher.\n## References\n- [GitHub Issue](https://github.com/dgrijalva/jwt-go/issues/422)\n- [GitHub PR](https://github.com/dgrijalva/jwt-go/pull/426)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-287",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMDOCKERDISTRIBUTIONREGISTRYAPIV2-5885037",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in github.com/docker/distribution/registry/api/v2"
              },
              "fullDescription": {
                "text": "(CVE-2023-2253) github.com/docker/distribution/registry/api/v2@v2.7.1+incompatible"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper validation of the value passed to the `n` parameter in the `/v2/_catalog` endpoint.\r\nExploiting this vulnerability is possible by sending a crafted malicious request to the `/v2/_catalog` API endpoint, which results in an allocation of a massive string array and excessive use of memory.\n## Remediation\nUpgrade `github.com/docker/distribution/registry/api/v2` to version 2.8.2-beta.1 or higher.\n## References\n- [GitHub Commit](https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2189886)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMOPENCONTAINERSRUNCLIBCONTAINERUSER-50037",
              "shortDescription": {
                "text": "High severity - Privilege Elevation vulnerability in github.com/opencontainers/runc/libcontainer/user"
              },
              "fullDescription": {
                "text": "(CVE-2016-3697) github.com/opencontainers/runc/libcontainer/user@v0.0.0-20161109192122-51371867a01c"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\r\nAffected version of [`github.com/opencontainers/runc/libcontainer/user`](https://github.com/opencontainers/runc) are vulnerable to Privilege Elevation.\r\nlibcontainer/user/user.go in runC before 0.1.0, as used in Docker before 1.11.2, improperly treats a numeric UID as a potential username, which allows local users to gain privileges via a numeric username in the password file in a container.\r\n\r\n## References\r\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3697)\r\n- [GitHub Release Notes](https://github.com/opencontainers/runc/releases/tag/v0.1.0)\r\n- [GitHub Commit](https://github.com/opencontainers/runc/commit/69af385de62ea68e2e608335cffbb0f4aa3db091),\r\n- [GitHub Issue](https://github.com/docker/docker/issues/21436)\r\n- [GitHub PR](https://github.com/opencontainers/runc/pull/708)\r\n- [Redhat Security Advisory](http://rhn.redhat.com/errata/RHSA-2016-1034.html),"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-264",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.8,
                "security-severity": "7.8"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMPROMETHEUSCLIENTGOLANGPROMETHEUSPROMHTTP-2401819",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in github.com/prometheus/client_golang/prometheus/promhttp"
              },
              "fullDescription": {
                "text": "(CVE-2022-21698) github.com/prometheus/client_golang/prometheus/promhttp@v1.1.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when handling requests with non-standard HTTP methods. \r\n\r\n**Note:** In order to be affected, an instrumented software must:\r\n\r\n1) use `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`\r\n\r\n2) not filter any specific methods (e.g GET) before middleware\r\n\r\n3) pass metric with `method` label name to the middleware\r\n\r\n4) not have any firewall/LB/proxy that filters away requests with unknown `method`. \r\n\r\n**Workarounds:** \r\n\r\n1) removing the `method` label name from `counter/gauge` used in the `InstrumentHandler`\r\n\r\n2) turning off affected `promhttp` handlers\r\n\r\n3) adding custom middleware before `promhttp` handler that will sanitize the request method given by Go `http.Request`\r\n\r\n4) using a reverse proxy or web application firewall, configured to only allow a limited set of methods.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `github.com/prometheus/client_golang/prometheus/promhttp` to version 1.11.1 or higher.\n## References\n- [GitHub Commit](https://github.com/prometheus/client_golang/commit/989baa30fe956631907493ccee1f8e7708660d96)\n- [GitHub PR](https://github.com/prometheus/client_golang/pull/987)\n- [GitHub Release](https://github.com/prometheus/client_golang/releases/tag/v1.11.1)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2045880)\n- [Vulnerable Code](https://github.com/prometheus/client_golang/blob/22da9497b8f0d53072dfc4721904faa7395d8318/prometheus/promhttp/instrument_server.go#L95)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-2331920",
              "shortDescription": {
                "text": "High severity - NULL Pointer Dereference vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2020-29652) golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to NULL Pointer Dereference via a crafted authentication request message for the `gssapi-with-mic` method which will cause `NewServerConn` to panic if `ServerConfig.GSSAPIWithMICConfig` is `nil`.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.0.0-20201216223049-8b5274cf687f or higher.\n## References\n- [GitHub Fix Commit](https://github.com/golang/crypto/commit/8b5274cf687fd9316b4108863654cc57385531e8)\n- [Golang Announcment](https://groups.google.com/g/golang-announce/c/ouZIlBimOsE?pli=1)\n- [Go Review](https://go-review.googlesource.com/c/crypto/+/278852)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-476",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-2429769",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2022-27191) golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when an attacker could cause a crash in the sever under the following conditions:\r\n\r\n1) The server has been configured by passing a `Signer` to `ServerConfig.AddHostKey`.\r\n\r\n2) The Signer passed to `AddHostKey` does not also implement AlgorithmSigner.\r\n\r\n3) The Signer passed to `AddHostKey` does return a key of type “ssh-rsa” from its PublicKey method.\r\n\r\n**Note:**\r\nServers that only use Signer implementations provided by the ssh package are unaffected\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.0.0-20220314234659-1baeb1ce4c0b or higher.\n## References\n- [GitHub Commit](https://github.com/golang/crypto/commit/1baeb1ce4c0b006eff0f294c47cb7617598dfb3d)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/-cp44ypCT5s)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-3026972",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2021-43565) golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via the `SSH` server, when processing malformed `GCM` and `ChaChaPoly1305` packets that contains empty plaintext.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.0.0-20211202192323-5770296d904e or higher.\n## References\n- [GitHub Commit](https://github.com/golang/crypto/commit/5770296d904e90f15f38f77dfc2e43fdf5efc083)\n- [GitHub Issue](https://github.com/golang/go/issues/49932)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/2AR1sKiM-Qs)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-551923",
              "shortDescription": {
                "text": "High severity - Improper Signature Verification vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2020-9283) golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Improper Signature Verification. An attacker can craft an `ssh-ed25519` or `sk-ssh-...@openssh.com` public key, such that the library will panic when trying to verify a signature with it. Clients can deliver such a public key and signature to any `golang.org/x/crypto/ssh` server with a `PublicKeyCallback`, and servers can deliver them to any `golang.org/x/crypto/ssh` client.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.0.0-20200220183623-bac4c82f6975 or higher.\n## References\n- [Exploit DB](https://www.exploit-db.com/exploits/48121)\n- [GitHub Fix Commit](https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236)\n- [Google Forums](https://groups.google.com/forum/#!topic/golang-announce/3L45YRc91SY)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-347",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.6,
                "security-severity": "8.6"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
              "shortDescription": {
                "text": "Medium severity - Authentication Bypass by Capture-replay vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2023-48795) golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Authentication Bypass by Capture-replay during the establishment of the secure channel. An attacker can manipulate handshake sequence numbers to delete messages sent immediately after the channel is established.\r\n\r\n**Note:**\r\n\r\n1) Sequence numbers are only validated once the channel is established and arbitrary messages are allowed during the handshake, allowing them to manipulate the sequence numbers.\r\n\r\n2) The potential consequences of the general Terrapin attack are dependent on the messages exchanged after the handshake concludes. If you are using a custom SSH service and do not resort to the authentication protocol, you should check that dropping the first few messages of a connection does not yield security risks.\r\n\r\n**Impact:** \r\n\r\nWhile cryptographically novel, there is no discernable impact on the integrity of SSH traffic beyond giving the attacker the ability to delete the message that enables some features related to keystroke timing obfuscation. To successfully carry out the exploitation, the connection needs to be protected using either the `ChaCha20-Poly1305` or `CBC` with `Encrypt-then-MAC` encryption methods. The attacker must also be able to intercept and modify the connection's traffic. \r\n\r\n## Workaround\r\n\r\nTemporarily disable the affected `chacha20-poly1305@openssh.com` encryption and `*-etm@openssh.com` MAC algorithms in the affected configuration, and use unaffected algorithms like `AES-GCM` instead.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.17.0 or higher.\n## References\n- [Attack Information](https://terrapin-attack.com/)\n- [GitHub Commit](https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d)\n- [GitHub Commit](https://github.com/libssh2/libssh2/pull/1291/commits/ab44b0906d7f8a296e995ccd661b0e98d01a3742)\n- [GitHub Commit](https://github.com/mkj/dropbear/commit/6e43be5c7b99dbee49dc72b6f989f29fdd7e9356)\n- [GitHub Commit](https://github.com/mwiede/jsch/commit/6214da974286a8b94a95f4cf6cec96e972ffd370)\n- [GitHub Commit](https://github.com/openssh/openssh-portable/commit/1edb00c58f8a6875fad6a497aa2bacf37f9e6cd5)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/3cd7fd156c0d1091e303824807be038b4eead2cd)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/aadec4c3a5051fd99ad4791c80eeac271d56c859)\n- [GitHub Commit](https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0)\n- [GitHub Commit](https://github.com/warp-tech/russh/commit/a355c62d11352cf93c3f9fda7499e03753a938ae)\n- [GitHub Issue](https://github.com/paramiko/paramiko/issues/2337)\n- [GitHub Issue](https://go.dev/issue/64784)\n- [GitHub PR](https://github.com/jenkinsci/jenkins/pull/9089)\n- [Go Forum](https://go.dev/cl/550715)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg)\n- [Jenkins Advisory](https://www.jenkins.io/security/advisory/2024-04-17/#SECURITY-3386)\n- [Security Release](https://www.openssh.com/txt/release-9.6)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/master/javascript/cves/2023/CVE-2023-48795.yaml)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-294",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-2313688",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2021-44716) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). The `HTTP/2` server keeps a per-connection cache mapping header keys to their canonicalized form (e.g., `foo-bar` => `Foo-Bar`). An attacker could send many unique header keys causing unbounded memory growth.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.0.0-20211209124913-491a49abca63 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/84cba5454cafa5c2072c34c3056947de39fe3bbc)\n- [GitHub Commit](https://github.com/golang/net/commit/a5309b321dcaf6c4bf33f5a65b0a5a82591f8039)\n- [GitHub Issue](https://github.com/golang/go/issues/50058)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-787",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-3028257",
              "shortDescription": {
                "text": "High severity - Denial of Service vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2022-27664) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service as an `HTTP/2` connection can hang during closing if a shutdown was preempted by a fatal error.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.0.0-20220906165146-f3363e06e74c, 1.18.6, 1.19.1 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/f3363e06e74cdc304618bf31d898b78590103527)\n- [GitHub Issues](https://github.com/golang/go/issues/54658)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-3160322",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2022-41717) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper checks and limitations for the number of entries in the cache, which can allow an attacker to consume unbounded amounts of memory by sending a small number of very large keys.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.4.0 or higher.\n## References\n- [Fix Commit](https://cs.opensource.google/go/x/net/+/1e63c2f08a10a150fa02c50ece89b340ae64efe4)\n- [Fix Commit](https://go-review.googlesource.com/c/net/+/455635)\n- [GitHub Commit](https://github.com/golang/net/commit/1e63c2f08a10a150fa02c50ece89b340ae64efe4)\n- [GitHub Issue](https://github.com/golang/go/issues/56350)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-3323837",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2022-41723) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) such that a maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the `HPACK` decoder.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.7.0 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/go/commit/97fe3a23b68dd2df748f2369827aeab2420e0930)\n- [GitHub Commit](https://github.com/golang/net/commit/8e2b117aee74f6b86c207a808b0255de45c0a18a)\n- [GitHub Issue](https://github.com/golang/go/issues/57855)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-44487) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) in the implementation of the HTTP/2 protocol. An attacker can cause a denial of service (including via DDoS) by rapidly resetting many streams through request cancellation.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.17.0 or higher.\n## References\n- [Github Commit](https://github.com/helidon-io/helidon/commit/58f43670086e530750c7cb74b0bec92bf5189c79)\n- [Github Commit](https://github.com/pgjones/hypercorn/commit/7c39c68b61012a3c30979176080861c8b00fb229)\n- [GitHub Commit](https://github.com/akka/akka-http/commit/1f29fe6a8567c57dfe848a21ae883304cce5646d)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e)\n- [GitHub Commit](https://github.com/eclipse/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148)\n- [GitHub Commit](https://github.com/gravitational/teleport/commit/15f34f927a45130408eb16ed09af5620270d4d1f)\n- [GitHub Commit](https://github.com/kubernetes/apimachinery/commit/be9188050914374ee8128239e5a2e5998d7897f5)\n- [GitHub Commit](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61)\n- [GitHub Commit](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832)\n- [GitHub Commit](https://github.com/operator-framework/operator-lifecycle-manager/commit/9ec03f07f942dc9cef736957fa152e39157d6e13)\n- [Snyk Blog](https://snyk.io/blog/find-fix-http-2-rapid-reset-zero-day-vulnerability-cve-2023-44487/)\n- [Vulnerability Discovery](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/)\n- [Vulnerability Explanation](https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5958903",
              "shortDescription": {
                "text": "Medium severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-39325) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when `MaxConcurrentStreams` handler `goroutines` running. A a handler is started until one of the existing handlers exits.\r\n\r\n**Note:**\r\n\r\nThis issue is related to [CVE-2023-44487](https://security.snyk.io/vuln/SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327)\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.17.0 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/695775ce641b0f80c9cf03e8a796595355422dd3)\n- [GitHub Commit](https://github.com/golang/net/commit/b225e7ca6dde1ef5a5ae5ce922861bda011cfabd)\n- [GitHub PR](https://github.com/containerd/containerd/pull/9387)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 4.3,
                "security-severity": "4.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2HPACK-3358253",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2/hpack"
              },
              "fullDescription": {
                "text": "(CVE-2022-41723) golang.org/x/net/http2/hpack@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) such that a maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the `HPACK` decoder.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/net/http2/hpack` to version 0.7.0 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/go/commit/97fe3a23b68dd2df748f2369827aeab2420e0930)\n- [GitHub Commit](https://github.com/golang/net/commit/8e2b117aee74f6b86c207a808b0255de45c0a18a)\n- [GitHub Issue](https://github.com/golang/go/issues/57855)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTPHTTPGUTS-3314986",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http/httpguts"
              },
              "fullDescription": {
                "text": "(CVE-2021-31525) golang.org/x/net/http/httpguts@v0.0.0-20191126235420-ef20fe5d7933"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http/httpguts](https://pkg.go.dev/golang.org/x/net/http/httpguts) is a package providing functions implementing various details of the HTTP specification\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when processing a large header to `ReadRequest` or `ReadResponse`. Servers are only vulnerable if the default max header of 1MB is increased by setting `Server.MaxHeaderBytes`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `golang.org/x/net/http/httpguts` to version 0.0.0-20210428140749-89ef3d95e781 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/89ef3d95e781148a0951956029c92a211477f7f9)\n- [GitHub Issue](https://github.com/golang/go/issues/45710)\n- [Golang Commit](https://go.dev/cl/313069)\n- [Golang Issue](https://go.dev/issue/45710)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/cu9SP4eSXMc)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2022-0236)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-674",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXSYSUNIX-3310442",
              "shortDescription": {
                "text": "Medium severity - Incorrect Privilege Assignment vulnerability in golang.org/x/sys/unix"
              },
              "fullDescription": {
                "text": "(CVE-2022-29526) golang.org/x/sys/unix@v0.0.0-20190826190057-c7b8b68b1456"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Incorrect Privilege Assignment such that when called with a non-zero flags parameter, the `Faccessat` function can incorrectly report that a file is accessible.\n## Remediation\nUpgrade `golang.org/x/sys/unix` to version 0.0.0-20220412211240-33da011f77ad or higher.\n## References\n- [GitHub Commit](https://github.com/golang/sys/commit/33da011f77ade50ff5b6a6fb4a9a1e6d6b285809)\n- [GitHub Release](https://github.com/golang/sys/releases/tag/v0.1.0)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-266",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOPKGINSRCDGOGITV4-6150755",
              "shortDescription": {
                "text": "Critical severity - Path Traversal vulnerability in gopkg.in/src-d/go-git.v4"
              },
              "fullDescription": {
                "text": "(CVE-2023-49569) gopkg.in/src-d/go-git.v4@v4.13.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Path Traversal via malicious server replies. An attacker can create and amend files across the filesystem and potentially achieve remote code execution by sending crafted responses to the client. \r\n\r\n**Notes:**\r\n\r\n1) This is only exploitable if the client is using `ChrootOS`, which is the default for certain functions such as `PlainClone`.\r\n\r\n2) Applications using BoundOS or in-memory filesystems are not affected by this issue.\r\n\r\n3) Users running versions of go-git from v4 and above are recommended to upgrade to v5.11 in order to mitigate this vulnerability.\r\n\r\n## Workaround \r\n\r\nThis vulnerability can be mitigated by limiting the client's use to trustworthy Git servers.\n## Remediation\nThere is no fixed version for `gopkg.in/src-d/go-git.v4`.\n\n## References\n- [GitHub Commit](https://github.com/go-git/go-git/pull/958/commits/b2c19824771bbcbb21abb51abb319c1a610aa6b3)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-22",
                  "gomodules"
                ],
                "cvssv3_baseScore": 9.8,
                "security-severity": "9.8"
              }
            },
            {
              "id": "SNYK-GOLANG-GOPKGINYAMLV2-1083943",
              "shortDescription": {
                "text": "Medium severity - Denial of Service (DoS) vulnerability in gopkg.in/yaml.v2"
              },
              "fullDescription": {
                "text": "(CVE-2019-11254) gopkg.in/yaml.v2@v2.2.4"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[gopkg.in/yaml.v2](https://github.com/go-yaml/yaml) is a YAML support package for the Go language.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). It is possible for authorized users to send malicious YAML payloads to cause kube-apiserver to consume excessive CPU cycles while parsing YAML.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `gopkg.in/yaml.v2` to version 2.2.8 or higher.\n## References\n- [GitHub Commit](https://github.com/go-yaml/yaml/commit/53403b58ad1b561927d19068c655246f2db79d48)\n- [Kubernetes Issue](https://github.com/kubernetes/kubernetes/issues/89535)\n- [Kubernetes PR](https://github.com/kubernetes/kubernetes/pull/87467/commits/b86df2bec4f377afc0ca03482ffad2f0a49a83b8)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-1050",
                  "gomodules"
                ],
                "cvssv3_baseScore": 6.5,
                "security-severity": "6.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/dgrijalva/jwt-go package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMDOCKERDISTRIBUTIONREGISTRYAPIV2-5885037",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable github.com/docker/distribution/registry/api/v2 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/docker/distribution/registry/api/v2@v2.7.1+incompatible"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMOPENCONTAINERSRUNCLIBCONTAINERUSER-50037",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/opencontainers/runc/libcontainer/user package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/opencontainers/runc/libcontainer/user@v0.0.0-20161109192122-51371867a01c"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMPROMETHEUSCLIENTGOLANGPROMETHEUSPROMHTTP-2401819",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/prometheus/client_golang/prometheus/promhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/prometheus/client_golang/prometheus/promhttp@v1.1.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-2331920",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-2429769",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-3026972",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-551923",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.0.0-20191128160524-b544559bb6d1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-2313688",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-3028257",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-3160322",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-3323837",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5958903",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2HPACK-3358253",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2/hpack package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2/hpack@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTPHTTPGUTS-3314986",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http/httpguts package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http/httpguts@v0.0.0-20191126235420-ef20fe5d7933"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXSYSUNIX-3310442",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/sys/unix package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/sys/unix@v0.0.0-20190826190057-c7b8b68b1456"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOPKGINSRCDGOGITV4-6150755",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable gopkg.in/src-d/go-git.v4 package with a critical severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "gopkg.in/src-d/go-git.v4@v4.13.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOPKGINYAMLV2-1083943",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable gopkg.in/yaml.v2 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/portainer"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "gopkg.in/yaml.v2@v2.2.4"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
