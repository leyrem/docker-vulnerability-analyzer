{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2019-18276",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "bash: when effective UID is not equal to its real UID the saved UID is not dropped"
              },
              "fullDescription": {
                "text": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \u0026#34;saved UID\u0026#34; functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \u0026#34;enable -f\u0026#34; for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-18276",
              "help": {
                "text": "Vulnerability CVE-2019-18276\nSeverity: LOW\nPackage: bash\nFixed Version: 4.4.19-14.el8\nLink: [CVE-2019-18276](https://avd.aquasec.com/nvd/cve-2019-18276)\nAn issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
                "markdown": "**Vulnerability CVE-2019-18276**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|bash|4.4.19-14.el8|[CVE-2019-18276](https://avd.aquasec.com/nvd/cve-2019-18276)|\n\nAn issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-37920",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: Removal of e-Tugra root certificate"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \u0026#34;e-Tugra\u0026#34; root certificates. e-Tugra\u0026#39;s root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \u0026#34;e-Tugra\u0026#34; from the root store."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-37920",
              "help": {
                "text": "Vulnerability CVE-2023-37920\nSeverity: LOW\nPackage: ca-certificates\nFixed Version: \nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store.",
                "markdown": "**Vulnerability CVE-2023-37920**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ca-certificates||[CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-4122",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "cryptsetup: disable encryption via header rewrite"
              },
              "fullDescription": {
                "text": "It was found that a specially crafted LUKS header could trick cryptsetup into disabling encryption during the recovery of the device. An attacker with physical access to the medium, such as a flash disk, could use this flaw to force a user into permanently disabling the encryption layer of that medium."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-4122",
              "help": {
                "text": "Vulnerability CVE-2021-4122\nSeverity: MEDIUM\nPackage: cryptsetup-libs\nFixed Version: 2.3.3-4.el8_5.1\nLink: [CVE-2021-4122](https://avd.aquasec.com/nvd/cve-2021-4122)\nIt was found that a specially crafted LUKS header could trick cryptsetup into disabling encryption during the recovery of the device. An attacker with physical access to the medium, such as a flash disk, could use this flaw to force a user into permanently disabling the encryption layer of that medium.",
                "markdown": "**Vulnerability CVE-2021-4122**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|cryptsetup-libs|2.3.3-4.el8_5.1|[CVE-2021-4122](https://avd.aquasec.com/nvd/cve-2021-4122)|\n\nIt was found that a specially crafted LUKS header could trick cryptsetup into disabling encryption during the recovery of the device. An attacker with physical access to the medium, such as a flash disk, could use this flaw to force a user into permanently disabling the encryption layer of that medium."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33294",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "elfutils: an infinite loop was found in the function handle_symtab in readelf.c which causes denial of service"
              },
              "fullDescription": {
                "text": "In elfutils 0.183, an infinite loop was found in the function handle_symtab in readelf.c .Which allows attackers to cause a denial of service (infinite loop) via crafted file."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33294",
              "help": {
                "text": "Vulnerability CVE-2021-33294\nSeverity: LOW\nPackage: elfutils-libelf\nFixed Version: \nLink: [CVE-2021-33294](https://avd.aquasec.com/nvd/cve-2021-33294)\nIn elfutils 0.183, an infinite loop was found in the function handle_symtab in readelf.c .Which allows attackers to cause a denial of service (infinite loop) via crafted file.",
                "markdown": "**Vulnerability CVE-2021-33294**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|elfutils-libelf||[CVE-2021-33294](https://avd.aquasec.com/nvd/cve-2021-33294)|\n\nIn elfutils 0.183, an infinite loop was found in the function handle_symtab in readelf.c .Which allows attackers to cause a denial of service (infinite loop) via crafted file."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-25260",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "elfutils: global-buffer-overflow exists in the function ebl_machine_flag_name in eblmachineflagname.c"
              },
              "fullDescription": {
                "text": "elfutils v0.189 was discovered to contain a NULL pointer dereference via the handle_verdef() function at readelf.c."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-25260",
              "help": {
                "text": "Vulnerability CVE-2024-25260\nSeverity: LOW\nPackage: elfutils-libelf\nFixed Version: \nLink: [CVE-2024-25260](https://avd.aquasec.com/nvd/cve-2024-25260)\nelfutils v0.189 was discovered to contain a NULL pointer dereference via the handle_verdef() function at readelf.c.",
                "markdown": "**Vulnerability CVE-2024-25260**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|elfutils-libelf||[CVE-2024-25260](https://avd.aquasec.com/nvd/cve-2024-25260)|\n\nelfutils v0.189 was discovered to contain a NULL pointer dereference via the handle_verdef() function at readelf.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-4911",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: buffer overflow in ld.so leading to privilege escalation"
              },
              "fullDescription": {
                "text": "A buffer overflow was discovered in the GNU C Library\u0026#39;s dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-4911",
              "help": {
                "text": "Vulnerability CVE-2023-4911\nSeverity: HIGH\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4911](https://avd.aquasec.com/nvd/cve-2023-4911)\nA buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
                "markdown": "**Vulnerability CVE-2023-4911**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|glibc-minimal-langpack|2.28-225.el8_8.6|[CVE-2023-4911](https://avd.aquasec.com/nvd/cve-2023-4911)|\n\nA buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-2961",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Out of bounds write in iconv may lead to remote code execution"
              },
              "fullDescription": {
                "text": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-2961",
              "help": {
                "text": "Vulnerability CVE-2024-2961\nSeverity: HIGH\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-251.el8_10.1\nLink: [CVE-2024-2961](https://avd.aquasec.com/nvd/cve-2024-2961)\nThe iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n",
                "markdown": "**Vulnerability CVE-2024-2961**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|glibc-minimal-langpack|2.28-251.el8_10.1|[CVE-2024-2961](https://avd.aquasec.com/nvd/cve-2024-2961)|\n\nThe iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-33599",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: stack-based buffer overflow in netgroup cache"
              },
              "fullDescription": {
                "text": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon\u0026#39;s (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33599",
              "help": {
                "text": "Vulnerability CVE-2024-33599\nSeverity: HIGH\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33599](https://avd.aquasec.com/nvd/cve-2024-33599)\nnscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n",
                "markdown": "**Vulnerability CVE-2024-33599**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|glibc-minimal-langpack|2.28-251.el8_10.2|[CVE-2024-33599](https://avd.aquasec.com/nvd/cve-2024-33599)|\n\nnscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-25013",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: buffer over-read in iconv when processing invalid multi-byte input sequences in the EUC-KR encoding"
              },
              "fullDescription": {
                "text": "The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-25013",
              "help": {
                "text": "Vulnerability CVE-2019-25013\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-25013](https://avd.aquasec.com/nvd/cve-2019-25013)\nThe iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.",
                "markdown": "**Vulnerability CVE-2019-25013**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-151.el8|[CVE-2019-25013](https://avd.aquasec.com/nvd/cve-2019-25013)|\n\nThe iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-9169",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: regular-expression match via proceed_next_node in posix/regexec.c leads to heap-based buffer over-read"
              },
              "fullDescription": {
                "text": "In the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-9169",
              "help": {
                "text": "Vulnerability CVE-2019-9169\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-9169](https://avd.aquasec.com/nvd/cve-2019-9169)\nIn the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match.",
                "markdown": "**Vulnerability CVE-2019-9169**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-151.el8|[CVE-2019-9169](https://avd.aquasec.com/nvd/cve-2019-9169)|\n\nIn the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3326",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Assertion failure in ISO-2022-JP-3 gconv module related to combining characters"
              },
              "fullDescription": {
                "text": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3326",
              "help": {
                "text": "Vulnerability CVE-2021-3326\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-151.el8\nLink: [CVE-2021-3326](https://avd.aquasec.com/nvd/cve-2021-3326)\nThe iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
                "markdown": "**Vulnerability CVE-2021-3326**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-151.el8|[CVE-2021-3326](https://avd.aquasec.com/nvd/cve-2021-3326)|\n\nThe iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-35942",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Arbitrary read in wordexp()"
              },
              "fullDescription": {
                "text": "The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-35942",
              "help": {
                "text": "Vulnerability CVE-2021-35942\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-35942](https://avd.aquasec.com/nvd/cve-2021-35942)\nThe wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.",
                "markdown": "**Vulnerability CVE-2021-35942**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-164.el8|[CVE-2021-35942](https://avd.aquasec.com/nvd/cve-2021-35942)|\n\nThe wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3999",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Off-by-one buffer overflow/underflow in getcwd()"
              },
              "fullDescription": {
                "text": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3999",
              "help": {
                "text": "Vulnerability CVE-2021-3999\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2021-3999](https://avd.aquasec.com/nvd/cve-2021-3999)\nA flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
                "markdown": "**Vulnerability CVE-2021-3999**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-164.el8_5.3|[CVE-2021-3999](https://avd.aquasec.com/nvd/cve-2021-3999)|\n\nA flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23218",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Stack-based buffer overflow in svcunix_create via long pathnames"
              },
              "fullDescription": {
                "text": "The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23218",
              "help": {
                "text": "Vulnerability CVE-2022-23218\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23218](https://avd.aquasec.com/nvd/cve-2022-23218)\nThe deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
                "markdown": "**Vulnerability CVE-2022-23218**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-164.el8_5.3|[CVE-2022-23218](https://avd.aquasec.com/nvd/cve-2022-23218)|\n\nThe deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23219",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Stack-based buffer overflow in sunrpc clnt_create via a long pathname"
              },
              "fullDescription": {
                "text": "The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23219",
              "help": {
                "text": "Vulnerability CVE-2022-23219\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23219](https://avd.aquasec.com/nvd/cve-2022-23219)\nThe deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
                "markdown": "**Vulnerability CVE-2022-23219**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-164.el8_5.3|[CVE-2022-23219](https://avd.aquasec.com/nvd/cve-2022-23219)|\n\nThe deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-4527",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Stack read overflow in getaddrinfo in no-aaaa mode"
              },
              "fullDescription": {
                "text": "A flaw was found in glibc. When the getaddrinfo function is called with the AF_UNSPEC address family and the system is configured with no-aaaa mode via /etc/resolv.conf, a DNS response via TCP larger than 2048 bytes can potentially disclose stack contents through the function returned address data, and may cause a crash."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-4527",
              "help": {
                "text": "Vulnerability CVE-2023-4527\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4527](https://avd.aquasec.com/nvd/cve-2023-4527)\nA flaw was found in glibc. When the getaddrinfo function is called with the AF_UNSPEC address family and the system is configured with no-aaaa mode via /etc/resolv.conf, a DNS response via TCP larger than 2048 bytes can potentially disclose stack contents through the function returned address data, and may cause a crash.",
                "markdown": "**Vulnerability CVE-2023-4527**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-225.el8_8.6|[CVE-2023-4527](https://avd.aquasec.com/nvd/cve-2023-4527)|\n\nA flaw was found in glibc. When the getaddrinfo function is called with the AF_UNSPEC address family and the system is configured with no-aaaa mode via /etc/resolv.conf, a DNS response via TCP larger than 2048 bytes can potentially disclose stack contents through the function returned address data, and may cause a crash."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-4806",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: potential use-after-free in getaddrinfo()"
              },
              "fullDescription": {
                "text": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-4806",
              "help": {
                "text": "Vulnerability CVE-2023-4806\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4806](https://avd.aquasec.com/nvd/cve-2023-4806)\nA flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
                "markdown": "**Vulnerability CVE-2023-4806**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-225.el8_8.6|[CVE-2023-4806](https://avd.aquasec.com/nvd/cve-2023-4806)|\n\nA flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-4813",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: potential use-after-free in gaih_inet()"
              },
              "fullDescription": {
                "text": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-4813",
              "help": {
                "text": "Vulnerability CVE-2023-4813\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4813](https://avd.aquasec.com/nvd/cve-2023-4813)\nA flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
                "markdown": "**Vulnerability CVE-2023-4813**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-225.el8_8.6|[CVE-2023-4813](https://avd.aquasec.com/nvd/cve-2023-4813)|\n\nA flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-33600",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: null pointer dereferences after failed netgroup cache insertion"
              },
              "fullDescription": {
                "text": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon\u0026#39;s (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33600",
              "help": {
                "text": "Vulnerability CVE-2024-33600\nSeverity: MEDIUM\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33600](https://avd.aquasec.com/nvd/cve-2024-33600)\nnscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
                "markdown": "**Vulnerability CVE-2024-33600**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|glibc-minimal-langpack|2.28-251.el8_10.2|[CVE-2024-33600](https://avd.aquasec.com/nvd/cve-2024-33600)|\n\nnscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2016-10228",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: iconv program can hang when invoked with the -c option"
              },
              "fullDescription": {
                "text": "The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-10228",
              "help": {
                "text": "Vulnerability CVE-2016-10228\nSeverity: LOW\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-151.el8\nLink: [CVE-2016-10228](https://avd.aquasec.com/nvd/cve-2016-10228)\nThe iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.",
                "markdown": "**Vulnerability CVE-2016-10228**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|glibc-minimal-langpack|2.28-151.el8|[CVE-2016-10228](https://avd.aquasec.com/nvd/cve-2016-10228)|\n\nThe iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-27618",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: iconv when processing invalid multi-byte input sequences fails to advance the input state, which could result in an infinite loop"
              },
              "fullDescription": {
                "text": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-27618",
              "help": {
                "text": "Vulnerability CVE-2020-27618\nSeverity: LOW\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-151.el8\nLink: [CVE-2020-27618](https://avd.aquasec.com/nvd/cve-2020-27618)\nThe iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
                "markdown": "**Vulnerability CVE-2020-27618**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|glibc-minimal-langpack|2.28-151.el8|[CVE-2020-27618](https://avd.aquasec.com/nvd/cve-2020-27618)|\n\nThe iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-27645",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: Use-after-free in addgetnetgrentX function in netgroupcache.c"
              },
              "fullDescription": {
                "text": "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27645",
              "help": {
                "text": "Vulnerability CVE-2021-27645\nSeverity: LOW\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-27645](https://avd.aquasec.com/nvd/cve-2021-27645)\nThe nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
                "markdown": "**Vulnerability CVE-2021-27645**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|glibc-minimal-langpack|2.28-164.el8|[CVE-2021-27645](https://avd.aquasec.com/nvd/cve-2021-27645)|\n\nThe nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-33574",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: mq_notify does not handle separately allocated thread attributes"
              },
              "fullDescription": {
                "text": "The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33574",
              "help": {
                "text": "Vulnerability CVE-2021-33574\nSeverity: LOW\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-33574](https://avd.aquasec.com/nvd/cve-2021-33574)\nThe mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.",
                "markdown": "**Vulnerability CVE-2021-33574**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|glibc-minimal-langpack|2.28-164.el8|[CVE-2021-33574](https://avd.aquasec.com/nvd/cve-2021-33574)|\n\nThe mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-33601",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: netgroup cache may terminate daemon on memory allocation failure"
              },
              "fullDescription": {
                "text": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon\u0026#39;s (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33601",
              "help": {
                "text": "Vulnerability CVE-2024-33601\nSeverity: LOW\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33601](https://avd.aquasec.com/nvd/cve-2024-33601)\nnscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
                "markdown": "**Vulnerability CVE-2024-33601**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|glibc-minimal-langpack|2.28-251.el8_10.2|[CVE-2024-33601](https://avd.aquasec.com/nvd/cve-2024-33601)|\n\nnscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-33602",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "glibc: netgroup cache assumes NSS callback uses in-buffer strings"
              },
              "fullDescription": {
                "text": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon\u0026#39;s (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33602",
              "help": {
                "text": "Vulnerability CVE-2024-33602\nSeverity: LOW\nPackage: glibc-minimal-langpack\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33602](https://avd.aquasec.com/nvd/cve-2024-33602)\nnscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
                "markdown": "**Vulnerability CVE-2024-33602**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|glibc-minimal-langpack|2.28-251.el8_10.2|[CVE-2024-33602](https://avd.aquasec.com/nvd/cve-2024-33602)|\n\nnscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-1271",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "gzip: arbitrary-file-write vulnerability"
              },
              "fullDescription": {
                "text": "An arbitrary file write vulnerability was found in GNU gzip\u0026#39;s zgrep utility. When zgrep is applied on the attacker\u0026#39;s chosen file name (for example, a crafted file name), this can overwrite an attacker\u0026#39;s content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1271",
              "help": {
                "text": "Vulnerability CVE-2022-1271\nSeverity: HIGH\nPackage: xz-libs\nFixed Version: 5.2.4-4.el8_6\nLink: [CVE-2022-1271](https://avd.aquasec.com/nvd/cve-2022-1271)\nAn arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
                "markdown": "**Vulnerability CVE-2022-1271**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|xz-libs|5.2.4-4.el8_6|[CVE-2022-1271](https://avd.aquasec.com/nvd/cve-2022-1271)|\n\nAn arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-2603",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libcap: Integer Overflow in _libcap_strdup()"
              },
              "fullDescription": {
                "text": "A vulnerability was found in libcap. This issue occurs in the _libcap_strdup() function and can lead to an integer overflow if the input string is close to 4GiB."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2603",
              "help": {
                "text": "Vulnerability CVE-2023-2603\nSeverity: MEDIUM\nPackage: libcap\nFixed Version: 2.48-5.el8_8\nLink: [CVE-2023-2603](https://avd.aquasec.com/nvd/cve-2023-2603)\nA vulnerability was found in libcap. This issue occurs in the _libcap_strdup() function and can lead to an integer overflow if the input string is close to 4GiB.",
                "markdown": "**Vulnerability CVE-2023-2603**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcap|2.48-5.el8_8|[CVE-2023-2603](https://avd.aquasec.com/nvd/cve-2023-2603)|\n\nA vulnerability was found in libcap. This issue occurs in the _libcap_strdup() function and can lead to an integer overflow if the input string is close to 4GiB."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2602",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libcap: Memory Leak on pthread_create() Error"
              },
              "fullDescription": {
                "text": "A vulnerability was found in the pthread_create() function in libcap. This issue may allow a malicious actor to use cause __real_pthread_create() to return an error, which can exhaust the process memory."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2602",
              "help": {
                "text": "Vulnerability CVE-2023-2602\nSeverity: LOW\nPackage: libcap\nFixed Version: 2.48-5.el8_8\nLink: [CVE-2023-2602](https://avd.aquasec.com/nvd/cve-2023-2602)\nA vulnerability was found in the pthread_create() function in libcap. This issue may allow a malicious actor to use cause __real_pthread_create() to return an error, which can exhaust the process memory.",
                "markdown": "**Vulnerability CVE-2023-2602**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcap|2.48-5.el8_8|[CVE-2023-2602](https://avd.aquasec.com/nvd/cve-2023-2602)|\n\nA vulnerability was found in the pthread_create() function in libcap. This issue may allow a malicious actor to use cause __real_pthread_create() to return an error, which can exhaust the process memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-42574",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "Developer environment: Unicode\u0026#39;s bidirectional (BiDi) override characters can cause trojan source attacks"
              },
              "fullDescription": {
                "text": "An issue was discovered in the Bidirectional Algorithm in the Unicode Specification through 14.0. It permits the visual reordering of characters via control sequences, which can be used to craft source code that renders different logic than the logical ordering of tokens ingested by compilers and interpreters. Adversaries can leverage this to encode source code for compilers accepting Unicode such that targeted vulnerabilities are introduced invisibly to human reviewers. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard and the Unicode Bidirectional Algorithm (all versions). Due to text display behavior when text includes left-to-right and right-to-left characters, the visual order of tokens may be different from their logical order. Additionally, control characters needed to fully support the requirements of bidirectional text can further obfuscate the logical order of tokens. Unless mitigated, an adversary could craft source code such that the ordering of tokens perceived by human reviewers does not match what will be processed by a compiler/interpreter/etc. The Unicode Consortium has documented this class of vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms, and in Unicode Standard Annex #31, Unicode Identifier and Pattern Syntax. Also, the BIDI specification allows applications to tailor the implementation in ways that can mitigate misleading visual reordering in program text; see HL4 in Unicode Standard Annex #9, Unicode Bidirectional Algorithm."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42574",
              "help": {
                "text": "Vulnerability CVE-2021-42574\nSeverity: MEDIUM\nPackage: libgcc\nFixed Version: 8.5.0-4.el8_5\nLink: [CVE-2021-42574](https://avd.aquasec.com/nvd/cve-2021-42574)\nAn issue was discovered in the Bidirectional Algorithm in the Unicode Specification through 14.0. It permits the visual reordering of characters via control sequences, which can be used to craft source code that renders different logic than the logical ordering of tokens ingested by compilers and interpreters. Adversaries can leverage this to encode source code for compilers accepting Unicode such that targeted vulnerabilities are introduced invisibly to human reviewers. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard and the Unicode Bidirectional Algorithm (all versions). Due to text display behavior when text includes left-to-right and right-to-left characters, the visual order of tokens may be different from their logical order. Additionally, control characters needed to fully support the requirements of bidirectional text can further obfuscate the logical order of tokens. Unless mitigated, an adversary could craft source code such that the ordering of tokens perceived by human reviewers does not match what will be processed by a compiler/interpreter/etc. The Unicode Consortium has documented this class of vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms, and in Unicode Standard Annex #31, Unicode Identifier and Pattern Syntax. Also, the BIDI specification allows applications to tailor the implementation in ways that can mitigate misleading visual reordering in program text; see HL4 in Unicode Standard Annex #9, Unicode Bidirectional Algorithm.",
                "markdown": "**Vulnerability CVE-2021-42574**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libgcc|8.5.0-4.el8_5|[CVE-2021-42574](https://avd.aquasec.com/nvd/cve-2021-42574)|\n\nAn issue was discovered in the Bidirectional Algorithm in the Unicode Specification through 14.0. It permits the visual reordering of characters via control sequences, which can be used to craft source code that renders different logic than the logical ordering of tokens ingested by compilers and interpreters. Adversaries can leverage this to encode source code for compilers accepting Unicode such that targeted vulnerabilities are introduced invisibly to human reviewers. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard and the Unicode Bidirectional Algorithm (all versions). Due to text display behavior when text includes left-to-right and right-to-left characters, the visual order of tokens may be different from their logical order. Additionally, control characters needed to fully support the requirements of bidirectional text can further obfuscate the logical order of tokens. Unless mitigated, an adversary could craft source code such that the ordering of tokens perceived by human reviewers does not match what will be processed by a compiler/interpreter/etc. The Unicode Consortium has documented this class of vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms, and in Unicode Standard Annex #31, Unicode Identifier and Pattern Syntax. Also, the BIDI specification allows applications to tailor the implementation in ways that can mitigate misleading visual reordering in program text; see HL4 in Unicode Standard Annex #9, Unicode Bidirectional Algorithm."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-42694",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "Developer environment: Homoglyph characters can lead to trojan source attack"
              },
              "fullDescription": {
                "text": "An issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42694",
              "help": {
                "text": "Vulnerability CVE-2021-42694\nSeverity: MEDIUM\nPackage: libgcc\nFixed Version: \nLink: [CVE-2021-42694](https://avd.aquasec.com/nvd/cve-2021-42694)\nAn issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms.",
                "markdown": "**Vulnerability CVE-2021-42694**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libgcc||[CVE-2021-42694](https://avd.aquasec.com/nvd/cve-2021-42694)|\n\nAn issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-20657",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libiberty: Memory leak in demangle_template function resulting in a denial of service"
              },
              "fullDescription": {
                "text": "The demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, has a memory leak via a crafted string, leading to a denial of service (memory consumption), as demonstrated by cxxfilt, a related issue to CVE-2018-12698."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-20657",
              "help": {
                "text": "Vulnerability CVE-2018-20657\nSeverity: LOW\nPackage: libgcc\nFixed Version: \nLink: [CVE-2018-20657](https://avd.aquasec.com/nvd/cve-2018-20657)\nThe demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, has a memory leak via a crafted string, leading to a denial of service (memory consumption), as demonstrated by cxxfilt, a related issue to CVE-2018-12698.",
                "markdown": "**Vulnerability CVE-2018-20657**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libgcc||[CVE-2018-20657](https://avd.aquasec.com/nvd/cve-2018-20657)|\n\nThe demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, has a memory leak via a crafted string, leading to a denial of service (memory consumption), as demonstrated by cxxfilt, a related issue to CVE-2018-12698."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2018-20673",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libiberty: Integer overflow in demangle_template() function"
              },
              "fullDescription": {
                "text": "The demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, contains an integer overflow vulnerability (for \u0026#34;Create an array for saving the template argument values\u0026#34;) that can trigger a heap-based buffer overflow, as demonstrated by nm."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-20673",
              "help": {
                "text": "Vulnerability CVE-2018-20673\nSeverity: LOW\nPackage: libgcc\nFixed Version: 8.5.0-3.el8\nLink: [CVE-2018-20673](https://avd.aquasec.com/nvd/cve-2018-20673)\nThe demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, contains an integer overflow vulnerability (for \"Create an array for saving the template argument values\") that can trigger a heap-based buffer overflow, as demonstrated by nm.",
                "markdown": "**Vulnerability CVE-2018-20673**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libgcc|8.5.0-3.el8|[CVE-2018-20673](https://avd.aquasec.com/nvd/cve-2018-20673)|\n\nThe demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, contains an integer overflow vulnerability (for \"Create an array for saving the template argument values\") that can trigger a heap-based buffer overflow, as demonstrated by nm."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2019-14250",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "binutils: integer overflow in simple-object-elf.c leads to a heap-based buffer overflow"
              },
              "fullDescription": {
                "text": "An issue was discovered in GNU libiberty, as distributed in GNU Binutils 2.32. simple_object_elf_match in simple-object-elf.c does not check for a zero shstrndx value, leading to an integer overflow and resultant heap-based buffer overflow."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-14250",
              "help": {
                "text": "Vulnerability CVE-2019-14250\nSeverity: LOW\nPackage: libgcc\nFixed Version: \nLink: [CVE-2019-14250](https://avd.aquasec.com/nvd/cve-2019-14250)\nAn issue was discovered in GNU libiberty, as distributed in GNU Binutils 2.32. simple_object_elf_match in simple-object-elf.c does not check for a zero shstrndx value, leading to an integer overflow and resultant heap-based buffer overflow.",
                "markdown": "**Vulnerability CVE-2019-14250**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libgcc||[CVE-2019-14250](https://avd.aquasec.com/nvd/cve-2019-14250)|\n\nAn issue was discovered in GNU libiberty, as distributed in GNU Binutils 2.32. simple_object_elf_match in simple-object-elf.c does not check for a zero shstrndx value, leading to an integer overflow and resultant heap-based buffer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-27943",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "binutils: libiberty/rust-demangle.c in GNU GCC 11.2 allows stack exhaustion in demangle_const"
              },
              "fullDescription": {
                "text": "libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27943",
              "help": {
                "text": "Vulnerability CVE-2022-27943\nSeverity: LOW\nPackage: libgcc\nFixed Version: \nLink: [CVE-2022-27943](https://avd.aquasec.com/nvd/cve-2022-27943)\nlibiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.",
                "markdown": "**Vulnerability CVE-2022-27943**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libgcc||[CVE-2022-27943](https://avd.aquasec.com/nvd/cve-2022-27943)|\n\nlibiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-24032",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zstd: Race condition allows attacker to access world-readable destination file"
              },
              "fullDescription": {
                "text": "Beginning in v1.4.1 and prior to v1.4.9, due to an incomplete fix for CVE-2021-24031, the Zstandard command-line utility created output files with default permissions and restricted those permissions immediately afterwards. Output files could therefore momentarily be readable or writable to unintended parties."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-24032",
              "help": {
                "text": "Vulnerability CVE-2021-24032\nSeverity: LOW\nPackage: libzstd\nFixed Version: \nLink: [CVE-2021-24032](https://avd.aquasec.com/nvd/cve-2021-24032)\nBeginning in v1.4.1 and prior to v1.4.9, due to an incomplete fix for CVE-2021-24031, the Zstandard command-line utility created output files with default permissions and restricted those permissions immediately afterwards. Output files could therefore momentarily be readable or writable to unintended parties.",
                "markdown": "**Vulnerability CVE-2021-24032**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libzstd||[CVE-2021-24032](https://avd.aquasec.com/nvd/cve-2021-24032)|\n\nBeginning in v1.4.1 and prior to v1.4.9, due to an incomplete fix for CVE-2021-24031, the Zstandard command-line utility created output files with default permissions and restricted those permissions immediately afterwards. Output files could therefore momentarily be readable or writable to unintended parties."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-4899",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zstd: mysql: buffer overrun in util.c"
              },
              "fullDescription": {
                "text": "A vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-4899",
              "help": {
                "text": "Vulnerability CVE-2022-4899\nSeverity: LOW\nPackage: libzstd\nFixed Version: \nLink: [CVE-2022-4899](https://avd.aquasec.com/nvd/cve-2022-4899)\nA vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun.",
                "markdown": "**Vulnerability CVE-2022-4899**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libzstd||[CVE-2022-4899](https://avd.aquasec.com/nvd/cve-2022-4899)|\n\nA vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2019-17594",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: heap-based buffer overflow in the _nc_find_entry function in tinfo/comp_hash.c"
              },
              "fullDescription": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-17594",
              "help": {
                "text": "Vulnerability CVE-2019-17594\nSeverity: MEDIUM\nPackage: ncurses-libs\nFixed Version: 6.1-9.20180224.el8\nLink: [CVE-2019-17594](https://avd.aquasec.com/nvd/cve-2019-17594)\nThere is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "**Vulnerability CVE-2019-17594**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ncurses-libs|6.1-9.20180224.el8|[CVE-2019-17594](https://avd.aquasec.com/nvd/cve-2019-17594)|\n\nThere is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-17595",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: heap-based buffer overflow in the fmt_entry function in tinfo/comp_hash.c"
              },
              "fullDescription": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-17595",
              "help": {
                "text": "Vulnerability CVE-2019-17595\nSeverity: MEDIUM\nPackage: ncurses-libs\nFixed Version: 6.1-9.20180224.el8\nLink: [CVE-2019-17595](https://avd.aquasec.com/nvd/cve-2019-17595)\nThere is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "**Vulnerability CVE-2019-17595**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ncurses-libs|6.1-9.20180224.el8|[CVE-2019-17595](https://avd.aquasec.com/nvd/cve-2019-17595)|\n\nThere is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29491",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Local users can trigger security-relevant memory corruption via malformed data"
              },
              "fullDescription": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29491",
              "help": {
                "text": "Vulnerability CVE-2023-29491\nSeverity: MEDIUM\nPackage: ncurses-libs\nFixed Version: 6.1-9.20180224.el8_8.1\nLink: [CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)\nncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "**Vulnerability CVE-2023-29491**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ncurses-libs|6.1-9.20180224.el8_8.1|[CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)|\n\nncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-19211",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Null pointer dereference at function _nc_parse_entry in parse_entry.c"
              },
              "fullDescription": {
                "text": "In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \u0026#34;dubious character `*\u0026#39; in name or alias field\u0026#34; detection."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-19211",
              "help": {
                "text": "Vulnerability CVE-2018-19211\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2018-19211](https://avd.aquasec.com/nvd/cve-2018-19211)\nIn ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection.",
                "markdown": "**Vulnerability CVE-2018-19211**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2018-19211](https://avd.aquasec.com/nvd/cve-2018-19211)|\n\nIn ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2018-19217",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Null pointer dereference at function _nc_name_match"
              },
              "fullDescription": {
                "text": "In ncurses, possibly a 6.x version, there is a NULL pointer dereference at the function _nc_name_match that will lead to a denial of service attack. NOTE: the original report stated version 6.1, but the issue did not reproduce for that version according to the maintainer or a reliable third-party"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-19217",
              "help": {
                "text": "Vulnerability CVE-2018-19217\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2018-19217](https://avd.aquasec.com/nvd/cve-2018-19217)\nIn ncurses, possibly a 6.x version, there is a NULL pointer dereference at the function _nc_name_match that will lead to a denial of service attack. NOTE: the original report stated version 6.1, but the issue did not reproduce for that version according to the maintainer or a reliable third-party",
                "markdown": "**Vulnerability CVE-2018-19217**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2018-19217](https://avd.aquasec.com/nvd/cve-2018-19217)|\n\nIn ncurses, possibly a 6.x version, there is a NULL pointer dereference at the function _nc_name_match that will lead to a denial of service attack. NOTE: the original report stated version 6.1, but the issue did not reproduce for that version according to the maintainer or a reliable third-party"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-19185",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Heap buffer overflow in one_one_mapping function in progs/dump_entry.c:1373"
              },
              "fullDescription": {
                "text": "Buffer Overflow vulnerability in one_one_mapping function in progs/dump_entry.c:1373 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-19185",
              "help": {
                "text": "Vulnerability CVE-2020-19185\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2020-19185](https://avd.aquasec.com/nvd/cve-2020-19185)\nBuffer Overflow vulnerability in one_one_mapping function in progs/dump_entry.c:1373 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
                "markdown": "**Vulnerability CVE-2020-19185**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2020-19185](https://avd.aquasec.com/nvd/cve-2020-19185)|\n\nBuffer Overflow vulnerability in one_one_mapping function in progs/dump_entry.c:1373 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-19186",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Buffer overflow in _nc_find_entry function in tinfo/comp_hash.c:66"
              },
              "fullDescription": {
                "text": "Buffer Overflow vulnerability in _nc_find_entry function in tinfo/comp_hash.c:66 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-19186",
              "help": {
                "text": "Vulnerability CVE-2020-19186\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2020-19186](https://avd.aquasec.com/nvd/cve-2020-19186)\nBuffer Overflow vulnerability in _nc_find_entry function in tinfo/comp_hash.c:66 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
                "markdown": "**Vulnerability CVE-2020-19186**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2020-19186](https://avd.aquasec.com/nvd/cve-2020-19186)|\n\nBuffer Overflow vulnerability in _nc_find_entry function in tinfo/comp_hash.c:66 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-19187",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Heap buffer overflow in fmt_entry function in progs/dump_entry.c:1100"
              },
              "fullDescription": {
                "text": "Buffer Overflow vulnerability in fmt_entry function in progs/dump_entry.c:1100 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-19187",
              "help": {
                "text": "Vulnerability CVE-2020-19187\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2020-19187](https://avd.aquasec.com/nvd/cve-2020-19187)\nBuffer Overflow vulnerability in fmt_entry function in progs/dump_entry.c:1100 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
                "markdown": "**Vulnerability CVE-2020-19187**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2020-19187](https://avd.aquasec.com/nvd/cve-2020-19187)|\n\nBuffer Overflow vulnerability in fmt_entry function in progs/dump_entry.c:1100 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-19188",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Stack buffer overflow in fmt_entry function in progs/dump_entry.c:1116"
              },
              "fullDescription": {
                "text": "Buffer Overflow vulnerability in fmt_entry function in progs/dump_entry.c:1116 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-19188",
              "help": {
                "text": "Vulnerability CVE-2020-19188\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2020-19188](https://avd.aquasec.com/nvd/cve-2020-19188)\nBuffer Overflow vulnerability in fmt_entry function in progs/dump_entry.c:1116 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
                "markdown": "**Vulnerability CVE-2020-19188**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2020-19188](https://avd.aquasec.com/nvd/cve-2020-19188)|\n\nBuffer Overflow vulnerability in fmt_entry function in progs/dump_entry.c:1116 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-19189",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Heap buffer overflow in postprocess_terminfo function in tinfo/parse_entry.c:997"
              },
              "fullDescription": {
                "text": "Buffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-19189",
              "help": {
                "text": "Vulnerability CVE-2020-19189\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2020-19189](https://avd.aquasec.com/nvd/cve-2020-19189)\nBuffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
                "markdown": "**Vulnerability CVE-2020-19189**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2020-19189](https://avd.aquasec.com/nvd/cve-2020-19189)|\n\nBuffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-19190",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: Heap buffer overflow in _nc_find_entry in tinfo/comp_hash.c:70"
              },
              "fullDescription": {
                "text": "Buffer Overflow vulnerability in _nc_find_entry in tinfo/comp_hash.c:70 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-19190",
              "help": {
                "text": "Vulnerability CVE-2020-19190\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2020-19190](https://avd.aquasec.com/nvd/cve-2020-19190)\nBuffer Overflow vulnerability in _nc_find_entry in tinfo/comp_hash.c:70 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
                "markdown": "**Vulnerability CVE-2020-19190**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2020-19190](https://avd.aquasec.com/nvd/cve-2020-19190)|\n\nBuffer Overflow vulnerability in _nc_find_entry in tinfo/comp_hash.c:70 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-39537",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: heap-based buffer overflow in _nc_captoinfo() in captoinfo.c"
              },
              "fullDescription": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-39537",
              "help": {
                "text": "Vulnerability CVE-2021-39537\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2021-39537](https://avd.aquasec.com/nvd/cve-2021-39537)\nAn issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "**Vulnerability CVE-2021-39537**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2021-39537](https://avd.aquasec.com/nvd/cve-2021-39537)|\n\nAn issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-50495",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: segmentation fault via _nc_wrap_entry()"
              },
              "fullDescription": {
                "text": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry()."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-50495",
              "help": {
                "text": "Vulnerability CVE-2023-50495\nSeverity: LOW\nPackage: ncurses-libs\nFixed Version: \nLink: [CVE-2023-50495](https://avd.aquasec.com/nvd/cve-2023-50495)\nNCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
                "markdown": "**Vulnerability CVE-2023-50495**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|ncurses-libs||[CVE-2023-50495](https://avd.aquasec.com/nvd/cve-2023-50495)|\n\nNCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry()."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-3449",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: NULL pointer dereference in signature_algorithms processing"
              },
              "fullDescription": {
                "text": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3449",
              "help": {
                "text": "Vulnerability CVE-2021-3449\nSeverity: HIGH\nPackage: openssl-libs\nFixed Version: 1:1.1.1g-15.el8_3\nLink: [CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)\nAn OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
                "markdown": "**Vulnerability CVE-2021-3449**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl-libs|1:1.1.1g-15.el8_3|[CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)|\n\nAn OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3450",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT"
              },
              "fullDescription": {
                "text": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \u0026#34;purpose\u0026#34; has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \u0026#34;purpose\u0026#34; values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3450",
              "help": {
                "text": "Vulnerability CVE-2021-3450\nSeverity: HIGH\nPackage: openssl-libs\nFixed Version: 1:1.1.1g-15.el8_3\nLink: [CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)\nThe X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
                "markdown": "**Vulnerability CVE-2021-3450**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl-libs|1:1.1.1g-15.el8_3|[CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)|\n\nThe X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-0778",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Infinite loop in BN_mod_sqrt() reachable when parsing certificates"
              },
              "fullDescription": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-0778",
              "help": {
                "text": "Vulnerability CVE-2022-0778\nSeverity: HIGH\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-6.el8_5\nLink: [CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)\nThe BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "**Vulnerability CVE-2022-0778**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl-libs|1:1.1.1k-6.el8_5|[CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)|\n\nThe BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-0286",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: X.400 address type confusion in X.509 GeneralName"
              },
              "fullDescription": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0286",
              "help": {
                "text": "Vulnerability CVE-2023-0286\nSeverity: HIGH\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)\nThere is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n",
                "markdown": "**Vulnerability CVE-2023-0286**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl-libs|1:1.1.1k-9.el8_7|[CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)|\n\nThere is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-23840",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: integer overflow in CipherUpdate"
              },
              "fullDescription": {
                "text": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23840",
              "help": {
                "text": "Vulnerability CVE-2021-23840\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-4.el8\nLink: [CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)\nCalls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "**Vulnerability CVE-2021-23840**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-4.el8|[CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)|\n\nCalls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-23841",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: NULL pointer dereference in X509_issuer_and_serial_hash()"
              },
              "fullDescription": {
                "text": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23841",
              "help": {
                "text": "Vulnerability CVE-2021-23841\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-4.el8\nLink: [CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)\nThe OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "**Vulnerability CVE-2021-23841**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-4.el8|[CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)|\n\nThe OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3712",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Read buffer overruns processing ASN.1 strings"
              },
              "fullDescription": {
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL\u0026#39;s own \u0026#34;d2i\u0026#34; functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \u0026#34;data\u0026#34; and \u0026#34;length\u0026#34; fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \u0026#34;data\u0026#34; field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3712",
              "help": {
                "text": "Vulnerability CVE-2021-3712\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-5.el8_5\nLink: [CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)\nASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
                "markdown": "**Vulnerability CVE-2021-3712**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-5.el8_5|[CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)|\n\nASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1292",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: c_rehash script allows command injection"
              },
              "fullDescription": {
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1292",
              "help": {
                "text": "Vulnerability CVE-2022-1292\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-7.el8_6\nLink: [CVE-2022-1292](https://avd.aquasec.com/nvd/cve-2022-1292)\nThe c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
                "markdown": "**Vulnerability CVE-2022-1292**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-7.el8_6|[CVE-2022-1292](https://avd.aquasec.com/nvd/cve-2022-1292)|\n\nThe c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-2068",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: the c_rehash script allows command injection"
              },
              "fullDescription": {
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2068",
              "help": {
                "text": "Vulnerability CVE-2022-2068\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-7.el8_6\nLink: [CVE-2022-2068](https://avd.aquasec.com/nvd/cve-2022-2068)\nIn addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
                "markdown": "**Vulnerability CVE-2022-2068**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-7.el8_6|[CVE-2022-2068](https://avd.aquasec.com/nvd/cve-2022-2068)|\n\nIn addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-2097",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: AES OCB fails to encrypt some bytes"
              },
              "fullDescription": {
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn\u0026#39;t written. In the special case of \u0026#34;in place\u0026#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2097",
              "help": {
                "text": "Vulnerability CVE-2022-2097\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-7.el8_6\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                "markdown": "**Vulnerability CVE-2022-2097**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-7.el8_6|[CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)|\n\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-4304",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: timing attack in RSA Decryption implementation"
              },
              "fullDescription": {
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-4304",
              "help": {
                "text": "Vulnerability CVE-2022-4304\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)\nA timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.\n\n",
                "markdown": "**Vulnerability CVE-2022-4304**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-9.el8_7|[CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)|\n\nA timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-4450",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: double free after calling PEM_read_bio_ex"
              },
              "fullDescription": {
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \u0026#34;name\u0026#34; (e.g. \u0026#34;CERTIFICATE\u0026#34;), any header data and the payload data.\nIf the function succeeds then the \u0026#34;name_out\u0026#34;, \u0026#34;header\u0026#34; and \u0026#34;data\u0026#34; arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-4450",
              "help": {
                "text": "Vulnerability CVE-2022-4450\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
                "markdown": "**Vulnerability CVE-2022-4450**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-9.el8_7|[CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)|\n\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-0215",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: use-after-free following BIO_new_NDEF"
              },
              "fullDescription": {
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0215",
              "help": {
                "text": "Vulnerability CVE-2023-0215\nSeverity: MEDIUM\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n",
                "markdown": "**Vulnerability CVE-2023-0215**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl-libs|1:1.1.1k-9.el8_7|[CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)|\n\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-0464",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Denial of service by excessive resource usage in verifying X509 policy constraints"
              },
              "fullDescription": {
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy\u0026#39; argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()\u0026#39; function."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0464",
              "help": {
                "text": "Vulnerability CVE-2023-0464\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "**Vulnerability CVE-2023-0464**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)|\n\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-0465",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Invalid certificate policies in leaf certificates are silently ignored"
              },
              "fullDescription": {
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy\u0026#39; argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()\u0026#39; function."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0465",
              "help": {
                "text": "Vulnerability CVE-2023-0465\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "**Vulnerability CVE-2023-0465**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)|\n\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-0466",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Certificate policy check not enabled"
              },
              "fullDescription": {
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0466",
              "help": {
                "text": "Vulnerability CVE-2023-0466\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2023-0466](https://avd.aquasec.com/nvd/cve-2023-0466)\nThe function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                "markdown": "**Vulnerability CVE-2023-0466**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2023-0466](https://avd.aquasec.com/nvd/cve-2023-0466)|\n\nThe function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-2650",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Possible DoS translating ASN.1 object identifiers"
              },
              "fullDescription": {
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with \u0026#39;n\u0026#39; being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer\u0026#39;s certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2650",
              "help": {
                "text": "Vulnerability CVE-2023-2650\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
                "markdown": "**Vulnerability CVE-2023-2650**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)|\n\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-3446",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Excessive time spent checking DH keys and parameters"
              },
              "fullDescription": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus (\u0026#39;p\u0026#39; parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \u0026#39;-check\u0026#39; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3446",
              "help": {
                "text": "Vulnerability CVE-2023-3446\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-12.el8_9\nLink: [CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2023-3446**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs|1:1.1.1k-12.el8_9|[CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)|\n\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-3817",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "OpenSSL: Excessive time spent checking DH q parameter value"
              },
              "fullDescription": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \u0026#34;-check\u0026#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3817",
              "help": {
                "text": "Vulnerability CVE-2023-3817\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-12.el8_9\nLink: [CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2023-3817**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs|1:1.1.1k-12.el8_9|[CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)|\n\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-5678",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow"
              },
              "fullDescription": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn\u0026#39;t make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn\u0026#39;t check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\u0026#34;-pubcheck\u0026#34; option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-5678",
              "help": {
                "text": "Vulnerability CVE-2023-5678\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: 1:1.1.1k-12.el8_9\nLink: [CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)\nIssue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n",
                "markdown": "**Vulnerability CVE-2023-5678**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs|1:1.1.1k-12.el8_9|[CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)|\n\nIssue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-0727",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: denial of service via null dereference"
              },
              "fullDescription": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-0727",
              "help": {
                "text": "Vulnerability CVE-2024-0727\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)\nIssue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-0727**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)|\n\nIssue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-2511",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Unbounded memory growth with session handling in TLSv1.3"
              },
              "fullDescription": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-2511",
              "help": {
                "text": "Vulnerability CVE-2024-2511\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-2511**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)|\n\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-4741",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Use After Free with SSL_free_buffers"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability was found in OpenSSL. Calling the OpenSSL API SSL_free_buffers function may cause memory to be accessed that was previously freed in some situations."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4741",
              "help": {
                "text": "Vulnerability CVE-2024-4741\nSeverity: LOW\nPackage: openssl-libs\nFixed Version: \nLink: [CVE-2024-4741](https://avd.aquasec.com/nvd/cve-2024-4741)\nA use-after-free vulnerability was found in OpenSSL. Calling the OpenSSL API SSL_free_buffers function may cause memory to be accessed that was previously freed in some situations.",
                "markdown": "**Vulnerability CVE-2024-4741**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl-libs||[CVE-2024-4741](https://avd.aquasec.com/nvd/cve-2024-4741)|\n\nA use-after-free vulnerability was found in OpenSSL. Calling the OpenSSL API SSL_free_buffers function may cause memory to be accessed that was previously freed in some situations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-29361",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "p11-kit: integer overflow when allocating memory for arrays or attributes and object identifiers"
              },
              "fullDescription": {
                "text": "An issue was discovered in p11-kit 0.21.1 through 0.23.21. Multiple integer overflows have been discovered in the array allocations in the p11-kit library and the p11-kit list command, where overflow checks are missing before calling realloc or calloc."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-29361",
              "help": {
                "text": "Vulnerability CVE-2020-29361\nSeverity: MEDIUM\nPackage: p11-kit-trust\nFixed Version: 0.23.22-1.el8\nLink: [CVE-2020-29361](https://avd.aquasec.com/nvd/cve-2020-29361)\nAn issue was discovered in p11-kit 0.21.1 through 0.23.21. Multiple integer overflows have been discovered in the array allocations in the p11-kit library and the p11-kit list command, where overflow checks are missing before calling realloc or calloc.",
                "markdown": "**Vulnerability CVE-2020-29361**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|p11-kit-trust|0.23.22-1.el8|[CVE-2020-29361](https://avd.aquasec.com/nvd/cve-2020-29361)|\n\nAn issue was discovered in p11-kit 0.21.1 through 0.23.21. Multiple integer overflows have been discovered in the array allocations in the p11-kit library and the p11-kit list command, where overflow checks are missing before calling realloc or calloc."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-29362",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "p11-kit: out-of-bounds read in p11_rpc_buffer_get_byte_array function in rpc-message.c"
              },
              "fullDescription": {
                "text": "An issue was discovered in p11-kit 0.21.1 through 0.23.21. A heap-based buffer over-read has been discovered in the RPC protocol used by thep11-kit server/remote commands and the client library. When the remote entity supplies a byte array through a serialized PKCS#11 function call, the receiving entity may allow the reading of up to 4 bytes of memory past the heap allocation."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-29362",
              "help": {
                "text": "Vulnerability CVE-2020-29362\nSeverity: MEDIUM\nPackage: p11-kit-trust\nFixed Version: 0.23.22-1.el8\nLink: [CVE-2020-29362](https://avd.aquasec.com/nvd/cve-2020-29362)\nAn issue was discovered in p11-kit 0.21.1 through 0.23.21. A heap-based buffer over-read has been discovered in the RPC protocol used by thep11-kit server/remote commands and the client library. When the remote entity supplies a byte array through a serialized PKCS#11 function call, the receiving entity may allow the reading of up to 4 bytes of memory past the heap allocation.",
                "markdown": "**Vulnerability CVE-2020-29362**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|p11-kit-trust|0.23.22-1.el8|[CVE-2020-29362](https://avd.aquasec.com/nvd/cve-2020-29362)|\n\nAn issue was discovered in p11-kit 0.21.1 through 0.23.21. A heap-based buffer over-read has been discovered in the RPC protocol used by thep11-kit server/remote commands and the client library. When the remote entity supplies a byte array through a serialized PKCS#11 function call, the receiving entity may allow the reading of up to 4 bytes of memory past the heap allocation."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-29363",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "p11-kit: out-of-bounds write in p11_rpc_buffer_get_byte_array_value function in rpc-message.c"
              },
              "fullDescription": {
                "text": "An issue was discovered in p11-kit 0.23.6 through 0.23.21. A heap-based buffer overflow has been discovered in the RPC protocol used by p11-kit server/remote commands and the client library. When the remote entity supplies a serialized byte array in a CK_ATTRIBUTE, the receiving entity may not allocate sufficient length for the buffer to store the deserialized value."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-29363",
              "help": {
                "text": "Vulnerability CVE-2020-29363\nSeverity: MEDIUM\nPackage: p11-kit-trust\nFixed Version: 0.23.22-1.el8\nLink: [CVE-2020-29363](https://avd.aquasec.com/nvd/cve-2020-29363)\nAn issue was discovered in p11-kit 0.23.6 through 0.23.21. A heap-based buffer overflow has been discovered in the RPC protocol used by p11-kit server/remote commands and the client library. When the remote entity supplies a serialized byte array in a CK_ATTRIBUTE, the receiving entity may not allocate sufficient length for the buffer to store the deserialized value.",
                "markdown": "**Vulnerability CVE-2020-29363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|p11-kit-trust|0.23.22-1.el8|[CVE-2020-29363](https://avd.aquasec.com/nvd/cve-2020-29363)|\n\nAn issue was discovered in p11-kit 0.23.6 through 0.23.21. A heap-based buffer overflow has been discovered in the RPC protocol used by p11-kit server/remote commands and the client library. When the remote entity supplies a serialized byte array in a CK_ATTRIBUTE, the receiving entity may not allocate sufficient length for the buffer to store the deserialized value."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-22365",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pam: allowing unprivileged user to block another user namespace"
              },
              "fullDescription": {
                "text": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22365",
              "help": {
                "text": "Vulnerability CVE-2024-22365\nSeverity: MEDIUM\nPackage: pam\nFixed Version: 1.3.1-33.el8\nLink: [CVE-2024-22365](https://avd.aquasec.com/nvd/cve-2024-22365)\nlinux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
                "markdown": "**Vulnerability CVE-2024-22365**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|pam|1.3.1-33.el8|[CVE-2024-22365](https://avd.aquasec.com/nvd/cve-2024-22365)|\n\nlinux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-20838",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pcre: Buffer over-read in JIT when UTF is disabled and \\X or \\R has fixed quantifier greater than 1"
              },
              "fullDescription": {
                "text": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-20838",
              "help": {
                "text": "Vulnerability CVE-2019-20838\nSeverity: LOW\nPackage: pcre\nFixed Version: 8.42-6.el8\nLink: [CVE-2019-20838](https://avd.aquasec.com/nvd/cve-2019-20838)\nlibpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
                "markdown": "**Vulnerability CVE-2019-20838**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|pcre|8.42-6.el8|[CVE-2019-20838](https://avd.aquasec.com/nvd/cve-2019-20838)|\n\nlibpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-14155",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pcre: Integer overflow when parsing callout numeric arguments"
              },
              "fullDescription": {
                "text": "libpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-14155",
              "help": {
                "text": "Vulnerability CVE-2020-14155\nSeverity: LOW\nPackage: pcre\nFixed Version: 8.42-6.el8\nLink: [CVE-2020-14155](https://avd.aquasec.com/nvd/cve-2020-14155)\nlibpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring.",
                "markdown": "**Vulnerability CVE-2020-14155**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|pcre|8.42-6.el8|[CVE-2020-14155](https://avd.aquasec.com/nvd/cve-2020-14155)|\n\nlibpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-1586",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pcre2: Out-of-bounds read in compile_xclass_matchingpath in pcre2_jit_compile.c"
              },
              "fullDescription": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1586",
              "help": {
                "text": "Vulnerability CVE-2022-1586\nSeverity: MEDIUM\nPackage: pcre2\nFixed Version: 10.32-3.el8_6\nLink: [CVE-2022-1586](https://avd.aquasec.com/nvd/cve-2022-1586)\nAn out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
                "markdown": "**Vulnerability CVE-2022-1586**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|pcre2|10.32-3.el8_6|[CVE-2022-1586](https://avd.aquasec.com/nvd/cve-2022-1586)|\n\nAn out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-41409",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pcre2: negative repeat value in a pcre2test subject line leads to inifinite loop"
              },
              "fullDescription": {
                "text": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41409",
              "help": {
                "text": "Vulnerability CVE-2022-41409\nSeverity: LOW\nPackage: pcre2\nFixed Version: \nLink: [CVE-2022-41409](https://avd.aquasec.com/nvd/cve-2022-41409)\nInteger overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
                "markdown": "**Vulnerability CVE-2022-41409**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|pcre2||[CVE-2022-41409](https://avd.aquasec.com/nvd/cve-2022-41409)|\n\nInteger overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-40897",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pypa-setuptools: Regular Expression Denial of Service (ReDoS) in package_index.py"
              },
              "fullDescription": {
                "text": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40897",
              "help": {
                "text": "Vulnerability CVE-2022-40897\nSeverity: MEDIUM\nPackage: python3-setuptools-wheel\nFixed Version: 39.2.0-6.el8_7.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)\nPython Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.",
                "markdown": "**Vulnerability CVE-2022-40897**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|python3-setuptools-wheel|39.2.0-6.el8_7.1|[CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)|\n\nPython Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-20271",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: Signature checks bypass via corrupted rpm package"
              },
              "fullDescription": {
                "text": "A flaw was found in RPM\u0026#39;s signature check functionality when reading a package file. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package, whose signature header was modified, to cause RPM database corruption and execute code. The highest threat from this vulnerability is to data integrity, confidentiality, and system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-20271",
              "help": {
                "text": "Vulnerability CVE-2021-20271\nSeverity: MEDIUM\nPackage: rpm-libs\nFixed Version: 4.14.3-14.el8_4\nLink: [CVE-2021-20271](https://avd.aquasec.com/nvd/cve-2021-20271)\nA flaw was found in RPM's signature check functionality when reading a package file. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package, whose signature header was modified, to cause RPM database corruption and execute code. The highest threat from this vulnerability is to data integrity, confidentiality, and system availability.",
                "markdown": "**Vulnerability CVE-2021-20271**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|rpm-libs|4.14.3-14.el8_4|[CVE-2021-20271](https://avd.aquasec.com/nvd/cve-2021-20271)|\n\nA flaw was found in RPM's signature check functionality when reading a package file. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package, whose signature header was modified, to cause RPM database corruption and execute code. The highest threat from this vulnerability is to data integrity, confidentiality, and system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3421",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: unsigned signature header leads to string injection into an rpm database"
              },
              "fullDescription": {
                "text": "A flaw was found in the RPM package in the read functionality. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package or compromise an RPM repository, to cause RPM database corruption. The highest threat from this vulnerability is to data integrity. This flaw affects RPM versions before 4.17.0-alpha."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3421",
              "help": {
                "text": "Vulnerability CVE-2021-3421\nSeverity: MEDIUM\nPackage: rpm-libs\nFixed Version: 4.14.3-14.el8_4\nLink: [CVE-2021-3421](https://avd.aquasec.com/nvd/cve-2021-3421)\nA flaw was found in the RPM package in the read functionality. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package or compromise an RPM repository, to cause RPM database corruption. The highest threat from this vulnerability is to data integrity. This flaw affects RPM versions before 4.17.0-alpha.",
                "markdown": "**Vulnerability CVE-2021-3421**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|rpm-libs|4.14.3-14.el8_4|[CVE-2021-3421](https://avd.aquasec.com/nvd/cve-2021-3421)|\n\nA flaw was found in the RPM package in the read functionality. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package or compromise an RPM repository, to cause RPM database corruption. The highest threat from this vulnerability is to data integrity. This flaw affects RPM versions before 4.17.0-alpha."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3521",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: RPM does not require subkeys to have a valid binding signature"
              },
              "fullDescription": {
                "text": "There is a flaw in RPM\u0026#39;s signature functionality. OpenPGP subkeys are associated with a primary key via a \u0026#34;binding signature.\u0026#34; RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3521",
              "help": {
                "text": "Vulnerability CVE-2021-3521\nSeverity: MEDIUM\nPackage: rpm-libs\nFixed Version: 4.14.3-19.el8_5.2\nLink: [CVE-2021-3521](https://avd.aquasec.com/nvd/cve-2021-3521)\nThere is a flaw in RPM's signature functionality. OpenPGP subkeys are associated with a primary key via a \"binding signature.\" RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources.",
                "markdown": "**Vulnerability CVE-2021-3521**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|rpm-libs|4.14.3-19.el8_5.2|[CVE-2021-3521](https://avd.aquasec.com/nvd/cve-2021-3521)|\n\nThere is a flaw in RPM's signature functionality. OpenPGP subkeys are associated with a primary key via a \"binding signature.\" RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-35937",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: TOCTOU race in checks for unsafe symlinks"
              },
              "fullDescription": {
                "text": "A race condition vulnerability was found in rpm. A local unprivileged user could use this flaw to bypass the checks that were introduced in response to CVE-2017-7500 and CVE-2017-7501, potentially gaining root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-35937",
              "help": {
                "text": "Vulnerability CVE-2021-35937\nSeverity: MEDIUM\nPackage: rpm-libs\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35937](https://avd.aquasec.com/nvd/cve-2021-35937)\nA race condition vulnerability was found in rpm. A local unprivileged user could use this flaw to bypass the checks that were introduced in response to CVE-2017-7500 and CVE-2017-7501, potentially gaining root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
                "markdown": "**Vulnerability CVE-2021-35937**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|rpm-libs|4.14.3-28.el8_9|[CVE-2021-35937](https://avd.aquasec.com/nvd/cve-2021-35937)|\n\nA race condition vulnerability was found in rpm. A local unprivileged user could use this flaw to bypass the checks that were introduced in response to CVE-2017-7500 and CVE-2017-7501, potentially gaining root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-35938",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: races with chown/chmod/capabilities calls during installation"
              },
              "fullDescription": {
                "text": "A symbolic link issue was found in rpm. It occurs when rpm sets the desired permissions and credentials after installing a file. A local unprivileged user could use this flaw to exchange the original file with a symbolic link to a security-critical file and escalate their privileges on the system. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-35938",
              "help": {
                "text": "Vulnerability CVE-2021-35938\nSeverity: MEDIUM\nPackage: rpm-libs\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35938](https://avd.aquasec.com/nvd/cve-2021-35938)\nA symbolic link issue was found in rpm. It occurs when rpm sets the desired permissions and credentials after installing a file. A local unprivileged user could use this flaw to exchange the original file with a symbolic link to a security-critical file and escalate their privileges on the system. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
                "markdown": "**Vulnerability CVE-2021-35938**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|rpm-libs|4.14.3-28.el8_9|[CVE-2021-35938](https://avd.aquasec.com/nvd/cve-2021-35938)|\n\nA symbolic link issue was found in rpm. It occurs when rpm sets the desired permissions and credentials after installing a file. A local unprivileged user could use this flaw to exchange the original file with a symbolic link to a security-critical file and escalate their privileges on the system. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-35939",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: checks for unsafe symlinks are not performed for intermediary directories"
              },
              "fullDescription": {
                "text": "It was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-35939",
              "help": {
                "text": "Vulnerability CVE-2021-35939\nSeverity: MEDIUM\nPackage: rpm-libs\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35939](https://avd.aquasec.com/nvd/cve-2021-35939)\nIt was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
                "markdown": "**Vulnerability CVE-2021-35939**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|rpm-libs|4.14.3-28.el8_9|[CVE-2021-35939](https://avd.aquasec.com/nvd/cve-2021-35939)|\n\nIt was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-20266",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "rpm: missing length checks in hdrblobInit()"
              },
              "fullDescription": {
                "text": "A flaw was found in RPM\u0026#39;s hdrblobInit() in lib/header.c. This flaw allows an attacker who can modify the rpmdb to cause an out-of-bounds read. The highest threat from this vulnerability is to system availability."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-20266",
              "help": {
                "text": "Vulnerability CVE-2021-20266\nSeverity: LOW\nPackage: rpm-libs\nFixed Version: 4.14.3-19.el8\nLink: [CVE-2021-20266](https://avd.aquasec.com/nvd/cve-2021-20266)\nA flaw was found in RPM's hdrblobInit() in lib/header.c. This flaw allows an attacker who can modify the rpmdb to cause an out-of-bounds read. The highest threat from this vulnerability is to system availability.",
                "markdown": "**Vulnerability CVE-2021-20266**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|rpm-libs|4.14.3-19.el8|[CVE-2021-20266](https://avd.aquasec.com/nvd/cve-2021-20266)|\n\nA flaw was found in RPM's hdrblobInit() in lib/header.c. This flaw allows an attacker who can modify the rpmdb to cause an out-of-bounds read. The highest threat from this vulnerability is to system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-4641",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "shadow-utils: possible password leak during passwd(1) change"
              },
              "fullDescription": {
                "text": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-4641",
              "help": {
                "text": "Vulnerability CVE-2023-4641\nSeverity: LOW\nPackage: shadow-utils\nFixed Version: 2:4.6-19.el8\nLink: [CVE-2023-4641](https://avd.aquasec.com/nvd/cve-2023-4641)\nA flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
                "markdown": "**Vulnerability CVE-2023-4641**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|shadow-utils|2:4.6-19.el8|[CVE-2023-4641](https://avd.aquasec.com/nvd/cve-2023-4641)|\n\nA flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-33910",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: uncontrolled allocation on the stack in function unit_name_path_escape leads to crash"
              },
              "fullDescription": {
                "text": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33910",
              "help": {
                "text": "Vulnerability CVE-2021-33910\nSeverity: HIGH\nPackage: systemd-pam\nFixed Version: 239-45.el8_4.2\nLink: [CVE-2021-33910](https://avd.aquasec.com/nvd/cve-2021-33910)\nbasic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
                "markdown": "**Vulnerability CVE-2021-33910**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|systemd-pam|239-45.el8_4.2|[CVE-2021-33910](https://avd.aquasec.com/nvd/cve-2021-33910)|\n\nbasic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2526",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd-resolved: use-after-free when dealing with DnsStream in resolved-dns-stream.c"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in \u0026#39;resolved-dns-stream.c\u0026#39; not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2526",
              "help": {
                "text": "Vulnerability CVE-2022-2526\nSeverity: HIGH\nPackage: systemd-pam\nFixed Version: 239-58.el8_6.4\nLink: [CVE-2022-2526](https://avd.aquasec.com/nvd/cve-2022-2526)\nA use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
                "markdown": "**Vulnerability CVE-2022-2526**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|systemd-pam|239-58.el8_6.4|[CVE-2022-2526](https://avd.aquasec.com/nvd/cve-2022-2526)|\n\nA use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-20839",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: mishandling of the current keyboard mode check leading to passwords being disclosed in cleartext to attacker"
              },
              "fullDescription": {
                "text": "systemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-20839",
              "help": {
                "text": "Vulnerability CVE-2018-20839\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: \nLink: [CVE-2018-20839](https://avd.aquasec.com/nvd/cve-2018-20839)\nsystemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled.",
                "markdown": "**Vulnerability CVE-2018-20839**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam||[CVE-2018-20839](https://avd.aquasec.com/nvd/cve-2018-20839)|\n\nsystemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-3842",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: Spoofing of XDG_SEAT allows for actions to be checked against \u0026#34;allow_active\u0026#34; instead of \u0026#34;allow_any\u0026#34;"
              },
              "fullDescription": {
                "text": "In systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \u0026#34;allow_active\u0026#34; element rather than \u0026#34;allow_any\u0026#34;."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-3842",
              "help": {
                "text": "Vulnerability CVE-2019-3842\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: 239-45.el8\nLink: [CVE-2019-3842](https://avd.aquasec.com/nvd/cve-2019-3842)\nIn systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \"allow_active\" element rather than \"allow_any\".",
                "markdown": "**Vulnerability CVE-2019-3842**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam|239-45.el8|[CVE-2019-3842](https://avd.aquasec.com/nvd/cve-2019-3842)|\n\nIn systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \"allow_active\" element rather than \"allow_any\"."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-13776",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: Mishandles numerical usernames beginning with decimal digits or 0x followed by hexadecimal digits"
              },
              "fullDescription": {
                "text": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-13776",
              "help": {
                "text": "Vulnerability CVE-2020-13776\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: 239-45.el8\nLink: [CVE-2020-13776](https://avd.aquasec.com/nvd/cve-2020-13776)\nsystemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
                "markdown": "**Vulnerability CVE-2020-13776**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam|239-45.el8|[CVE-2020-13776](https://avd.aquasec.com/nvd/cve-2020-13776)|\n\nsystemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-3821",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: buffer overrun in format_timespan() function"
              },
              "fullDescription": {
                "text": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-3821",
              "help": {
                "text": "Vulnerability CVE-2022-3821\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: 239-68.el8_7.1\nLink: [CVE-2022-3821](https://avd.aquasec.com/nvd/cve-2022-3821)\nAn off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
                "markdown": "**Vulnerability CVE-2022-3821**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam|239-68.el8_7.1|[CVE-2022-3821](https://avd.aquasec.com/nvd/cve-2022-3821)|\n\nAn off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-4415",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: local information leak due to systemd-coredump not respecting fs.suid_dumpable kernel setting"
              },
              "fullDescription": {
                "text": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-4415",
              "help": {
                "text": "Vulnerability CVE-2022-4415\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: 239-68.el8_7.4\nLink: [CVE-2022-4415](https://avd.aquasec.com/nvd/cve-2022-4415)\nA vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
                "markdown": "**Vulnerability CVE-2022-4415**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam|239-68.el8_7.4|[CVE-2022-4415](https://avd.aquasec.com/nvd/cve-2022-4415)|\n\nA vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-26604",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: privilege escalation via the less pager"
              },
              "fullDescription": {
                "text": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \u0026#34;systemctl status\u0026#34; command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-26604",
              "help": {
                "text": "Vulnerability CVE-2023-26604\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: 239-74.el8_8.2\nLink: [CVE-2023-26604](https://avd.aquasec.com/nvd/cve-2023-26604)\nsystemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
                "markdown": "**Vulnerability CVE-2023-26604**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam|239-74.el8_8.2|[CVE-2023-26604](https://avd.aquasec.com/nvd/cve-2023-26604)|\n\nsystemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-7008",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd-resolved: Unsigned name response in signed zone is not refused when DNSSEC=yes"
              },
              "fullDescription": {
                "text": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-7008",
              "help": {
                "text": "Vulnerability CVE-2023-7008\nSeverity: MEDIUM\nPackage: systemd-pam\nFixed Version: 239-82.el8\nLink: [CVE-2023-7008](https://avd.aquasec.com/nvd/cve-2023-7008)\nA vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
                "markdown": "**Vulnerability CVE-2023-7008**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|systemd-pam|239-82.el8|[CVE-2023-7008](https://avd.aquasec.com/nvd/cve-2023-7008)|\n\nA vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3997",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "systemd: Uncontrolled recursion in systemd-tmpfiles when removing files"
              },
              "fullDescription": {
                "text": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3997",
              "help": {
                "text": "Vulnerability CVE-2021-3997\nSeverity: LOW\nPackage: systemd-pam\nFixed Version: \nLink: [CVE-2021-3997](https://avd.aquasec.com/nvd/cve-2021-3997)\nA flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
                "markdown": "**Vulnerability CVE-2021-3997**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|systemd-pam||[CVE-2021-3997](https://avd.aquasec.com/nvd/cve-2021-3997)|\n\nA flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2018-25032",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zlib: A flaw found in zlib when compressing (not decompressing) certain inputs"
              },
              "fullDescription": {
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-25032",
              "help": {
                "text": "Vulnerability CVE-2018-25032\nSeverity: HIGH\nPackage: zlib\nFixed Version: 1.2.11-18.el8_5\nLink: [CVE-2018-25032](https://avd.aquasec.com/nvd/cve-2018-25032)\nzlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                "markdown": "**Vulnerability CVE-2018-25032**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|zlib|1.2.11-18.el8_5|[CVE-2018-25032](https://avd.aquasec.com/nvd/cve-2018-25032)|\n\nzlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-37434",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field"
              },
              "fullDescription": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37434",
              "help": {
                "text": "Vulnerability CVE-2022-37434\nSeverity: MEDIUM\nPackage: zlib\nFixed Version: 1.2.11-19.el8_6\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "**Vulnerability CVE-2022-37434**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|zlib|1.2.11-19.el8_6|[CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)|\n\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-26160",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jwt-go: access restriction bypass vulnerability"
              },
              "fullDescription": {
                "text": "jwt-go before 4.0.0-preview1 allows attackers to bypass intended access restrictions in situations with []string{} for m[\u0026#34;aud\u0026#34;] (which is allowed by the specification). Because the type assertion fails, \u0026#34;\u0026#34; is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-26160",
              "help": {
                "text": "Vulnerability CVE-2020-26160\nSeverity: HIGH\nPackage: github.com/dgrijalva/jwt-go\nFixed Version: \nLink: [CVE-2020-26160](https://avd.aquasec.com/nvd/cve-2020-26160)\njwt-go before 4.0.0-preview1 allows attackers to bypass intended access restrictions in situations with []string{} for m[\"aud\"] (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check.",
                "markdown": "**Vulnerability CVE-2020-26160**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/dgrijalva/jwt-go||[CVE-2020-26160](https://avd.aquasec.com/nvd/cve-2020-26160)|\n\njwt-go before 4.0.0-preview1 allows attackers to bypass intended access restrictions in situations with []string{} for m[\"aud\"] (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3121",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "gogo/protobuf: plugin/unmarshal/unmarshal.go lacks certain index validation"
              },
              "fullDescription": {
                "text": "An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the \u0026#34;skippy peanut butter\u0026#34; issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3121",
              "help": {
                "text": "Vulnerability CVE-2021-3121\nSeverity: HIGH\nPackage: github.com/gogo/protobuf\nFixed Version: 1.3.2\nLink: [CVE-2021-3121](https://avd.aquasec.com/nvd/cve-2021-3121)\nAn issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the \"skippy peanut butter\" issue.",
                "markdown": "**Vulnerability CVE-2021-3121**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/gogo/protobuf|1.3.2|[CVE-2021-3121](https://avd.aquasec.com/nvd/cve-2021-3121)|\n\nAn issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the \"skippy peanut butter\" issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-21698",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "prometheus/client_golang: Denial of service using InstrumentHandlerCounter"
              },
              "fullDescription": {
                "text": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21698",
              "help": {
                "text": "Vulnerability CVE-2022-21698\nSeverity: HIGH\nPackage: github.com/prometheus/client_golang\nFixed Version: 1.11.1\nLink: [CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)\nclient_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
                "markdown": "**Vulnerability CVE-2022-21698**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/prometheus/client_golang|1.11.1|[CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)|\n\nclient_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-15114",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "etcd: gateway can include itself as an endpoint resulting in resource exhaustion and leads to DoS"
              },
              "fullDescription": {
                "text": "In etcd before versions 3.3.23 and 3.4.10, the etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15114",
              "help": {
                "text": "Vulnerability CVE-2020-15114\nSeverity: HIGH\nPackage: go.etcd.io/etcd\nFixed Version: 3.4.10, 3.3.23\nLink: [CVE-2020-15114](https://avd.aquasec.com/nvd/cve-2020-15114)\nIn etcd before versions 3.3.23 and 3.4.10, the etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway.",
                "markdown": "**Vulnerability CVE-2020-15114**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|go.etcd.io/etcd|3.4.10, 3.3.23|[CVE-2020-15114](https://avd.aquasec.com/nvd/cve-2020-15114)|\n\nIn etcd before versions 3.3.23 and 3.4.10, the etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-1099",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "etcd: DNS rebinding vulnerability in etcd server"
              },
              "fullDescription": {
                "text": "DNS rebinding vulnerability found in etcd 3.3.1 and earlier. An attacker can control his DNS records to direct to localhost, and trick the browser into sending requests to localhost (or any other address)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-1099",
              "help": {
                "text": "Vulnerability CVE-2018-1099\nSeverity: MEDIUM\nPackage: go.etcd.io/etcd\nFixed Version: 3.4.0\nLink: [CVE-2018-1099](https://avd.aquasec.com/nvd/cve-2018-1099)\nDNS rebinding vulnerability found in etcd 3.3.1 and earlier. An attacker can control his DNS records to direct to localhost, and trick the browser into sending requests to localhost (or any other address).",
                "markdown": "**Vulnerability CVE-2018-1099**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|go.etcd.io/etcd|3.4.0|[CVE-2018-1099](https://avd.aquasec.com/nvd/cve-2018-1099)|\n\nDNS rebinding vulnerability found in etcd 3.3.1 and earlier. An attacker can control his DNS records to direct to localhost, and trick the browser into sending requests to localhost (or any other address)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-15136",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "etcd: no authentication is performed against endpoints provided in the --endpoints flag"
              },
              "fullDescription": {
                "text": "In ectd before versions 3.4.10 and 3.3.23, gateway TLS authentication is only applied to endpoints detected in DNS SRV records. When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. This has been fixed in versions 3.4.10 and 3.3.23 with improved documentation and deprecation of the functionality."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15136",
              "help": {
                "text": "Vulnerability CVE-2020-15136\nSeverity: MEDIUM\nPackage: go.etcd.io/etcd\nFixed Version: 3.4.10, 3.3.23\nLink: [CVE-2020-15136](https://avd.aquasec.com/nvd/cve-2020-15136)\nIn ectd before versions 3.4.10 and 3.3.23, gateway TLS authentication is only applied to endpoints detected in DNS SRV records. When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. This has been fixed in versions 3.4.10 and 3.3.23 with improved documentation and deprecation of the functionality.",
                "markdown": "**Vulnerability CVE-2020-15136**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|go.etcd.io/etcd|3.4.10, 3.3.23|[CVE-2020-15136](https://avd.aquasec.com/nvd/cve-2020-15136)|\n\nIn ectd before versions 3.4.10 and 3.3.23, gateway TLS authentication is only applied to endpoints detected in DNS SRV records. When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. This has been fixed in versions 3.4.10 and 3.3.23 with improved documentation and deprecation of the functionality."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-j86v-2vjr-fg8f",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Etcd Gateway TLS endpoint validation only confirms TCP reachability"
              },
              "fullDescription": {
                "text": "### Vulnerability type\nCryptography\n\n### Workarounds\nRefer to the [gateway documentation](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md). The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation. \n\n### Detail\nSecure endpoint validation is performed by the etcd gateway start command when the --discovery-srv flag is enabled. However, as currently implemented, it only validates TCP reachability, effectively allowing connections to an endpoint that doesn\u0026#39;t accept TLS connections through the HTTPS URL. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-j86v-2vjr-fg8f",
              "help": {
                "text": "Vulnerability GHSA-j86v-2vjr-fg8f\nSeverity: MEDIUM\nPackage: go.etcd.io/etcd\nFixed Version: 3.4.10, 3.3.23\nLink: [GHSA-j86v-2vjr-fg8f](https://github.com/advisories/GHSA-j86v-2vjr-fg8f)\n### Vulnerability type\nCryptography\n\n### Workarounds\nRefer to the [gateway documentation](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md). The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation. \n\n### Detail\nSecure endpoint validation is performed by the etcd gateway start command when the --discovery-srv flag is enabled. However, as currently implemented, it only validates TCP reachability, effectively allowing connections to an endpoint that doesn't accept TLS connections through the HTTPS URL. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)",
                "markdown": "**Vulnerability GHSA-j86v-2vjr-fg8f**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|go.etcd.io/etcd|3.4.10, 3.3.23|[GHSA-j86v-2vjr-fg8f](https://github.com/advisories/GHSA-j86v-2vjr-fg8f)|\n\n### Vulnerability type\nCryptography\n\n### Workarounds\nRefer to the [gateway documentation](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md). The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation. \n\n### Detail\nSecure endpoint validation is performed by the etcd gateway start command when the --discovery-srv flag is enabled. However, as currently implemented, it only validates TCP reachability, effectively allowing connections to an endpoint that doesn't accept TLS connections through the HTTPS URL. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-pm3m-32r3-7mfh",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Etcd embed auto compaction retention negative value causing a compaction loop or a crash"
              },
              "fullDescription": {
                "text": "### Impact\nData Validation\n\n### Detail\nThe parseCompactionRetention function in embed/etcd.go allows the retention variable value to be negative and causes the node to execute the history compaction in a loop, taking more CPU than usual and spamming logs.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-pm3m-32r3-7mfh",
              "help": {
                "text": "Vulnerability GHSA-pm3m-32r3-7mfh\nSeverity: LOW\nPackage: go.etcd.io/etcd\nFixed Version: 3.4.10, 3.3.23\nLink: [GHSA-pm3m-32r3-7mfh](https://github.com/advisories/GHSA-pm3m-32r3-7mfh)\n### Impact\nData Validation\n\n### Detail\nThe parseCompactionRetention function in embed/etcd.go allows the retention variable value to be negative and causes the node to execute the history compaction in a loop, taking more CPU than usual and spamming logs.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)",
                "markdown": "**Vulnerability GHSA-pm3m-32r3-7mfh**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|go.etcd.io/etcd|3.4.10, 3.3.23|[GHSA-pm3m-32r3-7mfh](https://github.com/advisories/GHSA-pm3m-32r3-7mfh)|\n\n### Impact\nData Validation\n\n### Detail\nThe parseCompactionRetention function in embed/etcd.go allows the retention variable value to be negative and causes the node to execute the history compaction in a loop, taking more CPU than usual and spamming logs.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "GHSA-vjg6-93fv-qv64",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Etcd auth Inaccurate logging of authentication attempts for users with CN-based auth only"
              },
              "fullDescription": {
                "text": "### Vulnerability type\nLogging\n\n### Detail\netcd users who have no password can authenticate only through a client certificate. When such users try to authenticate into etcd using the Authenticate endpoint, errors are logged with insufficient information regarding why the authentication failed, and may be misleading when auditing etcd logs.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-vjg6-93fv-qv64",
              "help": {
                "text": "Vulnerability GHSA-vjg6-93fv-qv64\nSeverity: LOW\nPackage: go.etcd.io/etcd\nFixed Version: 3.4.10, 3.3.23\nLink: [GHSA-vjg6-93fv-qv64](https://github.com/advisories/GHSA-vjg6-93fv-qv64)\n### Vulnerability type\nLogging\n\n### Detail\netcd users who have no password can authenticate only through a client certificate. When such users try to authenticate into etcd using the Authenticate endpoint, errors are logged with insufficient information regarding why the authentication failed, and may be misleading when auditing etcd logs.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)",
                "markdown": "**Vulnerability GHSA-vjg6-93fv-qv64**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|go.etcd.io/etcd|3.4.10, 3.3.23|[GHSA-vjg6-93fv-qv64](https://github.com/advisories/GHSA-vjg6-93fv-qv64)|\n\n### Vulnerability type\nLogging\n\n### Detail\netcd users who have no password can authenticate only through a client certificate. When such users try to authenticate into etcd using the Authenticate endpoint, errors are logged with insufficient information regarding why the authentication failed, and may be misleading when auditing etcd logs.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-29652",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/ssh: crafted authentication request can lead to nil pointer dereference"
              },
              "fullDescription": {
                "text": "A nil pointer dereference in the golang.org/x/crypto/ssh component through v0.0.0-20201203163018-be400aefbc4c for Go allows remote attackers to cause a denial of service against SSH servers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-29652",
              "help": {
                "text": "Vulnerability CVE-2020-29652\nSeverity: HIGH\nPackage: golang.org/x/crypto\nFixed Version: 0.0.0-20201216223049-8b5274cf687f\nLink: [CVE-2020-29652](https://avd.aquasec.com/nvd/cve-2020-29652)\nA nil pointer dereference in the golang.org/x/crypto/ssh component through v0.0.0-20201203163018-be400aefbc4c for Go allows remote attackers to cause a denial of service against SSH servers.",
                "markdown": "**Vulnerability CVE-2020-29652**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/crypto|0.0.0-20201216223049-8b5274cf687f|[CVE-2020-29652](https://avd.aquasec.com/nvd/cve-2020-29652)|\n\nA nil pointer dereference in the golang.org/x/crypto/ssh component through v0.0.0-20201203163018-be400aefbc4c for Go allows remote attackers to cause a denial of service against SSH servers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-43565",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang.org/x/crypto: empty plaintext packet causes panic"
              },
              "fullDescription": {
                "text": "The x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-43565",
              "help": {
                "text": "Vulnerability CVE-2021-43565\nSeverity: HIGH\nPackage: golang.org/x/crypto\nFixed Version: 0.0.0-20211202192323-5770296d904e\nLink: [CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)\nThe x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server.",
                "markdown": "**Vulnerability CVE-2021-43565**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/crypto|0.0.0-20211202192323-5770296d904e|[CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)|\n\nThe x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27191",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crash in a golang.org/x/crypto/ssh server"
              },
              "fullDescription": {
                "text": "The golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27191",
              "help": {
                "text": "Vulnerability CVE-2022-27191\nSeverity: HIGH\nPackage: golang.org/x/crypto\nFixed Version: 0.0.0-20220314234659-1baeb1ce4c0b\nLink: [CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)\nThe golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey.",
                "markdown": "**Vulnerability CVE-2022-27191**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/crypto|0.0.0-20220314234659-1baeb1ce4c0b|[CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)|\n\nThe golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-48795",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ssh: Prefix truncation attack on Binary Packet Protocol (BPP)"
              },
              "fullDescription": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH\u0026#39;s use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-48795",
              "help": {
                "text": "Vulnerability CVE-2023-48795\nSeverity: MEDIUM\nPackage: golang.org/x/crypto\nFixed Version: 0.17.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)\nThe SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "**Vulnerability CVE-2023-48795**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|golang.org/x/crypto|0.17.0|[CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)|\n\nThe SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33194",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: x/net/html: infinite loop in ParseFragment"
              },
              "fullDescription": {
                "text": "golang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33194",
              "help": {
                "text": "Vulnerability CVE-2021-33194\nSeverity: HIGH\nPackage: golang.org/x/net\nFixed Version: 0.0.0-20210520170846-37e1c6afe023\nLink: [CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)\ngolang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input.",
                "markdown": "**Vulnerability CVE-2021-33194**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/net|0.0.0-20210520170846-37e1c6afe023|[CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)|\n\ngolang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27664",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: handle server errors after sending GOAWAY"
              },
              "fullDescription": {
                "text": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27664",
              "help": {
                "text": "Vulnerability CVE-2022-27664\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.6, 1.19.1\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)\nIn net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
                "markdown": "**Vulnerability CVE-2022-27664**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.6, 1.19.1|[CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)|\n\nIn net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41723",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "net/http, golang.org/x/net/http2: avoid quadratic complexity in HPACK decoding"
              },
              "fullDescription": {
                "text": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41723",
              "help": {
                "text": "Vulnerability CVE-2022-41723\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)\nA maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
                "markdown": "**Vulnerability CVE-2022-41723**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)|\n\nA maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-39325",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, x/net/http2: rapid stream resets can cause excessive work (CVE-2023-44487)"
              },
              "fullDescription": {
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39325",
              "help": {
                "text": "Vulnerability CVE-2023-39325\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.20.10, 1.21.3\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)\nA malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
                "markdown": "**Vulnerability CVE-2023-39325**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.20.10, 1.21.3|[CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)|\n\nA malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-31525",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: panic in ReadRequest and ReadResponse when reading a very large header"
              },
              "fullDescription": {
                "text": "net/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-31525",
              "help": {
                "text": "Vulnerability CVE-2021-31525\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.12, 1.16.4\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)\nnet/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations.",
                "markdown": "**Vulnerability CVE-2021-31525**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.12, 1.16.4|[CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)|\n\nnet/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-41717",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: excessive memory growth in a Go server accepting HTTP/2 requests"
              },
              "fullDescription": {
                "text": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41717",
              "help": {
                "text": "Vulnerability CVE-2022-41717\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)\nAn attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
                "markdown": "**Vulnerability CVE-2022-41717**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.18.9, 1.19.4|[CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)|\n\nAn attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-3978",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang.org/x/net/html: Cross site scripting"
              },
              "fullDescription": {
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3978",
              "help": {
                "text": "Vulnerability CVE-2023-3978\nSeverity: MEDIUM\nPackage: golang.org/x/net\nFixed Version: 0.13.0\nLink: [CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)\nText nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
                "markdown": "**Vulnerability CVE-2023-3978**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|golang.org/x/net|0.13.0|[CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)|\n\nText nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-44487",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "HTTP/2: Multiple HTTP/2 enabled web servers are vulnerable to a DDoS attack (Rapid Reset Attack)"
              },
              "fullDescription": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-44487",
              "help": {
                "text": "Vulnerability CVE-2023-44487\nSeverity: MEDIUM\nPackage: google.golang.org/grpc\nFixed Version: 1.58.3, 1.57.1, 1.56.3\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "**Vulnerability CVE-2023-44487**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|google.golang.org/grpc|1.58.3, 1.57.1, 1.56.3|[CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)|\n\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45288",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS"
              },
              "fullDescription": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request\u0026#39;s headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45288",
              "help": {
                "text": "Vulnerability CVE-2023-45288\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.21.9, 1.22.2\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)\nAn attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "**Vulnerability CVE-2023-45288**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.21.9, 1.22.2|[CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)|\n\nAn attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-29526",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: syscall: faccessat checks wrong group"
              },
              "fullDescription": {
                "text": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29526",
              "help": {
                "text": "Vulnerability CVE-2022-29526\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.10, 1.18.2\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)\nGo before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.",
                "markdown": "**Vulnerability CVE-2022-29526**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.10, 1.18.2|[CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)|\n\nGo before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-38561",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: out-of-bounds read in golang.org/x/text/language leads to DoS"
              },
              "fullDescription": {
                "text": "golang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-38561",
              "help": {
                "text": "Vulnerability CVE-2021-38561\nSeverity: HIGH\nPackage: golang.org/x/text\nFixed Version: 0.3.7\nLink: [CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)\ngolang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack.",
                "markdown": "**Vulnerability CVE-2021-38561**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/text|0.3.7|[CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)|\n\ngolang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-32149",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: golang.org/x/text/language: ParseAcceptLanguage takes a long time to parse complex tags"
              },
              "fullDescription": {
                "text": "An attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32149",
              "help": {
                "text": "Vulnerability CVE-2022-32149\nSeverity: HIGH\nPackage: golang.org/x/text\nFixed Version: 0.3.8\nLink: [CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)\nAn attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse.",
                "markdown": "**Vulnerability CVE-2022-32149**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/text|0.3.8|[CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)|\n\nAn attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-m425-mq94-257g",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "gRPC-Go HTTP/2 Rapid Reset vulnerability"
              },
              "fullDescription": {
                "text": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server\u0026#39;s resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/advisories/GHSA-m425-mq94-257g",
              "help": {
                "text": "Vulnerability GHSA-m425-mq94-257g\nSeverity: HIGH\nPackage: google.golang.org/grpc\nFixed Version: 1.56.3, 1.57.1, 1.58.3\nLink: [GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)\n### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n",
                "markdown": "**Vulnerability GHSA-m425-mq94-257g**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|google.golang.org/grpc|1.56.3, 1.57.1, 1.58.3|[GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)|\n\n### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-24786",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang-protobuf: encoding/protojson, internal/encoding/json: infinite loop in protojson.Unmarshal when unmarshaling certain forms of invalid JSON"
              },
              "fullDescription": {
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24786",
              "help": {
                "text": "Vulnerability CVE-2024-24786\nSeverity: MEDIUM\nPackage: google.golang.org/protobuf\nFixed Version: 1.33.0\nLink: [CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)\nThe protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
                "markdown": "**Vulnerability CVE-2024-24786**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|google.golang.org/protobuf|1.33.0|[CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)|\n\nThe protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8565",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Incomplete fix for CVE-2019-11250 allows for token leak in logs when logLevel \u0026gt;= 9"
              },
              "fullDescription": {
                "text": "In Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u0026lt;= v1.19.3, \u0026lt;= v1.18.10, \u0026lt;= v1.17.13, \u0026lt; v1.20.0-alpha2."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8565",
              "help": {
                "text": "Vulnerability CVE-2020-8565\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.20.0-alpha.2\nLink: [CVE-2020-8565](https://avd.aquasec.com/nvd/cve-2020-8565)\nIn Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2.",
                "markdown": "**Vulnerability CVE-2020-8565**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.20.0-alpha.2|[CVE-2020-8565](https://avd.aquasec.com/nvd/cve-2020-8565)|\n\nIn Kubernetes, if the logging level is set to at least 9, authorization and bearer tokens will be written to log files. This can occur both in API server logs and client tool output like kubectl. This affects \u003c= v1.19.3, \u003c= v1.18.10, \u003c= v1.17.13, \u003c v1.20.0-alpha2."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-25741",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Symlink exchange can allow host filesystem access"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026amp; directories outside of the volume, including on the host filesystem."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25741",
              "help": {
                "text": "Vulnerability CVE-2021-25741\nSeverity: HIGH\nPackage: k8s.io/kubernetes\nFixed Version: 1.19.15, 1.20.11, 1.21.5, 1.22.2\nLink: [CVE-2021-25741](https://avd.aquasec.com/nvd/cve-2021-25741)\nA security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026 directories outside of the volume, including on the host filesystem.",
                "markdown": "**Vulnerability CVE-2021-25741**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|k8s.io/kubernetes|1.19.15, 1.20.11, 1.21.5, 1.22.2|[CVE-2021-25741](https://avd.aquasec.com/nvd/cve-2021-25741)|\n\nA security issue was discovered in Kubernetes where a user may be able to create a container with subpath volume mounts to access files \u0026 directories outside of the volume, including on the host filesystem."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-3676",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Insufficient input sanitization on Windows nodes leads to privilege escalation"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3676",
              "help": {
                "text": "Vulnerability CVE-2023-3676\nSeverity: HIGH\nPackage: k8s.io/kubernetes\nFixed Version: 1.28.1, 1.27.5, 1.26.8, 1.25.13, 1.24.17\nLink: [CVE-2023-3676](https://avd.aquasec.com/nvd/cve-2023-3676)\nA security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.\n",
                "markdown": "**Vulnerability CVE-2023-3676**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|k8s.io/kubernetes|1.28.1, 1.27.5, 1.26.8, 1.25.13, 1.24.17|[CVE-2023-3676](https://avd.aquasec.com/nvd/cve-2023-3676)|\n\nA security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-3955",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Insufficient input sanitization on Windows nodes leads to privilege escalation"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3955",
              "help": {
                "text": "Vulnerability CVE-2023-3955\nSeverity: HIGH\nPackage: k8s.io/kubernetes\nFixed Version: 1.28.1, 1.27.5, 1.26.8, 1.25.13, 1.24.17\nLink: [CVE-2023-3955](https://avd.aquasec.com/nvd/cve-2023-3955)\nA security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.\n",
                "markdown": "**Vulnerability CVE-2023-3955**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|k8s.io/kubernetes|1.28.1, 1.27.5, 1.26.8, 1.25.13, 1.24.17|[CVE-2023-3955](https://avd.aquasec.com/nvd/cve-2023-3955)|\n\nA security issue was discovered in Kubernetes where a user\n that can create pods on Windows nodes may be able to escalate to admin \nprivileges on those nodes. Kubernetes clusters are only affected if they\n include Windows nodes.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-5528",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Insufficient input sanitization in in-tree storage plugin leads to privilege escalation on Windows nodes"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-5528",
              "help": {
                "text": "Vulnerability CVE-2023-5528\nSeverity: HIGH\nPackage: k8s.io/kubernetes\nFixed Version: 1.28.4, 1.27.8, 1.26.11, 1.25.16\nLink: [CVE-2023-5528](https://avd.aquasec.com/nvd/cve-2023-5528)\nA security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
                "markdown": "**Vulnerability CVE-2023-5528**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|k8s.io/kubernetes|1.28.4, 1.27.8, 1.26.11, 1.25.16|[CVE-2023-5528](https://avd.aquasec.com/nvd/cve-2023-5528)|\n\nA security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8554",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: MITM using LoadBalancer or ExternalIPs"
              },
              "fullDescription": {
                "text": "Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8554",
              "help": {
                "text": "Vulnerability CVE-2020-8554\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: \nLink: [CVE-2020-8554](https://avd.aquasec.com/nvd/cve-2020-8554)\nKubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.",
                "markdown": "**Vulnerability CVE-2020-8554**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes||[CVE-2020-8554](https://avd.aquasec.com/nvd/cve-2020-8554)|\n\nKubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8561",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Webhook redirect in kube-apiserver"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8561",
              "help": {
                "text": "Vulnerability CVE-2020-8561\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: \nLink: [CVE-2020-8561](https://avd.aquasec.com/nvd/cve-2020-8561)\nA security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs.",
                "markdown": "**Vulnerability CVE-2020-8561**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes||[CVE-2020-8561](https://avd.aquasec.com/nvd/cve-2020-8561)|\n\nA security issue was discovered in Kubernetes where actors that control the responses of MutatingWebhookConfiguration or ValidatingWebhookConfiguration requests are able to redirect kube-apiserver requests to private networks of the apiserver. If that user can view kube-apiserver logs when the log level is set to 10, they can view the redirected responses and headers in the logs."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8564",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Docker config secrets leaked when file is malformed and loglevel \u0026gt;= 4"
              },
              "fullDescription": {
                "text": "In Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u0026lt; v1.19.3, \u0026lt; v1.18.10, \u0026lt; v1.17.13."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8564",
              "help": {
                "text": "Vulnerability CVE-2020-8564\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.20.0-alpha.1\nLink: [CVE-2020-8564](https://avd.aquasec.com/nvd/cve-2020-8564)\nIn Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13.",
                "markdown": "**Vulnerability CVE-2020-8564**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.20.0-alpha.1|[CVE-2020-8564](https://avd.aquasec.com/nvd/cve-2020-8564)|\n\nIn Kubernetes clusters using a logging level of at least 4, processing a malformed docker config file will result in the contents of the docker config file being leaked, which can include pull secrets or other registry credentials. This affects \u003c v1.19.3, \u003c v1.18.10, \u003c v1.17.13."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-25735",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Validating Admission Webhook does not observe some previous fields"
              },
              "fullDescription": {
                "text": "A security issue was discovered in kube-apiserver that could allow node updates to bypass a Validating Admission Webhook. Clusters are only affected by this vulnerability if they run a Validating Admission Webhook for Nodes that denies admission based at least partially on the old state of the Node object. Validating Admission Webhook does not observe some previous fields."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25735",
              "help": {
                "text": "Vulnerability CVE-2021-25735\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.20.6, 1.19.10, 1.18.18\nLink: [CVE-2021-25735](https://avd.aquasec.com/nvd/cve-2021-25735)\nA security issue was discovered in kube-apiserver that could allow node updates to bypass a Validating Admission Webhook. Clusters are only affected by this vulnerability if they run a Validating Admission Webhook for Nodes that denies admission based at least partially on the old state of the Node object. Validating Admission Webhook does not observe some previous fields.",
                "markdown": "**Vulnerability CVE-2021-25735**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.20.6, 1.19.10, 1.18.18|[CVE-2021-25735](https://avd.aquasec.com/nvd/cve-2021-25735)|\n\nA security issue was discovered in kube-apiserver that could allow node updates to bypass a Validating Admission Webhook. Clusters are only affected by this vulnerability if they run a Validating Admission Webhook for Nodes that denies admission based at least partially on the old state of the Node object. Validating Admission Webhook does not observe some previous fields."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-25736",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: LoadBalancer Service type don\u0026#39;t create a HNS policy for empty or invalid external loadbalancer IP, what could lead to MITM"
              },
              "fullDescription": {
                "text": "Kube-proxy\n on Windows can unintentionally forward traffic to local processes \nlistening on the same port (“spec.ports[*].port”) as a LoadBalancer \nService when the LoadBalancer controller\n does not set the “status.loadBalancer.ingress[].ip” field. Clusters \nwhere the LoadBalancer controller sets the \n“status.loadBalancer.ingress[].ip” field are unaffected.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25736",
              "help": {
                "text": "Vulnerability CVE-2021-25736\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.21\nLink: [CVE-2021-25736](https://avd.aquasec.com/nvd/cve-2021-25736)\nKube-proxy\n on Windows can unintentionally forward traffic to local processes \nlistening on the same port (“spec.ports[*].port”) as a LoadBalancer \nService when the LoadBalancer controller\n does not set the “status.loadBalancer.ingress[].ip” field. Clusters \nwhere the LoadBalancer controller sets the \n“status.loadBalancer.ingress[].ip” field are unaffected.\n\n",
                "markdown": "**Vulnerability CVE-2021-25736**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.21|[CVE-2021-25736](https://avd.aquasec.com/nvd/cve-2021-25736)|\n\nKube-proxy\n on Windows can unintentionally forward traffic to local processes \nlistening on the same port (“spec.ports[*].port”) as a LoadBalancer \nService when the LoadBalancer controller\n does not set the “status.loadBalancer.ingress[].ip” field. Clusters \nwhere the LoadBalancer controller sets the \n“status.loadBalancer.ingress[].ip” field are unaffected.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-25737",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Holes in EndpointSlice Validation Enable Host Network Hijack"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25737",
              "help": {
                "text": "Vulnerability CVE-2021-25737\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.18.19, 1.19.11, 1.20.7, 1.21.1\nLink: [CVE-2021-25737](https://avd.aquasec.com/nvd/cve-2021-25737)\nA security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs.",
                "markdown": "**Vulnerability CVE-2021-25737**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.18.19, 1.19.11, 1.20.7, 1.21.1|[CVE-2021-25737](https://avd.aquasec.com/nvd/cve-2021-25737)|\n\nA security issue was discovered in Kubernetes where a user may be able to redirect pod traffic to private networks on a Node. Kubernetes already prevents creation of Endpoint IPs in the localhost or link-local range, but the same validation was not performed on EndpointSlice IPs."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2431",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Bypass of seccomp profile enforcement"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2431",
              "help": {
                "text": "Vulnerability CVE-2023-2431\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.24.14, 1.25.10, 1.26.5, 1.27.2\nLink: [CVE-2023-2431](https://avd.aquasec.com/nvd/cve-2023-2431)\nA security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet.",
                "markdown": "**Vulnerability CVE-2023-2431**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.24.14, 1.25.10, 1.26.5, 1.27.2|[CVE-2023-2431](https://avd.aquasec.com/nvd/cve-2023-2431)|\n\nA security issue was discovered in Kubelet that allows pods to bypass the seccomp profile enforcement. Pods that use localhost type for seccomp profile but specify an empty profile field, are affected by this issue. In this scenario, this vulnerability allows the pod to run in unconfined (seccomp disabled) mode. This bug affects Kubelet."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2727",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kube-apiserver: Bypassing policies imposed by the ImagePolicyWebhook  admission plugin"
              },
              "fullDescription": {
                "text": "Users may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2727",
              "help": {
                "text": "Vulnerability CVE-2023-2727\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.27.3, 1.26.6, 1.25.11, 1.24.15\nLink: [CVE-2023-2727](https://avd.aquasec.com/nvd/cve-2023-2727)\nUsers may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.\n\n",
                "markdown": "**Vulnerability CVE-2023-2727**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.27.3, 1.26.6, 1.25.11, 1.24.15|[CVE-2023-2727](https://avd.aquasec.com/nvd/cve-2023-2727)|\n\nUsers may be able to launch containers using images that are restricted by ImagePolicyWebhook when using ephemeral containers. Kubernetes clusters are only affected if the ImagePolicyWebhook admission plugin is used together with ephemeral containers.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2728",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kube-apiserver: Bypassing enforce mountable secrets policy imposed by the  ServiceAccount admission plugin"
              },
              "fullDescription": {
                "text": "Users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2728",
              "help": {
                "text": "Vulnerability CVE-2023-2728\nSeverity: MEDIUM\nPackage: k8s.io/kubernetes\nFixed Version: 1.27.3, 1.26.6, 1.25.11, 1.24.15\nLink: [CVE-2023-2728](https://avd.aquasec.com/nvd/cve-2023-2728)\nUsers may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.\n\n",
                "markdown": "**Vulnerability CVE-2023-2728**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|k8s.io/kubernetes|1.27.3, 1.26.6, 1.25.11, 1.24.15|[CVE-2023-2728](https://avd.aquasec.com/nvd/cve-2023-2728)|\n\nUsers may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using ephemeral containers. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the `kubernetes.io/enforce-mountable-secrets` annotation are used together with ephemeral containers.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8562",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Bypass of Kubernetes API Server proxy TOCTOU"
              },
              "fullDescription": {
                "text": "As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8562",
              "help": {
                "text": "Vulnerability CVE-2020-8562\nSeverity: LOW\nPackage: k8s.io/kubernetes\nFixed Version: 1.21.1, 1.20.7, 1.19.11, 1.18.19\nLink: [CVE-2020-8562](https://avd.aquasec.com/nvd/cve-2020-8562)\nAs mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane.",
                "markdown": "**Vulnerability CVE-2020-8562**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|k8s.io/kubernetes|1.21.1, 1.20.7, 1.19.11, 1.18.19|[CVE-2020-8562](https://avd.aquasec.com/nvd/cve-2020-8562)|\n\nAs mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-25740",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: Endpoint \u0026amp; EndpointSlice permissions allow cross-Namespace forwarding"
              },
              "fullDescription": {
                "text": "A security issue was discovered with Kubernetes that could enable users to send network traffic to locations they would otherwise not have access to via a confused deputy attack."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25740",
              "help": {
                "text": "Vulnerability CVE-2021-25740\nSeverity: LOW\nPackage: k8s.io/kubernetes\nFixed Version: \nLink: [CVE-2021-25740](https://avd.aquasec.com/nvd/cve-2021-25740)\nA security issue was discovered with Kubernetes that could enable users to send network traffic to locations they would otherwise not have access to via a confused deputy attack.",
                "markdown": "**Vulnerability CVE-2021-25740**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|k8s.io/kubernetes||[CVE-2021-25740](https://avd.aquasec.com/nvd/cve-2021-25740)|\n\nA security issue was discovered with Kubernetes that could enable users to send network traffic to locations they would otherwise not have access to via a confused deputy attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-25743",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: kubectl does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal"
              },
              "fullDescription": {
                "text": "kubectl does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25743",
              "help": {
                "text": "Vulnerability CVE-2021-25743\nSeverity: LOW\nPackage: k8s.io/kubernetes\nFixed Version: 1.26.0-alpha.3\nLink: [CVE-2021-25743](https://avd.aquasec.com/nvd/cve-2021-25743)\nkubectl does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events.",
                "markdown": "**Vulnerability CVE-2021-25743**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|k8s.io/kubernetes|1.26.0-alpha.3|[CVE-2021-25743](https://avd.aquasec.com/nvd/cve-2021-25743)|\n\nkubectl does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-3177",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "kubernetes: kube-apiserver: bypassing mountable secrets policy imposed by the ServiceAccount admission plugin"
              },
              "fullDescription": {
                "text": "A security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.\n\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-3177",
              "help": {
                "text": "Vulnerability CVE-2024-3177\nSeverity: LOW\nPackage: k8s.io/kubernetes\nFixed Version: 1.27.13, 1.29.4, 1.28.9\nLink: [CVE-2024-3177](https://avd.aquasec.com/nvd/cve-2024-3177)\nA security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.\n\n",
                "markdown": "**Vulnerability CVE-2024-3177**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|k8s.io/kubernetes|1.27.13, 1.29.4, 1.28.9|[CVE-2024-3177](https://avd.aquasec.com/nvd/cve-2024-3177)|\n\nA security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-23806",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/elliptic: IsOnCurve returns true for invalid field elements"
              },
              "fullDescription": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23806",
              "help": {
                "text": "Vulnerability CVE-2022-23806\nSeverity: CRITICAL\nPackage: stdlib\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)\nCurve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "**Vulnerability CVE-2022-23806**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|stdlib|1.16.14, 1.17.7|[CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)|\n\nCurve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-24538",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: backticks not treated as string delimiters"
              },
              "fullDescription": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \u0026#34;var a = {{.}}\u0026#34;), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24538",
              "help": {
                "text": "Vulnerability CVE-2023-24538\nSeverity: CRITICAL\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)\nTemplates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "**Vulnerability CVE-2023-24538**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|stdlib|1.19.8, 1.20.3|[CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)|\n\nTemplates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-24540",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of JavaScript whitespace"
              },
              "fullDescription": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \u0026#34;\\t\\n\\f\\r\\u0020\\u2028\\u2029\u0026#34; in JavaScript contexts that also contain actions may not be properly sanitized during execution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24540",
              "help": {
                "text": "Vulnerability CVE-2023-24540\nSeverity: CRITICAL\nPackage: stdlib\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)\nNot all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "**Vulnerability CVE-2023-24540**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|stdlib|1.19.9, 1.20.4|[CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)|\n\nNot all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-28362",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big: panic during recursive division of very large numbers"
              },
              "fullDescription": {
                "text": "Go before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28362",
              "help": {
                "text": "Vulnerability CVE-2020-28362\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.14.12, 1.15.5\nLink: [CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)\nGo before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service.",
                "markdown": "**Vulnerability CVE-2020-28362**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.14.12, 1.15.5|[CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)|\n\nGo before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-27918",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/xml: infinite loop when using xml.NewTokenDecoder with a custom TokenReader"
              },
              "fullDescription": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27918",
              "help": {
                "text": "Vulnerability CVE-2021-27918\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.9, 1.16.1\nLink: [CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)\nencoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "**Vulnerability CVE-2021-27918**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.9, 1.16.1|[CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)|\n\nencoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net: lookup functions may return invalid host names"
              },
              "fullDescription": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33195",
              "help": {
                "text": "Vulnerability CVE-2021-33195\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)\nGo before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "**Vulnerability CVE-2021-33195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.13, 1.16.5|[CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)|\n\nGo before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33196",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/zip: malformed archive may cause panic or memory exhaustion"
              },
              "fullDescription": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive\u0026#39;s header) can cause a NewReader or OpenReader panic."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33196",
              "help": {
                "text": "Vulnerability CVE-2021-33196\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)\nIn archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "**Vulnerability CVE-2021-33196**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.13, 1.16.5|[CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)|\n\nIn archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33198",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big.Rat: may cause a panic or an unrecoverable fatal error if passed inputs with very large exponents"
              },
              "fullDescription": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33198",
              "help": {
                "text": "Vulnerability CVE-2021-33198\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)\nIn Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "**Vulnerability CVE-2021-33198**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.13, 1.16.5|[CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)|\n\nIn Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-39293",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/zip: malformed archive may cause panic or memory exhaustion (incomplete fix of CVE-2021-33196)"
              },
              "fullDescription": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-39293",
              "help": {
                "text": "Vulnerability CVE-2021-39293\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.8, 1.17.1\nLink: [CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)\nIn archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "**Vulnerability CVE-2021-39293**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.8, 1.17.1|[CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)|\n\nIn archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-41771",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: debug/macho: invalid dynamic symbol table command can cause panic"
              },
              "fullDescription": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41771",
              "help": {
                "text": "Vulnerability CVE-2021-41771\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)\nImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "**Vulnerability CVE-2021-41771**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.10, 1.17.3|[CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)|\n\nImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-41772",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/zip: Reader.Open panics on empty string"
              },
              "fullDescription": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41772",
              "help": {
                "text": "Vulnerability CVE-2021-41772\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)\nGo before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "**Vulnerability CVE-2021-41772**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.10, 1.17.3|[CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)|\n\nGo before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-44716",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: limit growth of header canonicalization cache"
              },
              "fullDescription": {
                "text": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44716",
              "help": {
                "text": "Vulnerability CVE-2021-44716\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)\nnet/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.",
                "markdown": "**Vulnerability CVE-2021-44716**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.12, 1.17.5|[CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)|\n\nnet/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23772",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big: uncontrolled memory consumption due to an unhandled overflow via Rat.SetString"
              },
              "fullDescription": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23772",
              "help": {
                "text": "Vulnerability CVE-2022-23772\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)\nRat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "**Vulnerability CVE-2022-23772**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.14, 1.17.7|[CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)|\n\nRat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24675",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/pem: fix stack overflow in Decode"
              },
              "fullDescription": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24675",
              "help": {
                "text": "Vulnerability CVE-2022-24675\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)\nencoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "**Vulnerability CVE-2022-24675**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.9, 1.18.1|[CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)|\n\nencoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24921",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: regexp: stack exhaustion via a deeply nested expression"
              },
              "fullDescription": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24921",
              "help": {
                "text": "Vulnerability CVE-2022-24921\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.15, 1.17.8\nLink: [CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)\nregexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "**Vulnerability CVE-2022-24921**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.15, 1.17.8|[CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)|\n\nregexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-28131",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/xml: stack exhaustion in Decoder.Skip"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-28131",
              "help": {
                "text": "Vulnerability CVE-2022-28131\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)\nUncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "**Vulnerability CVE-2022-28131**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)|\n\nUncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-28327",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/elliptic: panic caused by oversized scalar"
              },
              "fullDescription": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-28327",
              "help": {
                "text": "Vulnerability CVE-2022-28327\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)\nThe generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "**Vulnerability CVE-2022-28327**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.9, 1.18.1|[CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)|\n\nThe generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2879",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/tar: unbounded memory consumption when reading headers"
              },
              "fullDescription": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2879",
              "help": {
                "text": "Vulnerability CVE-2022-2879\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)\nReader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "**Vulnerability CVE-2022-2879**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.7, 1.19.2|[CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)|\n\nReader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2880",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: ReverseProxy should not forward unparseable query parameters"
              },
              "fullDescription": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request\u0026#39;s Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2880",
              "help": {
                "text": "Vulnerability CVE-2022-2880\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)\nRequests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "**Vulnerability CVE-2022-2880**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.7, 1.19.2|[CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)|\n\nRequests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-29804",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ELSA-2022-17957: ol8addon security update (IMPORTANT)"
              },
              "fullDescription": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29804",
              "help": {
                "text": "Vulnerability CVE-2022-29804\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)\nIncorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "**Vulnerability CVE-2022-29804**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.11, 1.18.3|[CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)|\n\nIncorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30580",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: os/exec: Code injection in Cmd.Start"
              },
              "fullDescription": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \u0026#34;..com\u0026#34; or \u0026#34;..exe\u0026#34; by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30580",
              "help": {
                "text": "Vulnerability CVE-2022-30580\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)\nCode injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "**Vulnerability CVE-2022-30580**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.11, 1.18.3|[CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)|\n\nCode injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30630",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: io/fs: stack exhaustion in Glob"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30630",
              "help": {
                "text": "Vulnerability CVE-2022-30630\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)\nUncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "**Vulnerability CVE-2022-30630**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)|\n\nUncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30631",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: compress/gzip: stack exhaustion in Reader.Read"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30631",
              "help": {
                "text": "Vulnerability CVE-2022-30631\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)\nUncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "**Vulnerability CVE-2022-30631**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)|\n\nUncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30632",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: path/filepath: stack exhaustion in Glob"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30632",
              "help": {
                "text": "Vulnerability CVE-2022-30632\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)\nUncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "**Vulnerability CVE-2022-30632**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)|\n\nUncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30633",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/xml: stack exhaustion in Unmarshal"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the \u0026#39;any\u0026#39; field tag."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30633",
              "help": {
                "text": "Vulnerability CVE-2022-30633\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)\nUncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "**Vulnerability CVE-2022-30633**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)|\n\nUncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30634",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ELSA-2022-17957: ol8addon security update (IMPORTANT)"
              },
              "fullDescription": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u0026lt;\u0026lt; 32 - 1 bytes."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30634",
              "help": {
                "text": "Vulnerability CVE-2022-30634\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)\nInfinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "**Vulnerability CVE-2022-30634**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.11, 1.18.3|[CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)|\n\nInfinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30635",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/gob: stack exhaustion in Decoder.Decode"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30635",
              "help": {
                "text": "Vulnerability CVE-2022-30635\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)\nUncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "**Vulnerability CVE-2022-30635**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)|\n\nUncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-32189",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big: decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service"
              },
              "fullDescription": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32189",
              "help": {
                "text": "Vulnerability CVE-2022-32189\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.13, 1.18.5\nLink: [CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)\nA too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "**Vulnerability CVE-2022-32189**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.13, 1.18.5|[CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)|\n\nA too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41715",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: regexp/syntax: limit memory used by parsing regexps"
              },
              "fullDescription": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41715",
              "help": {
                "text": "Vulnerability CVE-2022-41715\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)\nPrograms which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "**Vulnerability CVE-2022-41715**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.7, 1.19.2|[CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)|\n\nPrograms which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41716",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously se ..."
              },
              "fullDescription": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \u0026#34;A=B\\x00C=D\u0026#34; sets the variables \u0026#34;A=B\u0026#34; and \u0026#34;C=D\u0026#34;."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41716",
              "help": {
                "text": "Vulnerability CVE-2022-41716\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.8, 1.19.3\nLink: [CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)\nDue to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "**Vulnerability CVE-2022-41716**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.8, 1.19.3|[CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)|\n\nDue to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\"."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41720",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: os, net/http: avoid escapes from os.DirFS and http.Dir on Windows"
              },
              "fullDescription": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\u0026#34;C:/tmp\u0026#34;).Open(\u0026#34;COM1\u0026#34;) opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\u0026#34;\u0026#34;) has changed. Previously, an empty root was treated equivalently to \u0026#34;/\u0026#34;, so os.DirFS(\u0026#34;\u0026#34;).Open(\u0026#34;tmp\u0026#34;) would open the path \u0026#34;/tmp\u0026#34;. This now returns an error."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41720",
              "help": {
                "text": "Vulnerability CVE-2022-41720\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)\nOn Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "**Vulnerability CVE-2022-41720**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.9, 1.19.4|[CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)|\n\nOn Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41722",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: path/filepath: path-filepath filepath.Clean path traversal"
              },
              "fullDescription": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \u0026#34;a/../c:/b\u0026#34; into the valid path \u0026#34;c:\\b\u0026#34;. This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \u0026#34;.\\c:\\b\u0026#34;."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41722",
              "help": {
                "text": "Vulnerability CVE-2022-41722\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)\nA path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "**Vulnerability CVE-2022-41722**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)|\n\nA path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\"."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41724",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: large handshake records may cause panics"
              },
              "fullDescription": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u0026gt;= RequestClientCert)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41724",
              "help": {
                "text": "Vulnerability CVE-2022-41724\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)\nLarge handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "**Vulnerability CVE-2022-41724**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)|\n\nLarge handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41725",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, mime/multipart: denial of service from excessive resource consumption"
              },
              "fullDescription": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \u0026#34;up to maxMemory bytes +10MB (reserved for non-file parts) in memory\u0026#34;. File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type\u0026#39;s documentation states, \u0026#34;If stored on disk, the File\u0026#39;s underlying concrete type will be an *os.File.\u0026#34;. This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41725",
              "help": {
                "text": "Vulnerability CVE-2022-41725\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)\nA denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
                "markdown": "**Vulnerability CVE-2022-41725**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)|\n\nA denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24534",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, net/textproto: denial of service from excessive memory allocation"
              },
              "fullDescription": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24534",
              "help": {
                "text": "Vulnerability CVE-2023-24534\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)\nHTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "**Vulnerability CVE-2023-24534**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.8, 1.20.3|[CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)|\n\nHTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24536",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, net/textproto, mime/multipart: denial of service from excessive resource consumption"
              },
              "fullDescription": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24536",
              "help": {
                "text": "Vulnerability CVE-2023-24536\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)\nMultipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "**Vulnerability CVE-2023-24536**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.8, 1.20.3|[CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)|\n\nMultipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24537",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: go/parser: Infinite loop in parsing"
              },
              "fullDescription": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24537",
              "help": {
                "text": "Vulnerability CVE-2023-24537\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)\nCalling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "**Vulnerability CVE-2023-24537**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.8, 1.20.3|[CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)|\n\nCalling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24539",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper sanitization of CSS values"
              },
              "fullDescription": {
                "text": "Angle brackets (\u0026lt;\u0026gt;) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a \u0026#39;/\u0026#39; character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24539",
              "help": {
                "text": "Vulnerability CVE-2023-24539\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)\nAngle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "**Vulnerability CVE-2023-24539**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.9, 1.20.4|[CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)|\n\nAngle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29400",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of empty HTML attributes"
              },
              "fullDescription": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \u0026#34;attr={{.}}\u0026#34;) executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29400",
              "help": {
                "text": "Vulnerability CVE-2023-29400\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)\nTemplates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "**Vulnerability CVE-2023-29400**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.9, 1.20.4|[CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)|\n\nTemplates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29403",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: runtime: unexpected behavior of setuid/setgid binaries"
              },
              "fullDescription": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29403",
              "help": {
                "text": "Vulnerability CVE-2023-29403\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.10, 1.20.5\nLink: [CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)\nOn Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "**Vulnerability CVE-2023-29403**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.10, 1.20.5|[CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)|\n\nOn Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45283",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as sp ..."
              },
              "fullDescription": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45283",
              "help": {
                "text": "Vulnerability CVE-2023-45283\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.20.11, 1.21.4, 1.20.12, 1.21.5\nLink: [CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)\nThe filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "**Vulnerability CVE-2023-45283**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.20.11, 1.21.4, 1.20.12, 1.21.5|[CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)|\n\nThe filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45287",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: Timing Side Channel attack in RSA based TLS key exchanges."
              },
              "fullDescription": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45287",
              "help": {
                "text": "Vulnerability CVE-2023-45287\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.20.0\nLink: [CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)\nBefore Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "**Vulnerability CVE-2023-45287**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.20.0|[CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)|\n\nBefore Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3114",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/elliptic: incorrect operations on the P-224 curve"
              },
              "fullDescription": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3114",
              "help": {
                "text": "Vulnerability CVE-2021-3114\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.14.14, 1.15.7\nLink: [CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)\nIn Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "**Vulnerability CVE-2021-3114**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.14.14, 1.15.7|[CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)|\n\nIn Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33197",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: ReverseProxy forwards connection headers if first one is empty"
              },
              "fullDescription": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33197",
              "help": {
                "text": "Vulnerability CVE-2021-33197\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)\nIn Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "**Vulnerability CVE-2021-33197**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.13, 1.16.5|[CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)|\n\nIn Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-34558",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: certificate of wrong type is causing TLS client to panic"
              },
              "fullDescription": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-34558",
              "help": {
                "text": "Vulnerability CVE-2021-34558\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.14, 1.16.6\nLink: [CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)\nThe crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "**Vulnerability CVE-2021-34558**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.14, 1.16.6|[CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)|\n\nThe crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-36221",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: panic due to racy read of persistConn after handler panic"
              },
              "fullDescription": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-36221",
              "help": {
                "text": "Vulnerability CVE-2021-36221\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.15, 1.16.7\nLink: [CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)\nGo before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "**Vulnerability CVE-2021-36221**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.15, 1.16.7|[CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)|\n\nGo before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-44717",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: syscall: don\u0026#39;t close fd 0 on ForkExec error"
              },
              "fullDescription": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44717",
              "help": {
                "text": "Vulnerability CVE-2021-44717\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)\nGo before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "**Vulnerability CVE-2021-44717**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.16.12, 1.17.5|[CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)|\n\nGo before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1705",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: improper sanitization of Transfer-Encoding header"
              },
              "fullDescription": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1705",
              "help": {
                "text": "Vulnerability CVE-2022-1705\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)\nAcceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "**Vulnerability CVE-2022-1705**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.12, 1.18.4|[CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)|\n\nAcceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1962",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: go/parser: stack exhaustion in all Parse* functions"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1962",
              "help": {
                "text": "Vulnerability CVE-2022-1962\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)\nUncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "**Vulnerability CVE-2022-1962**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.12, 1.18.4|[CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)|\n\nUncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32148",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: NewSingleHostReverseProxy - omit X-Forwarded-For not working"
              },
              "fullDescription": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32148",
              "help": {
                "text": "Vulnerability CVE-2022-32148\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)\nImproper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "**Vulnerability CVE-2022-32148**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.12, 1.18.4|[CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)|\n\nImproper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-24532",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/internal/nistec: specific unreduced P-256 scalars produce incorrect results"
              },
              "fullDescription": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24532",
              "help": {
                "text": "Vulnerability CVE-2023-24532\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.19.7, 1.20.2\nLink: [CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)\nThe ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "**Vulnerability CVE-2023-24532**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.19.7, 1.20.2|[CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)|\n\nThe ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29406",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: insufficient sanitization of Host header"
              },
              "fullDescription": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29406",
              "help": {
                "text": "Vulnerability CVE-2023-29406\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.19.11, 1.20.6\nLink: [CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)\nThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "**Vulnerability CVE-2023-29406**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.19.11, 1.20.6|[CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)|\n\nThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29409",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: slow verification of certificate chains containing large RSA keys"
              },
              "fullDescription": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u0026lt;= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29409",
              "help": {
                "text": "Vulnerability CVE-2023-29409\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.19.12, 1.20.7, 1.21.0-rc.4\nLink: [CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)\nExtremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "**Vulnerability CVE-2023-29409**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.19.12, 1.20.7, 1.21.0-rc.4|[CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)|\n\nExtremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39318",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of HTML-like comments within script contexts"
              },
              "fullDescription": {
                "text": "The html/template package does not properly handle HTML-like \u0026#34;\u0026#34; comment tokens, nor hashbang \u0026#34;#!\u0026#34; comment tokens, in \u0026lt;script\u0026gt; contexts. This may cause the template parser to improperly interpret the contents of \u0026lt;script\u0026gt; contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39318",
              "help": {
                "text": "Vulnerability CVE-2023-39318\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)\nThe html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "**Vulnerability CVE-2023-39318**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.8, 1.21.1|[CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)|\n\nThe html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39319",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of special tags within script contexts"
              },
              "fullDescription": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \u0026#34;\u0026lt;script\u0026#34;, \u0026#34;\u0026lt;!--\u0026#34;, and \u0026#34;\u0026lt;/script\u0026#34; within JS literals in \u0026lt;script\u0026gt; contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39319",
              "help": {
                "text": "Vulnerability CVE-2023-39319\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)\nThe html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "**Vulnerability CVE-2023-39319**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.8, 1.21.1|[CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)|\n\nThe html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39326",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/internal: Denial of Service (DoS) via Resource Consumption via HTTP requests"
              },
              "fullDescription": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39326",
              "help": {
                "text": "Vulnerability CVE-2023-39326\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.12, 1.21.5\nLink: [CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)\nA malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "**Vulnerability CVE-2023-39326**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.12, 1.21.5|[CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)|\n\nA malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45284",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved de ..."
              },
              "fullDescription": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \u0026#34;COM1 \u0026#34;, and reserved names \u0026#34;COM\u0026#34; and \u0026#34;LPT\u0026#34; followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45284",
              "help": {
                "text": "Vulnerability CVE-2023-45284\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.11, 1.21.4\nLink: [CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)\nOn Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "**Vulnerability CVE-2023-45284**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.11, 1.21.4|[CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)|\n\nOn Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45289",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/cookiejar: incorrect forwarding of sensitive headers and cookies on HTTP redirect"
              },
              "fullDescription": {
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \u0026#34;Authorization\u0026#34; or \u0026#34;Cookie\u0026#34;. For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45289",
              "help": {
                "text": "Vulnerability CVE-2023-45289\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)\nWhen following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
                "markdown": "**Vulnerability CVE-2023-45289**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)|\n\nWhen following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45290",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: memory exhaustion in Request.ParseMultipartForm"
              },
              "fullDescription": {
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45290",
              "help": {
                "text": "Vulnerability CVE-2023-45290\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)\nWhen parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
                "markdown": "**Vulnerability CVE-2023-45290**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)|\n\nWhen parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24783",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/x509: Verify panics on certificates with an unknown public key algorithm"
              },
              "fullDescription": {
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24783",
              "help": {
                "text": "Vulnerability CVE-2024-24783\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)\nVerifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
                "markdown": "**Vulnerability CVE-2024-24783**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)|\n\nVerifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24784",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/mail: comments in display names are incorrectly handled"
              },
              "fullDescription": {
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24784",
              "help": {
                "text": "Vulnerability CVE-2024-24784\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)\nThe ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
                "markdown": "**Vulnerability CVE-2024-24784**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)|\n\nThe ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24785",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: errors returned from MarshalJSON methods may break template escaping"
              },
              "fullDescription": {
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24785",
              "help": {
                "text": "Vulnerability CVE-2024-24785\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)\nIf errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
                "markdown": "**Vulnerability CVE-2024-24785**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)|\n\nIf errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-30629",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: session tickets lack random ticket_age_add"
              },
              "fullDescription": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30629",
              "help": {
                "text": "Vulnerability CVE-2022-30629\nSeverity: LOW\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)\nNon-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "**Vulnerability CVE-2022-30629**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|stdlib|1.17.11, 1.18.3|[CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)|\n\nNon-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-24789",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The archive/zip package\u0026#39;s handling of certain types of invalid zip fil ..."
              },
              "fullDescription": {
                "text": "The archive/zip package\u0026#39;s handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24789",
              "help": {
                "text": "Vulnerability CVE-2024-24789\nSeverity: UNKNOWN\nPackage: stdlib\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)\nThe archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
                "markdown": "**Vulnerability CVE-2024-24789**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|stdlib|1.21.11, 1.22.4|[CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)|\n\nThe archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2024-24790",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as ex ..."
              },
              "fullDescription": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24790",
              "help": {
                "text": "Vulnerability CVE-2024-24790\nSeverity: UNKNOWN\nPackage: stdlib\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)\nThe various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
                "markdown": "**Vulnerability CVE-2024-24790**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|stdlib|1.21.11, 1.22.4|[CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)|\n\nThe various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            }
          ],
          "version": "0.52.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2019-18276",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Package: bash\nInstalled Version: 4.4.19-12.el8\nVulnerability CVE-2019-18276\nSeverity: LOW\nFixed Version: 4.4.19-14.el8\nLink: [CVE-2019-18276](https://avd.aquasec.com/nvd/cve-2019-18276)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: bash@4.4.19-12.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37920",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Package: ca-certificates\nInstalled Version: 2020.2.41-80.0.el8_2\nVulnerability CVE-2023-37920\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ca-certificates@2020.2.41-80.0.el8_2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4122",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: cryptsetup-libs\nInstalled Version: 2.3.3-2.el8\nVulnerability CVE-2021-4122\nSeverity: MEDIUM\nFixed Version: 2.3.3-4.el8_5.1\nLink: [CVE-2021-4122](https://avd.aquasec.com/nvd/cve-2021-4122)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: cryptsetup-libs@2.3.3-2.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33294",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Package: elfutils-libelf\nInstalled Version: 0.180-1.el8\nVulnerability CVE-2021-33294\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-33294](https://avd.aquasec.com/nvd/cve-2021-33294)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: elfutils-libelf@0.180-1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25260",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Package: elfutils-libelf\nInstalled Version: 0.180-1.el8\nVulnerability CVE-2024-25260\nSeverity: LOW\nFixed Version: \nLink: [CVE-2024-25260](https://avd.aquasec.com/nvd/cve-2024-25260)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: elfutils-libelf@0.180-1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4911",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4911\nSeverity: HIGH\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4911](https://avd.aquasec.com/nvd/cve-2023-4911)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2961",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-2961\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.1\nLink: [CVE-2024-2961](https://avd.aquasec.com/nvd/cve-2024-2961)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33599\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33599](https://avd.aquasec.com/nvd/cve-2024-33599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-25013",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-25013\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-25013](https://avd.aquasec.com/nvd/cve-2019-25013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9169",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-9169\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-9169](https://avd.aquasec.com/nvd/cve-2019-9169)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3326",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3326\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2021-3326](https://avd.aquasec.com/nvd/cve-2021-3326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35942",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-35942\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-35942](https://avd.aquasec.com/nvd/cve-2021-35942)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3999",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3999\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2021-3999](https://avd.aquasec.com/nvd/cve-2021-3999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23218",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23218\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23218](https://avd.aquasec.com/nvd/cve-2022-23218)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23219",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23219\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23219](https://avd.aquasec.com/nvd/cve-2022-23219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4527",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4527\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4527](https://avd.aquasec.com/nvd/cve-2023-4527)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4806",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4806\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4806](https://avd.aquasec.com/nvd/cve-2023-4806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4813",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4813\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4813](https://avd.aquasec.com/nvd/cve-2023-4813)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33600\nSeverity: MEDIUM\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33600](https://avd.aquasec.com/nvd/cve-2024-33600)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10228",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2016-10228\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2016-10228](https://avd.aquasec.com/nvd/cve-2016-10228)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27618",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2020-27618\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2020-27618](https://avd.aquasec.com/nvd/cve-2020-27618)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27645",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-27645\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-27645](https://avd.aquasec.com/nvd/cve-2021-27645)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33574",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-33574\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-33574](https://avd.aquasec.com/nvd/cve-2021-33574)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33601\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33601](https://avd.aquasec.com/nvd/cve-2024-33601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Package: glibc\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33602\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33602](https://avd.aquasec.com/nvd/cve-2024-33602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4911",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4911\nSeverity: HIGH\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4911](https://avd.aquasec.com/nvd/cve-2023-4911)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2961",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-2961\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.1\nLink: [CVE-2024-2961](https://avd.aquasec.com/nvd/cve-2024-2961)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33599\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33599](https://avd.aquasec.com/nvd/cve-2024-33599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-25013",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-25013\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-25013](https://avd.aquasec.com/nvd/cve-2019-25013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9169",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-9169\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-9169](https://avd.aquasec.com/nvd/cve-2019-9169)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3326",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3326\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2021-3326](https://avd.aquasec.com/nvd/cve-2021-3326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35942",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-35942\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-35942](https://avd.aquasec.com/nvd/cve-2021-35942)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3999",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3999\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2021-3999](https://avd.aquasec.com/nvd/cve-2021-3999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23218",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23218\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23218](https://avd.aquasec.com/nvd/cve-2022-23218)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23219",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23219\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23219](https://avd.aquasec.com/nvd/cve-2022-23219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4527",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4527\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4527](https://avd.aquasec.com/nvd/cve-2023-4527)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4806",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4806\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4806](https://avd.aquasec.com/nvd/cve-2023-4806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4813",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4813\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4813](https://avd.aquasec.com/nvd/cve-2023-4813)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33600\nSeverity: MEDIUM\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33600](https://avd.aquasec.com/nvd/cve-2024-33600)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10228",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2016-10228\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2016-10228](https://avd.aquasec.com/nvd/cve-2016-10228)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27618",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2020-27618\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2020-27618](https://avd.aquasec.com/nvd/cve-2020-27618)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27645",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-27645\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-27645](https://avd.aquasec.com/nvd/cve-2021-27645)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33574",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-33574\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-33574](https://avd.aquasec.com/nvd/cve-2021-33574)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33601\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33601](https://avd.aquasec.com/nvd/cve-2024-33601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Package: glibc-common\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33602\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33602](https://avd.aquasec.com/nvd/cve-2024-33602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-common@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4911",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4911\nSeverity: HIGH\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4911](https://avd.aquasec.com/nvd/cve-2023-4911)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2961",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-2961\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.1\nLink: [CVE-2024-2961](https://avd.aquasec.com/nvd/cve-2024-2961)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33599\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33599](https://avd.aquasec.com/nvd/cve-2024-33599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-25013",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-25013\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-25013](https://avd.aquasec.com/nvd/cve-2019-25013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9169",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-9169\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-9169](https://avd.aquasec.com/nvd/cve-2019-9169)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3326",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3326\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2021-3326](https://avd.aquasec.com/nvd/cve-2021-3326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35942",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-35942\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-35942](https://avd.aquasec.com/nvd/cve-2021-35942)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3999",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3999\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2021-3999](https://avd.aquasec.com/nvd/cve-2021-3999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23218",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23218\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23218](https://avd.aquasec.com/nvd/cve-2022-23218)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23219",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23219\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23219](https://avd.aquasec.com/nvd/cve-2022-23219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4527",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4527\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4527](https://avd.aquasec.com/nvd/cve-2023-4527)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4806",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4806\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4806](https://avd.aquasec.com/nvd/cve-2023-4806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4813",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4813\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4813](https://avd.aquasec.com/nvd/cve-2023-4813)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33600\nSeverity: MEDIUM\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33600](https://avd.aquasec.com/nvd/cve-2024-33600)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10228",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2016-10228\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2016-10228](https://avd.aquasec.com/nvd/cve-2016-10228)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27618",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2020-27618\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2020-27618](https://avd.aquasec.com/nvd/cve-2020-27618)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27645",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-27645\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-27645](https://avd.aquasec.com/nvd/cve-2021-27645)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33574",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-33574\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-33574](https://avd.aquasec.com/nvd/cve-2021-33574)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33601\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33601](https://avd.aquasec.com/nvd/cve-2024-33601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Package: glibc-langpack-en\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33602\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33602](https://avd.aquasec.com/nvd/cve-2024-33602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-langpack-en@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4911",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4911\nSeverity: HIGH\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4911](https://avd.aquasec.com/nvd/cve-2023-4911)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2961",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-2961\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.1\nLink: [CVE-2024-2961](https://avd.aquasec.com/nvd/cve-2024-2961)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33599\nSeverity: HIGH\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33599](https://avd.aquasec.com/nvd/cve-2024-33599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-25013",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-25013\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-25013](https://avd.aquasec.com/nvd/cve-2019-25013)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9169",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2019-9169\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2019-9169](https://avd.aquasec.com/nvd/cve-2019-9169)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3326",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3326\nSeverity: MEDIUM\nFixed Version: 2.28-151.el8\nLink: [CVE-2021-3326](https://avd.aquasec.com/nvd/cve-2021-3326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35942",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-35942\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-35942](https://avd.aquasec.com/nvd/cve-2021-35942)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3999",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-3999\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2021-3999](https://avd.aquasec.com/nvd/cve-2021-3999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23218",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23218\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23218](https://avd.aquasec.com/nvd/cve-2022-23218)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23219",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2022-23219\nSeverity: MEDIUM\nFixed Version: 2.28-164.el8_5.3\nLink: [CVE-2022-23219](https://avd.aquasec.com/nvd/cve-2022-23219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4527",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4527\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4527](https://avd.aquasec.com/nvd/cve-2023-4527)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4806",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4806\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4806](https://avd.aquasec.com/nvd/cve-2023-4806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4813",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2023-4813\nSeverity: MEDIUM\nFixed Version: 2.28-225.el8_8.6\nLink: [CVE-2023-4813](https://avd.aquasec.com/nvd/cve-2023-4813)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33600\nSeverity: MEDIUM\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33600](https://avd.aquasec.com/nvd/cve-2024-33600)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10228",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2016-10228\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2016-10228](https://avd.aquasec.com/nvd/cve-2016-10228)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27618",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2020-27618\nSeverity: LOW\nFixed Version: 2.28-151.el8\nLink: [CVE-2020-27618](https://avd.aquasec.com/nvd/cve-2020-27618)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27645",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-27645\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-27645](https://avd.aquasec.com/nvd/cve-2021-27645)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33574",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2021-33574\nSeverity: LOW\nFixed Version: 2.28-164.el8\nLink: [CVE-2021-33574](https://avd.aquasec.com/nvd/cve-2021-33574)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601",
          "ruleIndex": 23,
          "level": "note",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33601\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33601](https://avd.aquasec.com/nvd/cve-2024-33601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Package: glibc-minimal-langpack\nInstalled Version: 2.28-127.el8_3.2\nVulnerability CVE-2024-33602\nSeverity: LOW\nFixed Version: 2.28-251.el8_10.2\nLink: [CVE-2024-33602](https://avd.aquasec.com/nvd/cve-2024-33602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: glibc-minimal-langpack@2.28-127.el8_3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1271",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: gzip\nInstalled Version: 1.9-9.el8\nVulnerability CVE-2022-1271\nSeverity: HIGH\nFixed Version: 1.9-13.el8_5\nLink: [CVE-2022-1271](https://avd.aquasec.com/nvd/cve-2022-1271)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: gzip@1.9-9.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2603",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Package: libcap\nInstalled Version: 2.26-4.el8\nVulnerability CVE-2023-2603\nSeverity: MEDIUM\nFixed Version: 2.48-5.el8_8\nLink: [CVE-2023-2603](https://avd.aquasec.com/nvd/cve-2023-2603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libcap@2.26-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2602",
          "ruleIndex": 27,
          "level": "note",
          "message": {
            "text": "Package: libcap\nInstalled Version: 2.26-4.el8\nVulnerability CVE-2023-2602\nSeverity: LOW\nFixed Version: 2.48-5.el8_8\nLink: [CVE-2023-2602](https://avd.aquasec.com/nvd/cve-2023-2602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libcap@2.26-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42574",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Package: libgcc\nInstalled Version: 8.3.1-5.1.el8\nVulnerability CVE-2021-42574\nSeverity: MEDIUM\nFixed Version: 8.5.0-4.el8_5\nLink: [CVE-2021-42574](https://avd.aquasec.com/nvd/cve-2021-42574)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libgcc@8.3.1-5.1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42694",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "Package: libgcc\nInstalled Version: 8.3.1-5.1.el8\nVulnerability CVE-2021-42694\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2021-42694](https://avd.aquasec.com/nvd/cve-2021-42694)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libgcc@8.3.1-5.1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20657",
          "ruleIndex": 30,
          "level": "note",
          "message": {
            "text": "Package: libgcc\nInstalled Version: 8.3.1-5.1.el8\nVulnerability CVE-2018-20657\nSeverity: LOW\nFixed Version: \nLink: [CVE-2018-20657](https://avd.aquasec.com/nvd/cve-2018-20657)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libgcc@8.3.1-5.1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20673",
          "ruleIndex": 31,
          "level": "note",
          "message": {
            "text": "Package: libgcc\nInstalled Version: 8.3.1-5.1.el8\nVulnerability CVE-2018-20673\nSeverity: LOW\nFixed Version: 8.5.0-3.el8\nLink: [CVE-2018-20673](https://avd.aquasec.com/nvd/cve-2018-20673)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libgcc@8.3.1-5.1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14250",
          "ruleIndex": 32,
          "level": "note",
          "message": {
            "text": "Package: libgcc\nInstalled Version: 8.3.1-5.1.el8\nVulnerability CVE-2019-14250\nSeverity: LOW\nFixed Version: \nLink: [CVE-2019-14250](https://avd.aquasec.com/nvd/cve-2019-14250)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libgcc@8.3.1-5.1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27943",
          "ruleIndex": 33,
          "level": "note",
          "message": {
            "text": "Package: libgcc\nInstalled Version: 8.3.1-5.1.el8\nVulnerability CVE-2022-27943\nSeverity: LOW\nFixed Version: \nLink: [CVE-2022-27943](https://avd.aquasec.com/nvd/cve-2022-27943)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libgcc@8.3.1-5.1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-24032",
          "ruleIndex": 34,
          "level": "note",
          "message": {
            "text": "Package: libzstd\nInstalled Version: 1.4.4-1.el8\nVulnerability CVE-2021-24032\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-24032](https://avd.aquasec.com/nvd/cve-2021-24032)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libzstd@1.4.4-1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4899",
          "ruleIndex": 35,
          "level": "note",
          "message": {
            "text": "Package: libzstd\nInstalled Version: 1.4.4-1.el8\nVulnerability CVE-2022-4899\nSeverity: LOW\nFixed Version: \nLink: [CVE-2022-4899](https://avd.aquasec.com/nvd/cve-2022-4899)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: libzstd@1.4.4-1.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2019-17594\nSeverity: MEDIUM\nFixed Version: 6.1-9.20180224.el8\nLink: [CVE-2019-17594](https://avd.aquasec.com/nvd/cve-2019-17594)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2019-17595\nSeverity: MEDIUM\nFixed Version: 6.1-9.20180224.el8\nLink: [CVE-2019-17595](https://avd.aquasec.com/nvd/cve-2019-17595)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2023-29491\nSeverity: MEDIUM\nFixed Version: 6.1-9.20180224.el8_8.1\nLink: [CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19211",
          "ruleIndex": 39,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2018-19211\nSeverity: LOW\nFixed Version: \nLink: [CVE-2018-19211](https://avd.aquasec.com/nvd/cve-2018-19211)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19217",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2018-19217\nSeverity: LOW\nFixed Version: \nLink: [CVE-2018-19217](https://avd.aquasec.com/nvd/cve-2018-19217)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19185",
          "ruleIndex": 41,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19185\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19185](https://avd.aquasec.com/nvd/cve-2020-19185)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19186",
          "ruleIndex": 42,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19186\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19186](https://avd.aquasec.com/nvd/cve-2020-19186)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19187",
          "ruleIndex": 43,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19187\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19187](https://avd.aquasec.com/nvd/cve-2020-19187)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19188",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19188\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19188](https://avd.aquasec.com/nvd/cve-2020-19188)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19189",
          "ruleIndex": 45,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19189\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19189](https://avd.aquasec.com/nvd/cve-2020-19189)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19190",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19190\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19190](https://avd.aquasec.com/nvd/cve-2020-19190)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2021-39537\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-39537](https://avd.aquasec.com/nvd/cve-2021-39537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "Package: ncurses-base\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2023-50495\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-50495](https://avd.aquasec.com/nvd/cve-2023-50495)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-base@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2019-17594\nSeverity: MEDIUM\nFixed Version: 6.1-9.20180224.el8\nLink: [CVE-2019-17594](https://avd.aquasec.com/nvd/cve-2019-17594)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2019-17595\nSeverity: MEDIUM\nFixed Version: 6.1-9.20180224.el8\nLink: [CVE-2019-17595](https://avd.aquasec.com/nvd/cve-2019-17595)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2023-29491\nSeverity: MEDIUM\nFixed Version: 6.1-9.20180224.el8_8.1\nLink: [CVE-2023-29491](https://avd.aquasec.com/nvd/cve-2023-29491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19211",
          "ruleIndex": 39,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2018-19211\nSeverity: LOW\nFixed Version: \nLink: [CVE-2018-19211](https://avd.aquasec.com/nvd/cve-2018-19211)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19217",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2018-19217\nSeverity: LOW\nFixed Version: \nLink: [CVE-2018-19217](https://avd.aquasec.com/nvd/cve-2018-19217)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19185",
          "ruleIndex": 41,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19185\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19185](https://avd.aquasec.com/nvd/cve-2020-19185)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19186",
          "ruleIndex": 42,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19186\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19186](https://avd.aquasec.com/nvd/cve-2020-19186)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19187",
          "ruleIndex": 43,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19187\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19187](https://avd.aquasec.com/nvd/cve-2020-19187)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19188",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19188\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19188](https://avd.aquasec.com/nvd/cve-2020-19188)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19189",
          "ruleIndex": 45,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19189\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19189](https://avd.aquasec.com/nvd/cve-2020-19189)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-19190",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2020-19190\nSeverity: LOW\nFixed Version: \nLink: [CVE-2020-19190](https://avd.aquasec.com/nvd/cve-2020-19190)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2021-39537\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-39537](https://avd.aquasec.com/nvd/cve-2021-39537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50495",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.1-7.20180224.el8\nVulnerability CVE-2023-50495\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-50495](https://avd.aquasec.com/nvd/cve-2023-50495)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: ncurses-libs@6.1-7.20180224.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3449",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2021-3449\nSeverity: HIGH\nFixed Version: 1:1.1.1g-15.el8_3\nLink: [CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3450",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2021-3450\nSeverity: HIGH\nFixed Version: 1:1.1.1g-15.el8_3\nLink: [CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2022-0778\nSeverity: HIGH\nFixed Version: 1:1.1.1k-6.el8_5\nLink: [CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23840",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2021-23840\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-4.el8\nLink: [CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23841",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2021-23841\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-4.el8\nLink: [CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3712",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2021-3712\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-5.el8_5\nLink: [CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1292",
          "ruleIndex": 56,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2022-1292\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-7.el8_6\nLink: [CVE-2022-1292](https://avd.aquasec.com/nvd/cve-2022-1292)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2068",
          "ruleIndex": 57,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2022-2068\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-7.el8_6\nLink: [CVE-2022-2068](https://avd.aquasec.com/nvd/cve-2022-2068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097",
          "ruleIndex": 58,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-7.el8_6\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304",
          "ruleIndex": 59,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2022-4304](https://avd.aquasec.com/nvd/cve-2022-4304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2022-4450\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2022-4450](https://avd.aquasec.com/nvd/cve-2022-4450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-0215\nSeverity: MEDIUM\nFixed Version: 1:1.1.1k-9.el8_7\nLink: [CVE-2023-0215](https://avd.aquasec.com/nvd/cve-2023-0215)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464",
          "ruleIndex": 62,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-0464\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-0464](https://avd.aquasec.com/nvd/cve-2023-0464)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465",
          "ruleIndex": 63,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-0465\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-0465](https://avd.aquasec.com/nvd/cve-2023-0465)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0466",
          "ruleIndex": 64,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-0466\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-0466](https://avd.aquasec.com/nvd/cve-2023-0466)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650",
          "ruleIndex": 65,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-2650\nSeverity: LOW\nFixed Version: \nLink: [CVE-2023-2650](https://avd.aquasec.com/nvd/cve-2023-2650)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446",
          "ruleIndex": 66,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-3446\nSeverity: LOW\nFixed Version: 1:1.1.1k-12.el8_9\nLink: [CVE-2023-3446](https://avd.aquasec.com/nvd/cve-2023-3446)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817",
          "ruleIndex": 67,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-3817\nSeverity: LOW\nFixed Version: 1:1.1.1k-12.el8_9\nLink: [CVE-2023-3817](https://avd.aquasec.com/nvd/cve-2023-3817)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678",
          "ruleIndex": 68,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2023-5678\nSeverity: LOW\nFixed Version: 1:1.1.1k-12.el8_9\nLink: [CVE-2023-5678](https://avd.aquasec.com/nvd/cve-2023-5678)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727",
          "ruleIndex": 69,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2024-0727\nSeverity: LOW\nFixed Version: \nLink: [CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 70,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2024-2511\nSeverity: LOW\nFixed Version: \nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741",
          "ruleIndex": 71,
          "level": "note",
          "message": {
            "text": "Package: openssl-libs\nInstalled Version: 1:1.1.1g-12.el8_3\nVulnerability CVE-2024-4741\nSeverity: LOW\nFixed Version: \nLink: [CVE-2024-4741](https://avd.aquasec.com/nvd/cve-2024-4741)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: openssl-libs@1:1.1.1g-12.el8_3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29361",
          "ruleIndex": 72,
          "level": "warning",
          "message": {
            "text": "Package: p11-kit-trust\nInstalled Version: 0.23.14-5.el8_0\nVulnerability CVE-2020-29361\nSeverity: MEDIUM\nFixed Version: 0.23.22-1.el8\nLink: [CVE-2020-29361](https://avd.aquasec.com/nvd/cve-2020-29361)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: p11-kit-trust@0.23.14-5.el8_0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29362",
          "ruleIndex": 73,
          "level": "warning",
          "message": {
            "text": "Package: p11-kit-trust\nInstalled Version: 0.23.14-5.el8_0\nVulnerability CVE-2020-29362\nSeverity: MEDIUM\nFixed Version: 0.23.22-1.el8\nLink: [CVE-2020-29362](https://avd.aquasec.com/nvd/cve-2020-29362)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: p11-kit-trust@0.23.14-5.el8_0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29363",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: p11-kit-trust\nInstalled Version: 0.23.14-5.el8_0\nVulnerability CVE-2020-29363\nSeverity: MEDIUM\nFixed Version: 0.23.22-1.el8\nLink: [CVE-2020-29363](https://avd.aquasec.com/nvd/cve-2020-29363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: p11-kit-trust@0.23.14-5.el8_0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22365",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Package: pam\nInstalled Version: 1.3.1-11.el8\nVulnerability CVE-2024-22365\nSeverity: MEDIUM\nFixed Version: 1.3.1-33.el8\nLink: [CVE-2024-22365](https://avd.aquasec.com/nvd/cve-2024-22365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: pam@1.3.1-11.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20838",
          "ruleIndex": 76,
          "level": "note",
          "message": {
            "text": "Package: pcre\nInstalled Version: 8.42-4.el8\nVulnerability CVE-2019-20838\nSeverity: LOW\nFixed Version: 8.42-6.el8\nLink: [CVE-2019-20838](https://avd.aquasec.com/nvd/cve-2019-20838)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: pcre@8.42-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14155",
          "ruleIndex": 77,
          "level": "note",
          "message": {
            "text": "Package: pcre\nInstalled Version: 8.42-4.el8\nVulnerability CVE-2020-14155\nSeverity: LOW\nFixed Version: 8.42-6.el8\nLink: [CVE-2020-14155](https://avd.aquasec.com/nvd/cve-2020-14155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: pcre@8.42-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1586",
          "ruleIndex": 78,
          "level": "warning",
          "message": {
            "text": "Package: pcre2\nInstalled Version: 10.32-2.el8\nVulnerability CVE-2022-1586\nSeverity: MEDIUM\nFixed Version: 10.32-3.el8_6\nLink: [CVE-2022-1586](https://avd.aquasec.com/nvd/cve-2022-1586)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: pcre2@10.32-2.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41409",
          "ruleIndex": 79,
          "level": "note",
          "message": {
            "text": "Package: pcre2\nInstalled Version: 10.32-2.el8\nVulnerability CVE-2022-41409\nSeverity: LOW\nFixed Version: \nLink: [CVE-2022-41409](https://avd.aquasec.com/nvd/cve-2022-41409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: pcre2@10.32-2.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897",
          "ruleIndex": 80,
          "level": "warning",
          "message": {
            "text": "Package: platform-python-setuptools\nInstalled Version: 39.2.0-6.el8\nVulnerability CVE-2022-40897\nSeverity: MEDIUM\nFixed Version: 39.2.0-6.el8_7.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: platform-python-setuptools@39.2.0-6.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897",
          "ruleIndex": 80,
          "level": "warning",
          "message": {
            "text": "Package: python3-setuptools-wheel\nInstalled Version: 39.2.0-6.el8\nVulnerability CVE-2022-40897\nSeverity: MEDIUM\nFixed Version: 39.2.0-6.el8_7.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: python3-setuptools-wheel@39.2.0-6.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20271",
          "ruleIndex": 81,
          "level": "warning",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-20271\nSeverity: MEDIUM\nFixed Version: 4.14.3-14.el8_4\nLink: [CVE-2021-20271](https://avd.aquasec.com/nvd/cve-2021-20271)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3421",
          "ruleIndex": 82,
          "level": "warning",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-3421\nSeverity: MEDIUM\nFixed Version: 4.14.3-14.el8_4\nLink: [CVE-2021-3421](https://avd.aquasec.com/nvd/cve-2021-3421)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3521",
          "ruleIndex": 83,
          "level": "warning",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-3521\nSeverity: MEDIUM\nFixed Version: 4.14.3-19.el8_5.2\nLink: [CVE-2021-3521](https://avd.aquasec.com/nvd/cve-2021-3521)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35937",
          "ruleIndex": 84,
          "level": "warning",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-35937\nSeverity: MEDIUM\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35937](https://avd.aquasec.com/nvd/cve-2021-35937)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35938",
          "ruleIndex": 85,
          "level": "warning",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-35938\nSeverity: MEDIUM\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35938](https://avd.aquasec.com/nvd/cve-2021-35938)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35939",
          "ruleIndex": 86,
          "level": "warning",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-35939\nSeverity: MEDIUM\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35939](https://avd.aquasec.com/nvd/cve-2021-35939)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20266",
          "ruleIndex": 87,
          "level": "note",
          "message": {
            "text": "Package: rpm\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-20266\nSeverity: LOW\nFixed Version: 4.14.3-19.el8\nLink: [CVE-2021-20266](https://avd.aquasec.com/nvd/cve-2021-20266)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20271",
          "ruleIndex": 81,
          "level": "warning",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-20271\nSeverity: MEDIUM\nFixed Version: 4.14.3-14.el8_4\nLink: [CVE-2021-20271](https://avd.aquasec.com/nvd/cve-2021-20271)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3421",
          "ruleIndex": 82,
          "level": "warning",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-3421\nSeverity: MEDIUM\nFixed Version: 4.14.3-14.el8_4\nLink: [CVE-2021-3421](https://avd.aquasec.com/nvd/cve-2021-3421)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3521",
          "ruleIndex": 83,
          "level": "warning",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-3521\nSeverity: MEDIUM\nFixed Version: 4.14.3-19.el8_5.2\nLink: [CVE-2021-3521](https://avd.aquasec.com/nvd/cve-2021-3521)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35937",
          "ruleIndex": 84,
          "level": "warning",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-35937\nSeverity: MEDIUM\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35937](https://avd.aquasec.com/nvd/cve-2021-35937)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35938",
          "ruleIndex": 85,
          "level": "warning",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-35938\nSeverity: MEDIUM\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35938](https://avd.aquasec.com/nvd/cve-2021-35938)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35939",
          "ruleIndex": 86,
          "level": "warning",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-35939\nSeverity: MEDIUM\nFixed Version: 4.14.3-28.el8_9\nLink: [CVE-2021-35939](https://avd.aquasec.com/nvd/cve-2021-35939)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20266",
          "ruleIndex": 87,
          "level": "note",
          "message": {
            "text": "Package: rpm-libs\nInstalled Version: 4.14.3-4.el8\nVulnerability CVE-2021-20266\nSeverity: LOW\nFixed Version: 4.14.3-19.el8\nLink: [CVE-2021-20266](https://avd.aquasec.com/nvd/cve-2021-20266)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: rpm-libs@4.14.3-4.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4641",
          "ruleIndex": 88,
          "level": "note",
          "message": {
            "text": "Package: shadow-utils\nInstalled Version: 2:4.6-11.el8\nVulnerability CVE-2023-4641\nSeverity: LOW\nFixed Version: 2:4.6-19.el8\nLink: [CVE-2023-4641](https://avd.aquasec.com/nvd/cve-2023-4641)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: shadow-utils@2:4.6-11.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33910",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2021-33910\nSeverity: HIGH\nFixed Version: 239-45.el8_4.2\nLink: [CVE-2021-33910](https://avd.aquasec.com/nvd/cve-2021-33910)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2526",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2022-2526\nSeverity: HIGH\nFixed Version: 239-58.el8_6.4\nLink: [CVE-2022-2526](https://avd.aquasec.com/nvd/cve-2022-2526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20839",
          "ruleIndex": 91,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2018-20839\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2018-20839](https://avd.aquasec.com/nvd/cve-2018-20839)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3842",
          "ruleIndex": 92,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2019-3842\nSeverity: MEDIUM\nFixed Version: 239-45.el8\nLink: [CVE-2019-3842](https://avd.aquasec.com/nvd/cve-2019-3842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13776",
          "ruleIndex": 93,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2020-13776\nSeverity: MEDIUM\nFixed Version: 239-45.el8\nLink: [CVE-2020-13776](https://avd.aquasec.com/nvd/cve-2020-13776)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3821",
          "ruleIndex": 94,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2022-3821\nSeverity: MEDIUM\nFixed Version: 239-68.el8_7.1\nLink: [CVE-2022-3821](https://avd.aquasec.com/nvd/cve-2022-3821)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4415",
          "ruleIndex": 95,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2022-4415\nSeverity: MEDIUM\nFixed Version: 239-68.el8_7.4\nLink: [CVE-2022-4415](https://avd.aquasec.com/nvd/cve-2022-4415)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26604",
          "ruleIndex": 96,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2023-26604\nSeverity: MEDIUM\nFixed Version: 239-74.el8_8.2\nLink: [CVE-2023-26604](https://avd.aquasec.com/nvd/cve-2023-26604)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7008",
          "ruleIndex": 97,
          "level": "warning",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2023-7008\nSeverity: MEDIUM\nFixed Version: 239-82.el8\nLink: [CVE-2023-7008](https://avd.aquasec.com/nvd/cve-2023-7008)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3997",
          "ruleIndex": 98,
          "level": "note",
          "message": {
            "text": "Package: systemd-libs\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2021-3997\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-3997](https://avd.aquasec.com/nvd/cve-2021-3997)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-libs@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33910",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2021-33910\nSeverity: HIGH\nFixed Version: 239-45.el8_4.2\nLink: [CVE-2021-33910](https://avd.aquasec.com/nvd/cve-2021-33910)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2526",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2022-2526\nSeverity: HIGH\nFixed Version: 239-58.el8_6.4\nLink: [CVE-2022-2526](https://avd.aquasec.com/nvd/cve-2022-2526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20839",
          "ruleIndex": 91,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2018-20839\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2018-20839](https://avd.aquasec.com/nvd/cve-2018-20839)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3842",
          "ruleIndex": 92,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2019-3842\nSeverity: MEDIUM\nFixed Version: 239-45.el8\nLink: [CVE-2019-3842](https://avd.aquasec.com/nvd/cve-2019-3842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13776",
          "ruleIndex": 93,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2020-13776\nSeverity: MEDIUM\nFixed Version: 239-45.el8\nLink: [CVE-2020-13776](https://avd.aquasec.com/nvd/cve-2020-13776)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3821",
          "ruleIndex": 94,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2022-3821\nSeverity: MEDIUM\nFixed Version: 239-68.el8_7.1\nLink: [CVE-2022-3821](https://avd.aquasec.com/nvd/cve-2022-3821)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4415",
          "ruleIndex": 95,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2022-4415\nSeverity: MEDIUM\nFixed Version: 239-68.el8_7.4\nLink: [CVE-2022-4415](https://avd.aquasec.com/nvd/cve-2022-4415)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26604",
          "ruleIndex": 96,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2023-26604\nSeverity: MEDIUM\nFixed Version: 239-74.el8_8.2\nLink: [CVE-2023-26604](https://avd.aquasec.com/nvd/cve-2023-26604)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7008",
          "ruleIndex": 97,
          "level": "warning",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2023-7008\nSeverity: MEDIUM\nFixed Version: 239-82.el8\nLink: [CVE-2023-7008](https://avd.aquasec.com/nvd/cve-2023-7008)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3997",
          "ruleIndex": 98,
          "level": "note",
          "message": {
            "text": "Package: systemd-pam\nInstalled Version: 239-41.el8_3.1\nVulnerability CVE-2021-3997\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-3997](https://avd.aquasec.com/nvd/cve-2021-3997)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: systemd-pam@239-41.el8_3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1271",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: xz-libs\nInstalled Version: 5.2.4-3.el8\nVulnerability CVE-2022-1271\nSeverity: HIGH\nFixed Version: 5.2.4-4.el8_6\nLink: [CVE-2022-1271](https://avd.aquasec.com/nvd/cve-2022-1271)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: xz-libs@5.2.4-3.el8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25032",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "Package: zlib\nInstalled Version: 1.2.11-16.el8_2\nVulnerability CVE-2018-25032\nSeverity: HIGH\nFixed Version: 1.2.11-18.el8_5\nLink: [CVE-2018-25032](https://avd.aquasec.com/nvd/cve-2018-25032)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: zlib@1.2.11-16.el8_2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434",
          "ruleIndex": 100,
          "level": "warning",
          "message": {
            "text": "Package: zlib\nInstalled Version: 1.2.11-16.el8_2\nVulnerability CVE-2022-37434\nSeverity: MEDIUM\nFixed Version: 1.2.11-19.el8_6\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rancher/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "rancher/calico-node: zlib@1.2.11-16.el8_2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-26160",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "Package: github.com/dgrijalva/jwt-go\nInstalled Version: v3.2.0+incompatible\nVulnerability CVE-2020-26160\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2020-26160](https://avd.aquasec.com/nvd/cve-2020-26160)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: github.com/dgrijalva/jwt-go@v3.2.0+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3121",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "Package: github.com/gogo/protobuf\nInstalled Version: v1.3.1\nVulnerability CVE-2021-3121\nSeverity: HIGH\nFixed Version: 1.3.2\nLink: [CVE-2021-3121](https://avd.aquasec.com/nvd/cve-2021-3121)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: github.com/gogo/protobuf@v1.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21698",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "Package: github.com/prometheus/client_golang\nInstalled Version: v1.0.0\nVulnerability CVE-2022-21698\nSeverity: HIGH\nFixed Version: 1.11.1\nLink: [CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: github.com/prometheus/client_golang@v1.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15114",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Package: go.etcd.io/etcd\nInstalled Version: v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b\nVulnerability CVE-2020-15114\nSeverity: HIGH\nFixed Version: 3.4.10, 3.3.23\nLink: [CVE-2020-15114](https://avd.aquasec.com/nvd/cve-2020-15114)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: go.etcd.io/etcd@v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1099",
          "ruleIndex": 105,
          "level": "warning",
          "message": {
            "text": "Package: go.etcd.io/etcd\nInstalled Version: v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b\nVulnerability CVE-2018-1099\nSeverity: MEDIUM\nFixed Version: 3.4.0\nLink: [CVE-2018-1099](https://avd.aquasec.com/nvd/cve-2018-1099)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: go.etcd.io/etcd@v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15136",
          "ruleIndex": 106,
          "level": "warning",
          "message": {
            "text": "Package: go.etcd.io/etcd\nInstalled Version: v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b\nVulnerability CVE-2020-15136\nSeverity: MEDIUM\nFixed Version: 3.4.10, 3.3.23\nLink: [CVE-2020-15136](https://avd.aquasec.com/nvd/cve-2020-15136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: go.etcd.io/etcd@v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-j86v-2vjr-fg8f",
          "ruleIndex": 107,
          "level": "warning",
          "message": {
            "text": "Package: go.etcd.io/etcd\nInstalled Version: v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b\nVulnerability GHSA-j86v-2vjr-fg8f\nSeverity: MEDIUM\nFixed Version: 3.4.10, 3.3.23\nLink: [GHSA-j86v-2vjr-fg8f](https://github.com/advisories/GHSA-j86v-2vjr-fg8f)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: go.etcd.io/etcd@v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-pm3m-32r3-7mfh",
          "ruleIndex": 108,
          "level": "note",
          "message": {
            "text": "Package: go.etcd.io/etcd\nInstalled Version: v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b\nVulnerability GHSA-pm3m-32r3-7mfh\nSeverity: LOW\nFixed Version: 3.4.10, 3.3.23\nLink: [GHSA-pm3m-32r3-7mfh](https://github.com/advisories/GHSA-pm3m-32r3-7mfh)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: go.etcd.io/etcd@v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-vjg6-93fv-qv64",
          "ruleIndex": 109,
          "level": "note",
          "message": {
            "text": "Package: go.etcd.io/etcd\nInstalled Version: v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b\nVulnerability GHSA-vjg6-93fv-qv64\nSeverity: LOW\nFixed Version: 3.4.10, 3.3.23\nLink: [GHSA-vjg6-93fv-qv64](https://github.com/advisories/GHSA-vjg6-93fv-qv64)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: go.etcd.io/etcd@v0.5.0-alpha.5.0.20201125193152-8a03d2e9614b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29652",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20200622213623-75b288015ac9\nVulnerability CVE-2020-29652\nSeverity: HIGH\nFixed Version: 0.0.0-20201216223049-8b5274cf687f\nLink: [CVE-2020-29652](https://avd.aquasec.com/nvd/cve-2020-29652)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/crypto@v0.0.0-20200622213623-75b288015ac9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43565",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20200622213623-75b288015ac9\nVulnerability CVE-2021-43565\nSeverity: HIGH\nFixed Version: 0.0.0-20211202192323-5770296d904e\nLink: [CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/crypto@v0.0.0-20200622213623-75b288015ac9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27191",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20200622213623-75b288015ac9\nVulnerability CVE-2022-27191\nSeverity: HIGH\nFixed Version: 0.0.0-20220314234659-1baeb1ce4c0b\nLink: [CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/crypto@v0.0.0-20200622213623-75b288015ac9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 113,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20200622213623-75b288015ac9\nVulnerability CVE-2023-48795\nSeverity: MEDIUM\nFixed Version: 0.17.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/crypto@v0.0.0-20200622213623-75b288015ac9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33194",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2021-33194\nSeverity: HIGH\nFixed Version: 0.0.0-20210520170846-37e1c6afe023\nLink: [CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 0.0.0-20220906165146-f3363e06e74c\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 0.7.0\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 0.17.0\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525",
          "ruleIndex": 118,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2021-31525\nSeverity: MEDIUM\nFixed Version: 0.0.0-20210428140749-89ef3d95e781\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 119,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 0.4.0\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978",
          "ruleIndex": 120,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2023-3978\nSeverity: MEDIUM\nFixed Version: 0.13.0\nLink: [CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2023-44487\nSeverity: MEDIUM\nFixed Version: 0.17.0\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20201110031124-69a78807bb2b\nVulnerability CVE-2023-45288\nSeverity: MEDIUM\nFixed Version: 0.23.0\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/net@v0.0.0-20201110031124-69a78807bb2b"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 123,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/sys\nInstalled Version: v0.0.0-20201112073958-5cba982894dd\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 0.0.0-20220412211240-33da011f77ad\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/sys@v0.0.0-20201112073958-5cba982894dd"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38561",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/text\nInstalled Version: v0.3.3\nVulnerability CVE-2021-38561\nSeverity: HIGH\nFixed Version: 0.3.7\nLink: [CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/text@v0.3.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32149",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/text\nInstalled Version: v0.3.3\nVulnerability CVE-2022-32149\nSeverity: HIGH\nFixed Version: 0.3.8\nLink: [CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: golang.org/x/text@v0.3.3"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-m425-mq94-257g",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "Package: google.golang.org/grpc\nInstalled Version: v1.27.0\nVulnerability GHSA-m425-mq94-257g\nSeverity: HIGH\nFixed Version: 1.56.3, 1.57.1, 1.58.3\nLink: [GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: google.golang.org/grpc@v1.27.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "Package: google.golang.org/grpc\nInstalled Version: v1.27.0\nVulnerability CVE-2023-44487\nSeverity: MEDIUM\nFixed Version: 1.58.3, 1.57.1, 1.56.3\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: google.golang.org/grpc@v1.27.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 127,
          "level": "warning",
          "message": {
            "text": "Package: google.golang.org/protobuf\nInstalled Version: v1.23.0\nVulnerability CVE-2024-24786\nSeverity: MEDIUM\nFixed Version: 1.33.0\nLink: [CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: google.golang.org/protobuf@v1.23.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8565",
          "ruleIndex": 128,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/client-go\nInstalled Version: v0.18.12\nVulnerability CVE-2020-8565\nSeverity: MEDIUM\nFixed Version: 0.19.6, 0.20.0-alpha.2, 0.18.14, 0.17.16\nLink: [CVE-2020-8565](https://avd.aquasec.com/nvd/cve-2020-8565)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/client-go@v0.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25741",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2021-25741\nSeverity: HIGH\nFixed Version: 1.19.15, 1.20.11, 1.21.5, 1.22.2\nLink: [CVE-2021-25741](https://avd.aquasec.com/nvd/cve-2021-25741)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3676",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2023-3676\nSeverity: HIGH\nFixed Version: 1.28.1, 1.27.5, 1.26.8, 1.25.13, 1.24.17\nLink: [CVE-2023-3676](https://avd.aquasec.com/nvd/cve-2023-3676)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3955",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2023-3955\nSeverity: HIGH\nFixed Version: 1.28.1, 1.27.5, 1.26.8, 1.25.13, 1.24.17\nLink: [CVE-2023-3955](https://avd.aquasec.com/nvd/cve-2023-3955)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5528",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2023-5528\nSeverity: HIGH\nFixed Version: 1.28.4, 1.27.8, 1.26.11, 1.25.16\nLink: [CVE-2023-5528](https://avd.aquasec.com/nvd/cve-2023-5528)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8554",
          "ruleIndex": 133,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2020-8554\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2020-8554](https://avd.aquasec.com/nvd/cve-2020-8554)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8561",
          "ruleIndex": 134,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2020-8561\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2020-8561](https://avd.aquasec.com/nvd/cve-2020-8561)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8564",
          "ruleIndex": 135,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2020-8564\nSeverity: MEDIUM\nFixed Version: 1.20.0-alpha.1\nLink: [CVE-2020-8564](https://avd.aquasec.com/nvd/cve-2020-8564)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8565",
          "ruleIndex": 128,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2020-8565\nSeverity: MEDIUM\nFixed Version: 1.20.0-alpha.2\nLink: [CVE-2020-8565](https://avd.aquasec.com/nvd/cve-2020-8565)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25735",
          "ruleIndex": 136,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2021-25735\nSeverity: MEDIUM\nFixed Version: 1.20.6, 1.19.10, 1.18.18\nLink: [CVE-2021-25735](https://avd.aquasec.com/nvd/cve-2021-25735)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25736",
          "ruleIndex": 137,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2021-25736\nSeverity: MEDIUM\nFixed Version: 1.21\nLink: [CVE-2021-25736](https://avd.aquasec.com/nvd/cve-2021-25736)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25737",
          "ruleIndex": 138,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2021-25737\nSeverity: MEDIUM\nFixed Version: 1.18.19, 1.19.11, 1.20.7, 1.21.1\nLink: [CVE-2021-25737](https://avd.aquasec.com/nvd/cve-2021-25737)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2431",
          "ruleIndex": 139,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2023-2431\nSeverity: MEDIUM\nFixed Version: 1.24.14, 1.25.10, 1.26.5, 1.27.2\nLink: [CVE-2023-2431](https://avd.aquasec.com/nvd/cve-2023-2431)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2727",
          "ruleIndex": 140,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2023-2727\nSeverity: MEDIUM\nFixed Version: 1.27.3, 1.26.6, 1.25.11, 1.24.15\nLink: [CVE-2023-2727](https://avd.aquasec.com/nvd/cve-2023-2727)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2728",
          "ruleIndex": 141,
          "level": "warning",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2023-2728\nSeverity: MEDIUM\nFixed Version: 1.27.3, 1.26.6, 1.25.11, 1.24.15\nLink: [CVE-2023-2728](https://avd.aquasec.com/nvd/cve-2023-2728)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8562",
          "ruleIndex": 142,
          "level": "note",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2020-8562\nSeverity: LOW\nFixed Version: 1.21.1, 1.20.7, 1.19.11, 1.18.19\nLink: [CVE-2020-8562](https://avd.aquasec.com/nvd/cve-2020-8562)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25740",
          "ruleIndex": 143,
          "level": "note",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2021-25740\nSeverity: LOW\nFixed Version: \nLink: [CVE-2021-25740](https://avd.aquasec.com/nvd/cve-2021-25740)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25743",
          "ruleIndex": 144,
          "level": "note",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2021-25743\nSeverity: LOW\nFixed Version: 1.26.0-alpha.3\nLink: [CVE-2021-25743](https://avd.aquasec.com/nvd/cve-2021-25743)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3177",
          "ruleIndex": 145,
          "level": "note",
          "message": {
            "text": "Package: k8s.io/kubernetes\nInstalled Version: v1.18.12\nVulnerability CVE-2024-3177\nSeverity: LOW\nFixed Version: 1.27.13, 1.29.4, 1.28.9\nLink: [CVE-2024-3177](https://avd.aquasec.com/nvd/cve-2024-3177)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: k8s.io/kubernetes@v1.18.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806",
          "ruleIndex": 146,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-23806\nSeverity: CRITICAL\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 147,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24538\nSeverity: CRITICAL\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 148,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24540\nSeverity: CRITICAL\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28362",
          "ruleIndex": 149,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2020-28362\nSeverity: HIGH\nFixed Version: 1.14.12, 1.15.5\nLink: [CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918",
          "ruleIndex": 150,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-27918\nSeverity: HIGH\nFixed Version: 1.15.9, 1.16.1\nLink: [CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195",
          "ruleIndex": 151,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-33195\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196",
          "ruleIndex": 152,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-33196\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198",
          "ruleIndex": 153,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-33198\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293",
          "ruleIndex": 154,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-39293\nSeverity: HIGH\nFixed Version: 1.16.8, 1.17.1\nLink: [CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771",
          "ruleIndex": 155,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-41771\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772",
          "ruleIndex": 156,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-41772\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44716",
          "ruleIndex": 157,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-44716\nSeverity: HIGH\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772",
          "ruleIndex": 158,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-23772\nSeverity: HIGH\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675",
          "ruleIndex": 159,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-24675\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921",
          "ruleIndex": 160,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-24921\nSeverity: HIGH\nFixed Version: 1.16.15, 1.17.8\nLink: [CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 1.18.6, 1.19.1\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131",
          "ruleIndex": 161,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-28131\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327",
          "ruleIndex": 162,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-28327\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879",
          "ruleIndex": 163,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-2879\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880",
          "ruleIndex": 164,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-2880\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804",
          "ruleIndex": 165,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-29804\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580",
          "ruleIndex": 166,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30580\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630",
          "ruleIndex": 167,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30630\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631",
          "ruleIndex": 168,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30631\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632",
          "ruleIndex": 169,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30632\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633",
          "ruleIndex": 170,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30633\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634",
          "ruleIndex": 171,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30634\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635",
          "ruleIndex": 172,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30635\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189",
          "ruleIndex": 173,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-32189\nSeverity: HIGH\nFixed Version: 1.17.13, 1.18.5\nLink: [CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715",
          "ruleIndex": 174,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41715\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716",
          "ruleIndex": 175,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41716\nSeverity: HIGH\nFixed Version: 1.18.8, 1.19.3\nLink: [CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720",
          "ruleIndex": 176,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41720\nSeverity: HIGH\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722",
          "ruleIndex": 177,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41722\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724",
          "ruleIndex": 178,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41724\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725",
          "ruleIndex": 179,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41725\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 180,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24534\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 181,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24536\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 182,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24537\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 183,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24539\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 184,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-29400\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 185,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-29403\nSeverity: HIGH\nFixed Version: 1.19.10, 1.20.5\nLink: [CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 1.20.10, 1.21.3\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 186,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-45283\nSeverity: HIGH\nFixed Version: 1.20.11, 1.21.4, 1.20.12, 1.21.5\nLink: [CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 187,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-45287\nSeverity: HIGH\nFixed Version: 1.20.0\nLink: [CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-45288\nSeverity: HIGH\nFixed Version: 1.21.9, 1.22.2\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114",
          "ruleIndex": 188,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-3114\nSeverity: MEDIUM\nFixed Version: 1.14.14, 1.15.7\nLink: [CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525",
          "ruleIndex": 118,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-31525\nSeverity: MEDIUM\nFixed Version: 1.15.12, 1.16.4\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197",
          "ruleIndex": 189,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-33197\nSeverity: MEDIUM\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558",
          "ruleIndex": 190,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-34558\nSeverity: MEDIUM\nFixed Version: 1.15.14, 1.16.6\nLink: [CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221",
          "ruleIndex": 191,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-36221\nSeverity: MEDIUM\nFixed Version: 1.15.15, 1.16.7\nLink: [CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717",
          "ruleIndex": 192,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2021-44717\nSeverity: MEDIUM\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705",
          "ruleIndex": 193,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-1705\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962",
          "ruleIndex": 194,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-1962\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 123,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 1.17.10, 1.18.2\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148",
          "ruleIndex": 195,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-32148\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 119,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532",
          "ruleIndex": 196,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-24532\nSeverity: MEDIUM\nFixed Version: 1.19.7, 1.20.2\nLink: [CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 197,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-29406\nSeverity: MEDIUM\nFixed Version: 1.19.11, 1.20.6\nLink: [CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 198,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-29409\nSeverity: MEDIUM\nFixed Version: 1.19.12, 1.20.7, 1.21.0-rc.4\nLink: [CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 199,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-39318\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 200,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-39319\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 201,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-39326\nSeverity: MEDIUM\nFixed Version: 1.20.12, 1.21.5\nLink: [CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 202,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-45284\nSeverity: MEDIUM\nFixed Version: 1.20.11, 1.21.4\nLink: [CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 203,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-45289\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 204,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2023-45290\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 205,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2024-24783\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 206,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2024-24784\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 207,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2024-24785\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629",
          "ruleIndex": 208,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2022-30629\nSeverity: LOW\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 209,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2024-24789\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 210,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.15.2\nVulnerability CVE-2024-24790\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/bin/calico-node",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/bin/calico-node: stdlib@1.15.2"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageName": "rancher/calico-node:v3.18.1-amd64",
        "repoDigests": [
          "rancher/calico-node@sha256:0a02d75339eaca89fcca3a8f39b69afba2cff13964c6d3a6a470e508ab4b43e4"
        ],
        "repoTags": [
          "rancher/calico-node:v3.18.1-amd64"
        ]
      }
    }
  ]
}