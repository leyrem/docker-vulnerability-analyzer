{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 1550
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGSERVER-6246584",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/apiserver/pkg/server"
              },
              "fullDescription": {
                "text": "(CVE-2023-32192) github.com/rancher/apiserver/pkg/server@v0.0.0-20240503193545-2e1b0ddd9791"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to the API Server's public API endpoint handling of user input. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into the URL, which then gets rendered and executed on the page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4df268e250f625fa323349062636496e0aeff4e4)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4e102cf0d07b1af3d10d82c3e5a751a869b8a6c7)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4fd7d821d952510bfe38c9d4a3e2a65157f50525)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/69b3c2b56f3fa5a421889c533dada8cd08783cda)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/97a10a30200cb851afd8ee85ee6b2295c4b6e5ee)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/a3b9e3721c1b558ee63aec9594e37c223a5c8437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGURLBUILDER-6246585",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/apiserver/pkg/urlbuilder"
              },
              "fullDescription": {
                "text": "(CVE-2023-32192) github.com/rancher/apiserver/pkg/urlbuilder@v0.0.0-20240503193545-2e1b0ddd9791"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to the API Server's public API endpoint handling of user input. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into the URL, which then gets rendered and executed on the page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4df268e250f625fa323349062636496e0aeff4e4)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4e102cf0d07b1af3d10d82c3e5a751a869b8a6c7)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4fd7d821d952510bfe38c9d4a3e2a65157f50525)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/69b3c2b56f3fa5a421889c533dada8cd08783cda)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/97a10a30200cb851afd8ee85ee6b2295c4b6e5ee)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/a3b9e3721c1b558ee63aec9594e37c223a5c8437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGWRITER-6246587",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/apiserver/pkg/writer"
              },
              "fullDescription": {
                "text": "(CVE-2023-32192) github.com/rancher/apiserver/pkg/writer@v0.0.0-20240503193545-2e1b0ddd9791"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to the API Server's public API endpoint handling of user input. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into the URL, which then gets rendered and executed on the page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4df268e250f625fa323349062636496e0aeff4e4)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4e102cf0d07b1af3d10d82c3e5a751a869b8a6c7)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4fd7d821d952510bfe38c9d4a3e2a65157f50525)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/69b3c2b56f3fa5a421889c533dada8cd08783cda)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/97a10a30200cb851afd8ee85ee6b2295c4b6e5ee)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/a3b9e3721c1b558ee63aec9594e37c223a5c8437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANAPI-6245762",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/norman/api"
              },
              "fullDescription": {
                "text": "(CVE-2023-32193) github.com/rancher/norman/api@v0.0.0-20240503193601-9f5f6586bb5b"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/rancher/norman/api](https://pkg.go.dev/github.com/rancher/norman/api) is an API framework for Building Rancher Style APIs backed by K8s CustomResources and their controllers.\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in the public API endpoint. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into user input that is then rendered in the UI. This includes crafting a malicious URL that gets rendered into a script executed on a page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/norman/commit/3bb70b772b52297feac64f5fdeb1b13c06c37e39)\n- [GitHub Commit](https://github.com/rancher/norman/commit/7b2b467995e6dfab6d4a5dee8dffc15033ae8269)\n- [GitHub Commit](https://github.com/rancher/norman/commit/a6a6cf5696088c32002953d36b75bdcc84f2399e)\n- [GitHub Commit](https://github.com/rancher/norman/commit/bd13c653293b9b5e0b37e8a6ccd1c3277f4623ed)\n- [GitHub Commit](https://github.com/rancher/norman/commit/cb54924f25c7666511a913cd41834299ef22dba4)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANURLBUILDER-6245763",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/norman/urlbuilder"
              },
              "fullDescription": {
                "text": "(CVE-2023-32193) github.com/rancher/norman/urlbuilder@v0.0.0-20240503193601-9f5f6586bb5b"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in the public API endpoint. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into user input that is then rendered in the UI. This includes crafting a malicious URL that gets rendered into a script executed on a page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/norman/commit/3bb70b772b52297feac64f5fdeb1b13c06c37e39)\n- [GitHub Commit](https://github.com/rancher/norman/commit/7b2b467995e6dfab6d4a5dee8dffc15033ae8269)\n- [GitHub Commit](https://github.com/rancher/norman/commit/a6a6cf5696088c32002953d36b75bdcc84f2399e)\n- [GitHub Commit](https://github.com/rancher/norman/commit/bd13c653293b9b5e0b37e8a6ccd1c3277f4623ed)\n- [GitHub Commit](https://github.com/rancher/norman/commit/cb54924f25c7666511a913cd41834299ef22dba4)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGSERVER-6246584",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/apiserver/pkg/server package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/apiserver/pkg/server@v0.0.0-20240503193545-2e1b0ddd9791"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGURLBUILDER-6246585",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/apiserver/pkg/urlbuilder package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/apiserver/pkg/urlbuilder@v0.0.0-20240503193545-2e1b0ddd9791"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGWRITER-6246587",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/apiserver/pkg/writer package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/apiserver/pkg/writer@v0.0.0-20240503193545-2e1b0ddd9791"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANAPI-6245762",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/norman/api package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/norman/api@v0.0.0-20240503193601-9f5f6586bb5b"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANURLBUILDER-6245763",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/norman/urlbuilder package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/norman/urlbuilder@v0.0.0-20240503193601-9f5f6586bb5b"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 588
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.19.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/encoding/protojson@v1.32.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/internal/encoding/json"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/internal/encoding/json@v1.32.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/internal/encoding/json` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.19.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.32.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/internal/encoding/json package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/internal/encoding/json@v1.32.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 586
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.19.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/encoding/protojson@v1.32.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/internal/encoding/json"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/internal/encoding/json@v1.32.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/internal/encoding/json` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.19.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.32.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/internal/encoding/json package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/internal/encoding/json@v1.32.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 146
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.17.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6137908",
              "shortDescription": {
                "text": "Medium severity - Stack-based Buffer Overflow vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when processing input that uses pathologically deep nesting.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.32.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/bfcd6476a38e41247d6bb43dc8f00b23ec9fffc2)\n- [GitHub Issue](https://github.com/golang/protobuf/issues/1584)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/encoding/protojson@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/internal/encoding/json"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/internal/encoding/json@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/internal/encoding/json` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.17.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6137908",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/internal/encoding/json package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/internal/encoding/json@v1.31.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 52
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GITHUBCOMURFAVENEGRONI-1658297",
              "shortDescription": {
                "text": "Medium severity - Open Redirect vulnerability in github.com/urfave/negroni"
              },
              "fullDescription": {
                "text": "github.com/urfave/negroni@v1.0.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/urfave/negroni](http://github.com/urfave/negroni) is an idiomatic approach to web middleware in Go.\n\nAffected versions of this package are vulnerable to Open Redirect. A specifically-crafted URL can cause a site using negroni to be redirected to an external site.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/urfave/negroni/commit/3c3f8059b4bbc720ce576ca2d369069601914e8b)\n- [GitHub Commit - `evergreen`](https://github.com/evergreen-ci/evergreen/commit/af233f8abdb1c715be2117e83553b8fdd8b0c99f)\n- [GitHub Commit - `gimlet`](https://github.com/evergreen-ci/gimlet/commit/31cad9d4fe5899f5952d7b5114f4fbbf6ddca953)\n- [GitHub PR](https://github.com/urfave/negroni/pull/259)\n- [GitHub PR](https://github.com/urfave/negroni/pull/261)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-601",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.4,
                "security-severity": "5.4"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMURFAVENEGRONI-1658297",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable github.com/urfave/negroni package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/urfave/negroni@v1.0.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 3163
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5INTERNALSANITIZE-6371505",
              "shortDescription": {
                "text": "High severity - SQL Injection vulnerability in github.com/jackc/pgx/v5/internal/sanitize"
              },
              "fullDescription": {
                "text": "(CVE-2024-27304) github.com/jackc/pgx/v5/internal/sanitize@v5.4.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/jackc/pgx/v5/internal/sanitize](https://pkg.go.dev/github.com/jackc/pgx/internal/sanitize) is a PostgreSQL driver and toolkit\n\nAffected versions of this package are vulnerable to SQL Injection due to an integer overflow in the calculated message size, which can cause a single query or bind message to exceed 4 GB in size, allowing the message to be interpreted as multiple messages, which can be executed in an unauthorized way.\n## Remediation\nUpgrade `github.com/jackc/pgx/v5/internal/sanitize` to version 5.5.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-89",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGCONN-6371509",
              "shortDescription": {
                "text": "High severity - SQL Injection vulnerability in github.com/jackc/pgx/v5/pgconn"
              },
              "fullDescription": {
                "text": "(CVE-2024-27304) github.com/jackc/pgx/v5/pgconn@v5.4.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/jackc/pgx/v5/pgconn](https://pkg.go.dev/github.com/jackc/pgx/v5/pgconn) is a low-level PostgreSQL database driver\n\nAffected versions of this package are vulnerable to SQL Injection due to an integer overflow in the calculated message size, which can cause a single query or bind message to exceed 4 GB in size, allowing the message to be interpreted as multiple messages, which can be executed in an unauthorized way.\n## Remediation\nUpgrade `github.com/jackc/pgx/v5/pgconn` to version 5.5.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-89",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGPROTO3-6371510",
              "shortDescription": {
                "text": "High severity - SQL Injection vulnerability in github.com/jackc/pgx/v5/pgproto3"
              },
              "fullDescription": {
                "text": "(CVE-2024-27304) github.com/jackc/pgx/v5/pgproto3@v5.4.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/jackc/pgx/v5/pgproto3](https://pkg.go.dev/github.com/jackc/pgx/v5/pgproto3) is a low-level PostgreSQL database driver\n\nAffected versions of this package are vulnerable to SQL Injection due to an integer overflow in the calculated message size, which can cause a single query or bind message to exceed 4 GB in size, allowing the message to be interpreted as multiple messages, which can be executed in an unauthorized way.\n## Remediation\nUpgrade `github.com/jackc/pgx/v5/pgproto3` to version 5.5.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-89",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMQUICGOQUICGO-6516630",
              "shortDescription": {
                "text": "High severity - Uncontrolled Resource Consumption ('Resource Exhaustion') vulnerability in github.com/quic-go/quic-go"
              },
              "fullDescription": {
                "text": "(CVE-2024-22189) github.com/quic-go/quic-go@v0.38.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption ('Resource Exhaustion'). An attacker can cause its peer to run out of memory by sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peer's congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate.\n## Remediation\nUpgrade `github.com/quic-go/quic-go` to version 0.42.0 or higher.\n## References\n- [Analysis](https://www.youtube.com/watch?v=JqXtYcZAtIA&t=3683s)\n- [Blog](https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management)\n- [GitHub Commit](https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.17.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5963583",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
              },
              "fullDescription": {
                "text": "(CVE-2022-21698) go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when the `otelhttp.NewHandler` wrapper is used and no filtering is applied to unknown HTTP methods or User agents at the CDN, LB, or previous middleware levels. An attacker can cause the server's potential memory exhaustion by sending numerous malicious requests with random and long HTTP User-Agent or HTTP method values. \n\n**Note:**\n\nThis is only exploitable if the program does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc. \n\n**Mitigation:** \n\nThis vulnerability can be mitigated by using `otelhttp.WithFilter()`, which requires manual configuration to not log certain requests entirely. For convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality.\n## Remediation\nUpgrade `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` to version 0.44.0 or higher.\n## References\n- [GitHub Commit](https://github.com/open-telemetry/opentelemetry-go-contrib/commit/50ca48f8017e04bcf9149a5435e7f8f96f9e83c9)\n- [GitHub PR](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5971109",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
              },
              "fullDescription": {
                "text": "(CVE-2023-45142) go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling via the `otelhttp` handler wrapper. An attacker can cause a denial of service by sending numerous malicious requests with random and long `http.user_agent` and `http.method` labels.\r\n\r\n**Note:**\r\n\r\nThis is only exploitable if the program uses the `otelhttp.NewHandler` wrapper and does not filter any unknown HTTP methods or User agents at the CDN, LB, previous middleware, etc. level.\r\n\r\n## Workaround\r\n\r\nThis vulnerability can be mitigated by using `otelhttp.WithFilter()`, but it requires manual careful configuration to not log certain requests entirely.\n## Remediation\nUpgrade `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` to version 0.44.0 or higher.\n## References\n- [GitHub Commit](https://github.com/open-telemetry/opentelemetry-go-contrib/commit/50ca48f8017e04bcf9149a5435e7f8f96f9e83c9)\n- [GitHub PR](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277)\n- [GitHub Release](https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5INTERNALSANITIZE-6371505",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/jackc/pgx/v5/internal/sanitize package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/jackc/pgx/v5/internal/sanitize@v5.4.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGCONN-6371509",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/jackc/pgx/v5/pgconn package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/jackc/pgx/v5/pgconn@v5.4.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGPROTO3-6371510",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/jackc/pgx/v5/pgproto3 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/jackc/pgx/v5/pgproto3@v5.4.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMQUICGOQUICGO-6516630",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/quic-go/quic-go package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/quic-go/quic-go@v0.38.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.17.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5963583",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5971109",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 126
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.17.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6137908",
              "shortDescription": {
                "text": "Medium severity - Stack-based Buffer Overflow vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when processing input that uses pathologically deep nesting.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.32.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/bfcd6476a38e41247d6bb43dc8f00b23ec9fffc2)\n- [GitHub Issue](https://github.com/golang/protobuf/issues/1584)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/encoding/protojson@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/internal/encoding/json"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/internal/encoding/json@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/internal/encoding/json` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.17.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6137908",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/internal/encoding/json package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/internal/encoding/json@v1.31.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 3163
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5INTERNALSANITIZE-6371505",
              "shortDescription": {
                "text": "High severity - SQL Injection vulnerability in github.com/jackc/pgx/v5/internal/sanitize"
              },
              "fullDescription": {
                "text": "(CVE-2024-27304) github.com/jackc/pgx/v5/internal/sanitize@v5.4.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/jackc/pgx/v5/internal/sanitize](https://pkg.go.dev/github.com/jackc/pgx/internal/sanitize) is a PostgreSQL driver and toolkit\n\nAffected versions of this package are vulnerable to SQL Injection due to an integer overflow in the calculated message size, which can cause a single query or bind message to exceed 4 GB in size, allowing the message to be interpreted as multiple messages, which can be executed in an unauthorized way.\n## Remediation\nUpgrade `github.com/jackc/pgx/v5/internal/sanitize` to version 5.5.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-89",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGCONN-6371509",
              "shortDescription": {
                "text": "High severity - SQL Injection vulnerability in github.com/jackc/pgx/v5/pgconn"
              },
              "fullDescription": {
                "text": "(CVE-2024-27304) github.com/jackc/pgx/v5/pgconn@v5.4.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/jackc/pgx/v5/pgconn](https://pkg.go.dev/github.com/jackc/pgx/v5/pgconn) is a low-level PostgreSQL database driver\n\nAffected versions of this package are vulnerable to SQL Injection due to an integer overflow in the calculated message size, which can cause a single query or bind message to exceed 4 GB in size, allowing the message to be interpreted as multiple messages, which can be executed in an unauthorized way.\n## Remediation\nUpgrade `github.com/jackc/pgx/v5/pgconn` to version 5.5.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-89",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGPROTO3-6371510",
              "shortDescription": {
                "text": "High severity - SQL Injection vulnerability in github.com/jackc/pgx/v5/pgproto3"
              },
              "fullDescription": {
                "text": "(CVE-2024-27304) github.com/jackc/pgx/v5/pgproto3@v5.4.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/jackc/pgx/v5/pgproto3](https://pkg.go.dev/github.com/jackc/pgx/v5/pgproto3) is a low-level PostgreSQL database driver\n\nAffected versions of this package are vulnerable to SQL Injection due to an integer overflow in the calculated message size, which can cause a single query or bind message to exceed 4 GB in size, allowing the message to be interpreted as multiple messages, which can be executed in an unauthorized way.\n## Remediation\nUpgrade `github.com/jackc/pgx/v5/pgproto3` to version 5.5.4 or higher.\n## References\n- [GitHub Commit](https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8)\n- [GitHub Commit](https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-89",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMQUICGOQUICGO-6516630",
              "shortDescription": {
                "text": "High severity - Uncontrolled Resource Consumption ('Resource Exhaustion') vulnerability in github.com/quic-go/quic-go"
              },
              "fullDescription": {
                "text": "(CVE-2024-22189) github.com/quic-go/quic-go@v0.38.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption ('Resource Exhaustion'). An attacker can cause its peer to run out of memory by sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peer's congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate.\n## Remediation\nUpgrade `github.com/quic-go/quic-go` to version 0.42.0 or higher.\n## References\n- [Analysis](https://www.youtube.com/watch?v=JqXtYcZAtIA&t=3683s)\n- [Blog](https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management)\n- [GitHub Commit](https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.17.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5963583",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
              },
              "fullDescription": {
                "text": "(CVE-2022-21698) go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when the `otelhttp.NewHandler` wrapper is used and no filtering is applied to unknown HTTP methods or User agents at the CDN, LB, or previous middleware levels. An attacker can cause the server's potential memory exhaustion by sending numerous malicious requests with random and long HTTP User-Agent or HTTP method values. \n\n**Note:**\n\nThis is only exploitable if the program does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc. \n\n**Mitigation:** \n\nThis vulnerability can be mitigated by using `otelhttp.WithFilter()`, which requires manual configuration to not log certain requests entirely. For convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality.\n## Remediation\nUpgrade `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` to version 0.44.0 or higher.\n## References\n- [GitHub Commit](https://github.com/open-telemetry/opentelemetry-go-contrib/commit/50ca48f8017e04bcf9149a5435e7f8f96f9e83c9)\n- [GitHub PR](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5971109",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
              },
              "fullDescription": {
                "text": "(CVE-2023-45142) go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling via the `otelhttp` handler wrapper. An attacker can cause a denial of service by sending numerous malicious requests with random and long `http.user_agent` and `http.method` labels.\r\n\r\n**Note:**\r\n\r\nThis is only exploitable if the program uses the `otelhttp.NewHandler` wrapper and does not filter any unknown HTTP methods or User agents at the CDN, LB, previous middleware, etc. level.\r\n\r\n## Workaround\r\n\r\nThis vulnerability can be mitigated by using `otelhttp.WithFilter()`, but it requires manual careful configuration to not log certain requests entirely.\n## Remediation\nUpgrade `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` to version 0.44.0 or higher.\n## References\n- [GitHub Commit](https://github.com/open-telemetry/opentelemetry-go-contrib/commit/50ca48f8017e04bcf9149a5435e7f8f96f9e83c9)\n- [GitHub PR](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277)\n- [GitHub Release](https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5INTERNALSANITIZE-6371505",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/jackc/pgx/v5/internal/sanitize package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/jackc/pgx/v5/internal/sanitize@v5.4.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGCONN-6371509",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/jackc/pgx/v5/pgconn package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/jackc/pgx/v5/pgconn@v5.4.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMJACKCPGXV5PGPROTO3-6371510",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/jackc/pgx/v5/pgproto3 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/jackc/pgx/v5/pgproto3@v5.4.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMQUICGOQUICGO-6516630",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/quic-go/quic-go package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/quic-go/quic-go@v0.38.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.17.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5963583",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5971109",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 626
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.17.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.17.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 155
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 482
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
              "shortDescription": {
                "text": "Medium severity - Authentication Bypass by Capture-replay vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2023-48795) golang.org/x/crypto/ssh@v0.14.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Authentication Bypass by Capture-replay during the establishment of the secure channel. An attacker can manipulate handshake sequence numbers to delete messages sent immediately after the channel is established.\r\n\r\n**Note:**\r\n\r\n1) Sequence numbers are only validated once the channel is established and arbitrary messages are allowed during the handshake, allowing them to manipulate the sequence numbers.\r\n\r\n2) The potential consequences of the general Terrapin attack are dependent on the messages exchanged after the handshake concludes. If you are using a custom SSH service and do not resort to the authentication protocol, you should check that dropping the first few messages of a connection does not yield security risks.\r\n\r\n**Impact:** \r\n\r\nWhile cryptographically novel, there is no discernable impact on the integrity of SSH traffic beyond giving the attacker the ability to delete the message that enables some features related to keystroke timing obfuscation. To successfully carry out the exploitation, the connection needs to be protected using either the `ChaCha20-Poly1305` or `CBC` with `Encrypt-then-MAC` encryption methods. The attacker must also be able to intercept and modify the connection's traffic. \r\n\r\n## Workaround\r\n\r\nTemporarily disable the affected `chacha20-poly1305@openssh.com` encryption and `*-etm@openssh.com` MAC algorithms in the affected configuration, and use unaffected algorithms like `AES-GCM` instead.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.17.0 or higher.\n## References\n- [Attack Information](https://terrapin-attack.com/)\n- [GitHub Commit](https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d)\n- [GitHub Commit](https://github.com/libssh2/libssh2/pull/1291/commits/ab44b0906d7f8a296e995ccd661b0e98d01a3742)\n- [GitHub Commit](https://github.com/mkj/dropbear/commit/6e43be5c7b99dbee49dc72b6f989f29fdd7e9356)\n- [GitHub Commit](https://github.com/mwiede/jsch/commit/6214da974286a8b94a95f4cf6cec96e972ffd370)\n- [GitHub Commit](https://github.com/openssh/openssh-portable/commit/1edb00c58f8a6875fad6a497aa2bacf37f9e6cd5)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/3cd7fd156c0d1091e303824807be038b4eead2cd)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/aadec4c3a5051fd99ad4791c80eeac271d56c859)\n- [GitHub Commit](https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0)\n- [GitHub Commit](https://github.com/warp-tech/russh/commit/a355c62d11352cf93c3f9fda7499e03753a938ae)\n- [GitHub Issue](https://github.com/paramiko/paramiko/issues/2337)\n- [GitHub Issue](https://go.dev/issue/64784)\n- [GitHub PR](https://github.com/jenkinsci/jenkins/pull/9089)\n- [Go Forum](https://go.dev/cl/550715)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg)\n- [Jenkins Advisory](https://www.jenkins.io/security/advisory/2024-04-17/#SECURITY-3386)\n- [Security Release](https://www.openssh.com/txt/release-9.6)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/master/javascript/cves/2023/CVE-2023-48795.yaml)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-294",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.17.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.14.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.17.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 40
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
              "shortDescription": {
                "text": "Medium severity - Authentication Bypass by Capture-replay vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2023-48795) golang.org/x/crypto/ssh@v0.10.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Authentication Bypass by Capture-replay during the establishment of the secure channel. An attacker can manipulate handshake sequence numbers to delete messages sent immediately after the channel is established.\r\n\r\n**Note:**\r\n\r\n1) Sequence numbers are only validated once the channel is established and arbitrary messages are allowed during the handshake, allowing them to manipulate the sequence numbers.\r\n\r\n2) The potential consequences of the general Terrapin attack are dependent on the messages exchanged after the handshake concludes. If you are using a custom SSH service and do not resort to the authentication protocol, you should check that dropping the first few messages of a connection does not yield security risks.\r\n\r\n**Impact:** \r\n\r\nWhile cryptographically novel, there is no discernable impact on the integrity of SSH traffic beyond giving the attacker the ability to delete the message that enables some features related to keystroke timing obfuscation. To successfully carry out the exploitation, the connection needs to be protected using either the `ChaCha20-Poly1305` or `CBC` with `Encrypt-then-MAC` encryption methods. The attacker must also be able to intercept and modify the connection's traffic. \r\n\r\n## Workaround\r\n\r\nTemporarily disable the affected `chacha20-poly1305@openssh.com` encryption and `*-etm@openssh.com` MAC algorithms in the affected configuration, and use unaffected algorithms like `AES-GCM` instead.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.17.0 or higher.\n## References\n- [Attack Information](https://terrapin-attack.com/)\n- [GitHub Commit](https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d)\n- [GitHub Commit](https://github.com/libssh2/libssh2/pull/1291/commits/ab44b0906d7f8a296e995ccd661b0e98d01a3742)\n- [GitHub Commit](https://github.com/mkj/dropbear/commit/6e43be5c7b99dbee49dc72b6f989f29fdd7e9356)\n- [GitHub Commit](https://github.com/mwiede/jsch/commit/6214da974286a8b94a95f4cf6cec96e972ffd370)\n- [GitHub Commit](https://github.com/openssh/openssh-portable/commit/1edb00c58f8a6875fad6a497aa2bacf37f9e6cd5)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/3cd7fd156c0d1091e303824807be038b4eead2cd)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/aadec4c3a5051fd99ad4791c80eeac271d56c859)\n- [GitHub Commit](https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0)\n- [GitHub Commit](https://github.com/warp-tech/russh/commit/a355c62d11352cf93c3f9fda7499e03753a938ae)\n- [GitHub Issue](https://github.com/paramiko/paramiko/issues/2337)\n- [GitHub Issue](https://go.dev/issue/64784)\n- [GitHub PR](https://github.com/jenkinsci/jenkins/pull/9089)\n- [Go Forum](https://go.dev/cl/550715)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg)\n- [Jenkins Advisory](https://www.jenkins.io/security/advisory/2024-04-17/#SECURITY-3386)\n- [Security Release](https://www.openssh.com/txt/release-9.6)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/master/javascript/cves/2023/CVE-2023-48795.yaml)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-294",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-44487) golang.org/x/net/http2@v0.11.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) in the implementation of the HTTP/2 protocol. An attacker can cause a denial of service (including via DDoS) by rapidly resetting many streams through request cancellation.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.17.0 or higher.\n## References\n- [Github Commit](https://github.com/helidon-io/helidon/commit/58f43670086e530750c7cb74b0bec92bf5189c79)\n- [Github Commit](https://github.com/pgjones/hypercorn/commit/7c39c68b61012a3c30979176080861c8b00fb229)\n- [GitHub Commit](https://github.com/akka/akka-http/commit/1f29fe6a8567c57dfe848a21ae883304cce5646d)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e)\n- [GitHub Commit](https://github.com/eclipse/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148)\n- [GitHub Commit](https://github.com/gravitational/teleport/commit/15f34f927a45130408eb16ed09af5620270d4d1f)\n- [GitHub Commit](https://github.com/kubernetes/apimachinery/commit/be9188050914374ee8128239e5a2e5998d7897f5)\n- [GitHub Commit](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61)\n- [GitHub Commit](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832)\n- [GitHub Commit](https://github.com/operator-framework/operator-lifecycle-manager/commit/9ec03f07f942dc9cef736957fa152e39157d6e13)\n- [Snyk Blog](https://snyk.io/blog/find-fix-http-2-rapid-reset-zero-day-vulnerability-cve-2023-44487/)\n- [Vulnerability Discovery](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/)\n- [Vulnerability Explanation](https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5958903",
              "shortDescription": {
                "text": "Medium severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-39325) golang.org/x/net/http2@v0.11.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when `MaxConcurrentStreams` handler `goroutines` running. A a handler is started until one of the existing handlers exits.\r\n\r\n**Note:**\r\n\r\nThis issue is related to [CVE-2023-44487](https://security.snyk.io/vuln/SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327)\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.17.0 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/695775ce641b0f80c9cf03e8a796595355422dd3)\n- [GitHub Commit](https://github.com/golang/net/commit/b225e7ca6dde1ef5a5ae5ce922861bda011cfabd)\n- [GitHub PR](https://github.com/containerd/containerd/pull/9387)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 4.3,
                "security-severity": "4.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.11.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.10.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.11.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5958903",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.11.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.11.0"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 3
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 541
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
              "shortDescription": {
                "text": "Medium severity - Authentication Bypass by Capture-replay vulnerability in golang.org/x/crypto/ssh"
              },
              "fullDescription": {
                "text": "(CVE-2023-48795) golang.org/x/crypto/ssh@v0.16.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Authentication Bypass by Capture-replay during the establishment of the secure channel. An attacker can manipulate handshake sequence numbers to delete messages sent immediately after the channel is established.\r\n\r\n**Note:**\r\n\r\n1) Sequence numbers are only validated once the channel is established and arbitrary messages are allowed during the handshake, allowing them to manipulate the sequence numbers.\r\n\r\n2) The potential consequences of the general Terrapin attack are dependent on the messages exchanged after the handshake concludes. If you are using a custom SSH service and do not resort to the authentication protocol, you should check that dropping the first few messages of a connection does not yield security risks.\r\n\r\n**Impact:** \r\n\r\nWhile cryptographically novel, there is no discernable impact on the integrity of SSH traffic beyond giving the attacker the ability to delete the message that enables some features related to keystroke timing obfuscation. To successfully carry out the exploitation, the connection needs to be protected using either the `ChaCha20-Poly1305` or `CBC` with `Encrypt-then-MAC` encryption methods. The attacker must also be able to intercept and modify the connection's traffic. \r\n\r\n## Workaround\r\n\r\nTemporarily disable the affected `chacha20-poly1305@openssh.com` encryption and `*-etm@openssh.com` MAC algorithms in the affected configuration, and use unaffected algorithms like `AES-GCM` instead.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.17.0 or higher.\n## References\n- [Attack Information](https://terrapin-attack.com/)\n- [GitHub Commit](https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d)\n- [GitHub Commit](https://github.com/libssh2/libssh2/pull/1291/commits/ab44b0906d7f8a296e995ccd661b0e98d01a3742)\n- [GitHub Commit](https://github.com/mkj/dropbear/commit/6e43be5c7b99dbee49dc72b6f989f29fdd7e9356)\n- [GitHub Commit](https://github.com/mwiede/jsch/commit/6214da974286a8b94a95f4cf6cec96e972ffd370)\n- [GitHub Commit](https://github.com/openssh/openssh-portable/commit/1edb00c58f8a6875fad6a497aa2bacf37f9e6cd5)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/0bc73254f41acb140187e0c89606311f88de5b7b)\n- [GitHub Commit](https://github.com/ronf/asyncssh/commit/69f5a41b458b29367a65fe469c2b0255b5db210a)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/3cd7fd156c0d1091e303824807be038b4eead2cd)\n- [GitHub Commit](https://github.com/sshtools/maverick-synergy/commit/aadec4c3a5051fd99ad4791c80eeac271d56c859)\n- [GitHub Commit](https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0)\n- [GitHub Commit](https://github.com/warp-tech/russh/commit/a355c62d11352cf93c3f9fda7499e03753a938ae)\n- [GitHub Issue](https://github.com/paramiko/paramiko/issues/2337)\n- [GitHub Issue](https://go.dev/issue/64784)\n- [GitHub PR](https://github.com/jenkinsci/jenkins/pull/9089)\n- [Go Forum](https://go.dev/cl/550715)\n- [Google Groups Forum](https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg)\n- [Jenkins Advisory](https://www.jenkins.io/security/advisory/2024-04-17/#SECURITY-3386)\n- [Security Release](https://www.openssh.com/txt/release-9.6)\n- [Nuclei Templates](https://github.com/projectdiscovery/nuclei-templates/blob/master/javascript/cves/2023/CVE-2023-48795.yaml)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-294",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.19.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGGRPC-5953328",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in google.golang.org/grpc"
              },
              "fullDescription": {
                "text": "(CVE-2023-44487) google.golang.org/grpc@v1.40.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[google.golang.org/grpc](https://pkg.go.dev/google.golang.org/grpc) is a Go implementation of gRPC\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) in the implementation of the HTTP/2 protocol. An attacker can cause a denial of service (including via DDoS) by rapidly resetting many streams through request cancellation.\n## Remediation\nUpgrade `google.golang.org/grpc` to version 1.56.3, 1.57.1, 1.58.3 or higher.\n## References\n- [Github Commit](https://github.com/helidon-io/helidon/commit/58f43670086e530750c7cb74b0bec92bf5189c79)\n- [Github Commit](https://github.com/pgjones/hypercorn/commit/7c39c68b61012a3c30979176080861c8b00fb229)\n- [GitHub Commit](https://github.com/akka/akka-http/commit/1f29fe6a8567c57dfe848a21ae883304cce5646d)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e)\n- [GitHub Commit](https://github.com/eclipse/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148)\n- [GitHub Commit](https://github.com/gravitational/teleport/commit/15f34f927a45130408eb16ed09af5620270d4d1f)\n- [GitHub Commit](https://github.com/kubernetes/apimachinery/commit/be9188050914374ee8128239e5a2e5998d7897f5)\n- [GitHub Commit](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61)\n- [GitHub Commit](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832)\n- [GitHub Commit](https://github.com/operator-framework/operator-lifecycle-manager/commit/9ec03f07f942dc9cef736957fa152e39157d6e13)\n- [Snyk Blog](https://snyk.io/blog/find-fix-http-2-rapid-reset-zero-day-vulnerability-cve-2023-44487/)\n- [Vulnerability Discovery](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/)\n- [Vulnerability Explanation](https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6137908",
              "shortDescription": {
                "text": "Medium severity - Stack-based Buffer Overflow vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when processing input that uses pathologically deep nesting.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.32.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/bfcd6476a38e41247d6bb43dc8f00b23ec9fffc2)\n- [GitHub Issue](https://github.com/golang/protobuf/issues/1584)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-121",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/encoding/protojson"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/encoding/protojson@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/encoding/protojson` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
              "shortDescription": {
                "text": "Medium severity - Infinite loop vulnerability in google.golang.org/protobuf/internal/encoding/json"
              },
              "fullDescription": {
                "text": "(CVE-2024-24786) google.golang.org/protobuf/internal/encoding/json@v1.31.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Infinite loop via the `protojson.Unmarshal` function. An attacker can cause a denial of service condition by unmarshaling certain forms of invalid JSON.\r\n\r\n**Note:**\r\n\r\nThis condition can occur when unmarshaling into a message which contains a `google.protobuf.Any` value, or when the `UnmarshalOptions.DiscardUnknown` option is set.\n## Remediation\nUpgrade `google.golang.org/protobuf/internal/encoding/json` to version 1.33.0 or higher.\n## References\n- [GitHub Commit](https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023)\n- [GitHub Release](https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2024-2611)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-835",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.3,
                "security-severity": "5.3"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXCRYPTOSSH-6130669",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/crypto/ssh package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/crypto/ssh@v0.16.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.19.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGGRPC-5953328",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/grpc package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/grpc@v1.40.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6137908",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFENCODINGPROTOJSON-6393703",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/encoding/protojson package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/encoding/protojson@v1.31.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOGLEGOLANGORGPROTOBUFINTERNALENCODINGJSON-6393704",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable google.golang.org/protobuf/internal/encoding/json package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "google.golang.org/protobuf/internal/encoding/json@v1.31.0"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
