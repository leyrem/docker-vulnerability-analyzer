{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 0
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 1428
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GITHUBCOMCREWJAMSAML-5971016",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/crewjam/saml"
              },
              "fullDescription": {
                "text": "(CVE-2023-45683) github.com/crewjam/saml@v0.4.13"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/crewjam/saml](https://github.com/crewjam/saml) is a package that contains a partial implementation of the SAML standard in golang. SAML is a standard for identity federation, i.e. either allowing a third party to authenticate your users or allowing third parties to rely on us to authenticate their users.\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to missing Binding syntax validation when it does not validate the ACS Location URI according to the SAML binding being parsed. An attacker can register malicious Service Providers at the IdP and inject Javascript in the ACS endpoint definition, achieving unauthorised actions in the victim's browser context during the redirection at the end of a SAML SSO Flow.\n## Remediation\nUpgrade `github.com/crewjam/saml` to version 0.4.14 or higher.\n## References\n- [GitHub Commit](https://github.com/crewjam/saml/commit/b07b16cf83c4171d16da4d85608cb827f183cd79)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-79",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.1,
                "security-severity": "7.1"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMGOJOSEGOJOSEV3-6070737",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in github.com/go-jose/go-jose/v3"
              },
              "fullDescription": {
                "text": "github.com/go-jose/go-jose/v3@v3.0.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when decrypting JWE inputs. An attacker can cause a denial-of-service by providing a PBES2 encrypted JWE blob with a very large p2c value.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `github.com/go-jose/go-jose/v3` to version 3.0.1 or higher.\n## References\n- [Github Advisory](https://github.com/advisories/GHSA-2c7c-3mj9-8fqh)\n- [GitHub Commit](https://github.com/go-jose/go-jose/commit/65351c27657d58960c2e6c9fbb2b00f818e50568)\n- [GitHub Issue](https://github.com/go-jose/go-jose/issues/64)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMGOJOSEGOJOSEV3-6419233",
              "shortDescription": {
                "text": "Medium severity - Improper Handling of Highly Compressed Data (Data Amplification) vulnerability in github.com/go-jose/go-jose/v3"
              },
              "fullDescription": {
                "text": "(CVE-2024-28180) github.com/go-jose/go-jose/v3@v3.0.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Handling of Highly Compressed Data (Data Amplification). An attacker could send a JWE containing compressed data that, when decompressed by `Decrypt` or `DecryptMulti`, would use large amounts of memory and CPU.\n## Remediation\nUpgrade `github.com/go-jose/go-jose/v3` to version 3.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/go-jose/go-jose/commit/0dd4dd541c665fb292d664f77604ba694726f298)\n- [GitHub Commit](https://github.com/go-jose/go-jose/commit/add6a284ea0f844fd6628cba637be5451fe4b28a)\n- [GitHub Commit](https://github.com/go-jose/go-jose/commit/f4c051a0653d78199a053892f7619ebf96339502)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-409",
                  "gomodules"
                ],
                "cvssv3_baseScore": 4.3,
                "security-severity": "4.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMHASHICORPGORETRYABLEHTTP-7362036",
              "shortDescription": {
                "text": "Medium severity - Insertion of Sensitive Information into Log File vulnerability in github.com/hashicorp/go-retryablehttp"
              },
              "fullDescription": {
                "text": "(CVE-2024-6104) github.com/hashicorp/go-retryablehttp@v0.7.2"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Insertion of Sensitive Information into Log File due to not sanitizing urls when writing them to the log file. This could lead to an attacker writing sensitive HTTP basic auth credentials to the log file.\n## Remediation\nUpgrade `github.com/hashicorp/go-retryablehttp` to version 0.7.7 or higher.\n## References\n- [GitHub Commit](https://github.com/hashicorp/go-retryablehttp/commit/a99f07beb3c5faaa0a283617e6eb6bcf25f5049a)\n- [HashiCorp Discuss](https://discuss.hashicorp.com/t/hcsec-2024-12-go-retryablehttp-can-leak-basic-auth-credentials-to-log-files/68027)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-532",
                  "gomodules"
                ],
                "cvssv3_baseScore": 5.9,
                "security-severity": "5.9"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGSERVER-6246584",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/apiserver/pkg/server"
              },
              "fullDescription": {
                "text": "(CVE-2023-32192) github.com/rancher/apiserver/pkg/server@v0.0.0-20240207153744-69b3c2b56f3f"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to the API Server's public API endpoint handling of user input. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into the URL, which then gets rendered and executed on the page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4df268e250f625fa323349062636496e0aeff4e4)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4e102cf0d07b1af3d10d82c3e5a751a869b8a6c7)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4fd7d821d952510bfe38c9d4a3e2a65157f50525)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/69b3c2b56f3fa5a421889c533dada8cd08783cda)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/97a10a30200cb851afd8ee85ee6b2295c4b6e5ee)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/a3b9e3721c1b558ee63aec9594e37c223a5c8437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGURLBUILDER-6246585",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/apiserver/pkg/urlbuilder"
              },
              "fullDescription": {
                "text": "(CVE-2023-32192) github.com/rancher/apiserver/pkg/urlbuilder@v0.0.0-20240207153744-69b3c2b56f3f"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to the API Server's public API endpoint handling of user input. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into the URL, which then gets rendered and executed on the page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4df268e250f625fa323349062636496e0aeff4e4)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4e102cf0d07b1af3d10d82c3e5a751a869b8a6c7)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4fd7d821d952510bfe38c9d4a3e2a65157f50525)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/69b3c2b56f3fa5a421889c533dada8cd08783cda)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/97a10a30200cb851afd8ee85ee6b2295c4b6e5ee)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/a3b9e3721c1b558ee63aec9594e37c223a5c8437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGWRITER-6246587",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/apiserver/pkg/writer"
              },
              "fullDescription": {
                "text": "(CVE-2023-32192) github.com/rancher/apiserver/pkg/writer@v0.0.0-20240207153744-69b3c2b56f3f"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') due to the API Server's public API endpoint handling of user input. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into the URL, which then gets rendered and executed on the page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4df268e250f625fa323349062636496e0aeff4e4)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4e102cf0d07b1af3d10d82c3e5a751a869b8a6c7)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/4fd7d821d952510bfe38c9d4a3e2a65157f50525)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/69b3c2b56f3fa5a421889c533dada8cd08783cda)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/97a10a30200cb851afd8ee85ee6b2295c4b6e5ee)\n- [GitHub Commit](https://github.com/rancher/apiserver/commit/a3b9e3721c1b558ee63aec9594e37c223a5c8437)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANAPI-6245762",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/norman/api"
              },
              "fullDescription": {
                "text": "(CVE-2023-32193) github.com/rancher/norman/api@v0.0.0-20240206180703-6eda4bc94b4c"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[github.com/rancher/norman/api](https://pkg.go.dev/github.com/rancher/norman/api) is an API framework for Building Rancher Style APIs backed by K8s CustomResources and their controllers.\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in the public API endpoint. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into user input that is then rendered in the UI. This includes crafting a malicious URL that gets rendered into a script executed on a page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/norman/commit/3bb70b772b52297feac64f5fdeb1b13c06c37e39)\n- [GitHub Commit](https://github.com/rancher/norman/commit/7b2b467995e6dfab6d4a5dee8dffc15033ae8269)\n- [GitHub Commit](https://github.com/rancher/norman/commit/a6a6cf5696088c32002953d36b75bdcc84f2399e)\n- [GitHub Commit](https://github.com/rancher/norman/commit/bd13c653293b9b5e0b37e8a6ccd1c3277f4623ed)\n- [GitHub Commit](https://github.com/rancher/norman/commit/cb54924f25c7666511a913cd41834299ef22dba4)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANURLBUILDER-6245763",
              "shortDescription": {
                "text": "High severity - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in github.com/rancher/norman/urlbuilder"
              },
              "fullDescription": {
                "text": "(CVE-2023-32193) github.com/rancher/norman/urlbuilder@v0.0.0-20240206180703-6eda4bc94b4c"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in the public API endpoint. An attacker can trigger JavaScript code and execute commands remotely by injecting malicious payloads into user input that is then rendered in the UI. This includes crafting a malicious URL that gets rendered into a script executed on a page.\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/rancher/norman/commit/3bb70b772b52297feac64f5fdeb1b13c06c37e39)\n- [GitHub Commit](https://github.com/rancher/norman/commit/7b2b467995e6dfab6d4a5dee8dffc15033ae8269)\n- [GitHub Commit](https://github.com/rancher/norman/commit/a6a6cf5696088c32002953d36b75bdcc84f2399e)\n- [GitHub Commit](https://github.com/rancher/norman/commit/bd13c653293b9b5e0b37e8a6ccd1c3277f4623ed)\n- [GitHub Commit](https://github.com/rancher/norman/commit/cb54924f25c7666511a913cd41834299ef22dba4)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-80",
                  "gomodules"
                ],
                "cvssv3_baseScore": 8.3,
                "security-severity": "8.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5963583",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
              },
              "fullDescription": {
                "text": "(CVE-2022-21698) go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when the `otelhttp.NewHandler` wrapper is used and no filtering is applied to unknown HTTP methods or User agents at the CDN, LB, or previous middleware levels. An attacker can cause the server's potential memory exhaustion by sending numerous malicious requests with random and long HTTP User-Agent or HTTP method values. \n\n**Note:**\n\nThis is only exploitable if the program does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc. \n\n**Mitigation:** \n\nThis vulnerability can be mitigated by using `otelhttp.WithFilter()`, which requires manual configuration to not log certain requests entirely. For convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality.\n## Remediation\nUpgrade `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` to version 0.44.0 or higher.\n## References\n- [GitHub Commit](https://github.com/open-telemetry/opentelemetry-go-contrib/commit/50ca48f8017e04bcf9149a5435e7f8f96f9e83c9)\n- [GitHub PR](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5971109",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
              },
              "fullDescription": {
                "text": "(CVE-2023-45142) go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling via the `otelhttp` handler wrapper. An attacker can cause a denial of service by sending numerous malicious requests with random and long `http.user_agent` and `http.method` labels.\r\n\r\n**Note:**\r\n\r\nThis is only exploitable if the program uses the `otelhttp.NewHandler` wrapper and does not filter any unknown HTTP methods or User agents at the CDN, LB, previous middleware, etc. level.\r\n\r\n## Workaround\r\n\r\nThis vulnerability can be mitigated by using `otelhttp.WithFilter()`, but it requires manual careful configuration to not log certain requests entirely.\n## Remediation\nUpgrade `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` to version 0.44.0 or higher.\n## References\n- [GitHub Commit](https://github.com/open-telemetry/opentelemetry-go-contrib/commit/50ca48f8017e04bcf9149a5435e7f8f96f9e83c9)\n- [GitHub PR](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277)\n- [GitHub Release](https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159)\n- [Vulnerable Code](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMCREWJAMSAML-5971016",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/crewjam/saml package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/crewjam/saml@v0.4.13"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMGOJOSEGOJOSEV3-6070737",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/go-jose/go-jose/v3 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/go-jose/go-jose/v3@v3.0.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMGOJOSEGOJOSEV3-6419233",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable github.com/go-jose/go-jose/v3 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/go-jose/go-jose/v3@v3.0.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMHASHICORPGORETRYABLEHTTP-7362036",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable github.com/hashicorp/go-retryablehttp package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/hashicorp/go-retryablehttp@v0.7.2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGSERVER-6246584",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/apiserver/pkg/server package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/apiserver/pkg/server@v0.0.0-20240207153744-69b3c2b56f3f"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGURLBUILDER-6246585",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/apiserver/pkg/urlbuilder package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/apiserver/pkg/urlbuilder@v0.0.0-20240207153744-69b3c2b56f3f"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERAPISERVERPKGWRITER-6246587",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/apiserver/pkg/writer package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/apiserver/pkg/writer@v0.0.0-20240207153744-69b3c2b56f3f"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANAPI-6245762",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/norman/api package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/norman/api@v0.0.0-20240206180703-6eda4bc94b4c"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GITHUBCOMRANCHERNORMANURLBUILDER-6245763",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable github.com/rancher/norman/urlbuilder package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "github.com/rancher/norman/urlbuilder@v0.0.0-20240206180703-6eda4bc94b4c"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5963583",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOOPENTELEMETRYIOCONTRIBINSTRUMENTATIONNETHTTPOTELHTTP-5971109",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/agent"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.35.1"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 3
          },
          "rules": []
        }
      },
      "results": []
    },
    {
      "tool": {
        "driver": {
          "name": "Snyk Container",
          "properties": {
            "artifactsScanned": 233
          },
          "rules": [
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTML-5816820",
              "shortDescription": {
                "text": "Medium severity - Cross-site Scripting (XSS) vulnerability in golang.org/x/net/html"
              },
              "fullDescription": {
                "text": "(CVE-2023-3978) golang.org/x/net/html@v0.8.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/html](https://pkg.go.dev/golang.org/x/net/html) is a package that implements an HTML5-compliant tokenizer and parser.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) in the `render1()` function in `render.go`. Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `golang.org/x/net/html` to version 0.13.0 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/8ffa475fbdb33da97e8bf79cc5791ee8751fca5e)\n- [GitHub Issue](https://go.dev/issue/61615)\n- [Golang PR](https://go.dev/cl/514896)\n- [Vulnerability Advisory](https://pkg.go.dev/vuln/GO-2023-1988)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-79",
                  "gomodules"
                ],
                "cvssv3_baseScore": 6.1,
                "security-severity": "6.1"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327",
              "shortDescription": {
                "text": "High severity - Denial of Service (DoS) vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-44487) golang.org/x/net/http2@v0.8.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) in the implementation of the HTTP/2 protocol. An attacker can cause a denial of service (including via DDoS) by rapidly resetting many streams through request cancellation.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.17.0 or higher.\n## References\n- [Github Commit](https://github.com/helidon-io/helidon/commit/58f43670086e530750c7cb74b0bec92bf5189c79)\n- [Github Commit](https://github.com/pgjones/hypercorn/commit/7c39c68b61012a3c30979176080861c8b00fb229)\n- [GitHub Commit](https://github.com/akka/akka-http/commit/1f29fe6a8567c57dfe848a21ae883304cce5646d)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e)\n- [GitHub Commit](https://github.com/eclipse/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148)\n- [GitHub Commit](https://github.com/gravitational/teleport/commit/15f34f927a45130408eb16ed09af5620270d4d1f)\n- [GitHub Commit](https://github.com/kubernetes/apimachinery/commit/be9188050914374ee8128239e5a2e5998d7897f5)\n- [GitHub Commit](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61)\n- [GitHub Commit](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832)\n- [GitHub Commit](https://github.com/operator-framework/operator-lifecycle-manager/commit/9ec03f07f942dc9cef736957fa152e39157d6e13)\n- [Snyk Blog](https://snyk.io/blog/find-fix-http-2-rapid-reset-zero-day-vulnerability-cve-2023-44487/)\n- [Vulnerability Discovery](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/)\n- [Vulnerability Explanation](https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack)\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-400",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5958903",
              "shortDescription": {
                "text": "Medium severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-39325) golang.org/x/net/http2@v0.8.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when `MaxConcurrentStreams` handler `goroutines` running. A a handler is started until one of the existing handlers exits.\r\n\r\n**Note:**\r\n\r\nThis issue is related to [CVE-2023-44487](https://security.snyk.io/vuln/SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327)\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.17.0 or higher.\n## References\n- [GitHub Commit](https://github.com/golang/net/commit/695775ce641b0f80c9cf03e8a796595355422dd3)\n- [GitHub Commit](https://github.com/golang/net/commit/b225e7ca6dde1ef5a5ae5ce922861bda011cfabd)\n- [GitHub PR](https://github.com/containerd/containerd/pull/9387)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 4.3,
                "security-severity": "4.3"
              }
            },
            {
              "id": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
              "shortDescription": {
                "text": "High severity - Allocation of Resources Without Limits or Throttling vulnerability in golang.org/x/net/http2"
              },
              "fullDescription": {
                "text": "(CVE-2023-45288) golang.org/x/net/http2@v0.8.0"
              },
              "help": {
                "text": "",
                "markdown": "## Overview\n[golang.org/x/net/http2](https://pkg.go.dev/golang.org/x/net/http2) is a work-in-progress HTTP/2 implementation for Go.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling when reading header data from `CONTINUATION` frames. As part of the HPACK flow, all incoming `HEADERS` and `CONTINUATION` frames are read even if their payloads exceed `MaxHeaderBytes` and will be discarded. An attacker can send excessive data over a connection to render it unresponsive.\n## Remediation\nUpgrade `golang.org/x/net/http2` to version 0.23.0 or higher.\n## References\n- [Github Commit](https://github.com/traefik/traefik/commit/099c7e9444a5d56918b8221672fc8d6a09a5d389)\n- [GitHub Commit](https://github.com/golang/net/commit/ba872109ef2dc8f1da778651bd1fd3792d0e4587)\n- [GitHub Issue](https://github.com/golang/go/issues/65051)\n- [Go Advisory](https://pkg.go.dev/vuln/GO-2024-2687)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": [
                  "security",
                  "CWE-770",
                  "gomodules"
                ],
                "cvssv3_baseScore": 7.5,
                "security-severity": "7.5"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTML-5816820",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/html package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kubectl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/html@v0.8.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5953327",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kubectl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.8.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-5958903",
          "level": "warning",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a medium severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kubectl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.8.0"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SNYK-GOLANG-GOLANGORGXNETHTTP2-6531285",
          "level": "error",
          "message": {
            "text": "This file introduces a vulnerable golang.org/x/net/http2 package with a high severity vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kubectl"
                },
                "region": {
                  "startLine": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "golang.org/x/net/http2@v0.8.0"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
