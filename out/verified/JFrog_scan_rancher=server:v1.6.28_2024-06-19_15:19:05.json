{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.7"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.9"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-21724_org.postgresql:postgresql_9.4.1208.jre7",
              "shortDescription": {
                "text": "[CVE-2022-21724] org.postgresql:postgresql 9.4.1208.jre7"
              },
              "help": {
                "text": "pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql database while doing security research. The system using the postgresql library will be attacked when attacker control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback` connection properties. However, the driver did not verify if the class implements the expected interface before instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [42.2.25], [42.3.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2024-1597_org.postgresql:postgresql_9.4.1208.jre7",
              "shortDescription": {
                "text": "[CVE-2024-1597] org.postgresql:postgresql 9.4.1208.jre7"
              },
              "help": {
                "text": "pgjdbc, the PostgreSQL JDBC Driver, allows attacker to inject SQL if using PreferQueryMode=SIMPLE. Note this is not the default. In the default mode there is no vulnerability. A placeholder for a numeric value must be immediately preceded by a minus. There must be a second placeholder for a string value after the first placeholder; both must be on the same line. By constructing a matching string payload, the attacker can inject SQL to alter the query,bypassing the protections that parameterized queries bring against SQL Injection attacks. Versions before 42.7.2, 42.6.1, 42.5.5, 42.4.4, 42.3.9, and 42.2.28 are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [42.2.28], [42.3.9], [42.4.4], [42.5.5], [42.6.1], [42.7.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-1471_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-1471] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-17195_com.nimbusds:nimbus-jose-jwt_4.12",
              "shortDescription": {
                "text": "[CVE-2019-17195] com.nimbusds:nimbus-jose-jwt 4.12"
              },
              "help": {
                "text": "Connect2id Nimbus JOSE+JWT before v7.9 can throw various uncaught exceptions while parsing a JWT, which could result in an application crash (potential information disclosure) or a potential authentication bypass.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [7.9]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-36437_com.hazelcast:hazelcast_3.8",
              "shortDescription": {
                "text": "[CVE-2022-36437] com.hazelcast:hazelcast 3.8"
              },
              "help": {
                "text": "The Connection handler in Hazelcast and Hazelcast Jet allows a remote unauthenticated attacker to access and manipulate data in the cluster with the identity of another already authenticated connection. The affected Hazelcast versions are through 4.0.6, 4.1.9, 4.2.5, 5.0.3, and 5.1.2. The affected Hazelcast Jet versions are through 4.5.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [3.12.13], [4.1.10], [4.2.6], [5.0.4], [5.1.3]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-1370_net.minidev:json-smart_1.3.1",
              "shortDescription": {
                "text": "[CVE-2023-1370] net.minidev:json-smart 1.3.1"
              },
              "help": {
                "text": "[Json-smart](https://netplex.github.io/json-smart/) is a performance focused, JSON processor lib.\n\nWhen reaching a ‘[‘ or ‘{‘ character in the JSON input, the code parses an array or an object respectively.\n\nIt was discovered that the code does not have any limit to the nesting of such arrays or objects. Since the parsing of nested arrays and objects is done recursively, nesting too many of them can cause a stack exhaustion (stack overflow) and crash the software.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.4.9]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24998_commons-fileupload:commons-fileupload_1.3.3",
              "shortDescription": {
                "text": "[CVE-2023-24998] commons-fileupload:commons-fileupload 1.3.3"
              },
              "help": {
                "text": "Apache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads.\n\n\n\n\nNote that, like all of the file upload limits, the\n          new configuration option (FileUploadBase#setFileCountMax) is not\n          enabled by default and must be explicitly configured.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.7"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6378_ch.qos.logback:logback-core_1.2.3",
              "shortDescription": {
                "text": "[CVE-2023-6378] ch.qos.logback:logback-core 1.2.3"
              },
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of \nlogback version 1.4.11 allows an attacker to mount a Denial-Of-Service \nattack by sending poisoned data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.2.13], [1.3.12], [1.4.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-18640_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2017-18640] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.26]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2020-36518_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36518] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.12.6.1], [2.13.2.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6378_ch.qos.logback:logback-classic_1.2.3",
              "shortDescription": {
                "text": "[CVE-2023-6378] ch.qos.logback:logback-classic 1.2.3"
              },
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of \nlogback version 1.4.11 allows an attacker to mount a Denial-Of-Service \nattack by sending poisoned data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.2.13], [1.3.12], [1.4.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.9"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.7"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-25857_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-25857] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.31]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.7"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-27216_org.eclipse.jetty:jetty-webapp_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2020-27216] org.eclipse.jetty:jetty-webapp 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.0.beta3], [11.0.0.beta3], [9.4.33.v20201020]   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.9"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.9"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.9"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-35517_org.apache.commons:commons-compress_1.5",
              "shortDescription": {
                "text": "[CVE-2021-35517] org.apache.commons:commons-compress 1.5"
              },
              "help": {
                "text": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-31197_org.postgresql:postgresql_9.4.1208.jre7",
              "shortDescription": {
                "text": "[CVE-2022-31197] org.postgresql:postgresql 9.4.1208.jre7"
              },
              "help": {
                "text": "PostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.0      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [42.2.26], [42.3.7], [42.4.1]   |"
              },
              "properties": {
                "security-severity": "8.0"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.9"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.7"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-31684_net.minidev:json-smart_1.3.1",
              "shortDescription": {
                "text": "[CVE-2021-31684] net.minidev:json-smart 1.3.1"
              },
              "help": {
                "text": "A vulnerability was discovered in the indexOf function of JSONParserByteArray in JSON Smart versions 1.3 and 2.4 which causes a denial of service (DOS) via a crafted web request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.3.3], [2.4.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.7"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.9"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.7"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000098_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2017-1000098] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The net/http package's Request.ParseMultipartForm method starts writing to temporary files once the request body size surpasses the given \"maxMemory\" limit. It was possible for an attacker to generate a multipart request crafted such that the server ran out of file descriptors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.4], [1.7.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "XRAY-80345_org.apache.httpcomponents:httpclient_4.3.1",
              "shortDescription": {
                "text": "[XRAY-80345] org.apache.httpcomponents:httpclient 4.3.1"
              },
              "help": {
                "text": "Malformed path not handled well",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.5.3-RC1]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-33265_com.hazelcast:hazelcast_3.8",
              "shortDescription": {
                "text": "[CVE-2023-33265] com.hazelcast:hazelcast 3.8"
              },
              "help": {
                "text": "In Hazelcast through 5.0.4, 5.1 through 5.1.6, and 5.2 through 5.2.3, executor services don't check client permissions properly, allowing authenticated users to execute tasks on members without the required permissions granted.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [5.0.5], [5.1.7], [5.2.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2014-0114_commons-beanutils:commons-beanutils_1.8.3",
              "shortDescription": {
                "text": "[CVE-2014-0114] commons-beanutils:commons-beanutils 1.8.3"
              },
              "help": {
                "text": "Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to \"manipulate\" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.9.4]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2016-3959_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2016-3959] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The Verify function in crypto/dsa/dsa.go in Go before 1.5.4 and 1.6.x before 1.6.1 does not properly check parameters passed to the big integer library, which might allow remote attackers to cause a denial of service (infinite loop) via a crafted public key to a program that uses HTTPS client certificates or SSH server libraries.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.5.4], [1.6.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2015-8618_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2015-8618] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The Int.Exp Montgomery code in the math/big library in Go 1.5.x before 1.5.3 mishandles carry propagation and produces incorrect output, which makes it easier for attackers to obtain private RSA keys via unspecified vectors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.5.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000098_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2017-1000098] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The net/http package's Request.ParseMultipartForm method starts writing to temporary files once the request body size surpasses the given \"maxMemory\" limit. It was possible for an attacker to generate a multipart request crafted such that the server ran out of file descriptors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.4], [1.7.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-12974_com.nimbusds:nimbus-jose-jwt_4.12",
              "shortDescription": {
                "text": "[CVE-2017-12974] com.nimbusds:nimbus-jose-jwt 4.12"
              },
              "help": {
                "text": "Nimbus JOSE+JWT before 4.36 proceeds with ECKey construction without ensuring that the public x and y coordinates are on the specified curve, which allows attackers to conduct an Invalid Curve Attack in environments where the JCE provider lacks the applicable curve validation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.36]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45859_com.hazelcast:hazelcast_3.8",
              "shortDescription": {
                "text": "[CVE-2023-45859] com.hazelcast:hazelcast 3.8"
              },
              "help": {
                "text": "In Hazelcast through 4.1.10, 4.2 through 4.2.8, 5.0 through 5.0.5, 5.1 through 5.1.7, 5.2 through 5.2.4, and 5.3 through 5.3.2, some client operations don't check permissions properly, allowing authenticated users to access data stored in the cluster.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [5.2.5], [5.3.5]   |"
              },
              "properties": {
                "security-severity": "7.6"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-3462_ubuntu:trusty:apt_1.0.1ubuntu2.17",
              "shortDescription": {
                "text": "[CVE-2019-3462] ubuntu:trusty:apt 1.0.1ubuntu2.17"
              },
              "help": {
                "text": "Incorrect sanitation of the 302 redirect field in HTTP transport method of apt versions 1.4.8 and earlier can lead to content injection by a MITM attacker, potentially leading to remote code execution on the target machine.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1.0.1ubuntu2.19]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000098_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2017-1000098] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The net/http package's Request.ParseMultipartForm method starts writing to temporary files once the request body size surpasses the given \"maxMemory\" limit. It was possible for an attacker to generate a multipart request crafted such that the server ran out of file descriptors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.4], [1.7.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-7656_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2017-7656] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [9.3.24.v20180605], [9.4.11.v20180605]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2017-12972_com.nimbusds:nimbus-jose-jwt_4.12",
              "shortDescription": {
                "text": "[CVE-2017-12972] com.nimbusds:nimbus-jose-jwt 4.12"
              },
              "help": {
                "text": "In Nimbus JOSE+JWT before 4.39, there is no integer-overflow check when converting length values from bytes to bits, which allows attackers to conduct HMAC bypass attacks by shifting Additional Authenticated Data (AAD) and ciphertext so that different plaintext is obtained for the same HMAC.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.39]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-10750_com.hazelcast:hazelcast_3.8",
              "shortDescription": {
                "text": "[CVE-2016-10750] com.hazelcast:hazelcast 3.8"
              },
              "help": {
                "text": "In Hazelcast before 3.11, the cluster join procedure is vulnerable to remote code execution via Java deserialization. If an attacker can reach a listening Hazelcast instance with a crafted JoinRequest, and vulnerable classes exist in the classpath, the attacker can run arbitrary code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [3.11]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2016-5386_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2016-5386] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The net/http package in Go through 1.6 does not attempt to address RFC 3875 section 4.1.18 namespace conflicts and therefore does not protect CGI applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect a CGI application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2016-5386_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2016-5386] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The net/http package in Go through 1.6 does not attempt to address RFC 3875 section 4.1.18 namespace conflicts and therefore does not protect CGI applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect a CGI application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-28165_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2021-28165] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.2], [11.0.2], [9.4.39]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-3958_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2016-3958] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Untrusted search path vulnerability in Go before 1.5.4 and 1.6.x before 1.6.1 on Windows allows local users to gain privileges via a Trojan horse DLL in the current working directory, related to use of the LoadLibrary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.5.4], [1.6.1]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-1000001_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2018-1000001] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "libc does not account for all the possible return values from the kernel getcwd(2) syscall; arbitrary code execution may result from applications making further assumptions on the return value from the getcwd(3) libary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-3462_ubuntu:trusty:libapt-inst1.5_1.0.1ubuntu2.17",
              "shortDescription": {
                "text": "[CVE-2019-3462] ubuntu:trusty:libapt-inst1.5 1.0.1ubuntu2.17"
              },
              "help": {
                "text": "Incorrect sanitation of the 302 redirect field in HTTP transport method of apt versions 1.4.8 and earlier can lead to content injection by a MITM attacker, potentially leading to remote code execution on the target machine.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-3462_ubuntu:trusty:libapt-pkg4.12_1.0.1ubuntu2.17",
              "shortDescription": {
                "text": "[CVE-2019-3462] ubuntu:trusty:libapt-pkg4.12 1.0.1ubuntu2.17"
              },
              "help": {
                "text": "Incorrect sanitation of the 302 redirect field in HTTP transport method of apt versions 1.4.8 and earlier can lead to content injection by a MITM attacker, potentially leading to remote code execution on the target machine.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-1000001_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2018-1000001] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "libc does not account for all the possible return values from the kernel getcwd(2) syscall; arbitrary code execution may result from applications making further assumptions on the return value from the getcwd(3) libary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-1000001_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2018-1000001] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "libc does not account for all the possible return values from the kernel getcwd(2) syscall; arbitrary code execution may result from applications making further assumptions on the return value from the getcwd(3) libary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-3462_ubuntu:trusty:apt-utils_1.0.1ubuntu2.17",
              "shortDescription": {
                "text": "[CVE-2019-3462] ubuntu:trusty:apt-utils 1.0.1ubuntu2.17"
              },
              "help": {
                "text": "Incorrect sanitation of the 302 redirect field in HTTP transport method of apt versions 1.4.8 and earlier can lead to content injection by a MITM attacker, potentially leading to remote code execution on the target machine.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-38749_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-38749] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.31]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-10237_com.google.guava:guava_15.0",
              "shortDescription": {
                "text": "[CVE-2018-10237] com.google.guava:guava 15.0"
              },
              "help": {
                "text": "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [24.1.1-android]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-10237_com.google.guava:guava_12.0",
              "shortDescription": {
                "text": "[CVE-2018-10237] com.google.guava:guava 12.0"
              },
              "help": {
                "text": "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [24.1.1-android]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-41854_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-41854] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.32]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.9"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-29425_commons-io:commons-io_2.4",
              "shortDescription": {
                "text": "[CVE-2021-29425] commons-io:commons-io 2.4"
              },
              "help": {
                "text": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.7]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2022-38752_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-38752] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.32]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2022-38751_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-38751] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.31]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-18311_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-18311] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Perl before 5.26.3 and 5.28.x before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.7"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-38750_org.yaml:snakeyaml_1.15",
              "shortDescription": {
                "text": "[CVE-2022-38750] org.yaml:snakeyaml 1.15"
              },
              "help": {
                "text": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.31]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-27568_net.minidev:json-smart_1.3.1",
              "shortDescription": {
                "text": "[CVE-2021-27568] net.minidev:json-smart 1.3.1"
              },
              "help": {
                "text": "An issue was discovered in netplex json-smart-v1 through 2015-10-23 and json-smart-v2 through 2.4. An exception is thrown from a function, but it is not caught, as demonstrated by NumberFormatException. When it is not caught, it may cause programs using the library to crash or expose sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.3.2], [2.3.1], [2.4.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2018-1000517_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2018-1000517] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-18311_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-18311] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Perl before 5.26.3 and 5.28.x before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2023-35116] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2018-18311_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-18311] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Perl before 5.26.3 and 5.28.x before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-1000802_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1000802] ubuntu:trusty:python3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-26048_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2023-26048] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.14], [11.0.14], [9.4.51.v20230217]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-14599_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
              "shortDescription": {
                "text": "[CVE-2018-14599] ubuntu:trusty:libx11-6:2 1.6.2-1ubuntu2"
              },
              "help": {
                "text": "An issue was discovered in libX11 through 1.6.5. The function XListExtensions in ListExt.c is vulnerable to an off-by-one error caused by malicious server responses, leading to DoS or possibly unspecified other impact.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-18313_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-18313] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Perl before 5.26.3 has a buffer over-read via a crafted regular expression that triggers disclosure of sensitive information from process memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2018-1049_ubuntu:trusty:libudev1_204-5ubuntu20.25",
              "shortDescription": {
                "text": "[CVE-2018-1049] ubuntu:trusty:libudev1 204-5ubuntu20.25"
              },
              "help": {
                "text": "In systemd prior to 234 a race condition exists between .mount and .automount units such that automount requests from kernel may not be serviced by systemd resulting in kernel holding the mountpoint and any processes that try to use said mount will hang. A race condition like this may lead to denial of service, until mount points are unmounted.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2018-14600_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
              "shortDescription": {
                "text": "[CVE-2018-14600] ubuntu:trusty:libx11-6:2 1.6.2-1ubuntu2"
              },
              "help": {
                "text": "An issue was discovered in libX11 through 1.6.5. The function XListExtensions in ListExt.c interprets a variable as signed instead of unsigned, resulting in an out-of-bounds write (of up to 128 bytes), leading to DoS or remote code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-3842_ubuntu:trusty:udev_204-5ubuntu20.25",
              "shortDescription": {
                "text": "[CVE-2019-3842] ubuntu:trusty:udev 204-5ubuntu20.25"
              },
              "help": {
                "text": "In systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \"allow_active\" element rather than \"allow_any\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2018-10000_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2018-10000] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "libc does not account for all the possible return values from the kernel getcwd(2) syscall; arbitrary code execution may result from applications making further assumptions on the return value from the getcwd(3) libary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2018-12020_ubuntu:trusty:gpgv_1.4.16-1ubuntu2.4",
              "shortDescription": {
                "text": "[CVE-2018-12020] ubuntu:trusty:gpgv 1.4.16-1ubuntu2.4"
              },
              "help": {
                "text": "Marcus Brinkmann discovered that GnuPG before 2.2.8 improperly handled certain command line parameters. A remote attacker could use this to spoof the output of GnuPG and cause unsigned e-mail to appear signed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-12015_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-12015] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "In Perl through 5.26.2, the Archive::Tar module allows remote attackers to bypass a directory-traversal protection mechanism, and overwrite arbitrary files, via an archive file containing a symlink and a regular file with the same name.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-7526_ubuntu:trusty:gpgv_1.4.16-1ubuntu2.4",
              "shortDescription": {
                "text": "[CVE-2017-7526] ubuntu:trusty:gpgv 1.4.16-1ubuntu2.4"
              },
              "help": {
                "text": "libgcrypt before version 1.7.8 is vulnerable to a cache side-channel attack resulting into a complete break of RSA-1024 while using the left-to-right method for computing the sliding-window expansion. The same attack is believed to work on RSA-2048 with moderately more computation. This side-channel requires that attacker can run arbitrary software on the hardware where the private RSA key is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.8"
              }
            },
            {
              "id": "CVE-2018-14647_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-14647] ubuntu:trusty:libpython3.4-stdlib 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-3842_ubuntu:trusty:libudev1_204-5ubuntu20.25",
              "shortDescription": {
                "text": "[CVE-2019-3842] ubuntu:trusty:libudev1 204-5ubuntu20.25"
              },
              "help": {
                "text": "In systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \"allow_active\" element rather than \"allow_any\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2019-5747_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2019-5747] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-14647_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-14647] ubuntu:trusty:libpython3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-10000_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2018-10000] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "libc does not account for all the possible return values from the kernel getcwd(2) syscall; arbitrary code execution may result from applications making further assumptions on the return value from the getcwd(3) libary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2018-1125_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1125] ubuntu:trusty:libprocps3:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to a stack buffer overflow in pgrep. This vulnerability is mitigated by FORTIFY, as it involves strncat() to a stack-allocated string. When pgrep is compiled with FORTIFY (as on Red Hat Enterprise Linux and Fedora), the impact is limited to a crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1122_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1122] ubuntu:trusty:libprocps3:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to a local privilege escalation in top. If a user runs top with HOME unset in an attacker-controlled directory, the attacker could achieve privilege escalation by exploiting one of several vulnerabilities in the config_file() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2018-10000_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2018-10000] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "libc does not account for all the possible return values from the kernel getcwd(2) syscall; arbitrary code execution may result from applications making further assumptions on the return value from the getcwd(3) libary function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2018-0739_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
              "shortDescription": {
                "text": "[CVE-2018-0739] ubuntu:trusty:libssl1.0.0 1.0.1f-1ubuntu2.23"
              },
              "help": {
                "text": "Constructed ASN.1 types with a recursive definition (such as can be found in PKCS7) could eventually exceed the stack given malicious input with excessive recursion. This could result in a Denial Of Service attack. There are no such structures used within SSL/TLS that come from untrusted sources so this is considered safe. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g). Fixed in OpenSSL 1.0.2o (Affected 1.0.2b-1.0.2n).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-6913_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-6913] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Heap-based buffer overflow in the pack function in Perl before 5.26.2 allows context-dependent attackers to execute arbitrary code via a large item count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14598_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
              "shortDescription": {
                "text": "[CVE-2018-14598] ubuntu:trusty:libx11-6:2 1.6.2-1ubuntu2"
              },
              "help": {
                "text": "An issue was discovered in XListExtensions in ListExt.c in libX11 through 1.6.5. A malicious server can send a reply in which the first string overflows, causing a variable to be set to NULL that will be freed later on, leading to DoS (segmentation fault).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1049_ubuntu:trusty:udev_204-5ubuntu20.25",
              "shortDescription": {
                "text": "[CVE-2018-1049] ubuntu:trusty:udev 204-5ubuntu20.25"
              },
              "help": {
                "text": "In systemd prior to 234 a race condition exists between .mount and .automount units such that automount requests from kernel may not be serviced by systemd resulting in kernel holding the mountpoint and any processes that try to use said mount will hang. A race condition like this may lead to denial of service, until mount points are unmounted.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2015-9261_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2015-9261] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "huft_build in archival/libarchive/decompress_gunzip.c in BusyBox before 1.27.2 misuses a pointer, causing segfaults and an application crash during an unzip operation on a specially crafted ZIP file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2018-18313_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-18313] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Perl before 5.26.3 has a buffer over-read via a crafted regular expression that triggers disclosure of sensitive information from process memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2017-16544_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2017-16544] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "In the add_match function in libbb/lineedit.c in BusyBox through 1.27.2, the tab autocomplete feature of the shell, used to get a list of filenames in a directory, does not sanitize filenames and results in executing any escape sequence in the terminal. This could potentially result in code execution, arbitrary file writes, or other attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-1123_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1123] ubuntu:trusty:libprocps3:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to a denial of service in ps via mmap buffer overflow. Inbuilt protection in ps maps a guard page at the end of the overflowed buffer, ensuring that the impact of this flaw is limited to a crash (temporary denial of service).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-5732_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2018-5732] ubuntu:trusty:isc-dhcp-client 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "Failure to properly bounds-check a buffer used for processing DHCP options allows a malicious server (or an entity masquerading as a server) to cause a buffer overflow (and resulting crash) in dhclient by sending a response containing a specially constructed options section. Affects ISC DHCP versions 4.1.0 -\u003e 4.1-ESV-R15, 4.2.0 -\u003e 4.2.8, 4.3.0 -\u003e 4.3.6, 4.4.0",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-14647_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-14647] ubuntu:trusty:python3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-12015_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-12015] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "In Perl through 5.26.2, the Archive::Tar module allows remote attackers to bypass a directory-traversal protection mechanism, and overwrite arbitrary files, via an archive file containing a symlink and a regular file with the same name.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1000802_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1000802] ubuntu:trusty:libpython3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-7183_ubuntu:trusty:ntpdate:1_4.2.6.p5+dfsg-3ubuntu2.14.04.12",
              "shortDescription": {
                "text": "[CVE-2018-7183] ubuntu:trusty:ntpdate:1 4.2.6.p5+dfsg-3ubuntu2.14.04.12"
              },
              "help": {
                "text": "Buffer overflow in the decodearr function in ntpq in ntp 4.2.8p6 through 4.2.8p10 allows remote attackers to execute arbitrary code by leveraging an ntpq query and sending a response with a crafted array.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-5733_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2018-5733] ubuntu:trusty:isc-dhcp-common 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "A malicious client which is allowed to send very large amounts of traffic (billions of packets) to a DHCP server can eventually overflow a 32-bit reference counter, potentially causing dhcpd to crash. Affects ISC DHCP 4.1.0 -\u003e 4.1-ESV-R15, 4.2.0 -\u003e 4.2.8, 4.3.0 -\u003e 4.3.6, 4.4.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-6913_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-6913] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Heap-based buffer overflow in the pack function in Perl before 5.26.2 allows context-dependent attackers to execute arbitrary code via a large item count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-1124_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1124] ubuntu:trusty:libprocps3:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to multiple integer overflows leading to a heap corruption in file2strvec function. This allows a privilege escalation for a local attacker who can create entries in procfs by starting processes, which could result in crashes or arbitrary code execution in proc utilities run by other users.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-1000802_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1000802] ubuntu:trusty:libpython3.4-stdlib 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-5733_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2018-5733] ubuntu:trusty:isc-dhcp-client 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "A malicious client which is allowed to send very large amounts of traffic (billions of packets) to a DHCP server can eventually overflow a 32-bit reference counter, potentially causing dhcpd to crash. Affects ISC DHCP 4.1.0 -\u003e 4.1-ESV-R15, 4.2.0 -\u003e 4.2.8, 4.3.0 -\u003e 4.3.6, 4.4.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-5732_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2018-5732] ubuntu:trusty:isc-dhcp-common 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "Failure to properly bounds-check a buffer used for processing DHCP options allows a malicious server (or an entity masquerading as a server) to cause a buffer overflow (and resulting crash) in dhclient by sending a response containing a specially constructed options section. Affects ISC DHCP versions 4.1.0 -\u003e 4.1-ESV-R15, 4.2.0 -\u003e 4.2.8, 4.3.0 -\u003e 4.3.6, 4.4.0",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1126_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1126] ubuntu:trusty:libprocps3:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to an incorrect integer size in proc/alloc.* leading to truncation/integer overflow issues. This flaw is related to CVE-2018-1124.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-10241_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2019-10241] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [9.2.27.v20190403], [9.3.26.v20190403], [9.4.16.v20190411]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-8932_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2017-8932] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "A bug in the standard library ScalarMult implementation of curve P-256 for amd64 architectures in Go before 1.7.6 and 1.8.x before 1.8.2 causes incorrect results to be generated for specific input points. An adaptive attack can be mounted to progressively extract the scalar input to ScalarMult by submitting crafted points and observing failures to the derive correct output. This leads to a full key recovery attack against static ECDH, as used in popular JWT libraries.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.7.6], [1.8.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2018-1000802_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1000802] ubuntu:trusty:python3.4 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [3.4.3-1ubuntu1~14.04.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2017-8932_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2017-8932] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "A bug in the standard library ScalarMult implementation of curve P-256 for amd64 architectures in Go before 1.7.6 and 1.8.x before 1.8.2 causes incorrect results to be generated for specific input points. An adaptive attack can be mounted to progressively extract the scalar input to ScalarMult by submitting crafted points and observing failures to the derive correct output. This leads to a full key recovery attack against static ECDH, as used in popular JWT libraries.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.7.6], [1.8.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2014-3577_org.apache.httpcomponents:httpclient_4.3.1",
              "shortDescription": {
                "text": "[CVE-2014-3577] org.apache.httpcomponents:httpclient 4.3.1"
              },
              "help": {
                "text": "org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \"CN=\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \"foo,CN=www.apache.org\" string in the O field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.3.5]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-25710_org.apache.commons:commons-compress_1.5",
              "shortDescription": {
                "text": "[CVE-2024-25710] org.apache.commons:commons-compress 1.5"
              },
              "help": {
                "text": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.26.0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.7"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-40167_org.eclipse.jetty:jetty-http_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2023-40167] org.eclipse.jetty:jetty-http 9.2.26.v20180806"
              },
              "help": {
                "text": "Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.16], [11.0.16], [12.0.1], [9.4.52]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-1123_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1123] ubuntu:trusty:procps:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to a denial of service in ps via mmap buffer overflow. Inbuilt protection in ps maps a guard page at the end of the overflowed buffer, ensuring that the impact of this flaw is limited to a crash (temporary denial of service).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:3.3.9-1ubuntu2.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-45860_com.hazelcast:hazelcast_3.8",
              "shortDescription": {
                "text": "[CVE-2023-45860] com.hazelcast:hazelcast 3.8"
              },
              "help": {
                "text": "In Hazelcast Platform through 5.3.4, a security issue exists within the SQL mapping for the CSV File Source connector. This issue arises from inadequate permission checking, which could enable unauthorized clients to access data from files stored on a member's filesystem.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [5.2.5], [5.3.5]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-26049_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2023-26049] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.14], [11.0.14], [12.0.0.beta0], [9.4.51.v20230217]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.7"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2017-7526_ubuntu:trusty:gnupg_1.4.16-1ubuntu2.4",
              "shortDescription": {
                "text": "[CVE-2017-7526] ubuntu:trusty:gnupg 1.4.16-1ubuntu2.4"
              },
              "help": {
                "text": "libgcrypt before version 1.7.8 is vulnerable to a cache side-channel attack resulting into a complete break of RSA-1024 while using the left-to-right method for computing the sliding-window expansion. The same attack is believed to work on RSA-2048 with moderately more computation. This side-channel requires that attacker can run arbitrary software on the hardware where the private RSA key is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1.4.16-1ubuntu2.6]   |"
              },
              "properties": {
                "security-severity": "6.8"
              }
            },
            {
              "id": "CVE-2019-10247_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2019-10247] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [9.2.28.v20190418], [9.3.27.v20190418], [9.4.17.v20190418]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-28169_org.eclipse.jetty:jetty-servlets_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2021-28169] org.eclipse.jetty:jetty-servlets 9.2.26.v20180806"
              },
              "help": {
                "text": "For Eclipse Jetty versions \u003c= 9.4.40, \u003c= 10.0.2, \u003c= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.3], [11.0.3], [9.4.41]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2019-10246_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2019-10246] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [9.2.28.v20190418], [9.3.27.v20190418], [9.4.17.v20190418]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-8932_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2017-8932] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "A bug in the standard library ScalarMult implementation of curve P-256 for amd64 architectures in Go before 1.7.6 and 1.8.x before 1.8.2 causes incorrect results to be generated for specific input points. An adaptive attack can be mounted to progressively extract the scalar input to ScalarMult by submitting crafted points and observing failures to the derive correct output. This leads to a full key recovery attack against static ECDH, as used in popular JWT libraries.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.7.6], [1.8.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-14647_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-14647] ubuntu:trusty:python3.4 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [3.4.3-1ubuntu1~14.04.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.9"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-12020_ubuntu:trusty:gnupg_1.4.16-1ubuntu2.4",
              "shortDescription": {
                "text": "[CVE-2018-12020] ubuntu:trusty:gnupg 1.4.16-1ubuntu2.4"
              },
              "help": {
                "text": "Marcus Brinkmann discovered that GnuPG before 2.2.8 improperly handled certain command line parameters. A remote attacker could use this to spoof the output of GnuPG and cause unsigned e-mail to appear signed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1.4.16-1ubuntu2.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1124_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1124] ubuntu:trusty:procps:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to multiple integer overflows leading to a heap corruption in file2strvec function. This allows a privilege escalation for a local attacker who can create entries in procfs by starting processes, which could result in crashes or arbitrary code execution in proc utilities run by other users.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:3.3.9-1ubuntu2.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-6913_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-6913] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Heap-based buffer overflow in the pack function in Perl before 5.26.2 allows context-dependent attackers to execute arbitrary code via a large item count.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-33264_com.hazelcast:hazelcast_3.8",
              "shortDescription": {
                "text": "[CVE-2023-33264] com.hazelcast:hazelcast 3.8"
              },
              "help": {
                "text": "In Hazelcast through 5.0.4, 5.1 through 5.1.6, and 5.2 through 5.2.3, configuration routines don't mask passwords in the member configuration properly. This allows Hazelcast Management Center users to view some of the secrets.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [5.3.0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2018-1122_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1122] ubuntu:trusty:procps:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to a local privilege escalation in top. If a user runs top with HOME unset in an attacker-controlled directory, the attacker could achieve privilege escalation by exploiting one of several vulnerabilities in the config_file() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:3.3.9-1ubuntu2.3]   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2018-12536_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2018-12536] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [9.3.24.v20180605], [9.4.11.v20180605]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2018-18313_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-18313] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Perl before 5.26.3 has a buffer over-read via a crafted regular expression that triggers disclosure of sensitive information from process memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-52428_com.nimbusds:nimbus-jose-jwt_4.12",
              "shortDescription": {
                "text": "[CVE-2023-52428] com.nimbusds:nimbus-jose-jwt 4.12"
              },
              "help": {
                "text": "In Connect2id Nimbus JOSE+JWT before 9.37.2, an attacker can cause a denial of service (resource consumption) via a large JWE p2c header value (aka iteration count) for the PasswordBasedDecrypter (PBKDF2) component.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [9.37.2]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2018-1126_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1126] ubuntu:trusty:procps:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to an incorrect integer size in proc/alloc.* leading to truncation/integer overflow issues. This flaw is related to CVE-2018-1124.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:3.3.9-1ubuntu2.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2017-8932_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2017-8932] github.com/golang/go 1.7"
              },
              "help": {
                "text": "A bug in the standard library ScalarMult implementation of curve P-256 for amd64 architectures in Go before 1.7.6 and 1.8.x before 1.8.2 causes incorrect results to be generated for specific input points. An adaptive attack can be mounted to progressively extract the scalar input to ScalarMult by submitting crafted points and observing failures to the derive correct output. This leads to a full key recovery attack against static ECDH, as used in popular JWT libraries.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.7.6], [1.8.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.9"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-1125_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
              "shortDescription": {
                "text": "[CVE-2018-1125] ubuntu:trusty:procps:1 3.3.9-1ubuntu2.2"
              },
              "help": {
                "text": "procps-ng before version 3.3.15 is vulnerable to a stack buffer overflow in pgrep. This vulnerability is mitigated by FORTIFY, as it involves strncat() to a stack-allocated string. When pgrep is compiled with FORTIFY (as on Red Hat Enterprise Linux and Fedora), the impact is limited to a crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:3.3.9-1ubuntu2.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-12015_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2018-12015] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "In Perl through 5.26.2, the Archive::Tar module allows remote attackers to bypass a directory-traversal protection mechanism, and overwrite arbitrary files, via an archive file containing a symlink and a regular file with the same name.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.6]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "XRAY-79102_commons-io:commons-io_2.4",
              "shortDescription": {
                "text": "[XRAY-79102] commons-io:commons-io 2.4"
              },
              "help": {
                "text": "ValidatingObjectInputStream contribution - restrict which classes can be deserialized",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.5]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.9"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2015-5262_org.apache.httpcomponents:httpclient_4.3.1",
              "shortDescription": {
                "text": "[CVE-2015-5262] org.apache.httpcomponents:httpclient 4.3.1"
              },
              "help": {
                "text": "http/conn/ssl/SSLConnectionSocketFactory.java in Apache HttpComponents HttpClient before 4.3.6 ignores the http.socket.timeout configuration setting during an SSL handshake, which allows remote attackers to cause a denial of service (HTTPS call hang) via unspecified vectors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.3.6]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-36479_org.eclipse.jetty:jetty-servlets_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2023-36479] org.eclipse.jetty:jetty-servlets 9.2.26.v20180806"
              },
              "help": {
                "text": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.16], [11.0.16], [9.4.52]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.7"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-17512_ubuntu:trusty:sensible-utils_0.0.9",
              "shortDescription": {
                "text": "[CVE-2017-17512] ubuntu:trusty:sensible-utils 0.0.9"
              },
              "help": {
                "text": "sensible-browser in sensible-utils before 0.0.11 does not validate strings before launching the program specified by the BROWSER environment variable, which allows remote attackers to conduct argument-injection attacks via a crafted URL, as demonstrated by a --proxy-pac-file argument.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [0.0.9ubuntu0.14.04.1]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2014-9653_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2014-9653] ubuntu:trusty:libmagic1:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "readelf.c in file before 5.22, as used in the Fileinfo component in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5, does not consider that pread calls sometimes read only a subset of the available data, which allows remote attackers to cause a denial of service (uninitialized memory access) or possibly have unspecified other impact via a crafted ELF file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2017-16997_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-16997] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "elf/dl-load.c in the GNU C Library (aka glibc or libc6) 2.19 through 2.26 mishandles RPATH and RUNPATH containing $ORIGIN for a privileged (setuid or AT_SECURE) program, which allows local users to gain privileges via a Trojan horse library in the current working directory, related to the fillin_rpath and decompose_rpath functions. This is associated with misinterpretion of an empty RPATH/RUNPATH token as the \"./\" directory. NOTE: this configuration of RPATH/RUNPATH for a privileged program is apparently very uncommon; most likely, no such program is shipped with any common Linux distribution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-2047_org.eclipse.jetty:jetty-http_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2022-2047] org.eclipse.jetty:jetty-http 9.2.26.v20180806"
              },
              "help": {
                "text": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.7      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.10], [11.0.10], [9.4.47]   |"
              },
              "properties": {
                "security-severity": "2.7"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2016-2147_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2016-2147] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "Integer overflow in the DHCP client (udhcpc) in BusyBox before 1.25.0 allows remote attackers to cause a denial of service (crash) via a malformed RFC1035-encoded domain name, which triggers an out-of-bounds heap write.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-15873_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2017-15873] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "The get_next_block function in archival/libarchive/decompress_bunzip2.c in BusyBox 1.27.2 has an Integer Overflow that may lead to a write access violation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2018-1061_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1061] ubuntu:trusty:libpython3.4-stdlib 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-34428_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
              "shortDescription": {
                "text": "[CVE-2021-34428] org.eclipse.jetty:jetty-server 9.2.26.v20180806"
              },
              "help": {
                "text": "For Eclipse Jetty versions \u003c= 9.4.40, \u003c= 10.0.2, \u003c= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.5      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [10.0.3], [11.0.3], [9.4.41]   |"
              },
              "properties": {
                "security-severity": "3.5"
              }
            },
            {
              "id": "CVE-2017-1000408_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-1000408] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "A memory leak in glibc 2.1.1 (released on May 24, 1999) can be reached and amplified through the LD_HWCAP_MASK environment variable. Please note that many versions of glibc are not vulnerable to this issue if patched for CVE-2017-1000366.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2016-2774_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2016-2774] ubuntu:trusty:isc-dhcp-common 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "ISC DHCP 4.1.x before 4.1-ESV-R13 and 4.2.x and 4.3.x before 4.3.4 does not restrict the number of concurrent TCP sessions, which allows remote attackers to cause a denial of service (INSIST assertion failure or request-processing outage) by establishing many sessions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2018-10360_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2018-10360] ubuntu:trusty:libmagic1:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The do_core_note function in readelf.c in libmagic.a in file 5.33 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-0495_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
              "shortDescription": {
                "text": "[CVE-2018-0495] ubuntu:trusty:libssl1.0.0 1.0.1f-1ubuntu2.23"
              },
              "help": {
                "text": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2018-5407_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
              "shortDescription": {
                "text": "[CVE-2018-5407] ubuntu:trusty:libssl1.0.0 1.0.1f-1ubuntu2.23"
              },
              "help": {
                "text": "Simultaneous Multi-threading (SMT) in processors can enable local users to exploit software vulnerable to timing attacks via a side-channel timing attack on 'port contention'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2018-1060_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1060] ubuntu:trusty:libpython3.4-stdlib 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2014-9621_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2014-9621] ubuntu:trusty:file:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The ELF parser in file 5.16 through 5.21 allows remote attackers to cause a denial of service via a long string.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:5.14-2ubuntu3.4]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2014-9621_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2014-9621] ubuntu:trusty:libmagic1:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The ELF parser in file 5.16 through 5.21 allows remote attackers to cause a denial of service via a long string.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2017-6512_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2017-6512] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Race condition in the rmtree and remove_tree functions in the File-Path module before 2.13 for Perl allows attackers to set the mode on arbitrary files via vectors involving directory-permission loosening logic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2017-1000408_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-1000408] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "A memory leak in glibc 2.1.1 (released on May 24, 1999) can be reached and amplified through the LD_HWCAP_MASK environment variable. Please note that many versions of glibc are not vulnerable to this issue if patched for CVE-2017-1000366.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2015-8853_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2015-8853] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "The (1) S_reghop3, (2) S_reghop4, and (3) S_reghopmaybe3 functions in regexec.c in Perl before 5.24.0 allow context-dependent attackers to cause a denial of service (infinite loop) via crafted utf-8 data, as demonstrated by \"a\\x80.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-10790_ubuntu:trusty:libtasn1-6_3.4-3ubuntu0.5",
              "shortDescription": {
                "text": "[CVE-2017-10790] ubuntu:trusty:libtasn1-6 3.4-3ubuntu0.5"
              },
              "help": {
                "text": "The _asn1_check_identifier function in GNU Libtasn1 through 4.12 causes a NULL pointer dereference and crash when reading crafted input that triggers assignment of a NULL value within an asn1_node structure. It may lead to a remote denial of service attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [3.4-3ubuntu0.6]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000409_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-1000409] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "A buffer overflow in glibc 2.5 (released on September 29, 2006) and can be triggered through the LD_LIBRARY_PATH environment variable. Please note that many versions of glibc are not vulnerable to this issue if patched for CVE-2017-1000366.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2017-16997_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-16997] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "elf/dl-load.c in the GNU C Library (aka glibc or libc6) 2.19 through 2.26 mishandles RPATH and RUNPATH containing $ORIGIN for a privileged (setuid or AT_SECURE) program, which allows local users to gain privileges via a Trojan horse library in the current working directory, related to the fillin_rpath and decompose_rpath functions. This is associated with misinterpretion of an empty RPATH/RUNPATH token as the \"./\" directory. NOTE: this configuration of RPATH/RUNPATH for a privileged program is apparently very uncommon; most likely, no such program is shipped with any common Linux distribution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2017-3144_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2017-3144] ubuntu:trusty:isc-dhcp-client 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "A vulnerability stemming from failure to properly clean up closed OMAPI connections can lead to exhaustion of the pool of socket descriptors available to the DHCP server. Affects ISC DHCP 4.1.0 to 4.1-ESV-R15, 4.2.0 to 4.2.8, 4.3.0 to 4.3.6. Older versions may also be affected but are well beyond their end-of-life (EOL). Releases prior to 4.1.0 have not been tested.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2014-9645_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2014-9645] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "The add_probe function in modutils/modprobe.c in BusyBox before 1.23.0 allows local users to bypass intended restrictions on loading kernel modules via a / (slash) character in a module name, as demonstrated by an \"ifconfig /usbserial up\" command or a \"mount -t /snd_pcm none /\" command.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2014-9620_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2014-9620] ubuntu:trusty:libmagic1:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The ELF parser in file 5.08 through 5.21 allows remote attackers to cause a denial of service via a large number of notes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-1061_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1061] ubuntu:trusty:python3.4 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [3.4.3-1ubuntu1~14.04.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-6512_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2017-6512] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Race condition in the rmtree and remove_tree functions in the File-Path module before 2.13 for Perl allows attackers to set the mode on arbitrary files via vectors involving directory-permission loosening logic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2018-20679_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2018-20679] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-6185_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2016-6185] ubuntu:trusty:perl-base 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "The XSLoader::load method in XSLoader in Perl does not properly locate .so files when called in a string eval, which might allow local users to execute arbitrary code via a Trojan horse library under the current working directory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-0495_ubuntu:trusty:libgcrypt11_1.5.3-2ubuntu4.5",
              "shortDescription": {
                "text": "[CVE-2018-0495] ubuntu:trusty:libgcrypt11 1.5.3-2ubuntu4.5"
              },
              "help": {
                "text": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1.5.3-2ubuntu4.6]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2018-1061_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1061] ubuntu:trusty:libpython3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2014-9653_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2014-9653] ubuntu:trusty:file:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "readelf.c in file before 5.22, as used in the Fileinfo component in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5, does not consider that pread calls sometimes read only a subset of the available data, which allows remote attackers to cause a denial of service (uninitialized memory access) or possibly have unspecified other impact via a crafted ELF file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:5.14-2ubuntu3.4]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-10360_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2018-10360] ubuntu:trusty:file:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The do_core_note function in readelf.c in libmagic.a in file 5.33 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:5.14-2ubuntu3.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-1000409_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-1000409] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "A buffer overflow in glibc 2.5 (released on September 29, 2006) and can be triggered through the LD_LIBRARY_PATH environment variable. Please note that many versions of glibc are not vulnerable to this issue if patched for CVE-2017-1000366.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2015-8865_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2015-8865] ubuntu:trusty:file:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The file_check_mem function in funcs.c in file before 5.23, as used in the Fileinfo component in PHP before 5.5.34, 5.6.x before 5.6.20, and 7.x before 7.0.5, mishandles continuation-level jumps, which allows context-dependent attackers to cause a denial of service (buffer overflow and application crash) or possibly execute arbitrary code via a crafted magic file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:5.14-2ubuntu3.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2018-1060_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1060] ubuntu:trusty:python3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000409_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-1000409] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "A buffer overflow in glibc 2.5 (released on September 29, 2006) and can be triggered through the LD_LIBRARY_PATH environment variable. Please note that many versions of glibc are not vulnerable to this issue if patched for CVE-2017-1000366.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2018-0734_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
              "shortDescription": {
                "text": "[CVE-2018-0734] ubuntu:trusty:libssl1.0.0 1.0.1f-1ubuntu2.23"
              },
              "help": {
                "text": "The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2017-12973_com.nimbusds:nimbus-jose-jwt_4.12",
              "shortDescription": {
                "text": "[CVE-2017-12973] com.nimbusds:nimbus-jose-jwt 4.12"
              },
              "help": {
                "text": "Nimbus JOSE+JWT before 4.39 proceeds improperly after detection of an invalid HMAC in authenticated AES-CBC decryption, which allows attackers to conduct a padding oracle attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.39]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2016-7942_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
              "shortDescription": {
                "text": "[CVE-2016-7942] ubuntu:trusty:libx11-6:2 1.6.2-1ubuntu2"
              },
              "help": {
                "text": "The XGetImage function in X.org libX11 before 1.6.4 might allow remote X servers to gain privileges via vectors involving image type and geometry, which triggers out-of-bounds read operations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-16997_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-16997] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "elf/dl-load.c in the GNU C Library (aka glibc or libc6) 2.19 through 2.26 mishandles RPATH and RUNPATH containing $ORIGIN for a privileged (setuid or AT_SECURE) program, which allows local users to gain privileges via a Trojan horse library in the current working directory, related to the fillin_rpath and decompose_rpath functions. This is associated with misinterpretion of an empty RPATH/RUNPATH token as the \"./\" directory. NOTE: this configuration of RPATH/RUNPATH for a privileged program is apparently very uncommon; most likely, no such program is shipped with any common Linux distribution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2017-3144_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2017-3144] ubuntu:trusty:isc-dhcp-common 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "A vulnerability stemming from failure to properly clean up closed OMAPI connections can lead to exhaustion of the pool of socket descriptors available to the DHCP server. Affects ISC DHCP 4.1.0 to 4.1-ESV-R15, 4.2.0 to 4.2.8, 4.3.0 to 4.3.6. Older versions may also be affected but are well beyond their end-of-life (EOL). Releases prior to 4.1.0 have not been tested.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2015-8853_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2015-8853] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "The (1) S_reghop3, (2) S_reghop4, and (3) S_reghopmaybe3 functions in regexec.c in Perl before 5.24.0 allow context-dependent attackers to cause a denial of service (infinite loop) via crafted utf-8 data, as demonstrated by \"a\\x80.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2011-5325_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2011-5325] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "Directory traversal vulnerability in the BusyBox implementation of tar before 1.22.0 v5 allows remote attackers to point to files outside the current working directory via a symlink.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1060_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1060] ubuntu:trusty:libpython3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2015-8853_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2015-8853] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "The (1) S_reghop3, (2) S_reghop4, and (3) S_reghopmaybe3 functions in regexec.c in Perl before 5.24.0 allow context-dependent attackers to cause a denial of service (infinite loop) via crafted utf-8 data, as demonstrated by \"a\\x80.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-6512_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2017-6512] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "Race condition in the rmtree and remove_tree functions in the File-Path module before 2.13 for Perl allows attackers to set the mode on arbitrary files via vectors involving directory-permission loosening logic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.4]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2018-0737_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
              "shortDescription": {
                "text": "[CVE-2018-0737] ubuntu:trusty:libssl1.0.0 1.0.1f-1ubuntu2.23"
              },
              "help": {
                "text": "The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to a cache timing side channel attack. An attacker with sufficient access to mount cache timing attacks during the RSA key generation process could recover the private key. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2b-1.0.2o).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2014-9620_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2014-9620] ubuntu:trusty:file:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The ELF parser in file 5.08 through 5.21 allows remote attackers to cause a denial of service via a large number of notes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | [1:5.14-2ubuntu3.4]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-0732_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
              "shortDescription": {
                "text": "[CVE-2018-0732] ubuntu:trusty:libssl1.0.0 1.0.1f-1ubuntu2.23"
              },
              "help": {
                "text": "During key agreement in a TLS handshake using a DH(E) based ciphersuite a malicious server can send a very large prime value to the client. This will cause the client to spend an unreasonably long period of time generating a key for this prime resulting in a hang until the client has finished. This could be exploited in a Denial Of Service attack. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2-1.0.2o).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000408_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-1000408] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "A memory leak in glibc 2.1.1 (released on May 24, 1999) can be reached and amplified through the LD_HWCAP_MASK environment variable. Please note that many versions of glibc are not vulnerable to this issue if patched for CVE-2017-1000366.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-1061_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1061] ubuntu:trusty:python3.4-minimal 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-10087_ubuntu:trusty:libpng12-0_1.2.50-1ubuntu2.14.04.2",
              "shortDescription": {
                "text": "[CVE-2016-10087] ubuntu:trusty:libpng12-0 1.2.50-1ubuntu2.14.04.2"
              },
              "help": {
                "text": "The png_set_text_2 function in libpng 0.71 before 1.0.67, 1.2.x before 1.2.57, 1.4.x before 1.4.20, 1.5.x before 1.5.28, and 1.6.x before 1.6.27 allows context-dependent attackers to cause a NULL pointer dereference vectors involving loading a text chunk into a png structure, removing the text, and then adding another text chunk to the structure.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-6185_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2016-6185] ubuntu:trusty:perl-modules 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "The XSLoader::load method in XSLoader in Perl does not properly locate .so files when called in a string eval, which might allow local users to execute arbitrary code via a Trojan horse library under the current working directory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2016-2774_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
              "shortDescription": {
                "text": "[CVE-2016-2774] ubuntu:trusty:isc-dhcp-client 4.2.4-7ubuntu12.10"
              },
              "help": {
                "text": "ISC DHCP 4.1.x before 4.1-ESV-R13 and 4.2.x and 4.3.x before 4.3.4 does not restrict the number of concurrent TCP sessions, which allows remote attackers to cause a denial of service (INSIST assertion failure or request-processing outage) by establishing many sessions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2016-2148_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
              "shortDescription": {
                "text": "[CVE-2016-2148] ubuntu:trusty:busybox-initramfs:1 1.21.0-1ubuntu1"
              },
              "help": {
                "text": "Heap-based buffer overflow in the DHCP client (udhcpc) in BusyBox before 1.25.0 allows remote attackers to have unspecified impact via vectors involving OPTION_6RD parsing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-8740_ubuntu:trusty:libsqlite3-0_3.8.2-1ubuntu2.1",
              "shortDescription": {
                "text": "[CVE-2018-8740] ubuntu:trusty:libsqlite3-0 3.8.2-1ubuntu2.1"
              },
              "help": {
                "text": "In SQLite through 3.22.0, databases whose schema is corrupted using a CREATE TABLE AS statement could cause a NULL pointer dereference, related to build.c and prepare.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1060_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
              "shortDescription": {
                "text": "[CVE-2018-1060] ubuntu:trusty:python3.4 3.4.3-1ubuntu1~14.04.6"
              },
              "help": {
                "text": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [3.4.3-1ubuntu1~14.04.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2015-8865_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
              "shortDescription": {
                "text": "[CVE-2015-8865] ubuntu:trusty:libmagic1:1 5.14-2ubuntu3.3"
              },
              "help": {
                "text": "The file_check_mem function in funcs.c in file before 5.23, as used in the Fileinfo component in PHP before 5.5.34, 5.6.x before 5.6.20, and 7.x before 7.0.5, mishandles continuation-level jumps, which allows context-dependent attackers to cause a denial of service (buffer overflow and application crash) or possibly execute arbitrary code via a crafted magic file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2016-7943_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
              "shortDescription": {
                "text": "[CVE-2016-7943] ubuntu:trusty:libx11-6:2 1.6.2-1ubuntu2"
              },
              "help": {
                "text": "The XListFonts function in X.org libX11 before 1.6.4 might allow remote X servers to gain privileges via vectors involving length fields, which trigger out-of-bounds write operations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2016-6185_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
              "shortDescription": {
                "text": "[CVE-2016-6185] ubuntu:trusty:perl 5.18.2-2ubuntu1.3"
              },
              "help": {
                "text": "The XSLoader::load method in XSLoader in Perl does not properly locate .so files when called in a string eval, which might allow local users to execute arbitrary code via a Trojan horse library under the current working directory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar `       | [5.18.2-2ubuntu1.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-7185_ubuntu:trusty:ntpdate:1_4.2.6.p5+dfsg-3ubuntu2.14.04.12",
              "shortDescription": {
                "text": "[CVE-2018-7185] ubuntu:trusty:ntpdate:1 4.2.6.p5+dfsg-3ubuntu2.14.04.12"
              },
              "help": {
                "text": "The protocol engine in ntp 4.2.6 before 4.2.8p11 allows a remote attackers to cause a denial of service (disruption) by continually sending a packet with a zero-origin timestamp and source IP address of the \"other side\" of an interleaved association causing the victim ntpd to reset its association.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2022-0839_org.liquibase:liquibase-core_3.1.0",
              "shortDescription": {
                "text": "[CVE-2022-0839] org.liquibase:liquibase-core 3.1.0"
              },
              "help": {
                "text": "Improper Restriction of XML External Entity Reference in GitHub repository liquibase/liquibase prior to 4.8.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.8.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14540_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-14540] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-16942_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-16942] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.10.1], [2.6.7.3], [2.7.9.7], [2.8.11.5], [2.9.10.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-9547_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-9547] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-20330_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-20330] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.7.9.7], [2.8.11.5], [2.9.10.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-8840_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-8840] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.7.9.7], [2.8.11.5], [2.9.10.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-17485_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2017-17485] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.8.11], [2.9.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-19360_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-19360] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-19361_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-19361] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14379_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-14379] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.9.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14721_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-14721] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 10.0      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.2], [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "10.0"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-7489_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-7489] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.8.11.1], [2.9.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-17531_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-17531] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-9548_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-9548] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14719_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-14719] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-19362_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-19362] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-9546_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-9546] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-16335_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-16335] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14718_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-14718] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14892_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-14892] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.3], [2.8.11.5], [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-16943_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-16943] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-17267_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-17267] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14720_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-14720] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.2], [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-7525_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2017-7525] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.1], [2.7.9.1], [2.8.9]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-11307_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-11307] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.7.9.4], [2.8.11.2], [2.9.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14893_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-14893] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.3], [2.7.9.7], [2.8.11.5], [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15095_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2017-15095] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.8.11], [2.9.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.9"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.9"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42003_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2022-42003] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.12.7.1], [2.13.4.1], [2.14.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-14062_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-14062] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.9.10.5]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-11619_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-11619] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-35728_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-35728] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-35490_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-35490] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36180_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36180] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.7"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.9"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.9"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.7"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-14060_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-14060] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.9.10.5]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36183_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36183] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-25649_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-25649] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.10.5.1], [2.6.7.4], [2.9.10.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.7"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2018-5968_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-5968] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.8.11], [2.9.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-35491_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-35491] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-24616_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-24616] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.6]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42004_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2022-42004] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.12.7.1], [2.13.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36185_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36185] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-35515_org.apache.commons:commons-compress_1.5",
              "shortDescription": {
                "text": "[CVE-2021-35515] org.apache.commons:commons-compress 1.5"
              },
              "help": {
                "text": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36184_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36184] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000097_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2017-1000097] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "On Darwin, user's trust preferences for root certificates were not honored. If the user had a root certificate loaded in their Keychain that was explicitly not trusted, a Go program would still verify a connection using that root certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.4], [1.7.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-24750_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-24750] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.5], [2.9.10.6]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-36188_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36188] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-2976_com.google.guava:guava_12.0",
              "shortDescription": {
                "text": "[CVE-2023-2976] com.google.guava:guava 12.0"
              },
              "help": {
                "text": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2018-12022_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2018-12022] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.7.9.4], [2.8.11.2], [2.9.6]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-35516_org.apache.commons:commons-compress_1.5",
              "shortDescription": {
                "text": "[CVE-2021-35516] org.apache.commons:commons-compress 1.5"
              },
              "help": {
                "text": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36179_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36179] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-36187_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36187] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-11620_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-11620] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-12086_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-12086] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.9]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.7"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.9"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.9"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.7"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-36186_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36186] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-10673_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-10673] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2017-1000097_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2017-1000097] github.com/golang/go 1.7"
              },
              "help": {
                "text": "On Darwin, user's trust preferences for root certificates were not honored. If the user had a root certificate loaded in their Keychain that was explicitly not trusted, a Go program would still verify a connection using that root certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.4], [1.7.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2976_com.google.guava:guava_15.0",
              "shortDescription": {
                "text": "[CVE-2023-2976] com.google.guava:guava 15.0"
              },
              "help": {
                "text": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2020-10650_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-10650] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A deserialization flaw was discovered in jackson-databind through 2.9.10.4. It could allow an unauthenticated user to perform code execution via ignite-jta or quartz-core: org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup, org.apache.ignite.cache.jta.jndi.CacheJndiTmFactory, and org.quartz.utils.JNDIConnectionProvider.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-1000097_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2017-1000097] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "On Darwin, user's trust preferences for root certificates were not honored. If the user had a root certificate loaded in their Keychain that was explicitly not trusted, a Go program would still verify a connection using that root certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.6.4], [1.7.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36189_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36189] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.7"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-14061_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-14061] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.4], [2.9.10.5]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.9"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-14439_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-14439] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.9.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-10172_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-10172] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.7"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36182_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36182] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-10086_commons-beanutils:commons-beanutils_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-10086] commons-beanutils:commons-beanutils 1.8.3"
              },
              "help": {
                "text": "In Apache Commons Beanutils 1.9.2, a special BeanIntrospector class was added which allows suppressing the ability for an attacker to access the classloader via the class property available on all Java objects. We, however were not using this by default characteristic of the PropertyUtilsBean.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-20190_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2021-20190] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36181_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2020-36181] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-36090_org.apache.commons:commons-compress_1.5",
              "shortDescription": {
                "text": "[CVE-2021-36090] org.apache.commons:commons-compress 1.5"
              },
              "help": {
                "text": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.9"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.7"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.9.3",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.9.3"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-13956_org.apache.httpcomponents:httpclient_4.3.1",
              "shortDescription": {
                "text": "[CVE-2020-13956] org.apache.httpcomponents:httpclient 4.3.1"
              },
              "help": {
                "text": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [4.5.13], [5.0.3]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.9.4",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.9.4"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42550_ch.qos.logback:logback-core_1.2.3",
              "shortDescription": {
                "text": "[CVE-2021-42550] ch.qos.logback:logback-core 1.2.3"
              },
              "help": {
                "text": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.6      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.2.9]   |"
              },
              "properties": {
                "security-severity": "6.6"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-12814_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-12814] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.7",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.7"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.9.7",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.9.7"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.5.1",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.5.1"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.7.5",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.7.5"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.10.1",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.10.1"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-12384_com.fasterxml.jackson.core:jackson-databind_2.5.3",
              "shortDescription": {
                "text": "[CVE-2019-12384] com.fasterxml.jackson.core:jackson-databind 2.5.3"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [2.9.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.7.4",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.7.4"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.9.2",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.9.2"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.9",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.9"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.6.2",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.6.2"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2017-15804_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-15804] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "The glob function in glob.c in the GNU C Library (aka glibc or libc6) before 2.27 contains a buffer overflow during unescaping of user names with the ~ operator.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15670_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-15670] ubuntu:trusty:libc-bin 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "The GNU C Library (aka glibc or libc6) before 2.27 contains an off-by-one error leading to a heap-based buffer overflow in the glob function in glob.c, related to the processing of home directories using the ~ operator followed by a long string.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15670_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-15670] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "The GNU C Library (aka glibc or libc6) before 2.27 contains an off-by-one error leading to a heap-based buffer overflow in the glob function in glob.c, related to the processing of home directories using the ~ operator followed by a long string.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15670_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-15670] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "The GNU C Library (aka glibc or libc6) before 2.27 contains an off-by-one error leading to a heap-based buffer overflow in the glob function in glob.c, related to the processing of home directories using the ~ operator followed by a long string.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-8908_com.google.guava:guava_15.0",
              "shortDescription": {
                "text": "[CVE-2020-8908] com.google.guava:guava 15.0"
              },
              "help": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2020-8908_com.google.guava:guava_12.0",
              "shortDescription": {
                "text": "[CVE-2020-8908] com.google.guava:guava 12.0"
              },
              "help": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Applicable       | `sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar `       | [32.0.0-android]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2017-15804_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-15804] ubuntu:trusty:multiarch-support 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "The glob function in glob.c in the GNU C Library (aka glibc or libc6) before 2.27 contains a buffer overflow during unescaping of user names with the ~ operator.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15804_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
              "shortDescription": {
                "text": "[CVE-2017-15804] ubuntu:trusty:libc6 2.19-0ubuntu6.13"
              },
              "help": {
                "text": "The glob function in glob.c in the GNU C Library (aka glibc or libc6) before 2.27 contains a buffer overflow during unescaping of user names with the ~ operator.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.8.3",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.7.4",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.10.1",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.9.3",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.5.1",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.9.4",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.8.3",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.5.1",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.9.2",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.9.2",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.6.2",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.7",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.9.4",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.8.3",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.9.2",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.9",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.9.4",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.7.5",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.5.1",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.10.1",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.9",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.9",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.9.7",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.7.4",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.9",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.9.3",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.7",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.10.1",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.6.2",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.9.2",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.9.3",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21724_org.postgresql:postgresql_9.4.1208.jre7",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "[CVE-2022-21724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.6.2",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.8.3",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.7",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.10.1",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.7.5",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.9.4",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.9.3",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.7.5",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.6.2",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.9",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.6.2",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.8.3",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1597_org.postgresql:postgresql_9.4.1208.jre7",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2024-1597] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.9.3",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.5.1",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.7.4",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.9.7",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.7",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.9.7",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.9.2",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.7.5",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.5.1",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.9.7",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.7.5",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1471_org.yaml:snakeyaml_1.15",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1471] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.7.4",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.10.1",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.7.4",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.7",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.9.4",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.9.7",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.5.1",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17195_com.nimbusds:nimbus-jose-jwt_4.12",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-36437_com.hazelcast:hazelcast_3.8",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "[CVE-2022-36437] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.7.5",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.6.2",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.9",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.7.4",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.7",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.8.3",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.9",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.9.3",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.9.4",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.6.2",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.5.1",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1370_net.minidev:json-smart_1.3.1",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2023-1370] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.8.3",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.8.3",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.9.7",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.10.1",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.5.1",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.9.2",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.8.3",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.5.1",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.7.4",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.7.5",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.7",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.9.3",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.5.1",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.8.3",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.9.7",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.9",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.9.7",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.9.7",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.9.7",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.9.4",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.6.2",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.9.2",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.5.1",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.5.1",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.9.2",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.5.1",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.6.2",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24998_commons-fileupload:commons-fileupload_1.3.3",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24998] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.10.1",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.9.7",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.10.1",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.10.1",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.9.4",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.10.1",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.9.4",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.9.3",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.7.4",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.7",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.10.1",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.9.2",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.7.4",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.5.1",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.6.2",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.10.1",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.9",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.9.3",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.9.3",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.7.4",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.8.3",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.7",
          "ruleIndex": 127,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.9.3",
          "ruleIndex": 128,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.5.1",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.9",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.9",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.6.2",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.9.3",
          "ruleIndex": 133,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.10.1",
          "ruleIndex": 134,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.9.3",
          "ruleIndex": 135,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.5.1",
          "ruleIndex": 136,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.9.4",
          "ruleIndex": 137,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.9.4",
          "ruleIndex": 138,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.7.5",
          "ruleIndex": 139,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.9.2",
          "ruleIndex": 140,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.9.2",
          "ruleIndex": 141,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.7.5",
          "ruleIndex": 142,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.7.4",
          "ruleIndex": 143,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.9",
          "ruleIndex": 144,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.10.1",
          "ruleIndex": 145,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.8.3",
          "ruleIndex": 146,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.7",
          "ruleIndex": 147,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.9.7",
          "ruleIndex": 148,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.8.3",
          "ruleIndex": 149,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.8.3",
          "ruleIndex": 150,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.7",
          "ruleIndex": 151,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.6.2",
          "ruleIndex": 152,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.9.2",
          "ruleIndex": 153,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.9.4",
          "ruleIndex": 154,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.10.1",
          "ruleIndex": 155,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.7.5",
          "ruleIndex": 156,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.9",
          "ruleIndex": 157,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.9.4",
          "ruleIndex": 158,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.7.4",
          "ruleIndex": 159,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378_ch.qos.logback:logback-core_1.2.3",
          "ruleIndex": 160,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6378] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.9.7",
          "ruleIndex": 161,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.7",
          "ruleIndex": 162,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.10.1",
          "ruleIndex": 163,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.9.4",
          "ruleIndex": 164,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.7",
          "ruleIndex": 165,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18640_org.yaml:snakeyaml_1.15",
          "ruleIndex": 166,
          "level": "error",
          "message": {
            "text": "[CVE-2017-18640] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.10.1",
          "ruleIndex": 167,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.7",
          "ruleIndex": 168,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.9",
          "ruleIndex": 169,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36518_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 170,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36518] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.9.3",
          "ruleIndex": 171,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.7",
          "ruleIndex": 172,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.6.2",
          "ruleIndex": 173,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.8.3",
          "ruleIndex": 174,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.9",
          "ruleIndex": 175,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.9.2",
          "ruleIndex": 176,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378_ch.qos.logback:logback-classic_1.2.3",
          "ruleIndex": 177,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6378] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.6.2",
          "ruleIndex": 178,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.9",
          "ruleIndex": 179,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.6.2",
          "ruleIndex": 180,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.7.5",
          "ruleIndex": 181,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.7.5",
          "ruleIndex": 182,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.7.5",
          "ruleIndex": 183,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.7.5",
          "ruleIndex": 184,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.9",
          "ruleIndex": 185,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.7",
          "ruleIndex": 186,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.9",
          "ruleIndex": 187,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.9.2",
          "ruleIndex": 188,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.8.3",
          "ruleIndex": 189,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25857_org.yaml:snakeyaml_1.15",
          "ruleIndex": 190,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25857] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.8.3",
          "ruleIndex": 191,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.6.2",
          "ruleIndex": 192,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.9.2",
          "ruleIndex": 193,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.7.4",
          "ruleIndex": 194,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.7",
          "ruleIndex": 195,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.9.4",
          "ruleIndex": 196,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.9.4",
          "ruleIndex": 197,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.7",
          "ruleIndex": 198,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.9.7",
          "ruleIndex": 199,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.9.7",
          "ruleIndex": 200,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.5.1",
          "ruleIndex": 201,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.5.1",
          "ruleIndex": 202,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.9.2",
          "ruleIndex": 203,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.7.5",
          "ruleIndex": 204,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27216_org.eclipse.jetty:jetty-webapp_9.2.26.v20180806",
          "ruleIndex": 205,
          "level": "error",
          "message": {
            "text": "[CVE-2020-27216] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.9.3",
          "ruleIndex": 206,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.9.4",
          "ruleIndex": 207,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.9.2",
          "ruleIndex": 208,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.9.7",
          "ruleIndex": 209,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.9",
          "ruleIndex": 210,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.7.4",
          "ruleIndex": 211,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.5.1",
          "ruleIndex": 212,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.9.4",
          "ruleIndex": 213,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.7.5",
          "ruleIndex": 214,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.8.3",
          "ruleIndex": 215,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.7.5",
          "ruleIndex": 216,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.8.3",
          "ruleIndex": 217,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.6.2",
          "ruleIndex": 218,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.7.5",
          "ruleIndex": 219,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.10.1",
          "ruleIndex": 220,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.7",
          "ruleIndex": 221,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.6.2",
          "ruleIndex": 222,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.9.3",
          "ruleIndex": 223,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.7.4",
          "ruleIndex": 224,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.8.3",
          "ruleIndex": 225,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.10.1",
          "ruleIndex": 226,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.9.2",
          "ruleIndex": 227,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.6.2",
          "ruleIndex": 228,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.7.4",
          "ruleIndex": 229,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.9",
          "ruleIndex": 230,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.9.7",
          "ruleIndex": 231,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.9.3",
          "ruleIndex": 232,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.7.5",
          "ruleIndex": 233,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.8.3",
          "ruleIndex": 234,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.7",
          "ruleIndex": 235,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.7",
          "ruleIndex": 236,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.5.1",
          "ruleIndex": 237,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.5.1",
          "ruleIndex": 238,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.9",
          "ruleIndex": 239,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.9.4",
          "ruleIndex": 240,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.7.5",
          "ruleIndex": 241,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.9.7",
          "ruleIndex": 242,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.10.1",
          "ruleIndex": 243,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.9",
          "ruleIndex": 244,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.5.1",
          "ruleIndex": 245,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.9",
          "ruleIndex": 246,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.10.1",
          "ruleIndex": 247,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.7.4",
          "ruleIndex": 248,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.7.4",
          "ruleIndex": 249,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.9.4",
          "ruleIndex": 250,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.8.3",
          "ruleIndex": 251,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.9.3",
          "ruleIndex": 252,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.9.3",
          "ruleIndex": 253,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.8.3",
          "ruleIndex": 254,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.5.1",
          "ruleIndex": 255,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.9.2",
          "ruleIndex": 256,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.7.4",
          "ruleIndex": 257,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.9.3",
          "ruleIndex": 258,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.7",
          "ruleIndex": 259,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.9.4",
          "ruleIndex": 260,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.10.1",
          "ruleIndex": 261,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.7.5",
          "ruleIndex": 262,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.9",
          "ruleIndex": 263,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.6.2",
          "ruleIndex": 264,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.7.4",
          "ruleIndex": 265,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.9",
          "ruleIndex": 266,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.9.4",
          "ruleIndex": 267,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.8.3",
          "ruleIndex": 268,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.5.1",
          "ruleIndex": 269,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.7.5",
          "ruleIndex": 270,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.9.3",
          "ruleIndex": 271,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.9.7",
          "ruleIndex": 272,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.9.7",
          "ruleIndex": 273,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.9.7",
          "ruleIndex": 274,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35517_org.apache.commons:commons-compress_1.5",
          "ruleIndex": 275,
          "level": "error",
          "message": {
            "text": "[CVE-2021-35517] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.9.4",
          "ruleIndex": 276,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.7",
          "ruleIndex": 277,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.9",
          "ruleIndex": 278,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.9.4",
          "ruleIndex": 279,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.6.2",
          "ruleIndex": 280,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.5.1",
          "ruleIndex": 281,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.9.3",
          "ruleIndex": 282,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.9.7",
          "ruleIndex": 283,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.9.4",
          "ruleIndex": 284,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.9.7",
          "ruleIndex": 285,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.10.1",
          "ruleIndex": 286,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.7",
          "ruleIndex": 287,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.8.3",
          "ruleIndex": 288,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.9.2",
          "ruleIndex": 289,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.10.1",
          "ruleIndex": 290,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.7.4",
          "ruleIndex": 291,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.6.2",
          "ruleIndex": 292,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.9.2",
          "ruleIndex": 293,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.9.7",
          "ruleIndex": 294,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1370_net.minidev:json-smart_1.3.1",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2023-1370] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.9.2",
          "ruleIndex": 295,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.9.7",
          "ruleIndex": 296,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31197_org.postgresql:postgresql_9.4.1208.jre7",
          "ruleIndex": 297,
          "level": "error",
          "message": {
            "text": "[CVE-2022-31197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.8.3",
          "ruleIndex": 298,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.9.3",
          "ruleIndex": 299,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.9.7",
          "ruleIndex": 300,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.7",
          "ruleIndex": 301,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.10.1",
          "ruleIndex": 302,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.10.1",
          "ruleIndex": 303,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.9",
          "ruleIndex": 304,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.7",
          "ruleIndex": 305,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.5.1",
          "ruleIndex": 306,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.7.4",
          "ruleIndex": 307,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.7",
          "ruleIndex": 308,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.7",
          "ruleIndex": 309,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31684_net.minidev:json-smart_1.3.1",
          "ruleIndex": 310,
          "level": "error",
          "message": {
            "text": "[CVE-2021-31684] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.7",
          "ruleIndex": 311,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.7.5",
          "ruleIndex": 312,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.5.1",
          "ruleIndex": 313,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.9.4",
          "ruleIndex": 314,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.9.2",
          "ruleIndex": 315,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.7.5",
          "ruleIndex": 316,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.9.2",
          "ruleIndex": 317,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.7.5",
          "ruleIndex": 318,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.7.5",
          "ruleIndex": 319,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.8.3",
          "ruleIndex": 320,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.6.2",
          "ruleIndex": 321,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.9",
          "ruleIndex": 322,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.7.4",
          "ruleIndex": 323,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.8.3",
          "ruleIndex": 324,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.5.1",
          "ruleIndex": 325,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.9.4",
          "ruleIndex": 326,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.7.4",
          "ruleIndex": 327,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.7.5",
          "ruleIndex": 328,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.9.2",
          "ruleIndex": 329,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.8.3",
          "ruleIndex": 330,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.9.2",
          "ruleIndex": 331,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.6.2",
          "ruleIndex": 332,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.9.3",
          "ruleIndex": 333,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.9.3",
          "ruleIndex": 334,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.9.7",
          "ruleIndex": 335,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.9.7",
          "ruleIndex": 336,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.9.4",
          "ruleIndex": 337,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.10.1",
          "ruleIndex": 338,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.8.3",
          "ruleIndex": 339,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.6.2",
          "ruleIndex": 340,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.5.1",
          "ruleIndex": 341,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.6.2",
          "ruleIndex": 342,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.9.3",
          "ruleIndex": 343,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.9.2",
          "ruleIndex": 344,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.9.3",
          "ruleIndex": 345,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.6.2",
          "ruleIndex": 346,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.9.2",
          "ruleIndex": 347,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.7.4",
          "ruleIndex": 348,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.6.2",
          "ruleIndex": 349,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.5.1",
          "ruleIndex": 350,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.7.4",
          "ruleIndex": 351,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.7.5",
          "ruleIndex": 352,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.6.2",
          "ruleIndex": 353,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.10.1",
          "ruleIndex": 354,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.7.4",
          "ruleIndex": 355,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.9.4",
          "ruleIndex": 356,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.7.4",
          "ruleIndex": 357,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.7.4",
          "ruleIndex": 358,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.9",
          "ruleIndex": 359,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.9.7",
          "ruleIndex": 360,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.9",
          "ruleIndex": 361,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.7.5",
          "ruleIndex": 362,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.7",
          "ruleIndex": 363,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.9.3",
          "ruleIndex": 364,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.9.3",
          "ruleIndex": 365,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.7.5",
          "ruleIndex": 366,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.7.4",
          "ruleIndex": 367,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.10.1",
          "ruleIndex": 368,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.6.2",
          "ruleIndex": 369,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.9.2",
          "ruleIndex": 370,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.8.3",
          "ruleIndex": 371,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000098_github.com/golang/go_1.5.1",
          "ruleIndex": 372,
          "level": "error",
          "message": {
            "text": "[CVE-2017-1000098] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.9.2",
          "ruleIndex": 373,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.6.2",
          "ruleIndex": 374,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-80345_org.apache.httpcomponents:httpclient_4.3.1",
          "ruleIndex": 375,
          "level": "error",
          "message": {
            "text": "[XRAY-80345] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.9.2",
          "ruleIndex": 376,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.9.7",
          "ruleIndex": 377,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.9.4",
          "ruleIndex": 378,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-33265_com.hazelcast:hazelcast_3.8",
          "ruleIndex": 379,
          "level": "error",
          "message": {
            "text": "[CVE-2023-33265] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.7.4",
          "ruleIndex": 380,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.6.2",
          "ruleIndex": 381,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.7",
          "ruleIndex": 382,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.9",
          "ruleIndex": 383,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.7.5",
          "ruleIndex": 384,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.9.2",
          "ruleIndex": 385,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-0114_commons-beanutils:commons-beanutils_1.8.3",
          "ruleIndex": 386,
          "level": "error",
          "message": {
            "text": "[CVE-2014-0114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-3959_github.com/golang/go_1.5.1",
          "ruleIndex": 387,
          "level": "error",
          "message": {
            "text": "[CVE-2016-3959] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.7.4",
          "ruleIndex": 388,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.9.7",
          "ruleIndex": 389,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.9.4",
          "ruleIndex": 390,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8618_github.com/golang/go_1.5.1",
          "ruleIndex": 391,
          "level": "error",
          "message": {
            "text": "[CVE-2015-8618] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.9.7",
          "ruleIndex": 392,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.5.1",
          "ruleIndex": 393,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.10.1",
          "ruleIndex": 394,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.7.5",
          "ruleIndex": 395,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.8.3",
          "ruleIndex": 396,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.7.5",
          "ruleIndex": 397,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.9.4",
          "ruleIndex": 398,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.7",
          "ruleIndex": 399,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.10.1",
          "ruleIndex": 400,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.7",
          "ruleIndex": 401,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.9.2",
          "ruleIndex": 402,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.7",
          "ruleIndex": 403,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000098_github.com/golang/go_1.7",
          "ruleIndex": 404,
          "level": "error",
          "message": {
            "text": "[CVE-2017-1000098] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-12974_com.nimbusds:nimbus-jose-jwt_4.12",
          "ruleIndex": 405,
          "level": "error",
          "message": {
            "text": "[CVE-2017-12974] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.8.3",
          "ruleIndex": 406,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.6.2",
          "ruleIndex": 407,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45859_com.hazelcast:hazelcast_3.8",
          "ruleIndex": 408,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45859] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.9.3",
          "ruleIndex": 409,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.8.3",
          "ruleIndex": 410,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.10.1",
          "ruleIndex": 411,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3462_ubuntu:trusty:apt_1.0.1ubuntu2.17",
          "ruleIndex": 412,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3462] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.7.4",
          "ruleIndex": 413,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.9.7",
          "ruleIndex": 414,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.9",
          "ruleIndex": 415,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.9",
          "ruleIndex": 416,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.5.1",
          "ruleIndex": 417,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.10.1",
          "ruleIndex": 418,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.9",
          "ruleIndex": 419,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.9.4",
          "ruleIndex": 420,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.9.3",
          "ruleIndex": 421,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.9.7",
          "ruleIndex": 422,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.5.1",
          "ruleIndex": 423,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.7.5",
          "ruleIndex": 424,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.7.4",
          "ruleIndex": 425,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.6.2",
          "ruleIndex": 426,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.7",
          "ruleIndex": 427,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.6.2",
          "ruleIndex": 428,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.10.1",
          "ruleIndex": 429,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.7.4",
          "ruleIndex": 430,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.9",
          "ruleIndex": 431,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.9.2",
          "ruleIndex": 432,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.6.2",
          "ruleIndex": 433,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.6.2",
          "ruleIndex": 434,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.9.2",
          "ruleIndex": 435,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.9.3",
          "ruleIndex": 436,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.9.3",
          "ruleIndex": 437,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.9.3",
          "ruleIndex": 438,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.9",
          "ruleIndex": 439,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.10.1",
          "ruleIndex": 440,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.7.5",
          "ruleIndex": 441,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.7.4",
          "ruleIndex": 442,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.5.1",
          "ruleIndex": 443,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.9.7",
          "ruleIndex": 444,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.5.1",
          "ruleIndex": 445,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.9.3",
          "ruleIndex": 446,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.9.4",
          "ruleIndex": 447,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.7.5",
          "ruleIndex": 448,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.9.3",
          "ruleIndex": 449,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.8.3",
          "ruleIndex": 450,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.9",
          "ruleIndex": 451,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.9.4",
          "ruleIndex": 452,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.6.2",
          "ruleIndex": 453,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000098_github.com/golang/go_1.6.2",
          "ruleIndex": 454,
          "level": "error",
          "message": {
            "text": "[CVE-2017-1000098] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.7",
          "ruleIndex": 455,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.7.5",
          "ruleIndex": 456,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7656_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 457,
          "level": "error",
          "message": {
            "text": "[CVE-2017-7656] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.5.1",
          "ruleIndex": 458,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.9.2",
          "ruleIndex": 459,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.7.5",
          "ruleIndex": 460,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.6.2",
          "ruleIndex": 461,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.9.7",
          "ruleIndex": 462,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.7.4",
          "ruleIndex": 463,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.9.4",
          "ruleIndex": 464,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.9",
          "ruleIndex": 465,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.10.1",
          "ruleIndex": 466,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.8.3",
          "ruleIndex": 467,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.7.5",
          "ruleIndex": 468,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-12972_com.nimbusds:nimbus-jose-jwt_4.12",
          "ruleIndex": 469,
          "level": "error",
          "message": {
            "text": "[CVE-2017-12972] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.7",
          "ruleIndex": 470,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10750_com.hazelcast:hazelcast_3.8",
          "ruleIndex": 471,
          "level": "error",
          "message": {
            "text": "[CVE-2016-10750] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-5386_github.com/golang/go_1.5.1",
          "ruleIndex": 472,
          "level": "error",
          "message": {
            "text": "[CVE-2016-5386] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.7",
          "ruleIndex": 473,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.7.4",
          "ruleIndex": 474,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.8.3",
          "ruleIndex": 475,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.9.4",
          "ruleIndex": 476,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.9.3",
          "ruleIndex": 477,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.7.4",
          "ruleIndex": 478,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-5386_github.com/golang/go_1.6.2",
          "ruleIndex": 479,
          "level": "error",
          "message": {
            "text": "[CVE-2016-5386] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.5.1",
          "ruleIndex": 480,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.9.3",
          "ruleIndex": 481,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.9",
          "ruleIndex": 482,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.7",
          "ruleIndex": 483,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.5.1",
          "ruleIndex": 484,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28165_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 485,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28165] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.9.2",
          "ruleIndex": 486,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.9.2",
          "ruleIndex": 487,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.5.1",
          "ruleIndex": 488,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.8.3",
          "ruleIndex": 489,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.8.3",
          "ruleIndex": 490,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-3958_github.com/golang/go_1.5.1",
          "ruleIndex": 491,
          "level": "error",
          "message": {
            "text": "[CVE-2016-3958] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000001_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 492,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000001] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3462_ubuntu:trusty:libapt-inst1.5_1.0.1ubuntu2.17",
          "ruleIndex": 493,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3462] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3462_ubuntu:trusty:libapt-pkg4.12_1.0.1ubuntu2.17",
          "ruleIndex": 494,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3462] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000001_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 495,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000001] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000001_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 496,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000001] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3462_ubuntu:trusty:apt-utils_1.0.1ubuntu2.17",
          "ruleIndex": 497,
          "level": "error",
          "message": {
            "text": "[CVE-2019-3462] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38749_org.yaml:snakeyaml_1.15",
          "ruleIndex": 498,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-38749] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.9.4",
          "ruleIndex": 499,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.9.7",
          "ruleIndex": 500,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.9.3",
          "ruleIndex": 501,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.8.3",
          "ruleIndex": 502,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.9.2",
          "ruleIndex": 503,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.8.3",
          "ruleIndex": 504,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.7.5",
          "ruleIndex": 505,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.9.7",
          "ruleIndex": 506,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.7",
          "ruleIndex": 507,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.8.3",
          "ruleIndex": 508,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.9.3",
          "ruleIndex": 509,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.5.1",
          "ruleIndex": 510,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.9.4",
          "ruleIndex": 511,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.9",
          "ruleIndex": 512,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.8.3",
          "ruleIndex": 513,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.9.3",
          "ruleIndex": 514,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.6.2",
          "ruleIndex": 515,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.7.5",
          "ruleIndex": 516,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.9.2",
          "ruleIndex": 517,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10237_com.google.guava:guava_15.0",
          "ruleIndex": 518,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-10237] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.9.3",
          "ruleIndex": 519,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.10.1",
          "ruleIndex": 520,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.7.5",
          "ruleIndex": 521,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.6.2",
          "ruleIndex": 522,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.8.3",
          "ruleIndex": 523,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10237_com.google.guava:guava_12.0",
          "ruleIndex": 524,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-10237] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.9.4",
          "ruleIndex": 525,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41854_org.yaml:snakeyaml_1.15",
          "ruleIndex": 526,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-41854] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.7.5",
          "ruleIndex": 527,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.7",
          "ruleIndex": 528,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.7",
          "ruleIndex": 529,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.9.7",
          "ruleIndex": 530,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.9.4",
          "ruleIndex": 531,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.5.1",
          "ruleIndex": 532,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.7",
          "ruleIndex": 533,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.9",
          "ruleIndex": 534,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.7",
          "ruleIndex": 535,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.9",
          "ruleIndex": 536,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-29425_commons-io:commons-io_2.4",
          "ruleIndex": 537,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-29425] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38752_org.yaml:snakeyaml_1.15",
          "ruleIndex": 538,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-38752] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.9.3",
          "ruleIndex": 539,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.7.4",
          "ruleIndex": 540,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.6.2",
          "ruleIndex": 541,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.6.2",
          "ruleIndex": 542,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38751_org.yaml:snakeyaml_1.15",
          "ruleIndex": 543,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-38751] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.9.3",
          "ruleIndex": 544,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.6.2",
          "ruleIndex": 545,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18311_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 546,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-18311] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.9.7",
          "ruleIndex": 547,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.7.5",
          "ruleIndex": 548,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.7",
          "ruleIndex": 549,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38750_org.yaml:snakeyaml_1.15",
          "ruleIndex": 550,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-38750] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.8.3",
          "ruleIndex": 551,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.5.1",
          "ruleIndex": 552,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.10.1",
          "ruleIndex": 553,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.9.2",
          "ruleIndex": 554,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.9.7",
          "ruleIndex": 555,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.5.1",
          "ruleIndex": 556,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.7.4",
          "ruleIndex": 557,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.9.2",
          "ruleIndex": 558,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.5.1",
          "ruleIndex": 559,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.10.1",
          "ruleIndex": 560,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.7.4",
          "ruleIndex": 561,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.9",
          "ruleIndex": 562,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.9",
          "ruleIndex": 563,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.9.4",
          "ruleIndex": 564,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.5.1",
          "ruleIndex": 565,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27568_net.minidev:json-smart_1.3.1",
          "ruleIndex": 566,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-27568] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.7.4",
          "ruleIndex": 567,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.10.1",
          "ruleIndex": 568,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.7.5",
          "ruleIndex": 569,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.7.4",
          "ruleIndex": 570,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.7.4",
          "ruleIndex": 571,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.10.1",
          "ruleIndex": 572,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.10.1",
          "ruleIndex": 573,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.6.2",
          "ruleIndex": 574,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.9.7",
          "ruleIndex": 575,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.9.4",
          "ruleIndex": 576,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.9.2",
          "ruleIndex": 577,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.9.2",
          "ruleIndex": 578,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.9",
          "ruleIndex": 579,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000517_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 580,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1000517] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18311_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 581,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-18311] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 582,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-35116] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18311_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 583,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-18311] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000802_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 584,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1000802] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26048_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 585,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26048] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14599_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
          "ruleIndex": 586,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14599] sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18313_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 587,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-18313] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1049_ubuntu:trusty:libudev1_204-5ubuntu20.25",
          "ruleIndex": 588,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1049] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14600_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
          "ruleIndex": 589,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14600] sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3842_ubuntu:trusty:udev_204-5ubuntu20.25",
          "ruleIndex": 590,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-3842] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10000_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 591,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-10000] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12020_ubuntu:trusty:gpgv_1.4.16-1ubuntu2.4",
          "ruleIndex": 592,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12020] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12015_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 593,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12015] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7526_ubuntu:trusty:gpgv_1.4.16-1ubuntu2.4",
          "ruleIndex": 594,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-7526] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14647_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 595,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14647] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3842_ubuntu:trusty:libudev1_204-5ubuntu20.25",
          "ruleIndex": 596,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-3842] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 597,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-5747] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14647_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 598,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14647] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10000_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 599,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-10000] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1125_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 600,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1125] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1122_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 601,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1122] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10000_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 602,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-10000] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-0739_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
          "ruleIndex": 603,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-0739] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6913_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 604,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-6913] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14598_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
          "ruleIndex": 605,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14598] sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1049_ubuntu:trusty:udev_204-5ubuntu20.25",
          "ruleIndex": 606,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1049] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-9261_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 607,
          "level": "warning",
          "message": {
            "text": "[CVE-2015-9261] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18313_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 608,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-18313] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16544_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 609,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-16544] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1123_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 610,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1123] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5732_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
          "ruleIndex": 611,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-5732] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14647_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 612,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14647] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12015_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 613,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12015] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000802_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 614,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1000802] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7183_ubuntu:trusty:ntpdate:1_4.2.6.p5+dfsg-3ubuntu2.14.04.12",
          "ruleIndex": 615,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-7183] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5733_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
          "ruleIndex": 616,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-5733] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6913_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 617,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-6913] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1124_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 618,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1124] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000802_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 619,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1000802] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5733_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
          "ruleIndex": 620,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-5733] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5732_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
          "ruleIndex": 621,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-5732] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1126_ubuntu:trusty:libprocps3:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 622,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1126] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10241_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 623,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-10241] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.8.3",
          "ruleIndex": 624,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.9.4",
          "ruleIndex": 625,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.8.3",
          "ruleIndex": 626,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-8932_github.com/golang/go_1.7.5",
          "ruleIndex": 627,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-8932] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000802_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 628,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1000802] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.7",
          "ruleIndex": 629,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-8932_github.com/golang/go_1.6.2",
          "ruleIndex": 630,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-8932] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-3577_org.apache.httpcomponents:httpclient_4.3.1",
          "ruleIndex": 631,
          "level": "warning",
          "message": {
            "text": "[CVE-2014-3577] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25710_org.apache.commons:commons-compress_1.5",
          "ruleIndex": 632,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-25710] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.9.7",
          "ruleIndex": 633,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.7.5",
          "ruleIndex": 634,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.6.2",
          "ruleIndex": 635,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.9.4",
          "ruleIndex": 636,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.6.2",
          "ruleIndex": 637,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.6.2",
          "ruleIndex": 638,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.7.5",
          "ruleIndex": 639,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.8.3",
          "ruleIndex": 640,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.5.1",
          "ruleIndex": 641,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.7",
          "ruleIndex": 642,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-40167_org.eclipse.jetty:jetty-http_9.2.26.v20180806",
          "ruleIndex": 643,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-40167] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.10.1",
          "ruleIndex": 644,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.9.4",
          "ruleIndex": 645,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.6.2",
          "ruleIndex": 646,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.9",
          "ruleIndex": 647,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.5.1",
          "ruleIndex": 648,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.9.2",
          "ruleIndex": 649,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.7",
          "ruleIndex": 650,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.9.4",
          "ruleIndex": 651,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.7",
          "ruleIndex": 652,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.7.4",
          "ruleIndex": 653,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.7.5",
          "ruleIndex": 654,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.7.4",
          "ruleIndex": 655,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.5.1",
          "ruleIndex": 656,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1123_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 657,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1123] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.7",
          "ruleIndex": 658,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.6.2",
          "ruleIndex": 659,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.6.2",
          "ruleIndex": 660,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45860_com.hazelcast:hazelcast_3.8",
          "ruleIndex": 661,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45860] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.9.2",
          "ruleIndex": 662,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.10.1",
          "ruleIndex": 663,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.9.2",
          "ruleIndex": 664,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.7.5",
          "ruleIndex": 665,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.7",
          "ruleIndex": 666,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.7.5",
          "ruleIndex": 667,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.9.7",
          "ruleIndex": 668,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26049_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 669,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26049] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.9.2",
          "ruleIndex": 670,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.9",
          "ruleIndex": 671,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.9",
          "ruleIndex": 672,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.9.4",
          "ruleIndex": 673,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.7.4",
          "ruleIndex": 674,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.7",
          "ruleIndex": 675,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.9.3",
          "ruleIndex": 676,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7526_ubuntu:trusty:gnupg_1.4.16-1ubuntu2.4",
          "ruleIndex": 677,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-7526] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10247_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 678,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-10247] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.9.3",
          "ruleIndex": 679,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.6.2",
          "ruleIndex": 680,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.8.3",
          "ruleIndex": 681,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28169_org.eclipse.jetty:jetty-servlets_9.2.26.v20180806",
          "ruleIndex": 682,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-28169] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.5.1",
          "ruleIndex": 683,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.9.2",
          "ruleIndex": 684,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.9.4",
          "ruleIndex": 685,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10246_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 686,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-10246] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.8.3",
          "ruleIndex": 687,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.9",
          "ruleIndex": 688,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-8932_github.com/golang/go_1.7.4",
          "ruleIndex": 689,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-8932] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.7.5",
          "ruleIndex": 690,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.10.1",
          "ruleIndex": 691,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.6.2",
          "ruleIndex": 692,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.9.7",
          "ruleIndex": 693,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.9.3",
          "ruleIndex": 694,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.9.2",
          "ruleIndex": 695,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.6.2",
          "ruleIndex": 696,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.7",
          "ruleIndex": 697,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.9.3",
          "ruleIndex": 698,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.5.1",
          "ruleIndex": 699,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.6.2",
          "ruleIndex": 700,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.10.1",
          "ruleIndex": 701,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.9.2",
          "ruleIndex": 702,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.10.1",
          "ruleIndex": 703,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.9.2",
          "ruleIndex": 704,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.7.4",
          "ruleIndex": 705,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.7.4",
          "ruleIndex": 706,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.9.3",
          "ruleIndex": 707,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.10.1",
          "ruleIndex": 708,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.10.1",
          "ruleIndex": 709,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14647_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 710,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14647] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.9",
          "ruleIndex": 711,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.7.5",
          "ruleIndex": 712,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.8.3",
          "ruleIndex": 713,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.9.2",
          "ruleIndex": 714,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.5.1",
          "ruleIndex": 715,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.9.4",
          "ruleIndex": 716,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.9",
          "ruleIndex": 717,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.9",
          "ruleIndex": 718,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.10.1",
          "ruleIndex": 719,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.9.3",
          "ruleIndex": 720,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.6.2",
          "ruleIndex": 721,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.5.1",
          "ruleIndex": 722,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.5.1",
          "ruleIndex": 723,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.9.7",
          "ruleIndex": 724,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.7.4",
          "ruleIndex": 725,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12020_ubuntu:trusty:gnupg_1.4.16-1ubuntu2.4",
          "ruleIndex": 726,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12020] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1124_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 727,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1124] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.7.4",
          "ruleIndex": 728,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6913_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 729,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-6913] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.7.4",
          "ruleIndex": 730,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.5.1",
          "ruleIndex": 731,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-33264_com.hazelcast:hazelcast_3.8",
          "ruleIndex": 732,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-33264] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1122_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 733,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1122] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.7",
          "ruleIndex": 734,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.8.3",
          "ruleIndex": 735,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12536_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 736,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12536] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.9",
          "ruleIndex": 737,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.9.4",
          "ruleIndex": 738,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.9.7",
          "ruleIndex": 739,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.8.3",
          "ruleIndex": 740,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.7.4",
          "ruleIndex": 741,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.9.4",
          "ruleIndex": 742,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.7.4",
          "ruleIndex": 743,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.9.7",
          "ruleIndex": 744,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.9",
          "ruleIndex": 745,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.7.5",
          "ruleIndex": 746,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.8.3",
          "ruleIndex": 747,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.9.3",
          "ruleIndex": 748,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.9.3",
          "ruleIndex": 749,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.7.4",
          "ruleIndex": 750,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18313_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 751,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-18313] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.10.1",
          "ruleIndex": 752,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.6.2",
          "ruleIndex": 753,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.9.4",
          "ruleIndex": 754,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.9.2",
          "ruleIndex": 755,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.9.7",
          "ruleIndex": 756,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.7.5",
          "ruleIndex": 757,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.9.4",
          "ruleIndex": 758,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.9",
          "ruleIndex": 759,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.9.3",
          "ruleIndex": 760,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.10.1",
          "ruleIndex": 761,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.7",
          "ruleIndex": 762,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.9.2",
          "ruleIndex": 763,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.9.7",
          "ruleIndex": 764,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.6.2",
          "ruleIndex": 765,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.8.3",
          "ruleIndex": 766,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52428_com.nimbusds:nimbus-jose-jwt_4.12",
          "ruleIndex": 767,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-52428] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.5.1",
          "ruleIndex": 768,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.9",
          "ruleIndex": 769,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1126_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 770,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1126] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.9.2",
          "ruleIndex": 771,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-8932_github.com/golang/go_1.7",
          "ruleIndex": 772,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-8932] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.7.5",
          "ruleIndex": 773,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.7",
          "ruleIndex": 774,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.9.3",
          "ruleIndex": 775,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.9",
          "ruleIndex": 776,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.8.3",
          "ruleIndex": 777,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.10.1",
          "ruleIndex": 778,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1125_ubuntu:trusty:procps:1_3.3.9-1ubuntu2.2",
          "ruleIndex": 779,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1125] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.9.4",
          "ruleIndex": 780,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12015_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 781,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12015] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.7",
          "ruleIndex": 782,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.10.1",
          "ruleIndex": 783,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-79102_commons-io:commons-io_2.4",
          "ruleIndex": 784,
          "level": "warning",
          "message": {
            "text": "[XRAY-79102] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.5.1",
          "ruleIndex": 785,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.9.7",
          "ruleIndex": 786,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.7.5",
          "ruleIndex": 787,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.7.4",
          "ruleIndex": 788,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.5.1",
          "ruleIndex": 789,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.8.3",
          "ruleIndex": 790,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.7.5",
          "ruleIndex": 791,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.9",
          "ruleIndex": 792,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-5262_org.apache.httpcomponents:httpclient_4.3.1",
          "ruleIndex": 793,
          "level": "warning",
          "message": {
            "text": "[CVE-2015-5262] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.9.7",
          "ruleIndex": 794,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.9.3",
          "ruleIndex": 795,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.8.3",
          "ruleIndex": 796,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.9.7",
          "ruleIndex": 797,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.5.1",
          "ruleIndex": 798,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.7.4",
          "ruleIndex": 799,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36479_org.eclipse.jetty:jetty-servlets_9.2.26.v20180806",
          "ruleIndex": 800,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-36479] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.9.7",
          "ruleIndex": 801,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.7.5",
          "ruleIndex": 802,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.7",
          "ruleIndex": 803,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.9.3",
          "ruleIndex": 804,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17512_ubuntu:trusty:sensible-utils_0.0.9",
          "ruleIndex": 805,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-17512] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9653_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
          "ruleIndex": 806,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9653] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16997_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 807,
          "level": "note",
          "message": {
            "text": "[CVE-2017-16997] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2047_org.eclipse.jetty:jetty-http_9.2.26.v20180806",
          "ruleIndex": 808,
          "level": "note",
          "message": {
            "text": "[CVE-2022-2047] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.7.5",
          "ruleIndex": 809,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.9.3",
          "ruleIndex": 810,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2147_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 811,
          "level": "note",
          "message": {
            "text": "[CVE-2016-2147] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15873_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 812,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15873] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1061_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 813,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1061] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34428_org.eclipse.jetty:jetty-server_9.2.26.v20180806",
          "ruleIndex": 814,
          "level": "note",
          "message": {
            "text": "[CVE-2021-34428] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000408_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 815,
          "level": "note",
          "message": {
            "text": "[CVE-2017-1000408] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2774_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
          "ruleIndex": 816,
          "level": "note",
          "message": {
            "text": "[CVE-2016-2774] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10360_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
          "ruleIndex": 817,
          "level": "note",
          "message": {
            "text": "[CVE-2018-10360] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-0495_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
          "ruleIndex": 818,
          "level": "note",
          "message": {
            "text": "[CVE-2018-0495] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5407_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
          "ruleIndex": 819,
          "level": "note",
          "message": {
            "text": "[CVE-2018-5407] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1060_ubuntu:trusty:libpython3.4-stdlib_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 820,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1060] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9621_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
          "ruleIndex": 821,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9621] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9621_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
          "ruleIndex": 822,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9621] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-6512_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 823,
          "level": "note",
          "message": {
            "text": "[CVE-2017-6512] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000408_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 824,
          "level": "note",
          "message": {
            "text": "[CVE-2017-1000408] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8853_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 825,
          "level": "note",
          "message": {
            "text": "[CVE-2015-8853] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-10790_ubuntu:trusty:libtasn1-6_3.4-3ubuntu0.5",
          "ruleIndex": 826,
          "level": "note",
          "message": {
            "text": "[CVE-2017-10790] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000409_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 827,
          "level": "note",
          "message": {
            "text": "[CVE-2017-1000409] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16997_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 828,
          "level": "note",
          "message": {
            "text": "[CVE-2017-16997] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-3144_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
          "ruleIndex": 829,
          "level": "note",
          "message": {
            "text": "[CVE-2017-3144] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.8.3",
          "ruleIndex": 830,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9645_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 831,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9645] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9620_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
          "ruleIndex": 832,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9620] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1061_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 833,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1061] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-6512_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 834,
          "level": "note",
          "message": {
            "text": "[CVE-2017-6512] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.9.7",
          "ruleIndex": 835,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 836,
          "level": "note",
          "message": {
            "text": "[CVE-2018-20679] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-6185_ubuntu:trusty:perl-base_5.18.2-2ubuntu1.3",
          "ruleIndex": 837,
          "level": "note",
          "message": {
            "text": "[CVE-2016-6185] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-0495_ubuntu:trusty:libgcrypt11_1.5.3-2ubuntu4.5",
          "ruleIndex": 838,
          "level": "note",
          "message": {
            "text": "[CVE-2018-0495] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1061_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 839,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1061] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9653_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
          "ruleIndex": 840,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9653] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-10360_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
          "ruleIndex": 841,
          "level": "note",
          "message": {
            "text": "[CVE-2018-10360] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000409_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 842,
          "level": "note",
          "message": {
            "text": "[CVE-2017-1000409] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8865_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
          "ruleIndex": 843,
          "level": "note",
          "message": {
            "text": "[CVE-2015-8865] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.9.2",
          "ruleIndex": 844,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.7",
          "ruleIndex": 845,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1060_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 846,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1060] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000409_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 847,
          "level": "note",
          "message": {
            "text": "[CVE-2017-1000409] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-0734_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
          "ruleIndex": 848,
          "level": "note",
          "message": {
            "text": "[CVE-2018-0734] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-12973_com.nimbusds:nimbus-jose-jwt_4.12",
          "ruleIndex": 849,
          "level": "note",
          "message": {
            "text": "[CVE-2017-12973] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.7.4",
          "ruleIndex": 850,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.6.2",
          "ruleIndex": 851,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-7942_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
          "ruleIndex": 852,
          "level": "note",
          "message": {
            "text": "[CVE-2016-7942] sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16997_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 853,
          "level": "note",
          "message": {
            "text": "[CVE-2017-16997] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-3144_ubuntu:trusty:isc-dhcp-common_4.2.4-7ubuntu12.10",
          "ruleIndex": 854,
          "level": "note",
          "message": {
            "text": "[CVE-2017-3144] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8853_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 855,
          "level": "note",
          "message": {
            "text": "[CVE-2015-8853] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2011-5325_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 856,
          "level": "note",
          "message": {
            "text": "[CVE-2011-5325] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1060_ubuntu:trusty:libpython3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 857,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1060] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8853_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 858,
          "level": "note",
          "message": {
            "text": "[CVE-2015-8853] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-6512_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 859,
          "level": "note",
          "message": {
            "text": "[CVE-2017-6512] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.9",
          "ruleIndex": 860,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-0737_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
          "ruleIndex": 861,
          "level": "note",
          "message": {
            "text": "[CVE-2018-0737] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2014-9620_ubuntu:trusty:file:1_5.14-2ubuntu3.3",
          "ruleIndex": 862,
          "level": "note",
          "message": {
            "text": "[CVE-2014-9620] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-0732_ubuntu:trusty:libssl1.0.0_1.0.1f-1ubuntu2.23",
          "ruleIndex": 863,
          "level": "note",
          "message": {
            "text": "[CVE-2018-0732] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000408_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 864,
          "level": "note",
          "message": {
            "text": "[CVE-2017-1000408] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1061_ubuntu:trusty:python3.4-minimal_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 865,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1061] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10087_ubuntu:trusty:libpng12-0_1.2.50-1ubuntu2.14.04.2",
          "ruleIndex": 866,
          "level": "note",
          "message": {
            "text": "[CVE-2016-10087] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-6185_ubuntu:trusty:perl-modules_5.18.2-2ubuntu1.3",
          "ruleIndex": 867,
          "level": "note",
          "message": {
            "text": "[CVE-2016-6185] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2774_ubuntu:trusty:isc-dhcp-client_4.2.4-7ubuntu12.10",
          "ruleIndex": 868,
          "level": "note",
          "message": {
            "text": "[CVE-2016-2774] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2148_ubuntu:trusty:busybox-initramfs:1_1.21.0-1ubuntu1",
          "ruleIndex": 869,
          "level": "note",
          "message": {
            "text": "[CVE-2016-2148] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-8740_ubuntu:trusty:libsqlite3-0_3.8.2-1ubuntu2.1",
          "ruleIndex": 870,
          "level": "note",
          "message": {
            "text": "[CVE-2018-8740] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1060_ubuntu:trusty:python3.4_3.4.3-1ubuntu1~14.04.6",
          "ruleIndex": 871,
          "level": "note",
          "message": {
            "text": "[CVE-2018-1060] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8865_ubuntu:trusty:libmagic1:1_5.14-2ubuntu3.3",
          "ruleIndex": 872,
          "level": "note",
          "message": {
            "text": "[CVE-2015-8865] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-7943_ubuntu:trusty:libx11-6:2_1.6.2-1ubuntu2",
          "ruleIndex": 873,
          "level": "note",
          "message": {
            "text": "[CVE-2016-7943] sha256__fadf1fad35886b8ab2482e1f7341f4012f0bb7fb2b3828b8fe706c26994f20e2.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-6185_ubuntu:trusty:perl_5.18.2-2ubuntu1.3",
          "ruleIndex": 874,
          "level": "note",
          "message": {
            "text": "[CVE-2016-6185] sha256__989ab7dea3b3b22a60bcbe6f4e1c6a1ccc3880fe3a55df5f283f2e830c1a3a19.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7185_ubuntu:trusty:ntpdate:1_4.2.6.p5+dfsg-3ubuntu2.14.04.12",
          "ruleIndex": 875,
          "level": "note",
          "message": {
            "text": "[CVE-2018-7185] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.9.4",
          "ruleIndex": 876,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.10.1",
          "ruleIndex": 877,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.5.1",
          "ruleIndex": 878,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0839_org.liquibase:liquibase-core_3.1.0",
          "ruleIndex": 879,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0839] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.6.2",
          "ruleIndex": 880,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.8.3",
          "ruleIndex": 881,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.6.2",
          "ruleIndex": 882,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.9.3",
          "ruleIndex": 883,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.7.5",
          "ruleIndex": 884,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14540_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 885,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14540] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16942_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 886,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16942] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.7.5",
          "ruleIndex": 887,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.9.7",
          "ruleIndex": 888,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9547_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 889,
          "level": "error",
          "message": {
            "text": "[CVE-2020-9547] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20330_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 890,
          "level": "error",
          "message": {
            "text": "[CVE-2019-20330] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.9.3",
          "ruleIndex": 891,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.9.3",
          "ruleIndex": 892,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.8.3",
          "ruleIndex": 893,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.7.5",
          "ruleIndex": 894,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8840_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 895,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8840] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.10.1",
          "ruleIndex": 896,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.7.4",
          "ruleIndex": 897,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.9",
          "ruleIndex": 898,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.9.3",
          "ruleIndex": 899,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17485_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 900,
          "level": "error",
          "message": {
            "text": "[CVE-2017-17485] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.10.1",
          "ruleIndex": 901,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19360_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 902,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19360] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.5.1",
          "ruleIndex": 903,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19361_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 904,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19361] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.8.3",
          "ruleIndex": 905,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.9.7",
          "ruleIndex": 906,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.9.2",
          "ruleIndex": 907,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.7.4",
          "ruleIndex": 908,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.7",
          "ruleIndex": 909,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.9.4",
          "ruleIndex": 910,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.9.2",
          "ruleIndex": 911,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.7.5",
          "ruleIndex": 912,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.9.7",
          "ruleIndex": 913,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.9.4",
          "ruleIndex": 914,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.10.1",
          "ruleIndex": 915,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14379_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 916,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14379] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14721_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 917,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14721] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.6.2",
          "ruleIndex": 918,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7489_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 919,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7489] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.9",
          "ruleIndex": 920,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.9",
          "ruleIndex": 921,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17531_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 922,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17531] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.7.4",
          "ruleIndex": 923,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.7",
          "ruleIndex": 924,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9548_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 925,
          "level": "error",
          "message": {
            "text": "[CVE-2020-9548] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.5.1",
          "ruleIndex": 926,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14719_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 927,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14719] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19362_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 928,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19362] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.7.4",
          "ruleIndex": 929,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9546_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 930,
          "level": "error",
          "message": {
            "text": "[CVE-2020-9546] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.10.1",
          "ruleIndex": 931,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.9.7",
          "ruleIndex": 932,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.9.4",
          "ruleIndex": 933,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.6.2",
          "ruleIndex": 934,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16335_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 935,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16335] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14718_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 936,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14718] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.5.1",
          "ruleIndex": 937,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14892_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 938,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14892] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.9.2",
          "ruleIndex": 939,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.9.2",
          "ruleIndex": 940,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16943_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 941,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16943] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17267_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 942,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17267] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.9",
          "ruleIndex": 943,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14720_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 944,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.7",
          "ruleIndex": 945,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.5.1",
          "ruleIndex": 946,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7525_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 947,
          "level": "error",
          "message": {
            "text": "[CVE-2017-7525] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.9.4",
          "ruleIndex": 948,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.8.3",
          "ruleIndex": 949,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-11307_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 950,
          "level": "error",
          "message": {
            "text": "[CVE-2018-11307] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14893_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 951,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14893] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.7",
          "ruleIndex": 952,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15095_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 953,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15095] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.9.4",
          "ruleIndex": 954,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.10.1",
          "ruleIndex": 955,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.10.1",
          "ruleIndex": 956,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.7.5",
          "ruleIndex": 957,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.7",
          "ruleIndex": 958,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.6.2",
          "ruleIndex": 959,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.10.1",
          "ruleIndex": 960,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.6.2",
          "ruleIndex": 961,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.7.4",
          "ruleIndex": 962,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.9",
          "ruleIndex": 963,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.9.3",
          "ruleIndex": 964,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.7.4",
          "ruleIndex": 965,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.8.3",
          "ruleIndex": 966,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.9.4",
          "ruleIndex": 967,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.10.1",
          "ruleIndex": 968,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.9",
          "ruleIndex": 969,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.5.1",
          "ruleIndex": 970,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.9",
          "ruleIndex": 971,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.5.1",
          "ruleIndex": 972,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.8.3",
          "ruleIndex": 973,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42003_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 974,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42003] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.8.3",
          "ruleIndex": 975,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14062_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 976,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14062] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11619_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 977,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11619] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.7",
          "ruleIndex": 978,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.9",
          "ruleIndex": 979,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.9.4",
          "ruleIndex": 980,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35728_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 981,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35728] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.10.1",
          "ruleIndex": 982,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35490_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 983,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35490] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.8.3",
          "ruleIndex": 984,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.5.1",
          "ruleIndex": 985,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.9.3",
          "ruleIndex": 986,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.9.4",
          "ruleIndex": 987,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36180_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 988,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36180] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.9.4",
          "ruleIndex": 989,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.9.3",
          "ruleIndex": 990,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.8.3",
          "ruleIndex": 991,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.5.1",
          "ruleIndex": 992,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.8.3",
          "ruleIndex": 993,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.8.3",
          "ruleIndex": 994,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.6.2",
          "ruleIndex": 995,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.9.4",
          "ruleIndex": 996,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.9.7",
          "ruleIndex": 997,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.7",
          "ruleIndex": 998,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.7",
          "ruleIndex": 999,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.9.3",
          "ruleIndex": 1000,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.7.5",
          "ruleIndex": 1001,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.7.4",
          "ruleIndex": 1002,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.5.1",
          "ruleIndex": 1003,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.7.5",
          "ruleIndex": 1004,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.9.2",
          "ruleIndex": 1005,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.9",
          "ruleIndex": 1006,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.7.4",
          "ruleIndex": 1007,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.9.7",
          "ruleIndex": 1008,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.7.4",
          "ruleIndex": 1009,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.9.7",
          "ruleIndex": 1010,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.5.1",
          "ruleIndex": 1011,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.9",
          "ruleIndex": 1012,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.9.7",
          "ruleIndex": 1013,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.7",
          "ruleIndex": 1014,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.9",
          "ruleIndex": 1015,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.9",
          "ruleIndex": 1016,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.7",
          "ruleIndex": 1017,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.7.5",
          "ruleIndex": 1018,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.5.1",
          "ruleIndex": 1019,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.6.2",
          "ruleIndex": 1020,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.9.3",
          "ruleIndex": 1021,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.9.3",
          "ruleIndex": 1022,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14060_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1023,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14060] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.10.1",
          "ruleIndex": 1024,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.7.4",
          "ruleIndex": 1025,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36183_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1026,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36183] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.6.2",
          "ruleIndex": 1027,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.6.2",
          "ruleIndex": 1028,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.10.1",
          "ruleIndex": 1029,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.9.7",
          "ruleIndex": 1030,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.9.3",
          "ruleIndex": 1031,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-25649_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1032,
          "level": "error",
          "message": {
            "text": "[CVE-2020-25649] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.6.2",
          "ruleIndex": 1033,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.6.2",
          "ruleIndex": 1034,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.7.5",
          "ruleIndex": 1035,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.10.1",
          "ruleIndex": 1036,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.9.4",
          "ruleIndex": 1037,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.5.1",
          "ruleIndex": 1038,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.7.4",
          "ruleIndex": 1039,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.8.3",
          "ruleIndex": 1040,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.10.1",
          "ruleIndex": 1041,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.7.4",
          "ruleIndex": 1042,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.7.4",
          "ruleIndex": 1043,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.7.5",
          "ruleIndex": 1044,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.9.2",
          "ruleIndex": 1045,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.7",
          "ruleIndex": 1046,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.9.4",
          "ruleIndex": 1047,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5968_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1048,
          "level": "error",
          "message": {
            "text": "[CVE-2018-5968] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.9.2",
          "ruleIndex": 1049,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.9.2",
          "ruleIndex": 1050,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.6.2",
          "ruleIndex": 1051,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.9.7",
          "ruleIndex": 1052,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35491_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1053,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35491] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.9",
          "ruleIndex": 1054,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24616_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1055,
          "level": "error",
          "message": {
            "text": "[CVE-2020-24616] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.10.1",
          "ruleIndex": 1056,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.9.2",
          "ruleIndex": 1057,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.9.7",
          "ruleIndex": 1058,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.5.1",
          "ruleIndex": 1059,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.9.3",
          "ruleIndex": 1060,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.5.1",
          "ruleIndex": 1061,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42004_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1062,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42004] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.9.4",
          "ruleIndex": 1063,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.9.3",
          "ruleIndex": 1064,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.9",
          "ruleIndex": 1065,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.7.4",
          "ruleIndex": 1066,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36185_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1067,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36185] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.9.4",
          "ruleIndex": 1068,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.7.5",
          "ruleIndex": 1069,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35515_org.apache.commons:commons-compress_1.5",
          "ruleIndex": 1070,
          "level": "error",
          "message": {
            "text": "[CVE-2021-35515] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.5.1",
          "ruleIndex": 1071,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.7.5",
          "ruleIndex": 1072,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.7",
          "ruleIndex": 1073,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.9.2",
          "ruleIndex": 1074,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.7.5",
          "ruleIndex": 1075,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.6.2",
          "ruleIndex": 1076,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.7.4",
          "ruleIndex": 1077,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.7.5",
          "ruleIndex": 1078,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.9.4",
          "ruleIndex": 1079,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.9.7",
          "ruleIndex": 1080,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.10.1",
          "ruleIndex": 1081,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36184_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1082,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36184] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.9",
          "ruleIndex": 1083,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.6.2",
          "ruleIndex": 1084,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.9.2",
          "ruleIndex": 1085,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.5.1",
          "ruleIndex": 1086,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.9.4",
          "ruleIndex": 1087,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000097_github.com/golang/go_1.5.1",
          "ruleIndex": 1088,
          "level": "error",
          "message": {
            "text": "[CVE-2017-1000097] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.5.1",
          "ruleIndex": 1089,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24750_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1090,
          "level": "error",
          "message": {
            "text": "[CVE-2020-24750] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.9.2",
          "ruleIndex": 1091,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.7.5",
          "ruleIndex": 1092,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.9.3",
          "ruleIndex": 1093,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.7.4",
          "ruleIndex": 1094,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.9.7",
          "ruleIndex": 1095,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.7",
          "ruleIndex": 1096,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.7.5",
          "ruleIndex": 1097,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.9.2",
          "ruleIndex": 1098,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36188_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1099,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36188] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.7.4",
          "ruleIndex": 1100,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.7.4",
          "ruleIndex": 1101,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.9",
          "ruleIndex": 1102,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.9.7",
          "ruleIndex": 1103,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.9.4",
          "ruleIndex": 1104,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2976_com.google.guava:guava_12.0",
          "ruleIndex": 1105,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2976] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12022_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1106,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12022] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.9.3",
          "ruleIndex": 1107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35516_org.apache.commons:commons-compress_1.5",
          "ruleIndex": 1108,
          "level": "error",
          "message": {
            "text": "[CVE-2021-35516] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.9.7",
          "ruleIndex": 1109,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.9",
          "ruleIndex": 1110,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.8.3",
          "ruleIndex": 1111,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.6.2",
          "ruleIndex": 1112,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.9.3",
          "ruleIndex": 1113,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.9.3",
          "ruleIndex": 1114,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.9.3",
          "ruleIndex": 1115,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.10.1",
          "ruleIndex": 1116,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36179_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1117,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36179] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.7.5",
          "ruleIndex": 1118,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36187_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1119,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36187] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11620_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1120,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11620] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12086_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1121,
          "level": "error",
          "message": {
            "text": "[CVE-2019-12086] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.7",
          "ruleIndex": 1122,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.9",
          "ruleIndex": 1123,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.8.3",
          "ruleIndex": 1124,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.9.7",
          "ruleIndex": 1125,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.6.2",
          "ruleIndex": 1126,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.9.7",
          "ruleIndex": 1127,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.10.1",
          "ruleIndex": 1128,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.7.5",
          "ruleIndex": 1129,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.6.2",
          "ruleIndex": 1130,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.7",
          "ruleIndex": 1131,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.9.3",
          "ruleIndex": 1132,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.10.1",
          "ruleIndex": 1133,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.10.1",
          "ruleIndex": 1134,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.8.3",
          "ruleIndex": 1135,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.7.5",
          "ruleIndex": 1136,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.9.7",
          "ruleIndex": 1137,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.9.2",
          "ruleIndex": 1138,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.9.4",
          "ruleIndex": 1139,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.5.1",
          "ruleIndex": 1140,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.8.3",
          "ruleIndex": 1141,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.7",
          "ruleIndex": 1142,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.9",
          "ruleIndex": 1143,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.9.2",
          "ruleIndex": 1144,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.7.4",
          "ruleIndex": 1145,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.7",
          "ruleIndex": 1146,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.8.3",
          "ruleIndex": 1147,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.7.5",
          "ruleIndex": 1148,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.8.3",
          "ruleIndex": 1149,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.9.7",
          "ruleIndex": 1150,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.9.2",
          "ruleIndex": 1151,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36186_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1152,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36186] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.8.3",
          "ruleIndex": 1153,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.8.3",
          "ruleIndex": 1154,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.7",
          "ruleIndex": 1155,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.6.2",
          "ruleIndex": 1156,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.9",
          "ruleIndex": 1157,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.9.2",
          "ruleIndex": 1158,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.9.4",
          "ruleIndex": 1159,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10673_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1160,
          "level": "error",
          "message": {
            "text": "[CVE-2020-10673] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.5.1",
          "ruleIndex": 1161,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.9",
          "ruleIndex": 1162,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.7.5",
          "ruleIndex": 1163,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.9.2",
          "ruleIndex": 1164,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.8.3",
          "ruleIndex": 1165,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000097_github.com/golang/go_1.7",
          "ruleIndex": 1166,
          "level": "error",
          "message": {
            "text": "[CVE-2017-1000097] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.5.1",
          "ruleIndex": 1167,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.9.4",
          "ruleIndex": 1168,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.7.4",
          "ruleIndex": 1169,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.7",
          "ruleIndex": 1170,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2976_com.google.guava:guava_15.0",
          "ruleIndex": 1171,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2976] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10650_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1172,
          "level": "error",
          "message": {
            "text": "[CVE-2020-10650] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.9.3",
          "ruleIndex": 1173,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.5.1",
          "ruleIndex": 1174,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.8.3",
          "ruleIndex": 1175,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.9.2",
          "ruleIndex": 1176,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.9.2",
          "ruleIndex": 1177,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.9.3",
          "ruleIndex": 1178,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000097_github.com/golang/go_1.6.2",
          "ruleIndex": 1179,
          "level": "error",
          "message": {
            "text": "[CVE-2017-1000097] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36189_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1180,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36189] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.9",
          "ruleIndex": 1181,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.9.2",
          "ruleIndex": 1182,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.7.4",
          "ruleIndex": 1183,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.7",
          "ruleIndex": 1184,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.7",
          "ruleIndex": 1185,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14061_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1186,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14061] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.10.1",
          "ruleIndex": 1187,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.9.7",
          "ruleIndex": 1188,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.6.2",
          "ruleIndex": 1189,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.9",
          "ruleIndex": 1190,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.6.2",
          "ruleIndex": 1191,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14439_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1192,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14439] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10172_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1193,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10172] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.7",
          "ruleIndex": 1194,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.9.4",
          "ruleIndex": 1195,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36182_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1196,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36182] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.6.2",
          "ruleIndex": 1197,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10086_commons-beanutils:commons-beanutils_1.8.3",
          "ruleIndex": 1198,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10086] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.10.1",
          "ruleIndex": 1199,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.9.4",
          "ruleIndex": 1200,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20190_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1201,
          "level": "error",
          "message": {
            "text": "[CVE-2021-20190] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.9",
          "ruleIndex": 1202,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.8.3",
          "ruleIndex": 1203,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.9.3",
          "ruleIndex": 1204,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.7.5",
          "ruleIndex": 1205,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.10.1",
          "ruleIndex": 1206,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.9.4",
          "ruleIndex": 1207,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.7",
          "ruleIndex": 1208,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.9.3",
          "ruleIndex": 1209,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.8.3",
          "ruleIndex": 1210,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.5.1",
          "ruleIndex": 1211,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.9.3",
          "ruleIndex": 1212,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.7",
          "ruleIndex": 1213,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.7.5",
          "ruleIndex": 1214,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36181_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1215,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36181] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.10.1",
          "ruleIndex": 1216,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.9.7",
          "ruleIndex": 1217,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.9.2",
          "ruleIndex": 1218,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.9.7",
          "ruleIndex": 1219,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.7.5",
          "ruleIndex": 1220,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.9.2",
          "ruleIndex": 1221,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.6.2",
          "ruleIndex": 1222,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.9.4",
          "ruleIndex": 1223,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.5.1",
          "ruleIndex": 1224,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36090_org.apache.commons:commons-compress_1.5",
          "ruleIndex": 1225,
          "level": "error",
          "message": {
            "text": "[CVE-2021-36090] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.9.7",
          "ruleIndex": 1226,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.5.1",
          "ruleIndex": 1227,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.7.4",
          "ruleIndex": 1228,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.7.4",
          "ruleIndex": 1229,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.6.2",
          "ruleIndex": 1230,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.10.1",
          "ruleIndex": 1231,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.7.4",
          "ruleIndex": 1232,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.9.2",
          "ruleIndex": 1233,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.9.7",
          "ruleIndex": 1234,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.9.3",
          "ruleIndex": 1235,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.9",
          "ruleIndex": 1236,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.9.7",
          "ruleIndex": 1237,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.10.1",
          "ruleIndex": 1238,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.9.3",
          "ruleIndex": 1239,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.9.4",
          "ruleIndex": 1240,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.9.2",
          "ruleIndex": 1241,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.10.1",
          "ruleIndex": 1242,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.7",
          "ruleIndex": 1243,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.9.3",
          "ruleIndex": 1244,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.9.2",
          "ruleIndex": 1245,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.7",
          "ruleIndex": 1246,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.5.1",
          "ruleIndex": 1247,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13956_org.apache.httpcomponents:httpclient_4.3.1",
          "ruleIndex": 1248,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13956] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.9.4",
          "ruleIndex": 1249,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.7.4",
          "ruleIndex": 1250,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.6.2",
          "ruleIndex": 1251,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.9.4",
          "ruleIndex": 1252,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.7.5",
          "ruleIndex": 1253,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.7.4",
          "ruleIndex": 1254,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.5.1",
          "ruleIndex": 1255,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42550_ch.qos.logback:logback-core_1.2.3",
          "ruleIndex": 1256,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42550] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.9.7",
          "ruleIndex": 1257,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12814_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1258,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-12814] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.7",
          "ruleIndex": 1259,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.9.7",
          "ruleIndex": 1260,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.8.3",
          "ruleIndex": 1261,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.5.1",
          "ruleIndex": 1262,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.8.3",
          "ruleIndex": 1263,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.7.5",
          "ruleIndex": 1264,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.9",
          "ruleIndex": 1265,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.7.5",
          "ruleIndex": 1266,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.8.3",
          "ruleIndex": 1267,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.10.1",
          "ruleIndex": 1268,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12384_com.fasterxml.jackson.core:jackson-databind_2.5.3",
          "ruleIndex": 1269,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-12384] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.7.4",
          "ruleIndex": 1270,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.9.2",
          "ruleIndex": 1271,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.9",
          "ruleIndex": 1272,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.6.2",
          "ruleIndex": 1273,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.6.2",
          "ruleIndex": 1274,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15804_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 1275,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15804] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15670_ubuntu:trusty:libc-bin_2.19-0ubuntu6.13",
          "ruleIndex": 1276,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15670] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15670_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 1277,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15670] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15670_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 1278,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15670] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8908_com.google.guava:guava_15.0",
          "ruleIndex": 1279,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8908] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8908_com.google.guava:guava_12.0",
          "ruleIndex": 1280,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8908] sha256__f02ea6bc2ea231ac947a9971392ccc69cd9fbed56af24d1eb0b170f3f715bb73.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15804_ubuntu:trusty:multiarch-support_2.19-0ubuntu6.13",
          "ruleIndex": 1281,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15804] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15804_ubuntu:trusty:libc6_2.19-0ubuntu6.13",
          "ruleIndex": 1282,
          "level": "note",
          "message": {
            "text": "[CVE-2017-15804] sha256__c47d9b229ca4eaf5d3b85b6fa7f794d00910a42634dd0fd5107a9a937b13b20f.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2022-41716",
              "name": "CVE-2022-41716",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41716"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41720",
              "name": "CVE-2022-41720",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41720"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called.",
                "markdown": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41722",
              "name": "CVE-2022-41722",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41722"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-9634",
              "name": "CVE-2019-9634",
              "shortDescription": {
                "text": "Scanner for CVE-2019-9634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-0601",
              "name": "CVE-2020-0601",
              "shortDescription": {
                "text": "Scanner for CVE-2020-0601"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14039",
              "name": "CVE-2020-14039",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3115",
              "name": "CVE-2021-3115",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-29804",
              "name": "CVE-2022-29804",
              "shortDescription": {
                "text": "Scanner for CVE-2022-29804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-38297",
              "name": "CVE-2021-38297",
              "shortDescription": {
                "text": "Scanner for CVE-2021-38297"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-1000097",
              "name": "CVE-2017-1000097",
              "shortDescription": {
                "text": "Scanner for CVE-2017-1000097"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30580",
              "name": "CVE-2022-30580",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30580"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30634",
              "name": "CVE-2022-30634",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-15670",
              "name": "CVE-2017-15670",
              "shortDescription": {
                "text": "Scanner for CVE-2017-15670"
              },
              "fullDescription": {
                "text": "This scanner checks whether the vulnerable functions `glob` or `glob64` are called.",
                "markdown": "This scanner checks whether the vulnerable functions `glob` or `glob64` are called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-15804",
              "name": "CVE-2017-15804",
              "shortDescription": {
                "text": "Scanner for CVE-2017-15804"
              },
              "fullDescription": {
                "text": "This scanner checks whether the vulnerable functions `glob` or `glob64` are called.",
                "markdown": "This scanner checks whether the vulnerable functions `glob` or `glob64` are called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-1000517",
              "name": "CVE-2018-1000517",
              "shortDescription": {
                "text": "Scanner for CVE-2018-1000517"
              },
              "fullDescription": {
                "text": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified.",
                "markdown": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-27216",
              "name": "CVE-2020-27216",
              "shortDescription": {
                "text": "Scanner for CVE-2020-27216"
              },
              "fullDescription": {
                "text": "The scanner is always applicable on Unix systems.",
                "markdown": "The scanner is always applicable on Unix systems."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2023-45283",
              "name": "CVE-2023-45283",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45283"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-11888",
              "name": "CVE-2019-11888",
              "shortDescription": {
                "text": "Scanner for CVE-2019-11888"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14809",
              "name": "CVE-2019-14809",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14809"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17596",
              "name": "CVE-2019-17596",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17596"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-27918",
              "name": "CVE-2021-27918",
              "shortDescription": {
                "text": "Scanner for CVE-2021-27918"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33195",
              "name": "CVE-2021-33195",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33195"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33196",
              "name": "CVE-2021-33196",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33196"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33197",
              "name": "CVE-2021-33197",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33197"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2880",
              "name": "CVE-2022-2880",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-36221",
              "name": "CVE-2021-36221",
              "shortDescription": {
                "text": "Scanner for CVE-2021-36221"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33198",
              "name": "CVE-2021-33198",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33198"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-39293",
              "name": "CVE-2021-39293",
              "shortDescription": {
                "text": "Scanner for CVE-2021-39293"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41771",
              "name": "CVE-2021-41771",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41771"
              },
              "fullDescription": {
                "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input.",
                "markdown": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41772",
              "name": "CVE-2021-41772",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used.",
                "markdown": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-42550",
              "name": "CVE-2021-42550",
              "shortDescription": {
                "text": "Scanner for CVE-2021-42550"
              },
              "fullDescription": {
                "text": "The scanner checks any of the following in the `logback` configuration file:\n\n1. Whether the vulnerable configuration classes `DriverManagerConnectionSource`, `DataSourceConnectionSource`, or `JNDIConnectionSource` are defined in a `\u003cconnectionSource\u003e` tag.\n2. Whether the vulnerable configuration tag `\u003cinsertFromJNDI\u003e` is set with an `env-entry-name`.",
                "markdown": "The scanner checks any of the following in the `logback` configuration file:\n\n1. Whether the vulnerable configuration classes `DriverManagerConnectionSource`, `DataSourceConnectionSource`, or `JNDIConnectionSource` are defined in a `\u003cconnectionSource\u003e` tag.\n2. Whether the vulnerable configuration tag `\u003cinsertFromJNDI\u003e` is set with an `env-entry-name`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-44717",
              "name": "CVE-2021-44717",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44717"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-0839",
              "name": "CVE-2022-0839",
              "shortDescription": {
                "text": "Scanner for CVE-2022-0839"
              },
              "fullDescription": {
                "text": "This scanner checks whether the vulnerable function `XMLChangeLogSAXParser.parse*()` is called.",
                "markdown": "This scanner checks whether the vulnerable function `XMLChangeLogSAXParser.parse*()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1962",
              "name": "CVE-2022-1962",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1962"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23772",
              "name": "CVE-2022-23772",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Rat.SetString` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Rat.SetString` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23806",
              "name": "CVE-2022-23806",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23806"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```",
                "markdown": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24675",
              "name": "CVE-2022-24675",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24675"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `pem.Decode` is called.",
                "markdown": "The scanner checks whether the vulnerable function `pem.Decode` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24921",
              "name": "CVE-2022-24921",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24921"
              },
              "fullDescription": {
                "text": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```",
                "markdown": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28131",
              "name": "CVE-2022-28131",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28131"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28327",
              "name": "CVE-2022-28327",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28327"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2879",
              "name": "CVE-2022-2879",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2879"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called.",
                "markdown": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30630",
              "name": "CVE-2022-30630",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30630"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `fs.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `fs.Glob` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30631",
              "name": "CVE-2022-30631",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30631"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Reader.Read` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Reader.Read` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30632",
              "name": "CVE-2022-30632",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30632"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `filepath.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `filepath.Glob` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30633",
              "name": "CVE-2022-30633",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30633"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32148",
              "name": "CVE-2022-32148",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32148"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32189",
              "name": "CVE-2022-32189",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32189"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called.",
                "markdown": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41715",
              "name": "CVE-2022-41715",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41715"
              },
              "fullDescription": {
                "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`.",
                "markdown": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41724",
              "name": "CVE-2022-41724",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41724"
              },
              "fullDescription": {
                "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)",
                "markdown": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41725",
              "name": "CVE-2022-41725",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41725"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24536",
              "name": "CVE-2023-24536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24536"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-1370",
              "name": "CVE-2023-1370",
              "shortDescription": {
                "text": "Scanner for CVE-2023-1370"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `JSONParser.parse` function is called with external input to its 1st argument (`in`)",
                "markdown": "The scanner checks whether the vulnerable `JSONParser.parse` function is called with external input to its 1st argument (`in`)"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24534",
              "name": "CVE-2023-24534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24534"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24537",
              "name": "CVE-2023-24537",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24537"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24538",
              "name": "CVE-2023-24538",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24538"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24539",
              "name": "CVE-2023-24539",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24539"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24540",
              "name": "CVE-2023-24540",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24540"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24998",
              "name": "CVE-2023-24998",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24998"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the vulnerable functions is called:\n\n```\norg.apache.commons.fileupload.portlet.PortletFileUpload.parseRequest()\norg.apache.commons.fileupload.servlet.ServletFileUpload.parseRequest()\norg.apache.commons.fileupload.FileUpload.parseRequest()\norg.apache.commons.fileupload.FileUploadBase.parseRequest()\n```",
                "markdown": "The scanner checks if at least one of the vulnerable functions is called:\n\n```\norg.apache.commons.fileupload.portlet.PortletFileUpload.parseRequest()\norg.apache.commons.fileupload.servlet.ServletFileUpload.parseRequest()\norg.apache.commons.fileupload.FileUpload.parseRequest()\norg.apache.commons.fileupload.FileUploadBase.parseRequest()\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29400",
              "name": "CVE-2023-29400",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29400"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29402",
              "name": "CVE-2023-29402",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29402"
              },
              "fullDescription": {
                "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)",
                "markdown": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29403",
              "name": "CVE-2023-29403",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29403"
              },
              "fullDescription": {
                "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled",
                "markdown": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29406",
              "name": "CVE-2023-29406",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29406"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29409",
              "name": "CVE-2023-29409",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29409"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-18311",
              "name": "CVE-2018-18311",
              "shortDescription": {
                "text": "Scanner for CVE-2018-18311"
              },
              "fullDescription": {
                "text": "The scanner checks if any Perl scripts contain an assignment to the `ENV` variable.",
                "markdown": "The scanner checks if any Perl scripts contain an assignment to the `ENV` variable."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23773",
              "name": "CVE-2022-23773",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23773"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45285",
              "name": "CVE-2023-45285",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45285"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction.",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29404",
              "name": "CVE-2023-29404",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29404"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29405",
              "name": "CVE-2023-29405",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29405"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39323",
              "name": "CVE-2023-39323",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39323"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45287",
              "name": "CVE-2023-45287",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45287"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-10237",
              "name": "CVE-2018-10237",
              "shortDescription": {
                "text": "Scanner for CVE-2018-10237"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `ObjectInputStream` is instantiated and `readObject` function is called.",
                "markdown": "The scanner checks whether the vulnerable class `ObjectInputStream` is instantiated and `readObject` function is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-35116",
              "name": "CVE-2023-35116",
              "shortDescription": {
                "text": "Scanner for CVE-2023-35116"
              },
              "fullDescription": {
                "text": "The scanner checks for calls to the vulnerable functions with external input:\n\n*  `ObjectMapper.writeValue()`\n*  `ObjectMapper.writeValueAsString()`\n*  `ObjectMapper.writeValueAsBytes()`\n*  `ObjectWriter.writeValue()`\n*  `ObjectWriter.writeValueAsString()`\n*  `ObjectWriter.writeValueAsBytes()`\n* `ser.DefaultSerializerProvider.serializeValue()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The input argument to those functions is a cyclic object (e.g. a `HashMap` object with a reference to itself).",
                "markdown": "The scanner checks for calls to the vulnerable functions with external input:\n\n*  `ObjectMapper.writeValue()`\n*  `ObjectMapper.writeValueAsString()`\n*  `ObjectMapper.writeValueAsBytes()`\n*  `ObjectWriter.writeValue()`\n*  `ObjectWriter.writeValueAsString()`\n*  `ObjectWriter.writeValueAsBytes()`\n* `ser.DefaultSerializerProvider.serializeValue()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The input argument to those functions is a cyclic object (e.g. a `HashMap` object with a reference to itself)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2976",
              "name": "CVE-2023-2976",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2976"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-8908",
              "name": "CVE-2020-8908",
              "shortDescription": {
                "text": "Scanner for CVE-2020-8908"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42004",
              "name": "CVE-2022-42004",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42004"
              },
              "fullDescription": {
                "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`",
                "markdown": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42003",
              "name": "CVE-2022-42003",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42003"
              },
              "fullDescription": {
                "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`",
                "markdown": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-38749",
              "name": "CVE-2022-38749",
              "shortDescription": {
                "text": "Scanner for CVE-2022-38749"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-38750",
              "name": "CVE-2022-38750",
              "shortDescription": {
                "text": "Scanner for CVE-2022-38750"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41854",
              "name": "CVE-2022-41854",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41854"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-38751",
              "name": "CVE-2022-38751",
              "shortDescription": {
                "text": "Scanner for CVE-2022-38751"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25857",
              "name": "CVE-2022-25857",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25857"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-38752",
              "name": "CVE-2022-38752",
              "shortDescription": {
                "text": "Scanner for CVE-2022-38752"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load`\n* `org/yaml/snakeyaml/Yaml.loadAs`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-31197",
              "name": "CVE-2022-31197",
              "shortDescription": {
                "text": "Scanner for CVE-2022-31197"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `ResultSet.refreshRow()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `ResultSet.refreshRow()` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-21724",
              "name": "CVE-2022-21724",
              "shortDescription": {
                "text": "Scanner for CVE-2022-21724"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `DriverManager.getConnection` is called with external input to its 1st (`url`) or 2nd (`info`) arguments.",
                "markdown": "The scanner checks whether the vulnerable function `DriverManager.getConnection` is called with external input to its 1st (`url`) or 2nd (`info`) arguments."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1471",
              "name": "CVE-2022-1471",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1471"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the vulnerable functions are called -\n\n* `Yaml.load`\n* `Yaml.loadAll`\n* `Load.loadFromString`\n* `Load.loadAllFromString`\n* `Load.loadFromInputStream`\n* `Load.loadAllFromInputStream`\n* `Load.loadFromReader`\n* `Load.loadAllFromReader`\n\n\nIn addition, the scanner also checks whether a mitigation is used (initiating `Yaml` with a `SafeConstructor`).",
                "markdown": "The scanner checks whether any of the vulnerable functions are called -\n\n* `Yaml.load`\n* `Yaml.loadAll`\n* `Load.loadFromString`\n* `Load.loadAllFromString`\n* `Load.loadFromInputStream`\n* `Load.loadAllFromInputStream`\n* `Load.loadFromReader`\n* `Load.loadAllFromReader`\n\n\nIn addition, the scanner also checks whether a mitigation is used (initiating `Yaml` with a `SafeConstructor`)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-36090",
              "name": "CVE-2021-36090",
              "shortDescription": {
                "text": "Scanner for CVE-2021-36090"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ZipArchiveInputStream`\n* `JarArchiveInputStream`",
                "markdown": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ZipArchiveInputStream`\n* `JarArchiveInputStream`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-35517",
              "name": "CVE-2021-35517",
              "shortDescription": {
                "text": "Scanner for CVE-2021-35517"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ArchiveInputStream`\n* `TarArchiveInputStream`",
                "markdown": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ArchiveInputStream`\n* `TarArchiveInputStream`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-35516",
              "name": "CVE-2021-35516",
              "shortDescription": {
                "text": "Scanner for CVE-2021-35516"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated.",
                "markdown": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-35515",
              "name": "CVE-2021-35515",
              "shortDescription": {
                "text": "Scanner for CVE-2021-35515"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated.",
                "markdown": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-29425",
              "name": "CVE-2021-29425",
              "shortDescription": {
                "text": "Scanner for CVE-2021-29425"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `normalize` is called with external input to its 1st (`fileName`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `normalize` is called with external input to its 1st (`fileName`) argument."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-27568",
              "name": "CVE-2021-27568",
              "shortDescription": {
                "text": "Scanner for CVE-2021-27568"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `net/minidev/json/parser/JSONParser.parse()` is called with external input.",
                "markdown": "The scanner checks whether the vulnerable function `net/minidev/json/parser/JSONParser.parse()` is called with external input."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36518",
              "name": "CVE-2020-36518",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36518"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input in the first argument.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner: The second argument must be an untyped object.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input in the first argument.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner: The second argument must be an untyped object."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-13956",
              "name": "CVE-2020-13956",
              "shortDescription": {
                "text": "Scanner for CVE-2020-13956"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `extractHost` is called with external input to its 1st (`uri`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `extractHost` is called with external input to its 1st (`uri`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-18640",
              "name": "CVE-2017-18640",
              "shortDescription": {
                "text": "Scanner for CVE-2017-18640"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load` with external input to its 1st argument.\n* `org/yaml/snakeyaml/Yaml.loadAs` with external input to its 1st argument.\n* `org/yaml/snakeyaml/Yaml.loadAll` with external input to its 1st argument.\n* `SafeConstructor.getSingleData()`\n* `Constructor.getSingleData()`\n* `CustomClassLoaderConstructor.getSingleData()`\n* `org/snakeyaml/engine/v2/api/Load.loadAllFromInputStream()`\n* `org/snakeyaml/engine/v2/api/Load.loadAllFromReader()`\n* `org/snakeyaml/engine/v2/api/Load.loadAllFromString()` with external input to its 1st argument.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The return value from the vulnerable function must be used as a Map (for example `load_result.toString();`).",
                "markdown": "The scanner checks whether the vulnerable functions are called:\n\n* `org/yaml/snakeyaml/Yaml.load` with external input to its 1st argument.\n* `org/yaml/snakeyaml/Yaml.loadAs` with external input to its 1st argument.\n* `org/yaml/snakeyaml/Yaml.loadAll` with external input to its 1st argument.\n* `SafeConstructor.getSingleData()`\n* `Constructor.getSingleData()`\n* `CustomClassLoaderConstructor.getSingleData()`\n* `org/snakeyaml/engine/v2/api/Load.loadAllFromInputStream()`\n* `org/snakeyaml/engine/v2/api/Load.loadAllFromReader()`\n* `org/snakeyaml/engine/v2/api/Load.loadAllFromString()` with external input to its 1st argument.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The return value from the vulnerable function must be used as a Map (for example `load_result.toString();`)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-31684",
              "name": "CVE-2021-31684",
              "shortDescription": {
                "text": "Scanner for CVE-2021-31684"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `JSONParser.parse` is called with external input to its 1st argument.",
                "markdown": "The scanner checks whether the vulnerable function `JSONParser.parse` is called with external input to its 1st argument."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-1597",
              "name": "CVE-2024-1597",
              "shortDescription": {
                "text": "Scanner for CVE-2024-1597"
              },
              "fullDescription": {
                "text": "The scanner checks for a call to the vulnerable function `java.sql.PreparedStatement.SetString` and for at least one of the following vulnerable functions:\n\n* `java.sql.PreparedStatement.SetInt`\n* `java.sql.PreparedStatement.SetDouble`\n* `java.sql.PreparedStatement.SetFloat` \n* `java.sql.PreparedStatement.SetShort`\n* `java.sql.PreparedStatement.SetLong`\n\nFor determining the applicability of this CVE, additional conditions (that the scanner currently does not check) should be verified. The conditions are:\n1. The non-default `PreferQueryMode=SIMPLE` parameter should be used in the JDBC connection string. An example of a connection string that uses this mode: `jdbc:postgresql://localhost:5432/?preferQueryMode=simple`\n2. The numeric variable (set for example by a `SetInt` function call) must come after a minus (`-`) character in the query.",
                "markdown": "The scanner checks for a call to the vulnerable function `java.sql.PreparedStatement.SetString` and for at least one of the following vulnerable functions:\n\n* `java.sql.PreparedStatement.SetInt`\n* `java.sql.PreparedStatement.SetDouble`\n* `java.sql.PreparedStatement.SetFloat` \n* `java.sql.PreparedStatement.SetShort`\n* `java.sql.PreparedStatement.SetLong`\n\nFor determining the applicability of this CVE, additional conditions (that the scanner currently does not check) should be verified. The conditions are:\n1. The non-default `PreferQueryMode=SIMPLE` parameter should be used in the JDBC connection string. An example of a connection string that uses this mode: `jdbc:postgresql://localhost:5432/?preferQueryMode=simple`\n2. The numeric variable (set for example by a `SetInt` function call) must come after a minus (`-`) character in the query."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-6378",
              "name": "CVE-2023-6378",
              "shortDescription": {
                "text": "Scanner for CVE-2023-6378"
              },
              "fullDescription": {
                "text": "The scanner checks whether:\n\n1. One of the following class is instantiated in the application:\n\n* RemoteAppenderStreamClient\n* RemoteAppenderServerListener\n* ServerSocketReceiver\n* SSLServerSocketReceiver\n* SocketReceiver\n* SocketNode\n* HardenedObjectInputStream\n* HardenedModelInputStream\n* HardenedLoggingEventInputStream\n\n2. An Appender or Receiver is defined in a configuration file XML.\nFor example -\n```xml\n\u003cconfiguration\u003e\n  \u003creceiver class=\"ch.qos.logback.classic.net.server.ServerSocketReceiver\"\u003e\n  \u003c/receiver\u003e\n\u003c/configuration\u003e\n```",
                "markdown": "The scanner checks whether:\n\n1. One of the following class is instantiated in the application:\n\n* RemoteAppenderStreamClient\n* RemoteAppenderServerListener\n* ServerSocketReceiver\n* SSLServerSocketReceiver\n* SocketReceiver\n* SocketNode\n* HardenedObjectInputStream\n* HardenedModelInputStream\n* HardenedLoggingEventInputStream\n\n2. An Appender or Receiver is defined in a configuration file XML.\nFor example -\n```xml\n\u003cconfiguration\u003e\n  \u003creceiver class=\"ch.qos.logback.classic.net.server.ServerSocketReceiver\"\u003e\n  \u003c/receiver\u003e\n\u003c/configuration\u003e\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-10086",
              "name": "CVE-2019-10086",
              "shortDescription": {
                "text": "Scanner for CVE-2019-10086"
              },
              "fullDescription": {
                "text": "The scanner checks if `BeanUtilsBean.getProperty()` or `PropertyUtilsBean.getProperty()` is called with `\"class\"` or user-input as its second argument.\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: No call to `addBeanIntrospector(SuppressPropertiesBeanIntrospector.SUPPRESS_CLASS)` is made.",
                "markdown": "The scanner checks if `BeanUtilsBean.getProperty()` or `PropertyUtilsBean.getProperty()` is called with `\"class\"` or user-input as its second argument.\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: No call to `addBeanIntrospector(SuppressPropertiesBeanIntrospector.SUPPRESS_CLASS)` is made."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45288",
              "name": "CVE-2023-45288",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45288"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`.",
                "markdown": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30635",
              "name": "CVE-2022-30635",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30635"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called.",
                "markdown": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-16942",
              "name": "CVE-2019-16942",
              "shortDescription": {
                "text": "Scanner for CVE-2019-16942"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-16943",
              "name": "CVE-2019-16943",
              "shortDescription": {
                "text": "Scanner for CVE-2019-16943"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17267",
              "name": "CVE-2019-17267",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17267"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17531",
              "name": "CVE-2019-17531",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17531"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-20330",
              "name": "CVE-2019-20330",
              "shortDescription": {
                "text": "Scanner for CVE-2019-20330"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-10650",
              "name": "CVE-2020-10650",
              "shortDescription": {
                "text": "Scanner for CVE-2020-10650"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-10673",
              "name": "CVE-2020-10673",
              "shortDescription": {
                "text": "Scanner for CVE-2020-10673"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-11619",
              "name": "CVE-2020-11619",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11619"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-11620",
              "name": "CVE-2020-11620",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11620"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14060",
              "name": "CVE-2020-14060",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14060"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14061",
              "name": "CVE-2020-14061",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14061"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14062",
              "name": "CVE-2020-14062",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14062"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-24616",
              "name": "CVE-2020-24616",
              "shortDescription": {
                "text": "Scanner for CVE-2020-24616"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-24750",
              "name": "CVE-2020-24750",
              "shortDescription": {
                "text": "Scanner for CVE-2020-24750"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-25649",
              "name": "CVE-2020-25649",
              "shortDescription": {
                "text": "Scanner for CVE-2020-25649"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-35490",
              "name": "CVE-2020-35490",
              "shortDescription": {
                "text": "Scanner for CVE-2020-35490"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-35491",
              "name": "CVE-2020-35491",
              "shortDescription": {
                "text": "Scanner for CVE-2020-35491"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-35728",
              "name": "CVE-2020-35728",
              "shortDescription": {
                "text": "Scanner for CVE-2020-35728"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36179",
              "name": "CVE-2020-36179",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36179"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36180",
              "name": "CVE-2020-36180",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36180"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36181",
              "name": "CVE-2020-36181",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36181"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36182",
              "name": "CVE-2020-36182",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36182"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36183",
              "name": "CVE-2020-36183",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36183"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36185",
              "name": "CVE-2020-36185",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36185"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36186",
              "name": "CVE-2020-36186",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36186"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36187",
              "name": "CVE-2020-36187",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36187"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36188",
              "name": "CVE-2020-36188",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36188"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36189",
              "name": "CVE-2020-36189",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36189"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-8840",
              "name": "CVE-2020-8840",
              "shortDescription": {
                "text": "Scanner for CVE-2020-8840"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-9546",
              "name": "CVE-2020-9546",
              "shortDescription": {
                "text": "Scanner for CVE-2020-9546"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-9547",
              "name": "CVE-2020-9547",
              "shortDescription": {
                "text": "Scanner for CVE-2020-9547"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-9548",
              "name": "CVE-2020-9548",
              "shortDescription": {
                "text": "Scanner for CVE-2020-9548"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36184",
              "name": "CVE-2020-36184",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36184"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-20190",
              "name": "CVE-2021-20190",
              "shortDescription": {
                "text": "Scanner for CVE-2021-20190"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-15095",
              "name": "CVE-2017-15095",
              "shortDescription": {
                "text": "Scanner for CVE-2017-15095"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-17485",
              "name": "CVE-2017-17485",
              "shortDescription": {
                "text": "Scanner for CVE-2017-17485"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-7525",
              "name": "CVE-2017-7525",
              "shortDescription": {
                "text": "Scanner for CVE-2017-7525"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-11307",
              "name": "CVE-2018-11307",
              "shortDescription": {
                "text": "Scanner for CVE-2018-11307"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-12022",
              "name": "CVE-2018-12022",
              "shortDescription": {
                "text": "Scanner for CVE-2018-12022"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14718",
              "name": "CVE-2018-14718",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14718"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14719",
              "name": "CVE-2018-14719",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14719"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14720",
              "name": "CVE-2018-14720",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14720"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14721",
              "name": "CVE-2018-14721",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14721"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-19360",
              "name": "CVE-2018-19360",
              "shortDescription": {
                "text": "Scanner for CVE-2018-19360"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-19361",
              "name": "CVE-2018-19361",
              "shortDescription": {
                "text": "Scanner for CVE-2018-19361"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-19362",
              "name": "CVE-2018-19362",
              "shortDescription": {
                "text": "Scanner for CVE-2018-19362"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-5968",
              "name": "CVE-2018-5968",
              "shortDescription": {
                "text": "Scanner for CVE-2018-5968"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-7489",
              "name": "CVE-2018-7489",
              "shortDescription": {
                "text": "Scanner for CVE-2018-7489"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-10172",
              "name": "CVE-2019-10172",
              "shortDescription": {
                "text": "Scanner for CVE-2019-10172"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12086",
              "name": "CVE-2019-12086",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12086"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12384",
              "name": "CVE-2019-12384",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12384"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12814",
              "name": "CVE-2019-12814",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12814"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14379",
              "name": "CVE-2019-14379",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14379"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14439",
              "name": "CVE-2019-14439",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14439"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14540",
              "name": "CVE-2019-14540",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14540"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14892",
              "name": "CVE-2019-14892",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14892"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14893",
              "name": "CVE-2019-14893",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14893"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-16335",
              "name": "CVE-2019-16335",
              "shortDescription": {
                "text": "Scanner for CVE-2019-16335"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2011-5325",
              "name": "CVE-2011-5325",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2011-5325"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-10790",
              "name": "CVE-2017-10790",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-10790"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-15041",
              "name": "CVE-2017-15041",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-15041"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-7183",
              "name": "CVE-2018-7183",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-7183"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-1000409",
              "name": "CVE-2017-1000409",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-1000409"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1049",
              "name": "CVE-2018-1049",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1049"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-33264",
              "name": "CVE-2023-33264",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-33264"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-1705",
              "name": "CVE-2022-1705",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-1705"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5747",
              "name": "CVE-2019-5747",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5747"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1126",
              "name": "CVE-2018-1126",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1126"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-5407",
              "name": "CVE-2018-5407",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-5407"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52428",
              "name": "CVE-2023-52428",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52428"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-14647",
              "name": "CVE-2018-14647",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-14647"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1124",
              "name": "CVE-2018-1124",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1124"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-6512",
              "name": "CVE-2017-6512",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-6512"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-8853",
              "name": "CVE-2015-8853",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-8853"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-5262",
              "name": "CVE-2015-5262",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-5262"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-17195",
              "name": "CVE-2019-17195",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17195"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3114",
              "name": "CVE-2021-3114",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3114"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-3577",
              "name": "CVE-2014-3577",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-3577"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-0734",
              "name": "CVE-2018-0734",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-0734"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-12015",
              "name": "CVE-2018-12015",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-12015"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-0732",
              "name": "CVE-2018-0732",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-0732"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-10360",
              "name": "CVE-2018-10360",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-10360"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45284",
              "name": "CVE-2023-45284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1123",
              "name": "CVE-2018-1123",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1123"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20679",
              "name": "CVE-2018-20679",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20679"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-7187",
              "name": "CVE-2018-7187",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-7187"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45859",
              "name": "CVE-2023-45859",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45859"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-16997",
              "name": "CVE-2017-16997",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-16997"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-6913",
              "name": "CVE-2018-6913",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-6913"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28169",
              "name": "CVE-2021-28169",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28169"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-8865",
              "name": "CVE-2015-8865",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-8865"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-6574",
              "name": "CVE-2018-6574",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-6574"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1060",
              "name": "CVE-2018-1060",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1060"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30629",
              "name": "CVE-2022-30629",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30629"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-2147",
              "name": "CVE-2016-2147",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-2147"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1122",
              "name": "CVE-2018-1122",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1122"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-29511",
              "name": "CVE-2020-29511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-29511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28165",
              "name": "CVE-2021-28165",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28165"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3462",
              "name": "CVE-2019-3462",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3462"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10246",
              "name": "CVE-2019-10246",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10246"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-12972",
              "name": "CVE-2017-12972",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-12972"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-0737",
              "name": "CVE-2018-0737",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-0737"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-40167",
              "name": "CVE-2023-40167",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-40167"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-3842",
              "name": "CVE-2019-3842",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-3842"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-29510",
              "name": "CVE-2020-29510",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-29510"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-1000408",
              "name": "CVE-2017-1000408",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-1000408"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-0739",
              "name": "CVE-2018-0739",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-0739"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15586",
              "name": "CVE-2020-15586",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15586"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1000802",
              "name": "CVE-2018-1000802",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1000802"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-3958",
              "name": "CVE-2016-3958",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-3958"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-12536",
              "name": "CVE-2018-12536",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-12536"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-8618",
              "name": "CVE-2015-8618",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-8618"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-18313",
              "name": "CVE-2018-18313",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-18313"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-5386",
              "name": "CVE-2016-5386",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-5386"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-24553",
              "name": "CVE-2020-24553",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-24553"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10241",
              "name": "CVE-2019-10241",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10241"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-9645",
              "name": "CVE-2014-9645",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-9645"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39319",
              "name": "CVE-2023-39319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39326",
              "name": "CVE-2023-39326",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39326"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-9653",
              "name": "CVE-2014-9653",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-9653"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-34428",
              "name": "CVE-2021-34428",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-34428"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-12973",
              "name": "CVE-2017-12973",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-12973"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-15873",
              "name": "CVE-2017-15873",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-15873"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-5733",
              "name": "CVE-2018-5733",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-5733"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16875",
              "name": "CVE-2018-16875",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16875"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-0114",
              "name": "CVE-2014-0114",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-0114"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-9621",
              "name": "CVE-2014-9621",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-9621"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-15042",
              "name": "CVE-2017-15042",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-15042"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28366",
              "name": "CVE-2020-28366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-34558",
              "name": "CVE-2021-34558",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-34558"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-7943",
              "name": "CVE-2016-7943",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-7943"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-12974",
              "name": "CVE-2017-12974",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-12974"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-2148",
              "name": "CVE-2016-2148",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-2148"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-6185",
              "name": "CVE-2016-6185",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-6185"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16276",
              "name": "CVE-2019-16276",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16276"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-9261",
              "name": "CVE-2015-9261",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-9261"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-14598",
              "name": "CVE-2018-14598",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-14598"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-26048",
              "name": "CVE-2023-26048",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-26048"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-10750",
              "name": "CVE-2016-10750",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-10750"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-2774",
              "name": "CVE-2016-2774",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-2774"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-36437",
              "name": "CVE-2022-36437",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-36437"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-5732",
              "name": "CVE-2018-5732",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-5732"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28367",
              "name": "CVE-2020-28367",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28367"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-10087",
              "name": "CVE-2016-10087",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-10087"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-33265",
              "name": "CVE-2023-33265",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-33265"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-14599",
              "name": "CVE-2018-14599",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-14599"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-36479",
              "name": "CVE-2023-36479",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-36479"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-17512",
              "name": "CVE-2017-17512",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-17512"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-6486",
              "name": "CVE-2019-6486",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-6486"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-24532",
              "name": "CVE-2023-24532",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-24532"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1125",
              "name": "CVE-2018-1125",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1125"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-7656",
              "name": "CVE-2017-7656",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-7656"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-7942",
              "name": "CVE-2016-7942",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-7942"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2014-9620",
              "name": "CVE-2014-9620",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2014-9620"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39318",
              "name": "CVE-2023-39318",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39318"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-7185",
              "name": "CVE-2018-7185",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-7185"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16873",
              "name": "CVE-2018-16873",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16873"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1061",
              "name": "CVE-2018-1061",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1061"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45860",
              "name": "CVE-2023-45860",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45860"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-8740",
              "name": "CVE-2018-8740",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-8740"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1000001",
              "name": "CVE-2018-1000001",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1000001"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-25710",
              "name": "CVE-2024-25710",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-25710"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-10000",
              "name": "CVE-2018-10000",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-10000"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-7526",
              "name": "CVE-2017-7526",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-7526"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-0495",
              "name": "CVE-2018-0495",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-0495"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-3144",
              "name": "CVE-2017-3144",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-3144"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-26049",
              "name": "CVE-2023-26049",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-26049"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-1000098",
              "name": "CVE-2017-1000098",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-1000098"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16874",
              "name": "CVE-2018-16874",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16874"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10247",
              "name": "CVE-2019-10247",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10247"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-2047",
              "name": "CVE-2022-2047",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-2047"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-16544",
              "name": "CVE-2017-16544",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-16544"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-14600",
              "name": "CVE-2018-14600",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-14600"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-8932",
              "name": "CVE-2017-8932",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-8932"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-3959",
              "name": "CVE-2016-3959",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-3959"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-12020",
              "name": "CVE-2018-12020",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-12020"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718810509-3533447389/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718810345-1246484857/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2022-41716",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41722",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2019-9634",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-0601",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-14039",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-3115",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-29804",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-38297",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2017-1000097",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30580",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30634",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2017-15670",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether the vulnerable functions `glob` or `glob64` are called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-15804",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether the vulnerable functions `glob` or `glob64` are called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-1000517",
          "message": {
            "text": "The vulnerable `BusyBox` containing `wget` tool is present"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/initramfs-tools/bin/busybox"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45283",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2019-11888",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-27918",
          "message": {
            "text": "The vulnerable function Decoder.Token is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-27918",
          "message": {
            "text": "The vulnerable function Decoder.Token is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-27918",
          "message": {
            "text": "The vulnerable function Decoder.Token is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-27918",
          "message": {
            "text": "The vulnerable function Decoder.Token is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33196",
          "message": {
            "text": "The vulnerable function zip.NewReader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33197",
          "message": {
            "text": "The vulnerable function ReverseProxy.ServeHTTP is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2880",
          "message": {
            "text": "The vulnerable function ReverseProxy.ServeHTTP is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36221",
          "message": {
            "text": "The vulnerable function ReverseProxy.ServeHTTP is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33198",
          "message": {
            "text": "The vulnerable function Rat.SetString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-39293",
          "message": {
            "text": "The vulnerable function NewReader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-41771",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2021-41772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-42550",
          "kind": "pass",
          "message": {
            "text": "The scanner checks any of the following in the `logback` configuration file:\n\n1. Whether the vulnerable configuration classes `DriverManagerConnectionSource`, `DataSourceConnectionSource`, or `JNDIConnectionSource` are defined in a `\u003cconnectionSource\u003e` tag.\n2. Whether the vulnerable configuration tag `\u003cinsertFromJNDI\u003e` is set with an `env-entry-name`."
          }
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-0839",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether the vulnerable function `XMLChangeLogSAXParser.parse*()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-1962",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-23772",
          "message": {
            "text": "The vulnerable function Rat.SetString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MatchString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Match is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MatchString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MatchString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "message": {
            "text": "The vulnerable function xml.Decoder.Skip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "message": {
            "text": "The vulnerable function xml.Decoder.Skip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "message": {
            "text": "The vulnerable function xml.Decoder.Skip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "message": {
            "text": "The vulnerable function xml.Decoder.Skip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "message": {
            "text": "The vulnerable function archive/tar.Reader.Next is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "message": {
            "text": "The vulnerable function archive/tar.Reader.Next is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "message": {
            "text": "The vulnerable function archive/tar.Reader.Next is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "message": {
            "text": "The vulnerable function archive/tar.Reader.Next is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "message": {
            "text": "The vulnerable function archive/tar.Reader.Next is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30630",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `fs.Glob` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.DecodeElement is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshal is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshalPath is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.DecodeElement is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshal is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshalPath is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.DecodeElement is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshal is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshalPath is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.DecodeElement is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshal is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "message": {
            "text": "The vulnerable function Decoder.unmarshalPath is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "message": {
            "text": "The vulnerable function math/big.Rat.GobDecode\\math/big.Float.GobDecode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "message": {
            "text": "The vulnerable function math/big.Rat.GobDecode\\math/big.Float.GobDecode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41715",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41724",
          "kind": "pass",
          "message": {
            "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
          }
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/JSONValue.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/parser/JSONParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/parser/JSONParserByteArray.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/parser/JSONParserInputStream.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/parser/JSONParserReader.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/json-smart-1.3.1.jar/net/minidev/json/parser/JSONParserString.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-1370",
          "message": {
            "text": "The vulnerable function JSONParser.parse() is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/nimbus-jose-jwt-4.12.jar/com/nimbusds/jose/util/JSONObjectUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24537",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function escaper.commit is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function escaper.commit is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function escaper.commit is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function escaper.commit is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24998",
          "message": {
            "text": "The vulnerable function parseRequest is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-java-server-0.5.0-SNAPSHOT.jar/io/github/ibuildthecloud/gdapi/request/parser/DefaultApiRequestParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24998",
          "message": {
            "text": "The vulnerable function parseRequest is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-fileupload-1.3.3.jar/org/apache/commons/fileupload/FileUploadBase.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24998",
          "message": {
            "text": "The vulnerable function parseRequest is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-fileupload-1.3.3.jar/org/apache/commons/fileupload/FileUploadBase.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24998",
          "message": {
            "text": "The vulnerable function parseRequest is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-fileupload-1.3.3.jar/org/apache/commons/fileupload/portlet/PortletFileUpload.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24998",
          "message": {
            "text": "The vulnerable function parseRequest is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-fileupload-1.3.3.jar/org/apache/commons/fileupload/servlet/ServletFileUpload.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24998",
          "message": {
            "text": "The vulnerable function parseRequest is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-web-4.3.2.RELEASE.jar/org/springframework/web/multipart/commons/CommonsMultipartResolver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.Execute is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function Template.ExecuteTemplate is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "message": {
            "text": "go programs which use cgo were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "message": {
            "text": "go programs which use cgo were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "message": {
            "text": "go programs which use cgo were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29403",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 0,
                  "endLine": 306,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 0,
                  "endLine": 312,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 0,
                  "endLine": 315,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    if ($^O ne 'MSWin32' and $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 0,
                  "endLine": 319,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t    $ENV{'PWD'}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 0,
                  "endLine": 338,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\treturn $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 0,
                  "endLine": 341,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\treturn $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 0,
                  "endLine": 344,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 0,
                  "endLine": 349,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 0,
                  "endLine": 351,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 0,
                  "endLine": 361,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 0,
                  "endLine": 446,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PWD} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 0,
                  "endLine": 567,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 0,
                  "endLine": 569,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 0,
                  "endLine": 574,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 0,
                  "endLine": 576,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 0,
                  "endLine": 589,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 0,
                  "endLine": 592,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tchomp($ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 0,
                  "endLine": 594,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 0,
                  "endLine": 602,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 604,
                  "startColumn": 0,
                  "endLine": 604,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 0,
                  "endLine": 606,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 0,
                  "endLine": 612,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tlocal $ENV{PATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 613,
                  "startColumn": 0,
                  "endLine": 613,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tlocal $ENV{CDPATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 0,
                  "endLine": 614,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tlocal $ENV{ENV} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 0,
                  "endLine": 615,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 0,
                  "endLine": 621,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tlocal $ENV{PATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 0,
                  "endLine": 622,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tlocal $ENV{CDPATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 0,
                  "endLine": 623,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tlocal $ENV{ENV} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Cwd.pm"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 0,
                  "endLine": 636,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{'PWD'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/Sys/Hostname.pm"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 0,
                  "endLine": 70,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/encoding.pm"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 0,
                  "endLine": 54,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        if ( $ENV{LC_ALL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/encoding.pm"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 0,
                  "endLine": 57,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        elsif ( $ENV{LANG} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/encoding.pm"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 0,
                  "endLine": 64,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        if (   $ENV{LC_ALL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/encoding.pm"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 0,
                  "endLine": 65,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            || $ENV{LANG} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/re.pm"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 0,
                  "endLine": 45,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  $ENV{PERL_RE_COLORS} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl/5.18.2/re.pm"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 0,
                  "endLine": 48,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{PERL_RE_COLORS} ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBD/Gofer/Transport/corostream.pm"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 0,
                  "endLine": 17,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{DBI_PUREPERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBD/Gofer/Transport/corostream.pm"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 0,
                  "endLine": 90,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    BEGIN { $ENV{PERL_ANYEVENT_STRICT} = 1; $ENV{PERL_ANYEVENT_VERBOSE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBD/Gofer/Transport/corostream.pm"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 0,
                  "endLine": 94,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    BEGIN { $ENV{DBI_TRACE} = 0; $ENV{DBI_GOFER_TRACE} = 0; $ENV{DBD_GOFER_TRACE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBD/Gofer/Transport/corostream.pm"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 0,
                  "endLine": 98,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{DBI_AUTOPROXY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI.pm"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 0,
                  "endLine": 266,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    eval { bootstrap DBI $XS_VERSION } if       $ENV{DBI_PUREPERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/DBD.pm"
                },
                "region": {
                  "startLine": 3339,
                  "startColumn": 0,
                  "endLine": 3339,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\tadd =\u003e [ '$ENV{DBI_PUREPERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/DBD.pm"
                },
                "region": {
                  "startLine": 3344,
                  "startColumn": 0,
                  "endLine": 3344,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\tadd =\u003e [ q{$ENV{DBI_AUTOPROXY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/DBD.pm"
                },
                "region": {
                  "startLine": 3349,
                  "startColumn": 0,
                  "endLine": 3349,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\tadd =\u003e [ q{$ENV{DBI_SQL_NANO} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/DBD.pm"
                },
                "region": {
                  "startLine": 3353,
                  "startColumn": 0,
                  "endLine": 3353,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    #           add =\u003e [ q{local $ENV{DBI_AUTOPROXY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/DBD.pm"
                },
                "region": {
                  "startLine": 3357,
                  "startColumn": 0,
                  "endLine": 3357,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    #\t\tadd =\u003e [ q{local $ENV{DBI_AUTOPROXY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/ProfileDumper.pm"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 0,
                  "endLine": 78,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  $ENV{DBI_PROFILE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/ProfileDumper/Apache.pm"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 0,
                  "endLine": 171,
                  "endColumn": 0,
                  "snippet": {
                    "text": "use constant MP2 =\u003e ($ENV{MOD_PERL_API_VERSION} and $ENV{MOD_PERL_API_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/ProxyServer.pm"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 0,
                  "endLine": 190,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{DBI_AUTOPROXY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/PurePerl.pm"
                },
                "region": {
                  "startLine": 1107,
                  "startColumn": 0,
                  "endLine": 1107,
                  "endColumn": 0,
                  "snippet": {
                    "text": " BEGIN { $ENV{DBI_PUREPERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/PurePerl.pm"
                },
                "region": {
                  "startLine": 1147,
                  "startColumn": 0,
                  "endLine": 1147,
                  "endColumn": 0,
                  "snippet": {
                    "text": " BEGIN { $ENV{DBI_PUREPERL}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/PurePerl.pm"
                },
                "region": {
                  "startLine": 1167,
                  "startColumn": 0,
                  "endLine": 1167,
                  "endColumn": 0,
                  "snippet": {
                    "text": "   $ENV{DBI_PUREPERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/SQL/Nano.pm"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 0,
                  "endLine": 817,
                  "endColumn": 0,
                  "snippet": {
                    "text": " BEGIN { $ENV{DBI_SQL_NANO}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/perl5/DBI/SQL/Nano.pm"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 0,
                  "endLine": 856,
                  "endColumn": 0,
                  "snippet": {
                    "text": " BEGIN { $ENV{DBI_SQL_NANO} = 1 }\n\n="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/lib/ssl/misc/CA.pl"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 0,
                  "endLine": 44,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{OPENSSL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/doc/libdbd-mysql-perl/examples/bug14979.pl"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 0,
                  "endLine": 7,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'DBI_DSN'} ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/doc/libdbd-mysql-perl/examples/bug14979.pl"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 0,
                  "endLine": 8,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'DBI_USER'} ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/doc/libdbd-mysql-perl/examples/bug14979.pl"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 0,
                  "endLine": 9,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{'DBI_PASS'} ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/doc/libdbi-perl/examples/corogofer.pl"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 0,
                  "endLine": 11,
                  "endColumn": 0,
                  "snippet": {
                    "text": "BEGIN { $ENV{DBI_TRACE} = 0; $ENV{DBI_PUREPERL} = 0; $ENV{DBI_GOFER_TRACE} = 0; $ENV{DBD_GOFER_TRACE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/doc/libdbi-perl/examples/corogofer.pl"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 0,
                  "endLine": 15,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{DBI_AUTOPROXY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/doc/libdbi-perl/examples/corogofer.pl"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 0,
                  "endLine": 7,
                  "endColumn": 0,
                  "snippet": {
                    "text": "BEGIN { $ENV{PERL_ANYEVENT_STRICT} = 1; $ENV{PERL_ANYEVENT_VERBOSE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/App/Prove.pm"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 0,
                  "endLine": 510,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{TEST_VERBOSE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 1291,
                  "startColumn": 0,
                  "endLine": 1291,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tif ($ENV{QUERY_STRING} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 0,
                  "endLine": 182,
                  "endColumn": 0,
                  "snippet": {
                    "text": "# $NPH++ if defined($ENV{'SERVER_SOFTWARE'}) \u0026\u0026 $ENV{'SERVER_SOFTWARE'}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 0,
                  "endLine": 183,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$IIS++ if defined($ENV{'SERVER_SOFTWARE'}) \u0026\u0026 $ENV{'SERVER_SOFTWARE'}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 0,
                  "endLine": 186,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$PERLEX++ if defined($ENV{'GATEWAY_INTERFACE'}) \u0026\u0026 $ENV{'GATEWAY_INTERFACE'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 0,
                  "endLine": 193,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  if (exists $ENV{MOD_PERL_API_VERSION} \u0026\u0026 $ENV{MOD_PERL_API_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 0,
                  "endLine": 562,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t  \u0026\u0026 $ENV{'CONTENT_TYPE'}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 0,
                  "endLine": 565,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t  my($boundary) = $ENV{'CONTENT_TYPE'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI.pm"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 0,
                  "endLine": 594,
                  "endColumn": 0,
                  "snippet": {
                    "text": "              } elsif ($ENV{'CONTENT_TYPE'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI/Carp.pm"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 0,
                  "endLine": 570,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    if ($ENV{MOD_PERL_API_VERSION} \u0026\u0026 $ENV{MOD_PERL_API_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI/Carp.pm"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 0,
                  "endLine": 592,
                  "endColumn": 0,
                  "snippet": {
                    "text": "      if ($ENV{HTTP_USER_AGENT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI/Cookie.pm"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 0,
                  "endLine": 26,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$PERLEX++ if defined($ENV{'GATEWAY_INTERFACE'}) \u0026\u0026 $ENV{'GATEWAY_INTERFACE'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CGI/Cookie.pm"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 0,
                  "endLine": 32,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  if (exists $ENV{MOD_PERL_API_VERSION} \u0026\u0026 $ENV{MOD_PERL_API_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 1368,
                  "startColumn": 0,
                  "endLine": 1368,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 1378,
                  "startColumn": 0,
                  "endLine": 1378,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 1385,
                  "startColumn": 0,
                  "endLine": 1385,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 0,
                  "endLine": 70,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{PERL5_CPAN_IS_RUNNING_IN_RECURSION} ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 0,
                  "endLine": 72,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{PERL5_CPAN_IS_RUNNING_IN_RECURSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 0,
                  "endLine": 98,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{PERL5_CPAN_IS_RUNNING}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN.pm"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 0,
                  "endLine": 99,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{PERL5_CPANPLUS_IS_RUNNING}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1271,
                  "startColumn": 0,
                  "endLine": 1271,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{CPAN_SHELL_LEVEL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1272,
                  "startColumn": 0,
                  "endLine": 1272,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{CPAN_SHELL_LEVEL} +="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1275,
                  "startColumn": 0,
                  "endLine": 1275,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1279,
                  "startColumn": 0,
                  "endLine": 1279,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1765,
                  "startColumn": 0,
                  "endLine": 1765,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1768,
                  "startColumn": 0,
                  "endLine": 1768,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1868,
                  "startColumn": 0,
                  "endLine": 1868,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL_AUTOINSTALL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 0,
                  "endLine": 1869,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL_EXTUTILS_AUTOINSTALL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 0,
                  "endLine": 1871,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL_AUTOINSTALL}          ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1872,
                  "startColumn": 0,
                  "endLine": 1872,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL_EXTUTILS_AUTOINSTALL} ||="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1879,
                  "startColumn": 0,
                  "endLine": 1879,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1880,
                  "startColumn": 0,
                  "endLine": 1880,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5_CPAN_IS_EXECUTING} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1883,
                  "startColumn": 0,
                  "endLine": 1883,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 0,
                  "endLine": 1901,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL5_CPAN_IS_EXECUTING} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 2033,
                  "startColumn": 0,
                  "endLine": 2033,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 2036,
                  "startColumn": 0,
                  "endLine": 2036,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 0,
                  "endLine": 292,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 0,
                  "endLine": 295,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 3102,
                  "startColumn": 0,
                  "endLine": 3102,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 3106,
                  "startColumn": 0,
                  "endLine": 3106,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 3226,
                  "startColumn": 0,
                  "endLine": 3226,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 3561,
                  "startColumn": 0,
                  "endLine": 3561,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 3613,
                  "startColumn": 0,
                  "endLine": 3613,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 3617,
                  "startColumn": 0,
                  "endLine": 3617,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/Distribution.pm"
                },
                "region": {
                  "startLine": 853,
                  "startColumn": 0,
                  "endLine": 853,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            local $ENV{PATCH_GET} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/FTP.pm"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 0,
                  "endLine": 357,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{$prx} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/FTP.pm"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 0,
                  "endLine": 403,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{FTP_PASSIVE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/FirstTime.pm"
                },
                "region": {
                  "startLine": 1303,
                  "startColumn": 0,
                  "endLine": 1303,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{$k} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/FirstTime.pm"
                },
                "region": {
                  "startLine": 1308,
                  "startColumn": 0,
                  "endLine": 1308,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{SHELL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPAN/FirstTime.pm"
                },
                "region": {
                  "startLine": 2043,
                  "startColumn": 0,
                  "endLine": 2043,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    return 1 if $ENV{PERL_MM_OPT} \u0026\u0026 $ENV{PERL_MM_OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Backend.pm"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 0,
                  "endLine": 30,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{'PERL5_CPANPLUS_IS_RUNNING'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Backend.pm"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 0,
                  "endLine": 34,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{'PERL5_CPANPLUS_IS_VERSION'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Config.pm"
                },
                "region": {
                  "startLine": 604,
                  "startColumn": 0,
                  "endLine": 604,
                  "endColumn": 0,
                  "snippet": {
                    "text": "                          $ENV{'PERL_MM_OPT'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Configure/Setup.pm"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 0,
                  "endLine": 372,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{FTP_PASSIVE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Configure/Setup.pm"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 0,
                  "endLine": 41,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{PERL_READLINE_NOWARN} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/Build.pm"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 0,
                  "endLine": 266,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    #local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/Build.pm"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 0,
                  "endLine": 267,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    #local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/Build.pm"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 0,
                  "endLine": 316,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{$env} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/Build.pm"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 0,
                  "endLine": 570,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    #local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/Build.pm"
                },
                "region": {
                  "startLine": 571,
                  "startColumn": 0,
                  "endLine": 571,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    #local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/Build.pm"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 0,
                  "endLine": 799,
                  "endColumn": 0,
                  "snippet": {
                    "text": "          last SUDO if defined $ENV{PERL_MB_OPT} and $ENV{PERL_MB_OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/MM.pm"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 0,
                  "endLine": 333,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            local $ENV{PERL_MM_USE_DEFAULT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/MM.pm"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 0,
                  "endLine": 341,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            #local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/MM.pm"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 0,
                  "endLine": 367,
                  "endColumn": 0,
                  "snippet": {
                    "text": "                local $ENV{$env} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Dist/MM.pm"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 0,
                  "endLine": 682,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            #local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 0,
                  "endLine": 191,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{FTP_PASSIVE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 0,
                  "endLine": 254,
                  "endColumn": 0,
                  "snippet": {
                    "text": "                $ENV{PERL5LIB}  ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 0,
                  "endLine": 256,
                  "endColumn": 0,
                  "snippet": {
                    "text": "                $ENV{PATH}      ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 0,
                  "endLine": 434,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{'PERL5LIB'} .="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 0,
                  "endLine": 435,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            unless $ENV{'PERL5LIB'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 0,
                  "endLine": 471,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        next if $ENV{PATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals.pm"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 0,
                  "endLine": 474,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Internals/Report.pm"
                },
                "region": {
                  "startLine": 598,
                  "startColumn": 0,
                  "endLine": 598,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{VISUAL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Shell/Classic.pm"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 0,
                  "endLine": 350,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        #local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/CPANPLUS/Shell/Default.pm"
                },
                "region": {
                  "startLine": 836,
                  "startColumn": 0,
                  "endLine": 836,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        #local $ENV{PERL5OPT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Config/Perl/V.pm"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 0,
                  "endLine": 324,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tmap { $env{$_} = $ENV{$_} } grep m{$args{env}} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 0,
                  "endLine": 112,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 0,
                  "endLine": 135,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    return 1 + scalar(() = $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 0,
                  "endLine": 142,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 0,
                  "endLine": 147,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 0,
                  "endLine": 159,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 0,
                  "endLine": 172,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 0,
                  "endLine": 180,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 0,
                  "endLine": 188,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 0,
                  "endLine": 196,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 0,
                  "endLine": 204,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 0,
                  "endLine": 215,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Env.pm"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 0,
                  "endLine": 219,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{$$self} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/ExtUtils/MM_NW5.pm"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 0,
                  "endLine": 32,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{EMXSHELL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/ExtUtils/MM_VMS.pm"
                },
                "region": {
                  "startLine": 1425,
                  "startColumn": 0,
                  "endLine": 1425,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$olbs{$ENV{DEFAULT}} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/ExtUtils/MM_Win32.pm"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 0,
                  "endLine": 32,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{EMXSHELL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/File/Fetch.pm"
                },
                "region": {
                  "startLine": 1257,
                  "startColumn": 0,
                  "endLine": 1257,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{'FTP_PASSIVE_MODE'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/File/Fetch.pm"
                },
                "region": {
                  "startLine": 1592,
                  "startColumn": 0,
                  "endLine": 1592,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{ftp_proxy} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/File/Fetch.pm"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 0,
                  "endLine": 469,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{FTP_PASSIVE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Getopt/Long.pm"
                },
                "region": {
                  "startLine": 1312,
                  "startColumn": 0,
                  "endLine": 1312,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t    $ENV{POSIXLY_CORRECT} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Module/Build/Base.pm"
                },
                "region": {
                  "startLine": 2713,
                  "startColumn": 0,
                  "endLine": 2713,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  local $ENV{PERL_DL_NONLAZY} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Module/Build/Base.pm"
                },
                "region": {
                  "startLine": 2764,
                  "startColumn": 0,
                  "endLine": 2764,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{HARNESS_PERL_SWITCHES} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Module/Build/Base.pm"
                },
                "region": {
                  "startLine": 2840,
                  "startColumn": 0,
                  "endLine": 2840,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  local $ENV{HARNESS_PERL_SWITCHES} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Module/Build/Base.pm"
                },
                "region": {
                  "startLine": 5463,
                  "startColumn": 0,
                  "endLine": 5463,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Module/Build/Base.pm"
                },
                "region": {
                  "startLine": 5554,
                  "startColumn": 0,
                  "endLine": 5554,
                  "endColumn": 0,
                  "snippet": {
                    "text": "  local $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Parse/CPAN/Meta.pm"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 0,
                  "endLine": 81,
                  "endColumn": 0,
                  "snippet": {
                    "text": "                \"\\$ENV{PERL_JSON_BACKEND} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Pod/Perldoc/ToMan.pm"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 0,
                  "endLine": 111,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tunless( $ENV{MANWIDTH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Pod/Perldoc/ToMan.pm"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 0,
                  "endLine": 116,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tif( $ENV{MANWIDTH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Pod/Perldoc/ToMan.pm"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 0,
                  "endLine": 121,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\tif( $ENV{MANWIDTH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Pod/Text/Termcap.pm"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 0,
                  "endLine": 46,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{TERMPATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/TAP/Harness.pm"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 0,
                  "endLine": 28,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{HARNESS_ACTIVE}  ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/TAP/Harness.pm"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 0,
                  "endLine": 29,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{HARNESS_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/TAP/Harness.pm"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 0,
                  "endLine": 660,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    local $ENV{HARNESS_IS_VERBOSE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/TAP/Parser.pm"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 0,
                  "endLine": 36,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{TAP_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/TAP/Parser/SourceHandler/Perl.pm"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 0,
                  "endLine": 207,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/TAP/Parser/SourceHandler/Perl.pm"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 0,
                  "endLine": 219,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            $ENV{PERL5LIB} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Term/Cap.pm"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 0,
                  "endLine": 125,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            ? $ENV{TERMCAP} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Term/Cap.pm"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 0,
                  "endLine": 126,
                  "endColumn": 0,
                  "snippet": {
                    "text": "            : $ENV{TERMCAP} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Term/Cap.pm"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 0,
                  "endLine": 282,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        local $ENV{TERM} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Term/ReadLine.pm"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 0,
                  "endLine": 290,
                  "endColumn": 0,
                  "snippet": {
                    "text": "      and not ($ENV{PERL_RL} and $ENV{PERL_RL} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Test.pm"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 0,
                  "endLine": 36,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{REGRESSION_TEST} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Test/Builder/Tester.pm"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 0,
                  "endLine": 117,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{HARNESS_ACTIVE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Test/Builder/Tester.pm"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 0,
                  "endLine": 334,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{HARNESS_ACTIVE} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Test/Harness.pm"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 0,
                  "endLine": 60,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{HARNESS_ACTIVE}  ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/Test/Harness.pm"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 0,
                  "endLine": 61,
                  "endColumn": 0,
                  "snippet": {
                    "text": "$ENV{HARNESS_VERSION} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/open.pm"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 0,
                  "endLine": 186,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{LANG} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 1195,
                  "startColumn": 0,
                  "endLine": 1195,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERLDB_PIDS} .="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 0,
                  "endLine": 1205,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{PERLDB_PIDS} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 7527,
                  "startColumn": 0,
                  "endLine": 7527,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{\"${stem}_n\"} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 7535,
                  "startColumn": 0,
                  "endLine": 7535,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{\"${stem}_$i\"} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 9061,
                  "startColumn": 0,
                  "endLine": 9061,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{MANPATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 9083,
                  "startColumn": 0,
                  "endLine": 9083,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{MANPATH} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 9624,
                  "startColumn": 0,
                  "endLine": 9624,
                  "endColumn": 0,
                  "snippet": {
                    "text": "        $ENV{PERLDB_PIDS} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 9924,
                  "startColumn": 0,
                  "endLine": 9924,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{PERLDB_RESTART} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl/5.18.2/perl5db.pl"
                },
                "region": {
                  "startLine": 9930,
                  "startColumn": 0,
                  "endLine": 9930,
                  "endColumn": 0,
                  "snippet": {
                    "text": "    $ENV{PERLDB_PIDS} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl5/Debconf/Client/ConfModule.pm"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 0,
                  "endLine": 73,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\t$ENV{PERL_DL_NONLAZY}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl5/Debconf/ConfModule.pm"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 0,
                  "endLine": 44,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t$ENV{DEBIAN_HAS_FRONTEND}="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl5/Debconf/FrontEnd/Dialog.pm"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 0,
                  "endLine": 30,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\telsif ($ENV{TERM} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl5/Debconf/FrontEnd/Readline.pm"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 0,
                  "endLine": 25,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\tif (exists $ENV{TERM} \u0026\u0026 $ENV{TERM} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl5/Git.pm"
                },
                "region": {
                  "startLine": 1547,
                  "startColumn": 0,
                  "endLine": 1547,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\t$self-\u003erepo_path() and $ENV{'GIT_DIR'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-18311",
          "message": {
            "text": "The vulnerable environment-setting functionality is exposed since there is a Perl script that assigns to the $ENV variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/perl5/Git.pm"
                },
                "region": {
                  "startLine": 1549,
                  "startColumn": 0,
                  "endLine": 1549,
                  "endColumn": 0,
                  "snippet": {
                    "text": "\t\t\tand $ENV{'GIT_WORK_TREE'} ="
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23773",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45285",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29404",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29405",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-39323",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/govc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/graphite_exporter"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-compose-executor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/secrets-api"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/websocket-proxy"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/aspectjweaver-1.7.4.jar/org/aspectj/asm/AsmManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/aspectjweaver-1.7.4.jar/org/aspectj/weaver/ResolvedTypeMunger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/aspectjweaver-1.7.4.jar/org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/aspectjweaver-1.7.4.jar/org/aspectj/weaver/tools/cache/SimpleCache%24StoreableCachingMap.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-api-0.5.0-SNAPSHOT.jar/io/cattle/platform/api/schema/FileSchemaFactory.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-beanutils-1.8.3.jar/org/apache/commons/beanutils/DynaProperty.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-collections-3.2.2.jar/org/apache/commons/collections/bag/AbstractMapBag.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-collections-3.2.2.jar/org/apache/commons/collections/functors/PrototypeFactory%24PrototypeSerializationFactory.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-collections-3.2.2.jar/org/apache/commons/collections/list/AbstractLinkedList.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-collections-3.2.2.jar/org/apache/commons/collections/map/AbstractHashedMap.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-collections-3.2.2.jar/org/apache/commons/collections/map/AbstractReferenceMap.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/datasources/InstanceKeyObjectFactory.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-lang-2.6.jar/org/apache/commons/lang/SerializationUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-lang3-3.1.jar/org/apache/commons/lang3/SerializationUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/freemarker-2.3.20.jar/freemarker/debug/DebuggerClient.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/freemarker-2.3.20.jar/freemarker/debug/impl/DebuggerServer%24DebuggerAuthProtocol.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/guava-15.0.jar/com/google/common/collect/MapMakerInternalMap%24AbstractSerializationProxy.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/guava-15.0.jar/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/guava-15.0.jar/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/guava-15.0.jar/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/mvstore/type/ObjectDataType.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/util/JdbcUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hazelcast-3.8.jar/com/hazelcast/internal/serialization/impl/JavaDefaultSerializers%24JavaSerializer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hazelcast-3.8.jar/com/hazelcast/spi/discovery/multicast/impl/MulticastDiscoveryReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/lib/InOutUtil.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/util/ConnectionDialogCommon.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/javassist-3.18.1-GA.jar/javassist/tools/rmi/AppletServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/javassist-3.18.1-GA.jar/javassist/tools/rmi/ObjectImporter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jersey-guava-2.11.jar/jersey/repackaged/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jmxutils-1.14.jar/org/weakref/jmx/com/google/common/collect/MapMakerInternalMap%24AbstractSerializationProxy.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jmxutils-1.14.jar/org/weakref/jmx/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jmxutils-1.14.jar/org/weakref/jmx/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jmxutils-1.14.jar/org/weakref/jmx/com/google/common/collect/Serialization.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/SocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/ds/common/BaseDataSource.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-context-4.3.2.RELEASE.jar/org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-core-4.3.2.RELEASE.jar/org/springframework/core/serializer/DefaultDeserializer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-core-4.3.2.RELEASE.jar/org/springframework/objenesis/instantiator/basic/ObjectInputStreamInstantiator.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-core-4.3.2.RELEASE.jar/org/springframework/util/SerializationUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-10237",
          "message": {
            "text": "The vulnerable function ObjectInputStream.readObject is called outside of a `readObject` override"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-web-4.3.2.RELEASE.jar/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-java-server-0.5.0-SNAPSHOT.jar/io/github/ibuildthecloud/gdapi/json/JacksonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-json-0.5.0-SNAPSHOT.jar/io/cattle/platform/json/JacksonJsonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-json-0.5.0-SNAPSHOT.jar/io/cattle/platform/json/JacksonJsonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-json-0.5.0-SNAPSHOT.jar/io/cattle/platform/json/JacksonJsonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/docker-java-1.1.0.jar/com/github/dockerjava/core/command/AbstrAuthCfgDockerCmd.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/docker-java-1.1.0.jar/com/github/dockerjava/jaxrs/AbstrDockerCmdExec.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/docker-java-1.1.0.jar/com/github/dockerjava/jaxrs/AbstrDockerCmdExec.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jackson-jaxrs-json-provider-2.1.2.jar/com/fasterxml/jackson/jaxrs/json/JacksonJsonProvider.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logstash-logback-encoder-1.2.jar/net/logstash/logback/encoder/LogstashEncoder.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/metrics-servlets-3.0.1.jar/com/codahale/metrics/servlets/HealthCheckServlet.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/metrics-servlets-3.0.1.jar/com/codahale/metrics/servlets/MetricsServlet.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-web-4.3.2.RELEASE.jar/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2976",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-8908",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `com.google.common.io.Files.createTempDir()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-42004",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-42003",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-38749",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38749",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38749",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38750",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38750",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38750",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41854",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41854",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41854",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38751",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38751",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38751",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-25857",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-25857",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-25857",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38752",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38752",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-38752",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31197",
          "message": {
            "text": "The vulnerable function ResultSet.refreshRow is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingResultSet.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31197",
          "message": {
            "text": "The vulnerable function ResultSet.refreshRow is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/impl/CursorImpl%24CursorResultSet.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-31197",
          "message": {
            "text": "The vulnerable function ResultSet.refreshRow is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultResultSet.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-security-9.2.26.v20180806.jar/org/eclipse/jetty/security/JDBCLoginService.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionIdManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DriverManagerConnectionFactory.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/web/DbStarter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/tools/CreateCluster.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/tools/RunScript.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/tools/RunScript.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/tools/Script.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/tools/Shell.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/upgrade/DbUpgrade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/upgrade/DbUpgrade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/util/JdbcUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/auth/HsqldbSlaveAuthBean.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/auth/HsqldbSlaveAuthBean.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/lib/RCData.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/util/ConnectionDialog.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/hsqldb-2.3.1.jar/org/hsqldb/util/ConnectionDialogSwing.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jetty-security-9.2.26.v20180806.jar/org/eclipse/jetty/security/JDBCLoginService.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-codegen-3.3.0.jar/org/jooq/util/GenerationTool.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-core-1.2.3.jar/ch/qos/logback/core/db/DriverManagerConnectionSource.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/ds/common/BaseDataSource.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-21724",
          "message": {
            "text": "The vulnerable function DriverManager.getConnection is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-jdbc-4.3.2.RELEASE.jar/org/springframework/jdbc/datasource/DriverManagerDataSource.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-1471",
          "message": {
            "text": "A SnakeYAML constructor class is not instantiated safely"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-1471",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36090",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ZipArchiveInputStream`\n* `JarArchiveInputStream`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-35517",
          "message": {
            "text": "The vulnerable class ArchiveInputStream/TarArchiveInputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-simulator-agent-connection-0.5.0-SNAPSHOT.jar/io/cattle/platform/agent/connection/simulator/impl/SimulatorConfigUpdateProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-35516",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
          }
        },
        {
          "ruleId": "applic_CVE-2021-35515",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
          }
        },
        {
          "ruleId": "applic_CVE-2021-29425",
          "message": {
            "text": "The vulnerable function normalize is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/docker-java-1.1.0.jar/com/github/dockerjava/core/dockerfile/Dockerfile.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-27568",
          "message": {
            "text": "The vulnerable function JSONParser.parse is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/nimbus-jose-jwt-4.12.jar/com/nimbusds/jose/util/JSONObjectUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/archaius-core-0.5.14.jar/com/netflix/config/DynamicContextualProperty.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-java-server-0.5.0-SNAPSHOT.jar/io/github/ibuildthecloud/gdapi/json/JacksonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-json-0.5.0-SNAPSHOT.jar/io/cattle/platform/json/JacksonJsonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-json-0.5.0-SNAPSHOT.jar/io/cattle/platform/json/JacksonJsonMapper.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/docker-java-1.1.0.jar/com/github/dockerjava/core/AuthConfigFile.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/docker-java-1.1.0.jar/com/github/dockerjava/jaxrs/EventsCmdExec%24EventNotifier.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/embedded-jmxtrans-1.0.9.jar/org/jmxtrans/embedded/config/ConfigurationParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-web-4.3.2.RELEASE.jar/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-13956",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `extractHost` is called with external input to its 1st (`uri`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2017-18640",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-system-stack-0.5.0-SNAPSHOT.jar/io/cattle/platform/systemstack/catalog/impl/CatalogServiceImpl.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2017-18640",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/parser/core/yaml/YamlChangeLogParser.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2017-18640",
          "message": {
            "text": "The vulnerable function Yaml.load/loadAs/loadAll is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/spring-beans-4.3.2.RELEASE.jar/org/springframework/beans/factory/config/YamlProcessor.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-31684",
          "message": {
            "text": "The vulnerable function JSONParser.parse is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/nimbus-jose-jwt-4.12.jar/com/nimbusds/jose/util/JSONObjectUtils.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionIdManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionIdManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionIdManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionIdManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionIdManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/jetty/jetty-server-9.2.26.v20180806.jar/org/eclipse/jetty/server/session/JDBCSessionManager.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/commons-dbcp-1.4.jar/org/apache/commons/dbcp/DelegatingPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText%24FullTextTrigger.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/fulltext/FullText.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/TcpServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/pg/PgServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/pg/PgServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/pg/PgServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/pg/PgServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/pg/PgServerThread.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/pg/PgServerThread.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/web/WebApp.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/h2-1.4.187.jar/org/h2/server/web/WebApp.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/impl/DefaultBindContext.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/impl/DefaultBindContext.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/jooq-3.3.0.jar/org/jooq/tools/jdbc/DefaultPreparedStatement.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/statement/ExecutablePreparedStatementBase.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/liquibase-core-3.1.0.jar/liquibase/statement/ExecutablePreparedStatementBase.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/db/DBAppender.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/postgresql-9.4.1208.jre7.jar/org/postgresql/jdbc/TypeInfoCache.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/cattle.jar/resources.jar/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/cattle.jar/resources.jar/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/cattle.jar/resources.jar/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/cattle.jar/resources.jar/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to one the vulnerable functions is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/cattle.jar/resources.jar/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-1597",
          "message": {
            "text": "References to the vulnerable function `setString` is found with it's second parameter being user-supplied."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/cattle.jar/resources.jar/WEB-INF/lib/mariadb-java-client-1.5.8.jar/org/mariadb/jdbc/MariaDbPrepareStatementFacade.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/SSLSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/SimpleSocketServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/SocketNode.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/SocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/server/HardenedLoggingEventInputStream.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/server/RemoteAppenderServerListener.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable InputStream is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/server/RemoteAppenderStreamClient.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/server/SSLServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/logback-classic-1.2.3.jar/ch/qos/logback/classic/net/server/ServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "An appender's configuration is defined within a configuration file"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpb24kr4e4/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/usr/share/cattle/29fce821ecd9baff02cca7dc3b9fc5d0/WEB-INF/lib/cattle-framework-logback-0.5.0-SNAPSHOT.jar/logback.xml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\u003cappender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\"\u003e\n        \u003c!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder \n            by default --\u003e\n        \u003cencoder\u003e\n            \u003cpattern\u003e%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n\u003c/pattern\u003e\n        \u003c/encoder\u003e\n    \u003c/appender\u003e"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-10086",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if `BeanUtilsBean.getProperty()` or `PropertyUtilsBean.getProperty()` is called with `\"class\"` or user-input as its second argument.\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: No call to `addBeanIntrospector(SuppressPropertiesBeanIntrospector.SUPPRESS_CLASS)` is made."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "message": {
            "text": "The vulnerable function ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "message": {
            "text": "The vulnerable function ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-auth-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "message": {
            "text": "The vulnerable function ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "message": {
            "text": "The vulnerable function ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/rancher-catalog-service-sqlite"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "message": {
            "text": "The vulnerable function ServeTLS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/webhook-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30635",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30635",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/docker-machine-driver-packet"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30635",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/go-machine-service"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-16942",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-16943",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-17267",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-17531",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-20330",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-10650",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-10673",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-11619",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-11620",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-14060",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-14061",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-14062",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-24616",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-24750",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-25649",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-35490",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-35491",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-35728",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36179",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36180",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36181",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36182",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36183",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36185",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36186",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36187",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36188",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36189",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-8840",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-9546",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-9547",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-9548",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36184",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-20190",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-15095",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-17485",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-7525",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-11307",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-12022",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14718",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14719",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14721",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-19360",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-19361",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-19362",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-5968",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-7489",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-10172",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12086",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12384",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12814",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14379",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14439",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14540",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14892",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14893",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-16335",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718810509-3533447389/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718810345-1246484857/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvx4dabba/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/etc/mysql/debian.cnf"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 0,
                  "endLine": 10,
                  "endColumn": 0,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvx4dabba/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/etc/mysql/debian.cnf"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 0,
                  "endLine": 5,
                  "endColumn": 0,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvx4dabba/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/var/lib/cattle/cache/global/d129cc7b10907c1fbe50cff17691b797/infra-templates/secrets-bridge-v2/0/docker-compose.yml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "VAU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvx4dabba/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/var/lib/cattle/cache/global/d129cc7b10907c1fbe50cff17691b797/infra-templates/secrets-bridge-v2/1/docker-compose.yml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "VAU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvx4dabba/unpacked/filesystem/blobs/sha256/34ba74fc578e5c64956a3b9ad4319cf72af02369d6fd89e2145769689c830211/var/lib/cattle/cache/global/d129cc7b10907c1fbe50cff17691b797/infra-templates/secrets-bridge-v2/2/docker-compose.yml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "VAU************"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
