{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2024-3817_github.com/hashicorp/go-getter_1.7.3",
              "shortDescription": {
                "text": "[CVE-2024-3817] github.com/hashicorp/go-getter 1.7.3"
              },
              "help": {
                "text": "HashiCorp’s go-getter library is vulnerable to argument injection when executing Git to discover remote branches. \n\nThis vulnerability does not affect the go-getter/v2 branch and package.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.7.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-6913_perl-base_0:5.26.1-150300.17.14.1",
              "shortDescription": {
                "text": "[CVE-2018-6913] perl-base 0:5.26.1-150300.17.14.1"
              },
              "help": {
                "text": "Security update for perl (Important)\nSecurity update for perl (Moderate)\nperl-32bit-5.18.2-12.17.1 on GA media (Moderate)\nperl-32bit-5.18.2-12.20.1 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:5.26.1-150300.17.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-6913_perl_0:5.26.1-150300.17.14.1",
              "shortDescription": {
                "text": "[CVE-2018-6913] perl 0:5.26.1-150300.17.14.1"
              },
              "help": {
                "text": "Security update for perl (Important)\nSecurity update for perl (Moderate)\nperl-32bit-5.18.2-12.17.1 on GA media (Moderate)\nperl-32bit-5.18.2-12.20.1 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar `       | [0:5.26.1-150300.17.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-6257_github.com/hashicorp/go-getter_1.7.3",
              "shortDescription": {
                "text": "[CVE-2024-6257] github.com/hashicorp/go-getter 1.7.3"
              },
              "help": {
                "text": "HashiCorp’s go-getter library can be coerced into executing Git update on an existing maliciously modified Git Configuration, potentially leading to arbitrary code execution.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.4      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.7.5]   |"
              },
              "properties": {
                "security-severity": "8.4"
              }
            },
            {
              "id": "CVE-2018-6798_perl-base_0:5.26.1-150300.17.14.1",
              "shortDescription": {
                "text": "[CVE-2018-6798] perl-base 0:5.26.1-150300.17.14.1"
              },
              "help": {
                "text": "Security update for perl (Important)\nSecurity update for perl (Moderate)\nperl-32bit-5.18.2-12.17.1 on GA media (Moderate)\nperl-32bit-5.18.2-12.20.1 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:5.26.1-150300.17.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-44487_golang.org/x/net_0.8.0",
              "shortDescription": {
                "text": "[CVE-2023-44487] golang.org/x/net 0.8.0"
              },
              "help": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [0.17.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-4741_libopenssl1_1_0:1.1.1l-150500.17.25.1",
              "shortDescription": {
                "text": "[CVE-2024-4741] libopenssl1_1 0:1.1.1l-150500.17.25.1"
              },
              "help": {
                "text": "Security update for openssl-1_1 (Important)\nSecurity update for openssl-3 (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:1.1.1l-150500.17.31.1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2024-33599_glibc_0:2.31-150300.74.1",
              "shortDescription": {
                "text": "[CVE-2024-33599] glibc 0:2.31-150300.74.1"
              },
              "help": {
                "text": "Security update for glibc (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.6      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:2.26-150000.13.73.1], [0:2.31-150300.83.1]   |"
              },
              "properties": {
                "security-severity": "7.6"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.20.8",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.20.8"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-4741_openssl-1_1_0:1.1.1l-150500.17.25.1",
              "shortDescription": {
                "text": "[CVE-2024-4741] openssl-1_1 0:1.1.1l-150500.17.25.1"
              },
              "help": {
                "text": "Security update for openssl-1_1 (Important)\nSecurity update for openssl-3 (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:1.1.1l-150500.17.31.1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-6798_perl_0:5.26.1-150300.17.14.1",
              "shortDescription": {
                "text": "[CVE-2018-6798] perl 0:5.26.1-150300.17.14.1"
              },
              "help": {
                "text": "Security update for perl (Important)\nSecurity update for perl (Moderate)\nperl-32bit-5.18.2-12.17.1 on GA media (Moderate)\nperl-32bit-5.18.2-12.20.1 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar `       | [0:5.26.1-150300.17.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.20.8",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.20.8"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-33601_glibc_0:2.31-150300.74.1",
              "shortDescription": {
                "text": "[CVE-2024-33601] glibc 0:2.31-150300.74.1"
              },
              "help": {
                "text": "Security update for glibc (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.2      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:2.26-150000.13.73.1], [0:2.31-150300.83.1]   |"
              },
              "properties": {
                "security-severity": "6.2"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.20.8",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.20.8"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2024-24557_github.com/docker/docker_24.0.7+incompatible",
              "shortDescription": {
                "text": "[CVE-2024-24557] github.com/docker/docker 24.0.7+incompatible"
              },
              "help": {
                "text": "Moby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.8      | `sha256__1518bf88ee5b8510b46f6faa6cf0945a267f6297a213f1e93d6eb579815a85fb.tar `\u003cbr/\u003e`sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [24.0.9], [25.0.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2024-33600_glibc_0:2.31-150300.74.1",
              "shortDescription": {
                "text": "[CVE-2024-33600] glibc 0:2.31-150300.74.1"
              },
              "help": {
                "text": "Security update for glibc (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:2.26-150000.13.73.1], [0:2.31-150300.83.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-4741_libopenssl1_1-hmac_0:1.1.1l-150500.17.25.1",
              "shortDescription": {
                "text": "[CVE-2024-4741] libopenssl1_1-hmac 0:1.1.1l-150500.17.25.1"
              },
              "help": {
                "text": "Security update for openssl-1_1 (Important)\nSecurity update for openssl-3 (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.1      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:1.1.1l-150500.17.31.1]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2024-33602_glibc_0:2.31-150300.74.1",
              "shortDescription": {
                "text": "[CVE-2024-33602] glibc 0:2.31-150300.74.1"
              },
              "help": {
                "text": "Security update for glibc (Important)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.0      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:2.26-150000.13.73.1], [0:2.31-150300.83.1]   |"
              },
              "properties": {
                "security-severity": "4.0"
              }
            },
            {
              "id": "CVE-2023-5528_k8s.io/kubernetes_1.26.9",
              "shortDescription": {
                "text": "[CVE-2023-5528] k8s.io/kubernetes 1.26.9"
              },
              "help": {
                "text": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.25.16], [1.26.11], [1.27.8], [1.28.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-39325_golang.org/x/net_0.8.0",
              "shortDescription": {
                "text": "[CVE-2023-39325] golang.org/x/net 0.8.0"
              },
              "help": {
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [0.17.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-5408_k8s.io/kubernetes_1.26.9",
              "shortDescription": {
                "text": "[CVE-2023-5408] k8s.io/kubernetes 1.26.9"
              },
              "help": {
                "text": "A privilege escalation flaw was found in the node restriction admission plugin of the kubernetes api server of OpenShift. A remote attacker who modifies the node role label could steer workloads from the control plane and etcd nodes onto different worker nodes and gain broader access to the cluster.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2024-2236_libgcrypt20_0:1.9.4-150500.10.19",
              "shortDescription": {
                "text": "[CVE-2024-2236] libgcrypt20 0:1.9.4-150500.10.19"
              },
              "help": {
                "text": "CVE-2024-2236",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_golang.org/x/net_0.19.0",
              "shortDescription": {
                "text": "[CVE-2023-45288] golang.org/x/net 0.19.0"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [0.23.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-2236_libgcrypt20-hmac_0:1.9.4-150500.10.19",
              "shortDescription": {
                "text": "[CVE-2024-2236] libgcrypt20-hmac 0:1.9.4-150500.10.19"
              },
              "help": {
                "text": "CVE-2024-2236",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2019-13225_libonig4_0:6.7.0-150000.3.3.1",
              "shortDescription": {
                "text": "[CVE-2019-13225] libonig4 0:6.7.0-150000.3.3.1"
              },
              "help": {
                "text": "libonig5-6.9.8-2.8 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2013-4235_login_defs_0:4.8.1-150400.10.15.1",
              "shortDescription": {
                "text": "[CVE-2013-4235] login_defs 0:4.8.1-150400.10.15.1"
              },
              "help": {
                "text": "libsubid4-4.15.1-1.1 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.7      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.7"
              }
            },
            {
              "id": "CVE-2013-4235_shadow_0:4.8.1-150400.10.15.1",
              "shortDescription": {
                "text": "[CVE-2013-4235] shadow 0:4.8.1-150400.10.15.1"
              },
              "help": {
                "text": "libsubid4-4.15.1-1.1 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.7      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.7"
              }
            },
            {
              "id": "CVE-2024-0406_github.com/mholt/archiver/v3_3.5.1",
              "shortDescription": {
                "text": "[CVE-2024-0406] github.com/mholt/archiver/v3 3.5.1"
              },
              "help": {
                "text": "A flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user's or application's privileges using the library.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-52426_libexpat1_0:2.4.4-150400.3.17.1",
              "shortDescription": {
                "text": "[CVE-2023-52426] libexpat1 0:2.4.4-150400.3.17.1"
              },
              "help": {
                "text": "CVE-2023-52426",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-2511_libopenssl1_1_0:1.1.1l-150500.17.25.1",
              "shortDescription": {
                "text": "[CVE-2024-2511] libopenssl1_1 0:1.1.1l-150500.17.25.1"
              },
              "help": {
                "text": "Security update for openssl-1_1 (Moderate)\nSecurity update for openssl-3 (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:1.1.1l-150500.17.28.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.22.0",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.22.0"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.20.8",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.20.8"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-34397_libglib-2_0-0_0:2.70.5-150400.3.8.1",
              "shortDescription": {
                "text": "[CVE-2024-34397] libglib-2_0-0 0:2.70.5-150400.3.8.1"
              },
              "help": {
                "text": "Security update for glib2 (Low)\nSecurity update for glib2 (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.8      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:2.70.5-150400.3.11.1]   |"
              },
              "properties": {
                "security-severity": "3.8"
              }
            },
            {
              "id": "CVE-2024-2511_openssl-1_1_0:1.1.1l-150500.17.25.1",
              "shortDescription": {
                "text": "[CVE-2024-2511] openssl-1_1 0:1.1.1l-150500.17.25.1"
              },
              "help": {
                "text": "Security update for openssl-1_1 (Moderate)\nSecurity update for openssl-3 (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:1.1.1l-150500.17.28.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.21.7",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.21.7"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.20.8",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.20.8"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-24786_google.golang.org/protobuf_1.31.0",
              "shortDescription": {
                "text": "[CVE-2024-24786] google.golang.org/protobuf 1.31.0"
              },
              "help": {
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 0.0      | `sha256__1518bf88ee5b8510b46f6faa6cf0945a267f6297a213f1e93d6eb579815a85fb.tar `       | [1.33.0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.21.8",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.21.8"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_golang.org/x/net_0.8.0",
              "shortDescription": {
                "text": "[CVE-2023-45288] golang.org/x/net 0.8.0"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [0.23.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-2511_libopenssl1_1-hmac_0:1.1.1l-150500.17.25.1",
              "shortDescription": {
                "text": "[CVE-2024-2511] libopenssl1_1-hmac 0:1.1.1l-150500.17.25.1"
              },
              "help": {
                "text": "Security update for openssl-1_1 (Moderate)\nSecurity update for openssl-3 (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | [0:1.1.1l-150500.17.28.2]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_golang.org/x/net_0.17.0",
              "shortDescription": {
                "text": "[CVE-2023-45288] golang.org/x/net 0.17.0"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__1518bf88ee5b8510b46f6faa6cf0945a267f6297a213f1e93d6eb579815a85fb.tar `       | [0.23.0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-24786_google.golang.org/protobuf_1.28.1",
              "shortDescription": {
                "text": "[CVE-2024-24786] google.golang.org/protobuf 1.28.1"
              },
              "help": {
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 0.0      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.33.0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-2253_github.com/docker/distribution_2.8.1+incompatible",
              "shortDescription": {
                "text": "[CVE-2023-2253] github.com/docker/distribution 2.8.1+incompatible"
              },
              "help": {
                "text": "A flaw was found in the `/v2/_catalog` endpoint in distribution/distribution, which accepts a parameter to control the maximum number of records returned (query string: `n`). This vulnerability allows a malicious user to submit an unreasonably large value for `n,` causing the allocation of a massive string array, possibly causing a denial of service through excessive use of memory.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [2.8.2-beta.1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-3978_golang.org/x/net_0.8.0",
              "shortDescription": {
                "text": "[CVE-2023-3978] golang.org/x/net 0.8.0"
              },
              "help": {
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [0.13.0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2024-38428_wget_0:1.20.3-150000.3.17.1",
              "shortDescription": {
                "text": "[CVE-2024-38428] wget 0:1.20.3-150000.3.17.1"
              },
              "help": {
                "text": "Security update for wget (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.2      | `sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar `       | [0:1.20.3-150000.3.20.1]   |"
              },
              "properties": {
                "security-severity": "6.2"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.20.8",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.20.8"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-3177_k8s.io/kubernetes_1.26.9",
              "shortDescription": {
                "text": "[CVE-2024-3177] k8s.io/kubernetes 1.26.9"
              },
              "help": {
                "text": "A security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 2.7      | `sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar `       | [1.27.13], [1.28.9], [1.29.4]   |"
              },
              "properties": {
                "security-severity": "2.7"
              }
            },
            {
              "id": "CVE-2024-34459_libxml2-2_0:2.10.3-150500.5.14.1",
              "shortDescription": {
                "text": "[CVE-2024-34459] libxml2-2 0:2.10.3-150500.5.14.1"
              },
              "help": {
                "text": "CVE-2024-34459",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.3      | `sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            }
          ],
          "version": "3.97.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-3817_github.com/hashicorp/go-getter_1.7.3",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2024-3817] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6913_perl-base_0:5.26.1-150300.17.14.1",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6913] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6913_perl_0:5.26.1-150300.17.14.1",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6913] sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-6257_github.com/hashicorp/go-getter_1.7.3",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2024-6257] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6798_perl-base_0:5.26.1-150300.17.14.1",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6798] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487_golang.org/x/net_0.8.0",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2023-44487] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_libopenssl1_1_0:1.1.1l-150500.17.25.1",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4741] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599_glibc_0:2.31-150300.74.1",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2024-33599] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.20.8",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_openssl-1_1_0:1.1.1l-150500.17.25.1",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4741] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6798_perl_0:5.26.1-150300.17.14.1",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6798] sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.20.8",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601_glibc_0:2.31-150300.74.1",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2024-33601] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.20.8",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557_github.com/docker/docker_24.0.7+incompatible",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2024-24557] sha256__1518bf88ee5b8510b46f6faa6cf0945a267f6297a213f1e93d6eb579815a85fb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557_github.com/docker/docker_24.0.7+incompatible",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2024-24557] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600_glibc_0:2.31-150300.74.1",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2024-33600] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741_libopenssl1_1-hmac_0:1.1.1l-150500.17.25.1",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2024-4741] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602_glibc_0:2.31-150300.74.1",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2024-33602] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5528_k8s.io/kubernetes_1.26.9",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5528] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325_golang.org/x/net_0.8.0",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39325] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5408_k8s.io/kubernetes_1.26.9",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5408] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2236_libgcrypt20_0:1.9.4-150500.10.19",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-2236] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_golang.org/x/net_0.19.0",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2236_libgcrypt20-hmac_0:1.9.4-150500.10.19",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-2236] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13225_libonig4_0:6.7.0-150000.3.3.1",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-13225] sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-4235_login_defs_0:4.8.1-150400.10.15.1",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2013-4235] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-4235_shadow_0:4.8.1-150400.10.15.1",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2013-4235] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0406_github.com/mholt/archiver/v3_3.5.1",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0406] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52426_libexpat1_0:2.4.4-150400.3.17.1",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-52426] sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_libopenssl1_1_0:1.1.1l-150500.17.25.1",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-2511] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.22.0",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.20.8",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34397_libglib-2_0-0_0:2.70.5-150400.3.8.1",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-34397] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_openssl-1_1_0:1.1.1l-150500.17.25.1",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-2511] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.21.7",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.20.8",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786_google.golang.org/protobuf_1.31.0",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-24786] sha256__1518bf88ee5b8510b46f6faa6cf0945a267f6297a213f1e93d6eb579815a85fb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.21.8",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_golang.org/x/net_0.8.0",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_libopenssl1_1-hmac_0:1.1.1l-150500.17.25.1",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-2511] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_golang.org/x/net_0.17.0",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__1518bf88ee5b8510b46f6faa6cf0945a267f6297a213f1e93d6eb579815a85fb.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786_google.golang.org/protobuf_1.28.1",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-24786] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2253_github.com/docker/distribution_2.8.1+incompatible",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2253] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978_golang.org/x/net_0.8.0",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3978] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-38428_wget_0:1.20.3-150000.3.17.1",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-38428] sha256__c980015618e39ee1a21250a736e7875301371aae7b9e70826ddeb26655267ba8.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.20.8",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3177_k8s.io/kubernetes_1.26.9",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "[CVE-2024-3177] sha256__261b85528734745a9a69a9c25a193d215801abc9e30fe39e21c81ea098e1f104.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34459_libxml2-2_0:2.10.3-150500.5.14.1",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "[CVE-2024-34459] sha256__41d8f36ef2918981496b75439b5f9890be3b833c439210c66a5d77f3ba2406ea.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
