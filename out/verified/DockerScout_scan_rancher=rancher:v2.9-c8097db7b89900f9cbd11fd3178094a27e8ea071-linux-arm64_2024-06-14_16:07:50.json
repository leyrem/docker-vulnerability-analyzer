{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Docker Scout",
          "informationUri": "https://docker.com/products/docker-scout",
          "name": "docker scout",
          "rules": [
            {
              "id": "CVE-2023-45288",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45288: Uncontrolled Resource Consumption"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0",
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.\n",
                "markdown": "> An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/golang.org/x/net@0.17.0           |\n| Affected range | <0.23.0                                      |\n| Fixed version  | 0.23.0                                       |\n| CVSS Score     |                                          5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": "<1.21.9",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.9",
                "purls": [
                  "pkg:golang/golang.org/x/net@0.11.0",
                  "pkg:golang/golang.org/x/net@0.12.0",
                  "pkg:golang/golang.org/x/net@0.17.0",
                  "pkg:golang/golang.org/x/net@0.19.0",
                  "pkg:golang/golang.org/x/net@0.8.0",
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7",
                  "pkg:golang/stdlib@1.21.8"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2023-45289",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45289"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.\n",
                "markdown": "> When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.21.8                  |\n| Fixed version  | 1.21.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2023-45290",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45290"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.\n",
                "markdown": "> When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.21.8                   |\n| Fixed version  | 1.21.8                    |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24783",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24783"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.\n",
                "markdown": "> Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.20.12 |\n| Affected range | <1.21.8                   |\n| Fixed version  | 1.21.8                    |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24784",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24784"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.\n",
                "markdown": "> The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.20.12 |\n| Affected range | <1.21.8                   |\n| Fixed version  | 1.21.8                    |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24785",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24785"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8",
              "help": {
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.\n",
                "markdown": "> If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.21.8                  |\n| Fixed version  | 1.21.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.21.8",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24789",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24789"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11",
              "help": {
                "text": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.\n",
                "markdown": "> The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.21.11                 |\n| Fixed version  | 1.21.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.21.11",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7",
                  "pkg:golang/stdlib@1.21.8",
                  "pkg:golang/stdlib@1.22.3"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "CVE-2024-24790",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24790"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11",
              "help": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.\n",
                "markdown": "> The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.21.8 |\n| Affected range | <1.21.11                 |\n| Fixed version  | 1.21.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.21.11",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.21.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.12",
                  "pkg:golang/stdlib@1.20.13",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3",
                  "pkg:golang/stdlib@1.21.7",
                  "pkg:golang/stdlib@1.21.8",
                  "pkg:golang/stdlib@1.22.3"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "GMS-2022-4130",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GMS-2022-4130: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/GMS-2022-4130?s=gitlab&n=kubevirt&ns=kubevirt.io&t=golang&vr=%3E%3D0.20.0%2C%3C0.55.1",
              "help": {
                "text": "As part of a Kubevirt audit performed by NCC group, a finding dealing with systemic lack of path sanitization which leads to a path traversal was identified. Google tested the exploitability of the paths in the audit report and identified that when combined with another vulnerability one of the paths leads to an arbitrary file read on the host from the VM. The read operations are limited to files which are publicly readable or which are readable for UID 107 or GID 107. /proc/self/<> is not accessible.\n",
                "markdown": "> As part of a Kubevirt audit performed by NCC group, a finding dealing with systemic lack of path sanitization which leads to a path traversal was identified. Google tested the exploitability of the paths in the audit report and identified that when combined with another vulnerability one of the paths leads to an arbitrary file read on the host from the VM. The read operations are limited to files which are publicly readable or which are readable for UID 107 or GID 107. /proc/self/<> is not accessible.\n\n|                |                                        |\n|----------------|----------------------------------------|\n| Package        | pkg:golang/kubevirt.io/kubevirt@0.54.0 |\n| Affected range | >=0.20.0,<0.55.1                       |\n| Fixed version  | 0.55.1                                 |\n"
              },
              "properties": {
                "affected_version": ">=0.20.0,<0.55.1",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "0.55.1",
                "purls": [
                  "pkg:golang/kubevirt.io/kubevirt@0.54.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "GMS-2022-6813",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GMS-2022-6813: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/GMS-2022-6813?s=gitlab&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C%3D20.10.19",
              "help": {
                "text": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') in github.com/moby/moby.\n",
                "markdown": "> Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') in github.com/moby/moby.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <=20.10.19                                                          |\n| Fixed version  | 20.10.20                                                            |\n"
              },
              "properties": {
                "affected_version": "<=20.10.19",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "20.10.20",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "GMS-2023-3788",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GMS-2023-3788: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/GMS-2023-3788?s=gitlab&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3",
              "help": {
                "text": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3. It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n\n",
                "markdown": "> ### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3. It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n\n\n|                |                                          |\n|----------------|------------------------------------------|\n| Package        | pkg:golang/google.golang.org/grpc@1.45.0 |\n| Affected range | <1.56.3                                  |\n| Fixed version  | 1.56.3, 1.57.1, 1.58.3                   |\n"
              },
              "properties": {
                "affected_version": "<1.56.3",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "1.56.3, 1.57.1, 1.58.3",
                "purls": [
                  "pkg:golang/google.golang.org/grpc@1.40.0",
                  "pkg:golang/google.golang.org/grpc@1.45.0"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "GMS-2023-3981",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GMS-2023-3981: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/GMS-2023-3981?s=gitlab&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.27",
              "help": {
                "text": "Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`.\n",
                "markdown": "> Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible |\n| Affected range | <20.10.27                                                           |\n| Fixed version  | v24.0.7                                                             |\n"
              },
              "properties": {
                "affected_version": "<20.10.27",
                "cvssV3_severity": "UNSPECIFIED",
                "fixed_version": "23.0.8, 24.0.7, 20.10.27",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.24%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.25%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "3.1",
                "tags": [
                  "UNSPECIFIED"
                ]
              }
            },
            {
              "id": "GHSA-vp35-85q5-9f25",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-vp35-85q5-9f25: Exposure of Sensitive Information to an Unauthorized Actor"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-vp35-85q5-9f25?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C%3D20.10.19",
              "help": {
                "text": "### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+<protocol>://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n",
                "markdown": "> ### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+<protocol>://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <=20.10.19                                                          |\n| Fixed version  | 20.10.20                                                            |\n"
              },
              "properties": {
                "affected_version": "<=20.10.19",
                "cvssV3_severity": "LOW",
                "fixed_version": "20.10.20",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "3.1",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-8912",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-8912"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-8912?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0",
              "help": {
                "text": "The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n",
                "markdown": "> The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n\n|                |                                             |\n|----------------|---------------------------------------------|\n| Package        | pkg:golang/github.com/aws/aws-sdk-go@1.34.0 |\n| Affected range | >=0                                         |\n| Fixed version  | not fixed                                   |\n"
              },
              "properties": {
                "affected_version": ">=0",
                "cvssV3_severity": "LOW",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/aws/aws-sdk-go@1.34.0",
                  "pkg:golang/github.com/aws/aws-sdk-go@1.50.38"
                ],
                "security-severity": "2.5",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-3177",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-3177: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-3177?s=github&n=kubernetes&ns=k8s.io&t=golang&vr=%3C1.27.13",
              "help": {
                "text": "A security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.\n\n\n",
                "markdown": "> A security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service account’s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.\n\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/kubernetes@1.27.10         |\n| Affected range | <1.27.13                                     |\n| Fixed version  | 1.27.13                                      |\n| CVSS Score     |                                          2.7 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N |\n"
              },
              "properties": {
                "affected_version": "<1.27.13",
                "cvssV3": 2.7,
                "cvssV3_severity": "LOW",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N",
                "fixed_version": "1.27.13",
                "purls": [
                  "pkg:golang/k8s.io/kubernetes@1.24.16",
                  "pkg:golang/k8s.io/kubernetes@1.27.10",
                  "pkg:golang/k8s.io/kubernetes@1.29.3"
                ],
                "security-severity": "2.7",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-25743",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-25743: Improper Neutralization of Escape, Meta, or Control Sequences"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-25743?s=github&n=kubernetes&ns=k8s.io&t=golang&vr=%3C1.26.0-alpha.3",
              "help": {
                "text": "kubectl (k8s.io/kubernetes/pkg/kubectl) does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events.\n",
                "markdown": "> kubectl (k8s.io/kubernetes/pkg/kubectl) does not neutralize escape, meta or control sequences contained in the raw data it outputs to a terminal. This includes but is not limited to the unstructured string fields in objects such as Events.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/kubernetes@1.24.16         |\n| Affected range | <1.26.0-alpha.3                              |\n| Fixed version  | 1.26.0-alpha.3                               |\n| CVSS Score     |                                          3.0 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N |\n"
              },
              "properties": {
                "affected_version": "<1.26.0-alpha.3",
                "cvssV3": 3,
                "cvssV3_severity": "LOW",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N",
                "fixed_version": "1.26.0-alpha.3",
                "purls": [
                  "pkg:golang/k8s.io/kubernetes@1.24.16"
                ],
                "security-severity": "3.0",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-30629",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30629"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30629?s=golang&n=stdlib&t=golang&vr=%3C1.17.11",
              "help": {
                "text": "An attacker can correlate a resumed TLS session with a previous connection.\n\nSession tickets generated by crypto/tls do not contain a randomly generated ticket_age_add, which allows an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.\n",
                "markdown": "> An attacker can correlate a resumed TLS session with a previous connection.\n\nSession tickets generated by crypto/tls do not contain a randomly generated ticket_age_add, which allows an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.11                 |\n| Fixed version  | 1.17.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.11",
                "cvssV3_severity": "LOW",
                "fixed_version": "1.17.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "3.1",
                "tags": [
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-24786",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24786: Loop with Unreachable Exit Condition ('Infinite Loop')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0",
              "help": {
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.\n",
                "markdown": "> The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/google.golang.org/protobuf@1.31.0 |\n| Affected range | <1.33.0                                      |\n| Fixed version  | 1.33.0                                       |\n"
              },
              "properties": {
                "affected_version": "<1.33.0",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.33.0",
                "purls": [
                  "pkg:golang/google.golang.org/protobuf@1.27.1",
                  "pkg:golang/google.golang.org/protobuf@1.28.0",
                  "pkg:golang/google.golang.org/protobuf@1.28.1",
                  "pkg:golang/google.golang.org/protobuf@1.31.0",
                  "pkg:golang/google.golang.org/protobuf@1.32.0"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-27304",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-27304: Integer Overflow or Wraparound"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-27304?s=github&n=v5&ns=github.com%2Fjackc%2Fpgx&t=golang&vr=%3E%3D5.0.0%2C%3C5.5.4",
              "help": {
                "text": "### Impact\n\nSQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.\n\n### Patches\n\nThe problem is resolved in v4.18.2 and v5.5.4.\n\n### Workarounds\n\nReject user input large enough to cause a single query or bind message to exceed 4 GB in size.\n\n",
                "markdown": "> ### Impact\n\nSQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.\n\n### Patches\n\nThe problem is resolved in v4.18.2 and v5.5.4.\n\n### Workarounds\n\nReject user input large enough to cause a single query or bind message to exceed 4 GB in size.\n\n\n|                |                                          |\n|----------------|------------------------------------------|\n| Package        | pkg:golang/github.com/jackc/pgx@5.4.2#v5 |\n| Affected range | >=5.0.0,<5.5.4                           |\n| Fixed version  | 5.5.4                                    |\n"
              },
              "properties": {
                "affected_version": ">=5.0.0,<5.5.4",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "5.5.4",
                "purls": [
                  "pkg:golang/github.com/jackc/pgx@5.4.2#v5"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-33394",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-33394"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-33394?s=github&n=kubevirt&ns=kubevirt.io&t=golang&vr=%3C%3D1.2.0",
              "help": {
                "text": "An issue in kubevirt kubevirt v1.2.0 and before allows a local attacker to execute arbitrary code via a crafted command to get the token component.\n",
                "markdown": "> An issue in kubevirt kubevirt v1.2.0 and before allows a local attacker to execute arbitrary code via a crafted command to get the token component.\n\n|                |                                        |\n|----------------|----------------------------------------|\n| Package        | pkg:golang/kubevirt.io/kubevirt@0.54.0 |\n| Affected range | <=1.2.0                                |\n| Fixed version  | not fixed                              |\n"
              },
              "properties": {
                "affected_version": "<=1.2.0",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/kubevirt.io/kubevirt@0.54.0"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-7jwh-3vrq-q3m8",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-7jwh-3vrq-q3m8: Integer Overflow or Wraparound"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-7jwh-3vrq-q3m8?s=github&n=v5&ns=github.com%2Fjackc%2Fpgx&t=golang&vr=%3E%3D5.0.0%2C%3C5.5.4",
              "help": {
                "text": "### Impact\n\nSQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.\n\n### Patches\n\nThe problem is resolved in v2.3.3\n\n### Workarounds\n\nReject user input large enough to cause a single query or bind message to exceed 4 GB in size.\n\n",
                "markdown": "> ### Impact\n\nSQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.\n\n### Patches\n\nThe problem is resolved in v2.3.3\n\n### Workarounds\n\nReject user input large enough to cause a single query or bind message to exceed 4 GB in size.\n\n\n|                |                                          |\n|----------------|------------------------------------------|\n| Package        | pkg:golang/github.com/jackc/pgx@5.4.2#v5 |\n| Affected range | >=5.0.0,<5.5.4                           |\n| Fixed version  | 5.5.4                                    |\n"
              },
              "properties": {
                "affected_version": ">=5.0.0,<5.5.4",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "5.5.4",
                "purls": [
                  "pkg:golang/github.com/jackc/pgx@5.4.2#v5"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-jq35-85cj-fj4p",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-jq35-85cj-fj4p"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-jq35-85cj-fj4p?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.27",
              "help": {
                "text": "Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/\n",
                "markdown": "> Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible |\n| Affected range | <20.10.27                                                           |\n| Fixed version  | 24.0.7                                                              |\n"
              },
              "properties": {
                "affected_version": "<20.10.27",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "20.10.27",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.24%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.25%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-xmmx-7jpf-fx42",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-xmmx-7jpf-fx42"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-xmmx-7jpf-fx42?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.11",
              "help": {
                "text": "### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of Moby (Docker Engine) prior to 20.10.11 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\nThis issue has been fixed in Moby (Docker Engine) 20.10.11.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\nEnsure you only pull images from trusted sources.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n\n",
                "markdown": "> ### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of Moby (Docker Engine) prior to 20.10.11 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\nThis issue has been fixed in Moby (Docker Engine) 20.10.11.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\nEnsure you only pull images from trusted sources.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible |\n| Affected range | <20.10.11                                                           |\n| Fixed version  | 20.10.11                                                            |\n"
              },
              "properties": {
                "affected_version": "<20.10.11",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "20.10.11",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "4.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8552",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-8552: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-8552?s=gitlab&n=apiserver&ns=k8s.io&t=golang&vr=%3C1.15.10",
              "help": {
                "text": "The Kubernetes API server component has been found to be vulnerable to a denial of service attack via successful API requests.\n",
                "markdown": "> The Kubernetes API server component has been found to be vulnerable to a denial of service attack via successful API requests.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/apiserver@0.27.10          |\n| Affected range | <1.15.10                                     |\n| Fixed version  | 1.15.10, 1.16.7, 1.17.3                      |\n| CVSS Score     |                                          4.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": "<1.15.10",
                "cvssV3": 4.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "1.15.10, 1.16.7, 1.17.3",
                "purls": [
                  "pkg:golang/k8s.io/apiserver@0.24.10",
                  "pkg:golang/k8s.io/apiserver@0.24.2",
                  "pkg:golang/k8s.io/apiserver@0.27.10",
                  "pkg:golang/k8s.io/apiserver@0.29.0",
                  "pkg:golang/k8s.io/apiserver@0.29.3"
                ],
                "security-severity": "4.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28180",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-28180: Improper Handling of Highly Compressed Data (Data Amplification)"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-28180?s=github&n=go-jose.v2&ns=gopkg.in%2Fsquare&t=golang&vr=%3C%3D2.6.0",
              "help": {
                "text": "### Impact\nAn attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). Thanks to Enze Wang@Alioth and Jianjun Chen@Zhongguancun Lab (@zer0yu and @chenjj) for reporting.\n\n### Patches\nThe problem is fixed in the following packages and versions:\n- github.com/go-jose/go-jose/v4 version 4.0.1\n- github.com/go-jose/go-jose/v3 version 3.0.3\n- gopkg.in/go-jose/go-jose.v2 version 2.6.3\n\nThe problem will not be fixed in the following package because the package is archived:\n- gopkg.in/square/go-jose.v2\n",
                "markdown": "> ### Impact\nAn attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). Thanks to Enze Wang@Alioth and Jianjun Chen@Zhongguancun Lab (@zer0yu and @chenjj) for reporting.\n\n### Patches\nThe problem is fixed in the following packages and versions:\n- github.com/go-jose/go-jose/v4 version 4.0.1\n- github.com/go-jose/go-jose/v3 version 3.0.3\n- gopkg.in/go-jose/go-jose.v2 version 2.6.3\n\nThe problem will not be fixed in the following package because the package is archived:\n- gopkg.in/square/go-jose.v2\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/gopkg.in/square/go-jose.v2@2.6.0  |\n| Affected range | <=2.6.0                                      |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          4.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": "<=2.6.0",
                "cvssV3": 4.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/gopkg.in/square/go-jose.v2@2.6.0"
                ],
                "security-severity": "4.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2015-3631",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2015-3631: Improper Authorization"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2015-3631?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C1.6.1",
              "help": {
                "text": "Docker Engine before 1.6.1 allows local users to set arbitrary Linux Security Modules (LSM) and docker_t policies via an image that allows volumes to override files in /proc.\n",
                "markdown": "> Docker Engine before 1.6.1 allows local users to set arbitrary Linux Security Modules (LSM) and docker_t policies via an image that allows volumes to override files in /proc.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <1.6.1                                                              |\n| Fixed version  | 1.6.1                                                               |\n| CVSS Score     |                                                                 5.1 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L                        |\n"
              },
              "properties": {
                "affected_version": "<1.6.1",
                "cvssV3": 5.1,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L",
                "fixed_version": "1.6.1",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "5.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-27534",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-27534: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-27534?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C19.03.9",
              "help": {
                "text": "util/binfmt_misc/check.go in Builder in Docker Engine before 19.03.9 calls os.OpenFile with a potentially unsafe qemu-check temporary pathname, constructed with an empty first argument in an ioutil.TempDir call.\n",
                "markdown": "> util/binfmt_misc/check.go in Builder in Docker Engine before 19.03.9 calls os.OpenFile with a potentially unsafe qemu-check temporary pathname, constructed with an empty first argument in an ioutil.TempDir call.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <19.03.9                                                            |\n| Fixed version  | 19.03.9                                                             |\n| CVSS Score     |                                                                 5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N                        |\n"
              },
              "properties": {
                "affected_version": "<19.03.9",
                "cvssV3": 5.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
                "fixed_version": "19.03.9",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-29526",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-29526"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-29526?s=golang&n=stdlib&t=golang&vr=%3C1.17.10",
              "help": {
                "text": "When called with a non-zero flags parameter, the Faccessat function can incorrectly report that a file is accessible.\n",
                "markdown": "> When called with a non-zero flags parameter, the Faccessat function can incorrectly report that a file is accessible.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.10                 |\n| Fixed version  | 1.17.10                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.10",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.17.10",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-41717",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41717"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41717?s=golang&n=stdlib&t=golang&vr=%3C1.18.9",
              "help": {
                "text": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests.\n\nHTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.\n",
                "markdown": "> An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests.\n\nHTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.9                  |\n| Fixed version  | 1.18.9                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.9",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.18.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-24532",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24532"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7",
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve).\n\nThis does not impact usages of crypto/ecdsa or crypto/ecdh.\n",
                "markdown": "> The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve).\n\nThis does not impact usages of crypto/ecdsa or crypto/ecdh.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.19.7                   |\n| Fixed version  | 1.19.7                    |\n"
              },
              "properties": {
                "affected_version": "<1.19.7",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.19.7",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29409",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-29409"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12",
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.\n",
                "markdown": "> Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.19.12                 |\n| Fixed version  | 1.19.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.19.12",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.19.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39326",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-39326"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12",
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.\n",
                "markdown": "> A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.20.12                 |\n| Fixed version  | 1.20.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.20.12",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.20.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-44487",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-44487: Uncontrolled Resource Consumption"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-44487?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3",
              "help": {
                "text": "## HTTP/2 Rapid reset attack\nThe HTTP/2 protocol allows clients to indicate to the server that a previous stream should be canceled by sending a RST_STREAM frame. The protocol does not require the client and server to coordinate the cancellation in any way, the client may do it unilaterally. The client may also assume that the cancellation will take effect immediately when the server receives the RST_STREAM frame, before any other data from that TCP connection is processed.\n\nAbuse of this feature is called a Rapid Reset attack because it relies on the ability for an endpoint to send a RST_STREAM frame immediately after sending a request frame, which makes the other endpoint start working and then rapidly resets the request. The request is canceled, but leaves the HTTP/2 connection open. \n\nThe HTTP/2 Rapid Reset attack built on this capability is simple: The client opens a large number of streams at once as in the standard HTTP/2 attack, but rather than waiting for a response to each request stream from the server or proxy, the client cancels each request immediately.\n\nThe ability to reset streams immediately allows each connection to have an indefinite number of requests in flight. By explicitly canceling the requests, the attacker never exceeds the limit on the number of concurrent open streams. The number of in-flight requests is no longer dependent on the round-trip time (RTT), but only on the available network bandwidth.\n\nIn a typical HTTP/2 server implementation, the server will still have to do significant amounts of work for canceled requests, such as allocating new stream data structures, parsing the query and doing header decompression, and mapping the URL to a resource. For reverse proxy implementations, the request may be proxied to the backend server before the RST_STREAM frame is processed. The client on the other hand paid almost no costs for sending the requests. This creates an exploitable cost asymmetry between the server and the client.\n\nMultiple software artifacts implementing HTTP/2 are affected. This advisory was originally ingested from the `swift-nio-http2` repo advisory and their original conent follows.\n\n## swift-nio-http2 specific advisory\nswift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new `Channel`s to serve the traffic. This can easily overwhelm an `EventLoop` and prevent it from making forward progress.\n\nswift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.\n",
                "markdown": "> ## HTTP/2 Rapid reset attack\nThe HTTP/2 protocol allows clients to indicate to the server that a previous stream should be canceled by sending a RST_STREAM frame. The protocol does not require the client and server to coordinate the cancellation in any way, the client may do it unilaterally. The client may also assume that the cancellation will take effect immediately when the server receives the RST_STREAM frame, before any other data from that TCP connection is processed.\n\nAbuse of this feature is called a Rapid Reset attack because it relies on the ability for an endpoint to send a RST_STREAM frame immediately after sending a request frame, which makes the other endpoint start working and then rapidly resets the request. The request is canceled, but leaves the HTTP/2 connection open. \n\nThe HTTP/2 Rapid Reset attack built on this capability is simple: The client opens a large number of streams at once as in the standard HTTP/2 attack, but rather than waiting for a response to each request stream from the server or proxy, the client cancels each request immediately.\n\nThe ability to reset streams immediately allows each connection to have an indefinite number of requests in flight. By explicitly canceling the requests, the attacker never exceeds the limit on the number of concurrent open streams. The number of in-flight requests is no longer dependent on the round-trip time (RTT), but only on the available network bandwidth.\n\nIn a typical HTTP/2 server implementation, the server will still have to do significant amounts of work for canceled requests, such as allocating new stream data structures, parsing the query and doing header decompression, and mapping the URL to a resource. For reverse proxy implementations, the request may be proxied to the backend server before the RST_STREAM frame is processed. The client on the other hand paid almost no costs for sending the requests. This creates an exploitable cost asymmetry between the server and the client.\n\nMultiple software artifacts implementing HTTP/2 are affected. This advisory was originally ingested from the `swift-nio-http2` repo advisory and their original conent follows.\n\n## swift-nio-http2 specific advisory\nswift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new `Channel`s to serve the traffic. This can easily overwhelm an `EventLoop` and prevent it from making forward progress.\n\nswift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/google.golang.org/grpc@1.45.0     |\n| Affected range | <1.56.3                                      |\n| Fixed version  | 1.56.3                                       |\n| CVSS Score     |                                          5.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L |\n"
              },
              "properties": {
                "affected_version": "<0.17.0",
                "cvssV3": 5.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                "fixed_version": "0.17.0",
                "purls": [
                  "pkg:golang/golang.org/x/net@0.11.0",
                  "pkg:golang/golang.org/x/net@0.12.0",
                  "pkg:golang/golang.org/x/net@0.8.0",
                  "pkg:golang/google.golang.org/grpc@1.40.0",
                  "pkg:golang/google.golang.org/grpc@1.45.0"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45284",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45284"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11",
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.\n",
                "markdown": "> On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.20.11                 |\n| Fixed version  | 1.20.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.20.11",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.20.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3"
                ],
                "security-severity": "5.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1962",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-1962"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-1962?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains deeply nested types or declarations can cause a panic due to stack exhaustion.\n",
                "markdown": "> Calling any of the Parse functions on Go source code which contains deeply nested types or declarations can cause a panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "5.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-35255",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-35255: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-35255?s=github&n=azidentity&ns=github.com%2Fazure%2Fazure-sdk-for-go%2Fsdk&t=golang&vr=%3C1.6.0",
              "help": {
                "text": "Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability.\n",
                "markdown": "> Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability.\n\n|                |                                                                   |\n|----------------|-------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/azure/azure-sdk-for-go@1.5.2#sdk/azidentity |\n| Affected range | <1.6.0                                                            |\n| Fixed version  | 1.6.0                                                             |\n| CVSS Score     |                                                               5.5 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N                      |\n"
              },
              "properties": {
                "affected_version": "<1.6.0",
                "cvssV3": 5.5,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
                "fixed_version": "1.6.0",
                "purls": [
                  "pkg:golang/github.com/azure/azure-sdk-for-go@1.5.2#sdk/azidentity"
                ],
                "security-severity": "5.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8911",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-8911"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2020-8911?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0",
              "help": {
                "text": "The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n",
                "markdown": "> The Go AWS S3 Crypto SDK contains vulnerabilities that can permit an attacker with write access to a bucket to decrypt files in that bucket.\n\nFiles encrypted by the V1 EncryptionClient using either the AES-CBC content cipher or the KMS key wrap algorithm are vulnerable. Users should migrate to the V1 EncryptionClientV2 API, which will not create vulnerable files. Old files will remain vulnerable until re-encrypted with the new client.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/github.com/aws/aws-sdk-go@1.50.38 |\n| Affected range | >=0                                          |\n| Fixed version  | not fixed                                    |\n"
              },
              "properties": {
                "affected_version": ">=0",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/aws/aws-sdk-go@1.34.0",
                  "pkg:golang/github.com/aws/aws-sdk-go@1.50.38"
                ],
                "security-severity": "5.6",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-41091",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-41091: Improper Preservation of Permissions"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-41091?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C20.10.9",
              "help": {
                "text": "## Impact\n\nA bug was found in Moby (Docker Engine) where the data directory (typically `/var/lib/docker`) contained subdirectories with insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs.  When containers included executable programs with extended permission bits (such as `setuid`), unprivileged Linux users could discover and execute those programs.  When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files.\n\n## Patches\n\nThis bug has been fixed in Moby (Docker Engine) 20.10.9.  Users should update to this version as soon as possible.  Running containers should be stopped and restarted for the permissions to be fixed.\n\n## Workarounds\n\nLimit access to the host to trusted users.  Limit access to host volumes to trusted containers.\n\n## Credits\n\nThe Moby project would like to thank Joan Bruguera for responsibly disclosing this issue in accordance with the [Moby security policy](https://github.com/moby/moby/blob/master/SECURITY.md).\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at security@docker.com if you think you’ve found a security bug\n",
                "markdown": "> ## Impact\n\nA bug was found in Moby (Docker Engine) where the data directory (typically `/var/lib/docker`) contained subdirectories with insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs.  When containers included executable programs with extended permission bits (such as `setuid`), unprivileged Linux users could discover and execute those programs.  When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files.\n\n## Patches\n\nThis bug has been fixed in Moby (Docker Engine) 20.10.9.  Users should update to this version as soon as possible.  Running containers should be stopped and restarted for the permissions to be fixed.\n\n## Workarounds\n\nLimit access to the host to trusted users.  Limit access to host volumes to trusted containers.\n\n## Credits\n\nThe Moby project would like to thank Joan Bruguera for responsibly disclosing this issue in accordance with the [Moby security policy](https://github.com/moby/moby/blob/master/SECURITY.md).\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at security@docker.com if you think you’ve found a security bug\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <20.10.9                                                            |\n| Fixed version  | 20.10.9                                                             |\n| CVSS Score     |                                                                 5.9 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L                        |\n"
              },
              "properties": {
                "affected_version": "<20.10.9",
                "cvssV3": 5.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
                "fixed_version": "20.10.9",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "5.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-24769",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-24769: Incorrect Permission Assignment for Critical Resource"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-24769?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C20.10.14",
              "help": {
                "text": "### Impact\n\nA bug was found in Moby (Docker Engine) where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n\n### Patches\n\nThis bug has been fixed in Moby (Docker Engine) 20.10.14.  Users should update to this version as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container's bounding set and that processes may add capabilities to their own inheritable set up to the container's bounding set per the rules described in the manual page.  In all cases the container's bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### Credits\n\nThe Moby project would like to thank [Andrew G. Morgan](https://github.com/AndrewGMorgan) for responsibly disclosing this issue in accordance with the [Moby security policy](https://github.com/moby/moby/blob/master/SECURITY.md).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com) if you think you’ve found a security bug\n",
                "markdown": "> ### Impact\n\nA bug was found in Moby (Docker Engine) where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n\n### Patches\n\nThis bug has been fixed in Moby (Docker Engine) 20.10.14.  Users should update to this version as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container's bounding set and that processes may add capabilities to their own inheritable set up to the container's bounding set per the rules described in the manual page.  In all cases the container's bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### Credits\n\nThe Moby project would like to thank [Andrew G. Morgan](https://github.com/AndrewGMorgan) for responsibly disclosing this issue in accordance with the [Moby security policy](https://github.com/moby/moby/blob/master/SECURITY.md).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com) if you think you’ve found a security bug\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <20.10.14                                                           |\n| Fixed version  | 20.10.14                                                            |\n| CVSS Score     |                                                                 5.9 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L                        |\n"
              },
              "properties": {
                "affected_version": "<20.10.14",
                "cvssV3": 5.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
                "fixed_version": "20.10.14",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible",
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "5.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45286",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45286: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45286?s=gitlab&n=v2&ns=github.com%2Fgo-resty%2Fresty&t=golang&vr=%3C%3Dv2.10.0",
              "help": {
                "text": "A race condition in go-resty can result in HTTP request body disclosure across requests. This condition can be triggered by calling sync.Pool.Put with the same *bytes.Buffer more than once, when request retries are enabled and a retry occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP request body from an unrelated request, and go-resty will append the current HTTP request body to it, sending two bodies in one request. The sync.Pool in question is defined at package level scope, so a completely unrelated server could receive the request body.\n",
                "markdown": "> A race condition in go-resty can result in HTTP request body disclosure across requests. This condition can be triggered by calling sync.Pool.Put with the same *bytes.Buffer more than once, when request retries are enabled and a retry occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP request body from an unrelated request, and go-resty will append the current HTTP request body to it, sending two bodies in one request. The sync.Pool in question is defined at package level scope, so a completely unrelated server could receive the request body.\n\n|                |                                               |\n|----------------|-----------------------------------------------|\n| Package        | pkg:golang/github.com/go-resty/resty@2.7.0#v2 |\n| Affected range | <=v2.10.0                                     |\n| Fixed version  | not fixed                                     |\n| CVSS Score     |                                           5.9 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N  |\n"
              },
              "properties": {
                "affected_version": "<=v2.10.0",
                "cvssV3": 5.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/go-resty/resty@2.7.0#v2"
                ],
                "security-severity": "5.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-48795",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-48795: Insufficient Verification of Data Authenticity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0",
              "help": {
                "text": "### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.\n",
                "markdown": "> ### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/golang.org/x/crypto@0.16.0        |\n| Affected range | <0.17.0                                      |\n| Fixed version  | 0.17.0                                       |\n| CVSS Score     |                                          5.9 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": "<0.17.0",
                "cvssV3": 5.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
                "fixed_version": "0.17.0",
                "purls": [
                  "pkg:golang/golang.org/x/crypto@0.10.0",
                  "pkg:golang/golang.org/x/crypto@0.14.0",
                  "pkg:golang/golang.org/x/crypto@0.16.0"
                ],
                "security-severity": "5.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29018",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-29018: Incorrect Resource Transfer Between Spheres"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-29018?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C23.0.11",
              "help": {
                "text": "Moby is an open source container framework originally developed by Docker Inc. as Docker. It is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. As a batteries-included container runtime, Moby comes with a built-in networking implementation that enables communication between containers, and between containers and external resources.\n\nMoby's networking implementation allows for creating and using many networks, each with their own subnet and gateway. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters, and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses (typically from a non-routable [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918) subnet). The root network namespace (hereafter referred to as the 'host') serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an _internal_ network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery (looking up other containers on the network by name), and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver (by default, the host's configured resolver). This request is made from the container network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to _internal_ network(s) will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems will run a local forwarding DNS resolver, typically present on a loopback address (`127.0.0.0/8`), such as systemd-resolved or dnsmasq. Common loopback address examples include `127.0.0.1` or `127.0.0.53`. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device.\n\nTo bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` will detect this scenario and instead forward DNS requests from the host/root network namespace. The loopback resolver will then forward the requests to its configured upstream resolvers, as expected.\n\n## Impact\n\nBecause `dockerd` will forward DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, _internal_ networks can unexpectedly forward DNS requests to an external nameserver.\n\nBy registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers. For example, if the domain `evil.example` was registered, the authoritative nameserver(s) for that domain could (eventually and indirectly) receive a request for `this-is-a-secret.evil.example`.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\n## Patches\n\nMoby releases 26.0.0-rc3, 25.0.5 (released) and 23.0.11 (to be released) are patched to prevent forwarding DNS requests from internal networks.\n\n## Workarounds\n\n-   Run containers intended to be solely attached to _internal_ networks with a custom upstream address (`--dns` argument to `docker run`, or API equivalent), which will force all upstream DNS queries to be resolved from the container network namespace.\n\n## Background\n\n- yair zak originally reported this issue to the Docker security team.\n-  PR <https://github.com/moby/moby/pull/46609> was opened in public to fix this issue, as it was not originally considered to have a security implication.\n- [The official documentation](https://docs.docker.com/network/drivers/ipvlan/#:~:text=If%20the%20parent,the%20network%20completely) claims that \"the `--internal` flag that will completely isolate containers on a network from any communications external to that network,\" which necessitated this advisory and CVE.\n",
                "markdown": "> Moby is an open source container framework originally developed by Docker Inc. as Docker. It is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. As a batteries-included container runtime, Moby comes with a built-in networking implementation that enables communication between containers, and between containers and external resources.\n\nMoby's networking implementation allows for creating and using many networks, each with their own subnet and gateway. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters, and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses (typically from a non-routable [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918) subnet). The root network namespace (hereafter referred to as the 'host') serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an _internal_ network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery (looking up other containers on the network by name), and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver (by default, the host's configured resolver). This request is made from the container network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to _internal_ network(s) will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems will run a local forwarding DNS resolver, typically present on a loopback address (`127.0.0.0/8`), such as systemd-resolved or dnsmasq. Common loopback address examples include `127.0.0.1` or `127.0.0.53`. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device.\n\nTo bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` will detect this scenario and instead forward DNS requests from the host/root network namespace. The loopback resolver will then forward the requests to its configured upstream resolvers, as expected.\n\n## Impact\n\nBecause `dockerd` will forward DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, _internal_ networks can unexpectedly forward DNS requests to an external nameserver.\n\nBy registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers. For example, if the domain `evil.example` was registered, the authoritative nameserver(s) for that domain could (eventually and indirectly) receive a request for `this-is-a-secret.evil.example`.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\n## Patches\n\nMoby releases 26.0.0-rc3, 25.0.5 (released) and 23.0.11 (to be released) are patched to prevent forwarding DNS requests from internal networks.\n\n## Workarounds\n\n-   Run containers intended to be solely attached to _internal_ networks with a custom upstream address (`--dns` argument to `docker run`, or API equivalent), which will force all upstream DNS queries to be resolved from the container network namespace.\n\n## Background\n\n- yair zak originally reported this issue to the Docker security team.\n-  PR <https://github.com/moby/moby/pull/46609> was opened in public to fix this issue, as it was not originally considered to have a security implication.\n- [The official documentation](https://docs.docker.com/network/drivers/ipvlan/#:~:text=If%20the%20parent,the%20network%20completely) claims that \"the `--internal` flag that will completely isolate containers on a network from any communications external to that network,\" which necessitated this advisory and CVE.\n\n|                |                                                                      |\n|----------------|----------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.27%!B(MISSING)incompatible |\n| Affected range | <23.0.11                                                             |\n| Fixed version  | 23.0.11                                                              |\n| CVSS Score     |                                                                  5.9 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N                         |\n"
              },
              "properties": {
                "affected_version": "<23.0.11",
                "cvssV3": 5.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
                "fixed_version": "23.0.11",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.24%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.25%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.27%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "5.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39318",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-39318"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8",
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.\n",
                "markdown": "> The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.20.8                   |\n| Fixed version  | 1.20.8                    |\n"
              },
              "properties": {
                "affected_version": "<1.20.8",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.20.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5"
                ],
                "security-severity": "6.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39319",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-39319"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8",
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.\n",
                "markdown": "> The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.20.8                  |\n| Fixed version  | 1.20.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.20.8",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.20.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5"
                ],
                "security-severity": "6.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-3978",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-3978: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-3978?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.13.0",
              "help": {
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. \n",
                "markdown": "> Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. \n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/golang.org/x/net@0.8.0            |\n| Affected range | <0.13.0                                      |\n| Fixed version  | 0.13.0                                       |\n| CVSS Score     |                                          6.1 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N |\n"
              },
              "properties": {
                "affected_version": "<0.13.0",
                "cvssV3": 6.1,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                "fixed_version": "0.13.0",
                "purls": [
                  "pkg:golang/golang.org/x/net@0.11.0",
                  "pkg:golang/golang.org/x/net@0.12.0",
                  "pkg:golang/golang.org/x/net@0.8.0"
                ],
                "security-severity": "6.1",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-36109",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-36109: Incorrect Authorization"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-36109?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C20.10.18",
              "help": {
                "text": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\nThanks to Steven Murdoch for reporting this issue.\n\n----\n\n### Impact\n\nIf an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. \n\n### Patches\n\n This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available.\n\n### Workarounds\n\nThis problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\n### References\n\nhttps://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n\n",
                "markdown": "> Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\nThanks to Steven Murdoch for reporting this issue.\n\n----\n\n### Impact\n\nIf an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. \n\n### Patches\n\n This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available.\n\n### Workarounds\n\nThis problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\n### References\n\nhttps://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <20.10.18                                                           |\n| Fixed version  | 20.10.18                                                            |\n| CVSS Score     |                                                                 6.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L                        |\n"
              },
              "properties": {
                "affected_version": "<20.10.18",
                "cvssV3": 6.3,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
                "fixed_version": "20.10.18",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "6.3",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-21285",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-21285: Uncontrolled Resource Consumption"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-21285?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C19.3.15",
              "help": {
                "text": "### Impact\n\nPulling an intentionally malformed Docker image manifest crashes the `dockerd` daemon.\n\n### Patches\n\nVersions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing.\n\n### Credits\n\nMaintainers would like to thank Josh Larsen, Ian Coldwater, Duffie Cooley, Rory McCune for working on the vulnerability and Brad Geesaman for responsibly disclosing it to security@docker.com.\n",
                "markdown": "> ### Impact\n\nPulling an intentionally malformed Docker image manifest crashes the `dockerd` daemon.\n\n### Patches\n\nVersions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing.\n\n### Credits\n\nMaintainers would like to thank Josh Larsen, Ian Coldwater, Duffie Cooley, Rory McCune for working on the vulnerability and Brad Geesaman for responsibly disclosing it to security@docker.com.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <19.3.15                                                            |\n| Fixed version  | 19.3.15                                                             |\n| CVSS Score     |                                                                 6.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H                        |\n"
              },
              "properties": {
                "affected_version": "<19.3.15",
                "cvssV3": 6.5,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                "fixed_version": "19.3.15",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1705",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-1705"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-1705?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "The HTTP/1 client accepted some invalid Transfer-Encoding headers as indicating a \"chunked\" encoding. This could potentially allow for request smuggling, but only if combined with an intermediate server that also improperly failed to reject the header as invalid.\n",
                "markdown": "> The HTTP/1 client accepted some invalid Transfer-Encoding headers as indicating a \"chunked\" encoding. This could potentially allow for request smuggling, but only if combined with an intermediate server that also improperly failed to reject the header as invalid.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32148",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-32148"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-32148?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Client IP adresses may be unintentionally exposed via X-Forwarded-For headers.\n\nWhen httputil.ReverseProxy.ServeHTTP is called with a Request.Header map containing a nil value for the X-Forwarded-For header, ReverseProxy sets the client IP as the value of the X-Forwarded-For header, contrary to its documentation.\n\nIn the more usual case where a Director function sets the X-Forwarded-For header value to nil, ReverseProxy leaves the header unmodified as expected.\n",
                "markdown": "> Client IP adresses may be unintentionally exposed via X-Forwarded-For headers.\n\nWhen httputil.ReverseProxy.ServeHTTP is called with a Request.Header map containing a nil value for the X-Forwarded-For header, ReverseProxy sets the client IP as the value of the X-Forwarded-For header, contrary to its documentation.\n\nIn the more usual case where a Director function sets the X-Forwarded-For header value to nil, ReverseProxy leaves the header unmodified as expected.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29406",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-29406"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11",
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests.\n\nWith fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.\n",
                "markdown": "> The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests.\n\nWith fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.19.11                 |\n| Fixed version  | 1.19.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.19.11",
                "cvssV3_severity": "MEDIUM",
                "fixed_version": "1.19.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-40453",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-40453: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-40453?s=gitlab&n=machine&ns=github.com%2Fdocker&t=golang&vr=%3C%3Dv0.16.2",
              "help": {
                "text": "Docker Machine through 0.16.2 allows an attacker, who has control of a worker node, to provide crafted version data, which might potentially trick an administrator into performing an unsafe action (via escape sequence injection), or might have a data size that causes a denial of service to a bastion node. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.\n",
                "markdown": "> Docker Machine through 0.16.2 allows an attacker, who has control of a worker node, to provide crafted version data, which might potentially trick an administrator into performing an unsafe action (via escape sequence injection), or might have a data size that causes a denial of service to a bastion node. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/github.com/docker/machine@0.16.2  |\n| Affected range | <=v0.16.2                                    |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          6.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<=v0.16.2",
                "cvssV3": 6.5,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/github.com/docker/machine@0.16.2"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-31420",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-31420: NULL Pointer Dereference"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-31420?s=github&n=kubevirt&ns=kubevirt.io&t=golang&vr=%3C%3D1.2.0",
              "help": {
                "text": "A NULL pointer dereference flaw was found in KubeVirt. This flaw allows an attacker who has access to a virtual machine guest on a node with DownwardMetrics enabled to cause a denial of service by issuing a high number of calls to vm-dump-metrics --virtio and then deleting the virtual machine.\n",
                "markdown": "> A NULL pointer dereference flaw was found in KubeVirt. This flaw allows an attacker who has access to a virtual machine guest on a node with DownwardMetrics enabled to cause a denial of service by issuing a high number of calls to vm-dump-metrics --virtio and then deleting the virtual machine.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/kubevirt.io/kubevirt@0.54.0       |\n| Affected range | <=1.2.0                                      |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          6.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<=1.2.0",
                "cvssV3": 6.5,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/kubevirt.io/kubevirt@0.54.0"
                ],
                "security-severity": "6.5",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-21284",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-21284: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-21284?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C19.3.15",
              "help": {
                "text": "### Impact\n\nWhen using `--userns-remap`, if the root user in the remapped namespace has access to the host filesystem they can modify files under `/var/lib/docker/<remapping>` that cause writing files with extended privileges.\n\n### Patches\n\nVersions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user.\n\n### Credits\n\nMaintainers would like to thank Alex Chapman for discovering the vulnerability; @awprice, @nathanburrell, @raulgomis, @chris-walz, @erin-jensby, @bassmatt, @mark-adams, @dbaxa for working on it and Zac Ellis for responsibly disclosing it to security@docker.com\n",
                "markdown": "> ### Impact\n\nWhen using `--userns-remap`, if the root user in the remapped namespace has access to the host filesystem they can modify files under `/var/lib/docker/<remapping>` that cause writing files with extended privileges.\n\n### Patches\n\nVersions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user.\n\n### Credits\n\nMaintainers would like to thank Alex Chapman for discovering the vulnerability; @awprice, @nathanburrell, @raulgomis, @chris-walz, @erin-jensby, @bassmatt, @mark-adams, @dbaxa for working on it and Zac Ellis for responsibly disclosing it to security@docker.com\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <19.3.15                                                            |\n| Fixed version  | 19.3.15                                                             |\n| CVSS Score     |                                                                 6.8 |\n| CVSS Vector    | CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N                        |\n"
              },
              "properties": {
                "affected_version": "<19.3.15",
                "cvssV3": 6.8,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N",
                "fixed_version": "19.3.15",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "6.8",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-28841",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-28841: Missing Encryption of Sensitive Data"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-28841?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24",
              "help": {
                "text": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn [iptables rule](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L205-L207) designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThis rule is not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may rely on Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability is no longer guaranteed.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) in order to prevent unintentionally leaking unencrypted traffic over the Internet.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382 ](https://github.com/moby/moby/issues/43382)partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)\n",
                "markdown": "> [Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn [iptables rule](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L205-L207) designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThis rule is not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may rely on Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability is no longer guaranteed.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) in order to prevent unintentionally leaking unencrypted traffic over the Internet.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382 ](https://github.com/moby/moby/issues/43382)partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible |\n| Affected range | >=1.12.0,<20.10.24                                                  |\n| Fixed version  | 20.10.24                                                            |\n| CVSS Score     |                                                                 6.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N                        |\n"
              },
              "properties": {
                "affected_version": ">=1.12.0,<20.10.24",
                "cvssV3": 6.8,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
                "fixed_version": "20.10.24",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "6.8",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-28842",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-28842: Unprotected Alternate Channel"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-28842?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24",
              "help": {
                "text": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\n## Impact\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw) should be referenced for a deeper exploration.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* In multi-node clusters, deploy a global ‘pause’ container for each encrypted overlay network, on every node. For example, use the `registry.k8s.io/pause` image and a `--mode global` service.\n* For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features.\nThe Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network.\n* If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec. For example, `iptables -A INPUT -m udp —-dport 4789 -m policy --dir in --pol none -j DROP`.\n\n## Background\n* This issue was discovered while characterizing and mitigating [CVE-2023-28840](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp) and [CVE-2023-28841](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237).\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)\n",
                "markdown": "> [Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\n## Impact\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw) should be referenced for a deeper exploration.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* In multi-node clusters, deploy a global ‘pause’ container for each encrypted overlay network, on every node. For example, use the `registry.k8s.io/pause` image and a `--mode global` service.\n* For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features.\nThe Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network.\n* If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec. For example, `iptables -A INPUT -m udp —-dport 4789 -m policy --dir in --pol none -j DROP`.\n\n## Background\n* This issue was discovered while characterizing and mitigating [CVE-2023-28840](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp) and [CVE-2023-28841](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237).\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible |\n| Affected range | >=1.12.0,<20.10.24                                                  |\n| Fixed version  | 20.10.24                                                            |\n| CVSS Score     |                                                                 6.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N                        |\n"
              },
              "properties": {
                "affected_version": ">=1.12.0,<20.10.24",
                "cvssV3": 6.8,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N",
                "fixed_version": "20.10.24",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "6.8",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24557",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-24557: Insufficient Verification of Data Authenticity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-24557?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C24.0.9",
              "help": {
                "text": "The classic builder cache system is prone to cache poisoning if the image is built `FROM scratch`.\nAlso, changes to some instructions (most important being `HEALTHCHECK` and `ONBUILD`) would not cause a cache miss.\n\n\nAn attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.\n\nFor example, an attacker could create an image that is considered as a valid cache candidate for:\n```\nFROM scratch\nMAINTAINER Pawel\n```\n\nwhen in fact the malicious image used as a cache would be an image built from a different Dockerfile.\n\nIn the second case, the attacker could for example substitute a different `HEALTCHECK` command.\n\n\n### Impact\n\n23.0+ users are only affected if they explicitly opted out of Buildkit (`DOCKER_BUILDKIT=0` environment variable) or are using the `/build` API endpoint (which uses the classic builder by default).\n\nAll users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.\n\nImage build API endpoint (`/build`) and `ImageBuild` function from `github.com/docker/docker/client` is also affected as it the uses classic builder by default. \n\n\n### Patches\n\nPatches are included in Moby releases:\n\n- v25.0.2\n- v24.0.9\n- v23.0.10\n\n### Workarounds\n\n- Use `--no-cache` or use Buildkit if possible (`DOCKER_BUILDKIT=1`, it's default on 23.0+ assuming that the buildx plugin is installed).\n- Use `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for `ImageBuild` call.\n\n\n",
                "markdown": "> The classic builder cache system is prone to cache poisoning if the image is built `FROM scratch`.\nAlso, changes to some instructions (most important being `HEALTHCHECK` and `ONBUILD`) would not cause a cache miss.\n\n\nAn attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.\n\nFor example, an attacker could create an image that is considered as a valid cache candidate for:\n```\nFROM scratch\nMAINTAINER Pawel\n```\n\nwhen in fact the malicious image used as a cache would be an image built from a different Dockerfile.\n\nIn the second case, the attacker could for example substitute a different `HEALTCHECK` command.\n\n\n### Impact\n\n23.0+ users are only affected if they explicitly opted out of Buildkit (`DOCKER_BUILDKIT=0` environment variable) or are using the `/build` API endpoint (which uses the classic builder by default).\n\nAll users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.\n\nImage build API endpoint (`/build`) and `ImageBuild` function from `github.com/docker/docker/client` is also affected as it the uses classic builder by default. \n\n\n### Patches\n\nPatches are included in Moby releases:\n\n- v25.0.2\n- v24.0.9\n- v23.0.10\n\n### Workarounds\n\n- Use `--no-cache` or use Buildkit if possible (`DOCKER_BUILDKIT=1`, it's default on 23.0+ assuming that the buildx plugin is installed).\n- Use `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for `ImageBuild` call.\n\n\n\n|                |                                                                      |\n|----------------|----------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.25%!B(MISSING)incompatible |\n| Affected range | <24.0.9                                                              |\n| Fixed version  | 24.0.9                                                               |\n| CVSS Score     |                                                                  6.9 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                         |\n"
              },
              "properties": {
                "affected_version": "<24.0.9",
                "cvssV3": 6.9,
                "cvssV3_severity": "MEDIUM",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L",
                "fixed_version": "24.0.9",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.24%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.25%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.27%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@24.0.0-rc.2.0.20230801142700-69c9adb7d386%2Bincompatible",
                  "pkg:golang/github.com/docker/docker@24.0.7%2Bincompatible",
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "6.9",
                "tags": [
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-qv98-3369-g364",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-qv98-3369-g364"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-qv98-3369-g364?s=github&n=kubevirt&ns=kubevirt.io&t=golang&vr=%3E%3D0.20.0%2C%3C0.55.1",
              "help": {
                "text": "### Impact\n\nUsers with the permission to create VMIs can construct VMI specs which allow them to read arbitrary files on the host. There are three main attack vectors:\n\n1. Some path fields on the VMI spec were not properly validated and allowed passing in relative paths which would have been mounted into the virt-launcher pod. The fields are: `spec.domain.firmware.kernelBoot.container.kernelPath`, `spec.domain.firmware.kernelBoot.container.initrdPath` as well as `spec.volumes[*].containerDisk.path`.\n\nExample:\n\n```yaml\napiVersion: [kubevirt.io/v1](http://kubevirt.io/v1)\nkind: VirtualMachineInstance\nmetadata:\n  name: vmi-fedora\nspec:\n  domain:\n    devices:\n      disks:\n      - disk:\n          bus: virtio\n        name: containerdisk\n      - disk:\n          bus: virtio\n        name: cloudinitdisk\n      - disk:\n          bus: virtio\n        name: containerdisk1\n      rng: {}\n    resources:\n      requests:\n        memory: 1024M\n  terminationGracePeriodSeconds: 0\n  volumes:\n  - containerDisk:\n      image: [quay.io/kubevirt/cirros-container-disk-demo:v0.52.0](http://quay.io/kubevirt/cirros-container-disk-demo:v0.52.0)\n    name: containerdisk\n  - containerDisk:\n      image: [quay.io/kubevirt/cirros-container-disk-demo:v0.52.0](http://quay.io/kubevirt/cirros-container-disk-demo:v0.52.0)\n      path: test3/../../../../../../../../etc/passwd\n    name: containerdisk1\n  - cloudInitNoCloud:\n      userData: |\n        #!/bin/sh\n        echo 'just something to make cirros happy'\n    name: cloudinitdisk\n```\n\n2. Instead of passing in relative links on the API, using malicious links in the containerDisk itself can have the same effect:\n\n```Dockerfile\nFROM <anybase>\nRUN mkdir -p /etc/ && touch /etc/passwd\nRUN mkdir -p /disks/ && ln -s /etc/passwd /disks/disk.img\n```\n\n3. KubeVirt allows PVC hotplugging. The hotplugged PVC is under user-control and it is possible to place absolute links there. Since containerDisk and hotplug code use the same mechanism to provide the disk to the virt-launcher pod, it can be used too to do arbitrary host file reads.\n\nIn all three cases it is then possible to at lest read any host file:\n\n```\n$ sudo cat /dev/vdc\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[...]\n```\n\n\n### Patches\n\nKubeVirt 0.55.1 provides patches to fix the vulnerability.\n\n\n### Workarounds\n\n* Ensure that the `HotplugVolumes` feature-gate is disabled\n* ContainerDisk support can't be disabled. The only known way to mitigate this issue is create with e.g. policy controller a conditiontemplate which ensures that no containerDisk gets added and that `spec.domain.firmware.kernelBoot` is not used on VirtualMachineInstances.|\n* Ensure that SELinux is enabled. It blocks most attempts to read host files but does not provide a 100% guarantee (like vm-to-vm read may still work).\n\n### References\n\n\nDisclosure notice form the discovering party: https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm\n\n### For more information\n\nFor interested vendors which have to provide a fix for their supported versions, the following PRs are providing the fix:\n\n * https://github.com/kubevirt/kubevirt/pull/8198\n * https://github.com/kubevirt/kubevirt/pull/8268\n \n### Credits\nOliver Brooks and James Klopchic of NCC Group\nDiane Dubois and Roman Mohr of Google\n\n",
                "markdown": "> ### Impact\n\nUsers with the permission to create VMIs can construct VMI specs which allow them to read arbitrary files on the host. There are three main attack vectors:\n\n1. Some path fields on the VMI spec were not properly validated and allowed passing in relative paths which would have been mounted into the virt-launcher pod. The fields are: `spec.domain.firmware.kernelBoot.container.kernelPath`, `spec.domain.firmware.kernelBoot.container.initrdPath` as well as `spec.volumes[*].containerDisk.path`.\n\nExample:\n\n```yaml\napiVersion: [kubevirt.io/v1](http://kubevirt.io/v1)\nkind: VirtualMachineInstance\nmetadata:\n  name: vmi-fedora\nspec:\n  domain:\n    devices:\n      disks:\n      - disk:\n          bus: virtio\n        name: containerdisk\n      - disk:\n          bus: virtio\n        name: cloudinitdisk\n      - disk:\n          bus: virtio\n        name: containerdisk1\n      rng: {}\n    resources:\n      requests:\n        memory: 1024M\n  terminationGracePeriodSeconds: 0\n  volumes:\n  - containerDisk:\n      image: [quay.io/kubevirt/cirros-container-disk-demo:v0.52.0](http://quay.io/kubevirt/cirros-container-disk-demo:v0.52.0)\n    name: containerdisk\n  - containerDisk:\n      image: [quay.io/kubevirt/cirros-container-disk-demo:v0.52.0](http://quay.io/kubevirt/cirros-container-disk-demo:v0.52.0)\n      path: test3/../../../../../../../../etc/passwd\n    name: containerdisk1\n  - cloudInitNoCloud:\n      userData: |\n        #!/bin/sh\n        echo 'just something to make cirros happy'\n    name: cloudinitdisk\n```\n\n2. Instead of passing in relative links on the API, using malicious links in the containerDisk itself can have the same effect:\n\n```Dockerfile\nFROM <anybase>\nRUN mkdir -p /etc/ && touch /etc/passwd\nRUN mkdir -p /disks/ && ln -s /etc/passwd /disks/disk.img\n```\n\n3. KubeVirt allows PVC hotplugging. The hotplugged PVC is under user-control and it is possible to place absolute links there. Since containerDisk and hotplug code use the same mechanism to provide the disk to the virt-launcher pod, it can be used too to do arbitrary host file reads.\n\nIn all three cases it is then possible to at lest read any host file:\n\n```\n$ sudo cat /dev/vdc\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[...]\n```\n\n\n### Patches\n\nKubeVirt 0.55.1 provides patches to fix the vulnerability.\n\n\n### Workarounds\n\n* Ensure that the `HotplugVolumes` feature-gate is disabled\n* ContainerDisk support can't be disabled. The only known way to mitigate this issue is create with e.g. policy controller a conditiontemplate which ensures that no containerDisk gets added and that `spec.domain.firmware.kernelBoot` is not used on VirtualMachineInstances.|\n* Ensure that SELinux is enabled. It blocks most attempts to read host files but does not provide a 100% guarantee (like vm-to-vm read may still work).\n\n### References\n\n\nDisclosure notice form the discovering party: https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm\n\n### For more information\n\nFor interested vendors which have to provide a fix for their supported versions, the following PRs are providing the fix:\n\n * https://github.com/kubevirt/kubevirt/pull/8198\n * https://github.com/kubevirt/kubevirt/pull/8268\n \n### Credits\nOliver Brooks and James Klopchic of NCC Group\nDiane Dubois and Roman Mohr of Google\n\n\n|                |                                        |\n|----------------|----------------------------------------|\n| Package        | pkg:golang/kubevirt.io/kubevirt@0.54.0 |\n| Affected range | >=0.20.0,<0.55.1                       |\n| Fixed version  | 0.55.1                                 |\n"
              },
              "properties": {
                "affected_version": ">=0.20.0,<0.55.1",
                "cvssV3_severity": "HIGH",
                "fixed_version": "0.55.1",
                "purls": [
                  "pkg:golang/kubevirt.io/kubevirt@0.54.0"
                ],
                "security-severity": "7.1",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-3154",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-3154: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-3154?s=gitlab&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.2.0-rc.1",
              "help": {
                "text": "On CRI-O, an arbitrary systemd property can be injected via a Pod annotation:\n```\n---\napiVersion: v1\nkind: Pod\nmetadata:\nname: poc-arbitrary-systemd-property-injection\nannotations:\n",
                "markdown": "> On CRI-O, an arbitrary systemd property can be injected via a Pod annotation:\n```\n---\napiVersion: v1\nkind: Pod\nmetadata:\nname: poc-arbitrary-systemd-property-injection\nannotations:\n\n|                |                                                 |\n|----------------|-------------------------------------------------|\n| Package        | pkg:golang/github.com/opencontainers/runc@1.1.5 |\n| Affected range | <1.2.0-rc.1                                     |\n| Fixed version  | 1.2.0-rc.1                                      |\n| CVSS Score     |                                             7.2 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H    |\n"
              },
              "properties": {
                "affected_version": "<1.2.0-rc.1",
                "cvssV3": 7.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.2.0-rc.1",
                "purls": [
                  "pkg:golang/github.com/opencontainers/runc@1.1.12",
                  "pkg:golang/github.com/opencontainers/runc@1.1.5"
                ],
                "security-severity": "7.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-c5pj-mqfh-rvc3",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-c5pj-mqfh-rvc3: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-c5pj-mqfh-rvc3?s=gitlab&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.2.0-rc.1",
              "help": {
                "text": "## Withdrawn Advisory\n\nThis advisory has been withdrawn because it was incorrectly attributed to runc. Please see the issue [here](https://github.com/opencontainers/runc/issues/4263) for more information.\n\n## Original Description\n\nA flaw was found in cri-o, where an arbitrary systemd property can be injected via a Pod annotation. Any user who can create a pod with an arbitrary annotation may perform an arbitrary action on the host system. This issue has its root in how runc handles Config Annotations lists.\n",
                "markdown": "> ## Withdrawn Advisory\n\nThis advisory has been withdrawn because it was incorrectly attributed to runc. Please see the issue [here](https://github.com/opencontainers/runc/issues/4263) for more information.\n\n## Original Description\n\nA flaw was found in cri-o, where an arbitrary systemd property can be injected via a Pod annotation. Any user who can create a pod with an arbitrary annotation may perform an arbitrary action on the host system. This issue has its root in how runc handles Config Annotations lists.\n\n|                |                                                  |\n|----------------|--------------------------------------------------|\n| Package        | pkg:golang/github.com/opencontainers/runc@1.1.12 |\n| Affected range | <1.2.0-rc.1                                      |\n| Fixed version  | 1.2.0-rc.1                                       |\n| CVSS Score     |                                              7.2 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H     |\n"
              },
              "properties": {
                "affected_version": "<1.2.0-rc.1",
                "cvssV3": 7.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.2.0-rc.1",
                "purls": [
                  "pkg:golang/github.com/opencontainers/runc@1.1.12",
                  "pkg:golang/github.com/opencontainers/runc@1.1.5"
                ],
                "security-severity": "7.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24539",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24539"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9",
              "help": {
                "text": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.\n",
                "markdown": "> Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.19.9                   |\n| Fixed version  | 1.19.9                    |\n"
              },
              "properties": {
                "affected_version": "<1.19.9",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.3",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29400",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-29400"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9",
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.\n",
                "markdown": "> Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.19.9                  |\n| Fixed version  | 1.19.9                   |\n"
              },
              "properties": {
                "affected_version": "<1.19.9",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.3",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-12608",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-12608: Authentication Bypass Using an Alternate Path or Channel"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2018-12608?s=github&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C17.06.0-ce",
              "help": {
                "text": "An issue was discovered in Docker Moby before 17.06.0. The Docker engine validated a client TLS certificate using both the configured client CA root certificate and all system roots on non-Windows systems. This allowed a client with any domain validated certificate signed by a system-trusted root CA (as opposed to one signed by the configured CA root certificate) to authenticate.\n",
                "markdown": "> An issue was discovered in Docker Moby before 17.06.0. The Docker engine validated a client TLS certificate using both the configured client CA root certificate and all system roots on non-Windows systems. This allowed a client with any domain validated certificate signed by a system-trusted root CA (as opposed to one signed by the configured CA root certificate) to authenticate.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <17.06.0-ce                                                         |\n| Fixed version  | 17.06.0-ce                                                          |\n| CVSS Score     |                                                                 7.5 |\n| CVSS Vector    | CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N                        |\n"
              },
              "properties": {
                "affected_version": "<17.06.0-ce",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
                "fixed_version": "17.06.0-ce",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23772",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-23772"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-23772?s=golang&n=stdlib&t=golang&vr=%3E%3D1.17.0-0%2C%3C1.17.7",
              "help": {
                "text": "Rat.SetString had an overflow issue that can lead to uncontrolled memory consumption.\n",
                "markdown": "> Rat.SetString had an overflow issue that can lead to uncontrolled memory consumption.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | >=1.17.0-0,<1.17.7       |\n| Fixed version  | 1.17.7                   |\n"
              },
              "properties": {
                "affected_version": ">=1.17.0-0,<1.17.7",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.7",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24675",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-24675"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-24675?s=golang&n=stdlib&t=golang&vr=%3C1.17.9",
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.\n",
                "markdown": "> encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.9                  |\n| Fixed version  | 1.17.9                   |\n"
              },
              "properties": {
                "affected_version": "<1.17.9",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24921",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-24921"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-24921?s=golang&n=stdlib&t=golang&vr=%3E%3D1.17.0-0%2C%3C1.17.8",
              "help": {
                "text": "On 64-bit platforms, an extremely deeply nested expression can cause regexp.Compile to cause goroutine stack exhaustion, forcing the program to exit. Note this applies to very large expressions, on the order of 2MB.\n",
                "markdown": "> On 64-bit platforms, an extremely deeply nested expression can cause regexp.Compile to cause goroutine stack exhaustion, forcing the program to exit. Note this applies to very large expressions, on the order of 2MB.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | >=1.17.0-0,<1.17.8       |\n| Fixed version  | 1.17.8                   |\n"
              },
              "properties": {
                "affected_version": ">=1.17.0-0,<1.17.8",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27664",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-27664"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-27664?s=golang&n=stdlib&t=golang&vr=%3C1.18.6",
              "help": {
                "text": "HTTP/2 server connections can hang forever waiting for a clean shutdown that was preempted by a fatal error. This condition can be exploited by a malicious client to cause a denial of service.\n",
                "markdown": "> HTTP/2 server connections can hang forever waiting for a clean shutdown that was preempted by a fatal error. This condition can be exploited by a malicious client to cause a denial of service.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.6                  |\n| Fixed version  | 1.18.6                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.6",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.18.6",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-28131",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-28131"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-28131?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Calling Decoder.Skip when parsing a deeply nested XML document can cause a panic due to stack exhaustion.\n",
                "markdown": "> Calling Decoder.Skip when parsing a deeply nested XML document can cause a panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-28327",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-28327"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-28327?s=golang&n=stdlib&t=golang&vr=%3C1.17.9",
              "help": {
                "text": "A crafted scalar input longer than 32 bytes can cause P256().ScalarMult or P256().ScalarBaseMult to panic. Indirect uses through crypto/ecdsa and crypto/tls are unaffected. amd64, arm64, ppc64le, and s390x are unaffected.\n",
                "markdown": "> A crafted scalar input longer than 32 bytes can cause P256().ScalarMult or P256().ScalarBaseMult to panic. Indirect uses through crypto/ecdsa and crypto/tls are unaffected. amd64, arm64, ppc64le, and s390x are unaffected.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.9                  |\n| Fixed version  | 1.17.9                   |\n"
              },
              "properties": {
                "affected_version": "<1.17.9",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2879",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-2879"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-2879?s=golang&n=stdlib&t=golang&vr=%3C1.18.7",
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.\n",
                "markdown": "> Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.7                  |\n| Fixed version  | 1.18.7                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.7",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.18.7",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2880",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-2880"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-2880?s=golang&n=stdlib&t=golang&vr=%3C1.18.7",
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value.\n\nAfter fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.\n",
                "markdown": "> Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value.\n\nAfter fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.7                  |\n| Fixed version  | 1.18.7                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.7",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.18.7",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-29804",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-29804"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-29804?s=golang&n=stdlib&t=golang&vr=%3C1.17.11",
              "help": {
                "text": "On Windows, the filepath.Clean function can convert certain invalid paths to valid, absolute paths, potentially allowing a directory traversal attack.\n\nFor example, Clean(\".\\c:\") returns \"c:\".\n",
                "markdown": "> On Windows, the filepath.Clean function can convert certain invalid paths to valid, absolute paths, potentially allowing a directory traversal attack.\n\nFor example, Clean(\".\\c:\") returns \"c:\".\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.11                 |\n| Fixed version  | 1.17.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.11",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30630",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30630"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30630?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.\n",
                "markdown": "> Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30631",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30631"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30631?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Calling Reader.Read on an archive containing a large number of concatenated 0-length compressed files can cause a panic due to stack exhaustion.\n",
                "markdown": "> Calling Reader.Read on an archive containing a large number of concatenated 0-length compressed files can cause a panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30632",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30632"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30632?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.\n",
                "markdown": "> Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30633",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30633"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30633?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Unmarshaling an XML document into a Go struct which has a nested field that uses the 'any' field tag can panic due to stack exhaustion.\n",
                "markdown": "> Unmarshaling an XML document into a Go struct which has a nested field that uses the 'any' field tag can panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30634",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30634"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30634?s=golang&n=stdlib&t=golang&vr=%3C1.17.11",
              "help": {
                "text": "On Windows, rand.Read will hang indefinitely if passed a buffer larger than 1 << 32 - 1 bytes.\n",
                "markdown": "> On Windows, rand.Read will hang indefinitely if passed a buffer larger than 1 << 32 - 1 bytes.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.11                 |\n| Fixed version  | 1.17.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.11",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30635",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30635"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.17.12",
              "help": {
                "text": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion.\n",
                "markdown": "> Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.12                 |\n| Fixed version  | 1.17.12                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.12",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.12",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-32189",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-32189"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-32189?s=golang&n=stdlib&t=golang&vr=%3C1.17.13",
              "help": {
                "text": "Decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service.\n",
                "markdown": "> Decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.13                 |\n| Fixed version  | 1.17.13                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.13",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.13",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41715",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41715"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41715?s=golang&n=stdlib&t=golang&vr=%3C1.18.7",
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service.\n\nThe parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory.\n\nAfter fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.\n",
                "markdown": "> Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service.\n\nThe parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory.\n\nAfter fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.7                  |\n| Fixed version  | 1.18.7                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.7",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.18.7",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41716",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41716"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41716?s=golang&n=stdlib&t=golang&vr=%3C1.18.8",
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows.\n\nIn syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".\n",
                "markdown": "> Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows.\n\nIn syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.8                  |\n| Fixed version  | 1.18.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.8",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.18.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41720",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41720"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41720?s=golang&n=stdlib&t=golang&vr=%3C1.18.9",
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir.\n\nThe os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access.\n\nIn addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system.\n\nWith fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.\n",
                "markdown": "> On Windows, restricted files can be accessed via os.DirFS and http.Dir.\n\nThe os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access.\n\nIn addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system.\n\nWith fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.18.9                  |\n| Fixed version  | 1.18.9                   |\n"
              },
              "properties": {
                "affected_version": "<1.18.9",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.18.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41722",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41722"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6",
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows.\n\nOn Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack.\n\nAfter fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".\n",
                "markdown": "> A path traversal vulnerability exists in filepath.Clean on Windows.\n\nOn Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack.\n\nAfter fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.19.6                   |\n| Fixed version  | 1.19.6                    |\n"
              },
              "properties": {
                "affected_version": "<1.19.6",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.6",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41723",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41723"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6",
              "help": {
                "text": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.\n",
                "markdown": "> A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.19.6                   |\n| Fixed version  | 1.19.6                    |\n"
              },
              "properties": {
                "affected_version": "<1.19.6",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.6",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41724",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41724"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6",
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls.\n\nBoth clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses.\n\nThis affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).\n",
                "markdown": "> Large handshake records may cause panics in crypto/tls.\n\nBoth clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses.\n\nThis affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.19.6                  |\n| Fixed version  | 1.19.6                   |\n"
              },
              "properties": {
                "affected_version": "<1.19.6",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.6",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41725",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-41725"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6",
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart.\n\nMultipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files.\n\nWith fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous.\n\nIn addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct.\n\nUsers should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.\n",
                "markdown": "> A denial of service is possible from excessive resource consumption in net/http and mime/multipart.\n\nMultipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files.\n\nWith fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous.\n\nIn addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct.\n\nUsers should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.19.6                   |\n| Fixed version  | 1.19.6                    |\n"
              },
              "properties": {
                "affected_version": "<1.19.6",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.6",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24534",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24534"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8",
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service.\n\nCertain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service.\n\nWith fix, header parsing now correctly allocates only the memory required to hold parsed headers.\n",
                "markdown": "> HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service.\n\nCertain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service.\n\nWith fix, header parsing now correctly allocates only the memory required to hold parsed headers.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.19.8                  |\n| Fixed version  | 1.19.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.19.8",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24536",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24536"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8",
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts.\n\nThis stems from several causes:\n\n1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended.\n2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts.\n3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector.\n\nThe combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nWith fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations.\n\nIn addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms:\n\n1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=.\n2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.\n",
                "markdown": "> Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts.\n\nThis stems from several causes:\n\n1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended.\n2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts.\n3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector.\n\nThe combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nWith fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations.\n\nIn addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms:\n\n1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=.\n2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.19.7 |\n| Affected range | <1.19.8                  |\n| Fixed version  | 1.19.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.19.8",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24537",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24537"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8",
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.\n",
                "markdown": "> Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.19.8                  |\n| Fixed version  | 1.19.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.19.8",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-28840",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-28840: Unprotected Alternate Channel"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-28840?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24",
              "help": {
                "text": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\n[Two iptables rules](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L230-L234) serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the `INPUT` filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThese rules are not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected configurations silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container’s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) to prevent all VXLAN packet injection.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382](https://github.com/moby/moby/issues/43382) partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)\n",
                "markdown": "> [Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\n[Two iptables rules](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L230-L234) serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the `INPUT` filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThese rules are not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected configurations silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container’s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) to prevent all VXLAN packet injection.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382](https://github.com/moby/moby/issues/43382) partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible |\n| Affected range | >=1.12.0,<20.10.24                                                  |\n| Fixed version  | 20.10.24                                                            |\n| CVSS Score     |                                                                 7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:L                        |\n"
              },
              "properties": {
                "affected_version": ">=1.12.0,<20.10.24",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:L",
                "fixed_version": "20.10.24",
                "purls": [
                  "pkg:golang/github.com/docker/docker@20.10.9%2Bincompatible"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-39325",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-39325: Uncontrolled Resource Consumption"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-39325?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0",
              "help": {
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. \n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. \n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.\n",
                "markdown": "> A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. \n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. \n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/golang.org/x/net@0.12.0           |\n| Affected range | <0.17.0                                      |\n| Fixed version  | 0.17.0                                       |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<0.17.0",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "0.17.0",
                "purls": [
                  "pkg:golang/golang.org/x/net@0.11.0",
                  "pkg:golang/golang.org/x/net@0.12.0",
                  "pkg:golang/golang.org/x/net@0.8.0",
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45142",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45142: Allocation of Resources Without Limits or Throttling"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=otelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation%2Fnet%2Fhttp&t=golang&vr=%3C0.44.0",
              "help": {
                "text": "### Summary\n\nThis handler wrapper https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\nout of the box adds labels\n\n- `http.user_agent`\n- `http.method`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it.\n\n### Details\n\nHTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses [httpconv.ServerRequest](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) that records every value for HTTP [method](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204) and [User-Agent](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223).\n\n### PoC\n\nSend many requests with long randomly generated HTTP methods or/and User agents (e.g. a million) and observe how memory consumption increases during it.\n\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use [otelhttp.NewHandler](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65) wrapper, and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities\n- https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- https://github.com/advisories/GHSA-cg3q-j54f-5p7p ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected [otelhttp.WithFilter()](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters) can be used, but it requires manual careful configuration to not log certain requests entirely.\n\nFor convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.\n\nThe other possibility is to disable HTTP metrics instrumentation by passing [`otelhttp.WithMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp#WithMeterProvider) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277, released with package version 0.44.0, the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.\n\n### References\n\n- https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\n- https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\n\n",
                "markdown": "> ### Summary\n\nThis handler wrapper https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\nout of the box adds labels\n\n- `http.user_agent`\n- `http.method`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it.\n\n### Details\n\nHTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses [httpconv.ServerRequest](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) that records every value for HTTP [method](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204) and [User-Agent](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223).\n\n### PoC\n\nSend many requests with long randomly generated HTTP methods or/and User agents (e.g. a million) and observe how memory consumption increases during it.\n\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use [otelhttp.NewHandler](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65) wrapper, and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities\n- https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- https://github.com/advisories/GHSA-cg3q-j54f-5p7p ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected [otelhttp.WithFilter()](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters) can be used, but it requires manual careful configuration to not log certain requests entirely.\n\nFor convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.\n\nThe other possibility is to disable HTTP metrics instrumentation by passing [`otelhttp.WithMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp#WithMeterProvider) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277, released with package version 0.44.0, the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.\n\n### References\n\n- https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\n- https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\n\n\n|                |                                                                                 |\n|----------------|---------------------------------------------------------------------------------|\n| Package        | pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.35.1#net/http/otelhttp |\n| Affected range | <0.44.0                                                                         |\n| Fixed version  | 0.44.0                                                                          |\n| CVSS Score     |                                                                             7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H                                    |\n"
              },
              "properties": {
                "affected_version": "<0.44.0",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "0.44.0",
                "purls": [
                  "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.35.1#net/http/otelhttp"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45283",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45283"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11",
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.\n",
                "markdown": "> The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.20.5 |\n| Affected range | <1.20.11                 |\n| Fixed version  | 1.20.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.20.11",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.20.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7",
                  "pkg:golang/stdlib@1.20.5",
                  "pkg:golang/stdlib@1.21.3"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45287",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-45287"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0",
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits.\n\nIn Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.\n",
                "markdown": "> Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits.\n\nIn Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.20.0                   |\n| Fixed version  | 1.20.0                    |\n"
              },
              "properties": {
                "affected_version": "<1.20.0",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.20.0",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-47108",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-47108: Allocation of Resources Without Limits or Throttling"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-47108?s=github&n=otelgrpc&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation%2Fgoogle.golang.org%2Fgrpc&t=golang&vr=%3C0.46.0",
              "help": {
                "text": "### Summary\n\nThe grpc Unary Server Interceptor [opentelemetry-go-contrib/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327)\n\n```\n// UnaryServerInterceptor returns a grpc.UnaryServerInterceptor suitable\n// for use in a grpc.NewServer call.\nfunc UnaryServerInterceptor(opts ...Option) grpc.UnaryServerInterceptor {\n```\n  \nout of the box adds labels\n\n- `net.peer.sock.addr`\n- `net.peer.sock.port`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent.\n\n### Details\n\nAn attacker can easily flood the peer address and port for requests.  \n\n### PoC\n\nApply the attached patch to the example and run the client multiple times.  Observe how each request will create a unique histogram and how the memory consumption increases during it.\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use  [UnaryServerInterceptor](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327), and does not filter any client IP address and ports via middleware or proxies, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities.\n\n* [GHSA-rcjv-mgp8-qvmr](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr) ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-5r5m-65gx-7vrh](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh \"GHSA-5r5m-65gx-7vrh\") ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-cg3q-j54f-5p7p](https://github.com/advisories/GHSA-cg3q-j54f-5p7p \"GHSA-cg3q-j54f-5p7p\") ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected, a view removing the attributes can be used.\n\nThe other possibility is to disable grpc metrics instrumentation by passing [`otelgrpc.WithMeterProvider`](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322), to be released with v0.46.0, the attributes were removed.\n\n### References\n\n- [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322)\n",
                "markdown": "> ### Summary\n\nThe grpc Unary Server Interceptor [opentelemetry-go-contrib/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327)\n\n```\n// UnaryServerInterceptor returns a grpc.UnaryServerInterceptor suitable\n// for use in a grpc.NewServer call.\nfunc UnaryServerInterceptor(opts ...Option) grpc.UnaryServerInterceptor {\n```\n  \nout of the box adds labels\n\n- `net.peer.sock.addr`\n- `net.peer.sock.port`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent.\n\n### Details\n\nAn attacker can easily flood the peer address and port for requests.  \n\n### PoC\n\nApply the attached patch to the example and run the client multiple times.  Observe how each request will create a unique histogram and how the memory consumption increases during it.\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use  [UnaryServerInterceptor](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327), and does not filter any client IP address and ports via middleware or proxies, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities.\n\n* [GHSA-rcjv-mgp8-qvmr](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr) ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-5r5m-65gx-7vrh](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh \"GHSA-5r5m-65gx-7vrh\") ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-cg3q-j54f-5p7p](https://github.com/advisories/GHSA-cg3q-j54f-5p7p \"GHSA-cg3q-j54f-5p7p\") ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected, a view removing the attributes can be used.\n\nThe other possibility is to disable grpc metrics instrumentation by passing [`otelgrpc.WithMeterProvider`](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322), to be released with v0.46.0, the attributes were removed.\n\n### References\n\n- [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322)\n\n|                |                                                                                               |\n|----------------|-----------------------------------------------------------------------------------------------|\n| Package        | pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.35.0#google.golang.org/grpc/otelgrpc |\n| Affected range | <0.46.0                                                                                       |\n| Fixed version  | 0.46.0                                                                                        |\n| CVSS Score     |                                                                                           7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H                                                  |\n"
              },
              "properties": {
                "affected_version": "<0.46.0",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "0.46.0",
                "purls": [
                  "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.35.0#google.golang.org/grpc/otelgrpc"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-22189",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-22189: Uncontrolled Resource Consumption"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-22189?s=github&n=quic-go&ns=github.com%2Fquic-go&t=golang&vr=%3C0.42.0",
              "help": {
                "text": "An attacker can cause its peer to run out of memory by sending a large number of NEW_CONNECTION_ID frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a RETIRE_CONNECTION_ID frame. The attacker can prevent the receiver from sending out (the vast majority of) these RETIRE_CONNECTION_ID frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate.\n\nI published a more detailed description of the attack and its mitigation in this blog post: https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management/.\nI also presented this attack in the IETF QUIC working group session at IETF 119: https://youtu.be/JqXtYcZAtIA?si=nJ31QKLBSTRXY35U&t=3683\n\nThere's no way to mitigate this attack, please update quic-go to a version that contains the fix.\n",
                "markdown": "> An attacker can cause its peer to run out of memory by sending a large number of NEW_CONNECTION_ID frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a RETIRE_CONNECTION_ID frame. The attacker can prevent the receiver from sending out (the vast majority of) these RETIRE_CONNECTION_ID frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate.\n\nI published a more detailed description of the attack and its mitigation in this blog post: https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management/.\nI also presented this attack in the IETF QUIC working group session at IETF 119: https://youtu.be/JqXtYcZAtIA?si=nJ31QKLBSTRXY35U&t=3683\n\nThere's no way to mitigate this attack, please update quic-go to a version that contains the fix.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/github.com/quic-go/quic-go@0.38.2 |\n| Affected range | <0.42.0                                      |\n| Fixed version  | 0.42.0                                       |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<0.42.0",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "0.42.0",
                "purls": [
                  "pkg:golang/github.com/quic-go/quic-go@0.38.2"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-m425-mq94-257g",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GHSA-m425-mq94-257g"
              },
              "helpUri": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3",
              "help": {
                "text": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n\n",
                "markdown": "> ### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/google.golang.org/grpc@1.40.0     |\n| Affected range | <1.56.3                                      |\n| Fixed version  | 1.56.3                                       |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<1.56.3",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "1.56.3",
                "purls": [
                  "pkg:golang/google.golang.org/grpc@1.40.0",
                  "pkg:golang/google.golang.org/grpc@1.45.0"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30580",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-30580"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-30580?s=golang&n=stdlib&t=golang&vr=%3C1.17.11",
              "help": {
                "text": "On Windows, executing Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset will unintentionally trigger execution of any binaries in the working directory named either \"..com\" or \"..exe\".\n",
                "markdown": "> On Windows, executing Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset will unintentionally trigger execution of any binaries in the working directory named either \"..com\" or \"..exe\".\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.17.11                 |\n| Fixed version  | 1.17.11                  |\n"
              },
              "properties": {
                "affected_version": "<1.17.11",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.17.11",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "7.8",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29403",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-29403"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10",
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors.\n\nIf a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.\n",
                "markdown": "> On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors.\n\nIf a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.19.10                 |\n| Fixed version  | 1.19.10                  |\n"
              },
              "properties": {
                "affected_version": "<1.19.10",
                "cvssV3_severity": "HIGH",
                "fixed_version": "1.19.10",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "7.8",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-26484",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-26484: Incorrect Authorization"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-26484?s=github&n=kubevirt&ns=kubevirt.io&t=golang&vr=%3C%3D0.59.0",
              "help": {
                "text": "### Impact\n\nIf a malicious user has taken over a Kubernetes node where virt-handler (the KubeVirt node-daemon) is running, the virt-handler service account can be used to modify all node specs.\n\nThis can be misused to lure-in system-level-privileged components (which can for instance read all secrets on the cluster, or can exec into pods on other nodes). This way a compromised node can be used to elevate privileges beyond the node until potentially having full privileged access to the whole cluster.\n\nThe simplest way to exploit this, once a user could compromise a specific node, is to set with the virt-handler service account all other nodes to unschedulable and simply wait until system-critical components with high privileges appear on its node.\n\nSince this requires a node to be compromised first, the severity of this finding is considered Medium.\n\n### Patches\n\nNot yet available.\n\n### Workarounds\nGatekeeper users can add a webhook which will block the `virt-handler` service account to modify the spec of a node.\n\nAn example policy, preventing virt-handler from changing the node spec may look like this:\n\n```yaml\napiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: virthandlerrestrictions\nspec:\n[...]\n  targets:\n    - libs:\n        - |         \n[...]          \n          is_virt_handler(username) {\n              username == \"system:serviceaccount:kubevirt:virt-handler\"\n          }\n          mutates_node_in_unintended_way {\n            # TODO\n            # only allow kubevirt.io/ prefixed metadata node changes\n          }\n      rego: |\n[...]\n        \n        violation[{\"msg\": msg}] {\n          is_virt_handler(username)\n          mutates_node_in_unintended_way(input.review.object, input.review.oldObject)\n          msg := sprintf(\"virt-handler tries to modify node <%v> in an unintended way.\", [input.review.object.name])\n        }\n```\n\nand applying this template to node modifications.\n\n\n### Credits\n\nSpecial thanks to the discoverers of this issue:\n\nNanzi Yang (nzyang@stu.xidian.edu.cn)\nXin Guo (guox@stu.xidian.edu.cn)\nJietao Xiao (jietaoXiao@stu.xidian.edu.cn)\nWenbo Shen (shenwenbo@zju.edu.cn)\nJinku Li (jkli@xidian.edu.cn)\n\n### References\n\nhttps://github.com/kubevirt/kubevirt/issues/9109\n",
                "markdown": "> ### Impact\n\nIf a malicious user has taken over a Kubernetes node where virt-handler (the KubeVirt node-daemon) is running, the virt-handler service account can be used to modify all node specs.\n\nThis can be misused to lure-in system-level-privileged components (which can for instance read all secrets on the cluster, or can exec into pods on other nodes). This way a compromised node can be used to elevate privileges beyond the node until potentially having full privileged access to the whole cluster.\n\nThe simplest way to exploit this, once a user could compromise a specific node, is to set with the virt-handler service account all other nodes to unschedulable and simply wait until system-critical components with high privileges appear on its node.\n\nSince this requires a node to be compromised first, the severity of this finding is considered Medium.\n\n### Patches\n\nNot yet available.\n\n### Workarounds\nGatekeeper users can add a webhook which will block the `virt-handler` service account to modify the spec of a node.\n\nAn example policy, preventing virt-handler from changing the node spec may look like this:\n\n```yaml\napiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: virthandlerrestrictions\nspec:\n[...]\n  targets:\n    - libs:\n        - |         \n[...]          \n          is_virt_handler(username) {\n              username == \"system:serviceaccount:kubevirt:virt-handler\"\n          }\n          mutates_node_in_unintended_way {\n            # TODO\n            # only allow kubevirt.io/ prefixed metadata node changes\n          }\n      rego: |\n[...]\n        \n        violation[{\"msg\": msg}] {\n          is_virt_handler(username)\n          mutates_node_in_unintended_way(input.review.object, input.review.oldObject)\n          msg := sprintf(\"virt-handler tries to modify node <%v> in an unintended way.\", [input.review.object.name])\n        }\n```\n\nand applying this template to node modifications.\n\n\n### Credits\n\nSpecial thanks to the discoverers of this issue:\n\nNanzi Yang (nzyang@stu.xidian.edu.cn)\nXin Guo (guox@stu.xidian.edu.cn)\nJietao Xiao (jietaoXiao@stu.xidian.edu.cn)\nWenbo Shen (shenwenbo@zju.edu.cn)\nJinku Li (jkli@xidian.edu.cn)\n\n### References\n\nhttps://github.com/kubevirt/kubevirt/issues/9109\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/kubevirt.io/kubevirt@0.54.0       |\n| Affected range | <=0.59.0                                     |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          8.2 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": "<=0.59.0",
                "cvssV3": 8.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:golang/kubevirt.io/kubevirt@0.54.0"
                ],
                "security-severity": "8.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-32193",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-32193: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-32193?s=github&n=norman&ns=github.com%2Francher&t=golang&vr=%3C0.0.0-20240207153100-3bb70b772b52",
              "help": {
                "text": "### Impact\nA vulnerability has been identified in which unauthenticated cross-site scripting (XSS) in Norman's public API endpoint can be exploited. This can lead to an attacker exploiting the vulnerability to trigger JavaScript code and execute commands remotely. \n\nThe attack vector was identified as a Reflected XSS.\n\nNorman API propagates malicious payloads from user input to the UI, which renders the output. For example, a malicious URL gets rendered into a script that is executed on a page.\n\nThe changes addressed by this fix are:\n- Encode input that comes from the request URL before adding it to the response.\n- The request input is escaped by changing the URL construction that is used for links to use `url.URL`.\n- The request input is escaped by escaping the JavaScript and CSS variables with attribute encoding as defined by [OWASP](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html#output-encoding-rules-summary).\n\n### Patches\nPatched versions include the following commits:\n\n| Branch    | Commit |\n| -------- | ------- |\n| master  | 3bb70b7 |\n| release/v2.8 | a6a6cf5 |\n| release/v2.7 | cb54924 |\n| release/v2.7.s3 | 7b2b467 |\n| release/v2.6 | bd13c65 |\n\n### Workarounds\nThere is no direct mitigation besides updating Norman API to a patched version.\n\n### References\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security-related inquiries.\n- Open an issue in the [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).\n\n",
                "markdown": "> ### Impact\nA vulnerability has been identified in which unauthenticated cross-site scripting (XSS) in Norman's public API endpoint can be exploited. This can lead to an attacker exploiting the vulnerability to trigger JavaScript code and execute commands remotely. \n\nThe attack vector was identified as a Reflected XSS.\n\nNorman API propagates malicious payloads from user input to the UI, which renders the output. For example, a malicious URL gets rendered into a script that is executed on a page.\n\nThe changes addressed by this fix are:\n- Encode input that comes from the request URL before adding it to the response.\n- The request input is escaped by changing the URL construction that is used for links to use `url.URL`.\n- The request input is escaped by escaping the JavaScript and CSS variables with attribute encoding as defined by [OWASP](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html#output-encoding-rules-summary).\n\n### Patches\nPatched versions include the following commits:\n\n| Branch    | Commit |\n| -------- | ------- |\n| master  | 3bb70b7 |\n| release/v2.8 | a6a6cf5 |\n| release/v2.7 | cb54924 |\n| release/v2.7.s3 | 7b2b467 |\n| release/v2.6 | bd13c65 |\n\n### Workarounds\nThere is no direct mitigation besides updating Norman API to a patched version.\n\n### References\nIf you have any questions or comments about this advisory:\n\n- Reach out to the [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security-related inquiries.\n- Open an issue in the [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\n- Verify with our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).\n\n\n|                |                                                                        |\n|----------------|------------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/rancher/norman@0.0.0-20210709145327-afd06f533ca3 |\n| Affected range | <0.0.0-20240207153100-3bb70b772b52                                     |\n| Fixed version  | 0.0.0-20240207153100-3bb70b772b52                                      |\n| CVSS Score     |                                                                    8.3 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L                           |\n"
              },
              "properties": {
                "affected_version": "<0.0.0-20240207153100-3bb70b772b52",
                "cvssV3": 8.3,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L",
                "fixed_version": "0.0.0-20240207153100-3bb70b772b52",
                "purls": [
                  "pkg:golang/github.com/rancher/norman@0.0.0-20210709145327-afd06f533ca3",
                  "pkg:golang/github.com/rancher/norman@0.0.0-20221205184727-32ef2e185b99"
                ],
                "security-severity": "8.3",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-21626",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-21626: Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-21626?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc93%2C%3C%3D1.1.11",
              "help": {
                "text": "### Impact\n\nIn runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from `runc exec`) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through `runc run` (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\").\n\nStrictly speaking, while attack 3a is the most severe from a CVSS perspective, attacks 2 and 3b are arguably more dangerous in practice because they allow for a breakout from inside a container as opposed to requiring a user execute a malicious image. The reason attacks 1 and 3a are scored higher is because being able to socially engineer users is treated as a given for UI:R vectors, despite attacks 2 and 3b requiring far more minimal user interaction (just reasonable `runc exec` operations on a container the attacker has access to). In any case, all four attacks can lead to full control of the host system.\n\n#### Attack 1: `process.cwd` \"mis-configuration\"\n\nIn runc 1.1.11 and earlier, several file descriptors were inadvertently leaked internally within runc into `runc init`, including a handle to the host's `/sys/fs/cgroup` (this leak was added in v1.0.0-rc93). If the container was configured to have `process.cwd` set to `/proc/self/fd/7/` (the actual fd can change depending on file opening order in `runc`), the resulting pid1 process will have a working directory in the host mount namespace and thus the spawned process can access the entire host filesystem. This alone is not an exploit against runc, however a malicious image could make any innocuous-looking non-`/` path a symlink to `/proc/self/fd/7/` and thus trick a user into starting a container whose binary has access to the host filesystem.\n\nFurthermore, prior to runc 1.1.12, runc also did not verify that the final working directory was inside the container's mount namespace after calling `chdir(2)` (as we have already joined the container namespace, it was incorrectly assumed there would be no way to chdir outside the container after `pivot_root(2)`).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N (8.2, high severity).\n\nNote that this attack requires a privileged user to be tricked into running a malicious container image. It should be noted that when using higher-level runtimes (such as Docker or Kubernetes), this exploit can be considered critical as it can be done remotely by anyone with the rights to start a container image (and can be exploited from within Dockerfiles using `ONBUILD` in the case of Docker).\n\n#### Attack 2: `runc exec` container breakout\n\n(This is a modification of attack 1, constructed to allow for a process inside a container to break out.)\n\nThe same fd leak and lack of verification of the working directory in attack 1 also apply to `runc exec`. If a malicious process inside the container knows that some administrative process will call `runc exec` with the `--cwd` argument and a given path, in most cases they can replace that path with a symlink to `/proc/self/fd/7/`. Once the container process has executed the container binary, `PR_SET_DUMPABLE` protections no longer apply and the attacker can open `/proc/$exec_pid/cwd` to get access to the host filesystem.\n\n`runc exec` defaults to a cwd of `/` (which cannot be replaced with a symlink), so this attack depends on the attacker getting a user (or some administrative process) to use `--cwd` and figuring out what path the target working directory is. Note that if the target working directory is a parent of the program binary being executed, the attacker might be unable to replace the path with a symlink (the `execve` will fail in most cases, unless the host filesystem layout specifically matches the container layout in specific ways and the attacker knows which binary the `runc exec` is executing).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N (7.2, high severity).\n\n#### Attacks 3a and 3b: `process.args` host binary overwrite attack\n\n(These are modifications of attacks 1 and 2, constructed to overwrite a host binary by using `execve` to bring a magic-link reference into the container.)\n\nAttacks 1 and 2 can be adapted to overwrite a host binary by using a path like `/proc/self/fd/7/../../../bin/bash` as the `process.args` binary argument, causing a host binary to be executed by a container process. The `/proc/$pid/exe` handle can then be used to overwrite the host binary, as seen in CVE-2019-5736 (note that the same `#!` trick can be used to avoid detection as an attacker). As the overwritten binary could be something like `/bin/bash`, as soon as a privileged user executes the target binary on the host, the attacker can pivot to gain full access to the host.\n\nFor the purposes of CVSS scoring:\n\n* Attack 3a is attack 1 but adapted to overwrite a host binary, where a malicious image is set up to execute `/proc/self/fd/7/../../../bin/bash` and run a shell script that overwrites `/proc/self/exe`, overwriting the host copy of `/bin/bash`. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H (8.6, high severity).\n* Attack 3b is attack 2 but adapted to overwrite a host binary, where the malicious container process overwrites all of the possible `runc exec` target binaries inside the container (such as `/bin/bash`) such that a host target binary is executed and then the container process opens `/proc/$pid/exe` to get access to the host binary and overwrite it. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H (8.2, high severity).\n\nAs mentioned in attack 1, while 3b is scored lower it is more dangerous in practice as it doesn't require a user to run a malicious image.\n\n### Patches\nrunc 1.1.12 has been released, and includes patches for this issue. Note that there are four separate fixes applied:\n\n* Checking that the working directory is actually inside the container by checking whether `os.Getwd` returns `ENOENT` (Linux provides a way of detecting if cwd is outside the current namespace root). This explicitly blocks runc from executing a container process when inside a non-container path and thus eliminates attacks 1 and 2 even in the case of fd leaks.\n* Close all internal runc file descriptors in the final stage of `runc init`, right before `execve`. This ensures that internal file descriptors cannot be used as an argument to `execve` and thus eliminates attacks 3a and 3b, even in the case of fd leaks. This requires hooking into some Go runtime internals to make sure we don't close critical Go internal file descriptors.\n* Fixing the specific fd leaks that made these bug exploitable (mark `/sys/fs/cgroup` as `O_CLOEXEC` and backport a fix for some `*os.File` leaks).\n* In order to protect against future `runc init` file descriptor leaks, mark all non-stdio files as `O_CLOEXEC` before executing `runc init`.\n\n### Other Runtimes\n\nWe have discovered that several other container runtimes are either potentially vulnerable to similar attacks, or do not have sufficient protection against attacks of this nature. We recommend other container runtime authors look at [our patches](#Patches) and make sure they at least add a `getcwd() != ENOENT` check as well as consider whether `close_range(3, UINT_MAX, CLOSE_RANGE_CLOEXEC)` before executing their equivalent of `runc init` is appropriate.\n\n * crun 1.12 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell), but no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `crun` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `crun` can lead to these attacks becoming exploitable.\n * youki 0.3.1 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell) however this appears to be pure luck. `youki` does leak a directory file descriptor from the host mount namespace, but it just so happens that the directory is the rootfs of the container (which then gets `pivot_root`'d into and so ends up as a in-root path thanks to `chroot_fs_refs`). In addition, no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `youki` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `youki` can lead to these attacks becoming exploitable.\n * LXC 5.0.3 does not appear to leak any useful file descriptors, and they have comments noting the importance of not leaking file descriptors in `lxc-attach`. However, they don't seem to have any proactive protection against file descriptor leaks at the point of `chdir` such as using `close_range(...)` (they do have RAII-like `__do_fclose` closers but those don't necessarily stop all leaks in this context) nor do they have any check after `chdir(2)` to ensure the working directory is inside the container. Unfortunately it seems they cannot use `CLOSE_RANGE_CLOEXEC` because they don't need to re-exec themselves.\n\n### Workarounds\nFor attacks 1 and 2, only permit containers (and `runc exec`) to use a `process.cwd` of `/`. It is not possible for `/` to be replaced with a symlink (the path is resolved from within the container's mount namespace, and you cannot change the root of a mount namespace or an fs root to a symlink).\n\nFor attacks 1 and 3a, only permit users to run trusted images.\n\nFor attack 3b, there is no practical workaround other than never using `runc exec` because any binary you try to execute with `runc exec` could end up being a malicious binary target.\n\n### See Also\n* https://www.cve.org/CVERecord?id=CVE-2024-21626\n* https://github.com/opencontainers/runc/releases/tag/v1.1.12\n* The runc 1.1.12 merge commit https://github.com/opencontainers/runc/commit/a9833ff391a71b30069a6c3f816db113379a4346, which contains the following security patches:\n  * https://github.com/opencontainers/runc/commit/506552a88bd3455e80a9b3829568e94ec0160309\n  * https://github.com/opencontainers/runc/commit/0994249a5ec4e363bfcf9af58a87a722e9a3a31b\n  * https://github.com/opencontainers/runc/commit/fbe3eed1e568a376f371d2ced1b4ac16b7d7adde\n  * https://github.com/opencontainers/runc/commit/284ba3057e428f8d6c7afcc3b0ac752e525957df\n  * https://github.com/opencontainers/runc/commit/b6633f48a8c970433737b9be5bfe4f25d58a5aa7\n  * https://github.com/opencontainers/runc/commit/683ad2ff3b01fb142ece7a8b3829de17150cf688\n  * https://github.com/opencontainers/runc/commit/e9665f4d606b64bf9c4652ab2510da368bfbd951\n\n### Credits\n\nThanks to Rory McNamara from Snyk for discovering and disclosing the original vulnerability (attack 1) to Docker, @lifubang from acmcoder for discovering how to adapt the attack to overwrite host binaries (attack 3a), and Aleksa Sarai from SUSE for discovering how to adapt the attacks to work as container breakouts using `runc exec` (attacks 2 and 3b).\n",
                "markdown": "> ### Impact\n\nIn runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from `runc exec`) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through `runc run` (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\").\n\nStrictly speaking, while attack 3a is the most severe from a CVSS perspective, attacks 2 and 3b are arguably more dangerous in practice because they allow for a breakout from inside a container as opposed to requiring a user execute a malicious image. The reason attacks 1 and 3a are scored higher is because being able to socially engineer users is treated as a given for UI:R vectors, despite attacks 2 and 3b requiring far more minimal user interaction (just reasonable `runc exec` operations on a container the attacker has access to). In any case, all four attacks can lead to full control of the host system.\n\n#### Attack 1: `process.cwd` \"mis-configuration\"\n\nIn runc 1.1.11 and earlier, several file descriptors were inadvertently leaked internally within runc into `runc init`, including a handle to the host's `/sys/fs/cgroup` (this leak was added in v1.0.0-rc93). If the container was configured to have `process.cwd` set to `/proc/self/fd/7/` (the actual fd can change depending on file opening order in `runc`), the resulting pid1 process will have a working directory in the host mount namespace and thus the spawned process can access the entire host filesystem. This alone is not an exploit against runc, however a malicious image could make any innocuous-looking non-`/` path a symlink to `/proc/self/fd/7/` and thus trick a user into starting a container whose binary has access to the host filesystem.\n\nFurthermore, prior to runc 1.1.12, runc also did not verify that the final working directory was inside the container's mount namespace after calling `chdir(2)` (as we have already joined the container namespace, it was incorrectly assumed there would be no way to chdir outside the container after `pivot_root(2)`).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N (8.2, high severity).\n\nNote that this attack requires a privileged user to be tricked into running a malicious container image. It should be noted that when using higher-level runtimes (such as Docker or Kubernetes), this exploit can be considered critical as it can be done remotely by anyone with the rights to start a container image (and can be exploited from within Dockerfiles using `ONBUILD` in the case of Docker).\n\n#### Attack 2: `runc exec` container breakout\n\n(This is a modification of attack 1, constructed to allow for a process inside a container to break out.)\n\nThe same fd leak and lack of verification of the working directory in attack 1 also apply to `runc exec`. If a malicious process inside the container knows that some administrative process will call `runc exec` with the `--cwd` argument and a given path, in most cases they can replace that path with a symlink to `/proc/self/fd/7/`. Once the container process has executed the container binary, `PR_SET_DUMPABLE` protections no longer apply and the attacker can open `/proc/$exec_pid/cwd` to get access to the host filesystem.\n\n`runc exec` defaults to a cwd of `/` (which cannot be replaced with a symlink), so this attack depends on the attacker getting a user (or some administrative process) to use `--cwd` and figuring out what path the target working directory is. Note that if the target working directory is a parent of the program binary being executed, the attacker might be unable to replace the path with a symlink (the `execve` will fail in most cases, unless the host filesystem layout specifically matches the container layout in specific ways and the attacker knows which binary the `runc exec` is executing).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N (7.2, high severity).\n\n#### Attacks 3a and 3b: `process.args` host binary overwrite attack\n\n(These are modifications of attacks 1 and 2, constructed to overwrite a host binary by using `execve` to bring a magic-link reference into the container.)\n\nAttacks 1 and 2 can be adapted to overwrite a host binary by using a path like `/proc/self/fd/7/../../../bin/bash` as the `process.args` binary argument, causing a host binary to be executed by a container process. The `/proc/$pid/exe` handle can then be used to overwrite the host binary, as seen in CVE-2019-5736 (note that the same `#!` trick can be used to avoid detection as an attacker). As the overwritten binary could be something like `/bin/bash`, as soon as a privileged user executes the target binary on the host, the attacker can pivot to gain full access to the host.\n\nFor the purposes of CVSS scoring:\n\n* Attack 3a is attack 1 but adapted to overwrite a host binary, where a malicious image is set up to execute `/proc/self/fd/7/../../../bin/bash` and run a shell script that overwrites `/proc/self/exe`, overwriting the host copy of `/bin/bash`. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H (8.6, high severity).\n* Attack 3b is attack 2 but adapted to overwrite a host binary, where the malicious container process overwrites all of the possible `runc exec` target binaries inside the container (such as `/bin/bash`) such that a host target binary is executed and then the container process opens `/proc/$pid/exe` to get access to the host binary and overwrite it. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H (8.2, high severity).\n\nAs mentioned in attack 1, while 3b is scored lower it is more dangerous in practice as it doesn't require a user to run a malicious image.\n\n### Patches\nrunc 1.1.12 has been released, and includes patches for this issue. Note that there are four separate fixes applied:\n\n* Checking that the working directory is actually inside the container by checking whether `os.Getwd` returns `ENOENT` (Linux provides a way of detecting if cwd is outside the current namespace root). This explicitly blocks runc from executing a container process when inside a non-container path and thus eliminates attacks 1 and 2 even in the case of fd leaks.\n* Close all internal runc file descriptors in the final stage of `runc init`, right before `execve`. This ensures that internal file descriptors cannot be used as an argument to `execve` and thus eliminates attacks 3a and 3b, even in the case of fd leaks. This requires hooking into some Go runtime internals to make sure we don't close critical Go internal file descriptors.\n* Fixing the specific fd leaks that made these bug exploitable (mark `/sys/fs/cgroup` as `O_CLOEXEC` and backport a fix for some `*os.File` leaks).\n* In order to protect against future `runc init` file descriptor leaks, mark all non-stdio files as `O_CLOEXEC` before executing `runc init`.\n\n### Other Runtimes\n\nWe have discovered that several other container runtimes are either potentially vulnerable to similar attacks, or do not have sufficient protection against attacks of this nature. We recommend other container runtime authors look at [our patches](#Patches) and make sure they at least add a `getcwd() != ENOENT` check as well as consider whether `close_range(3, UINT_MAX, CLOSE_RANGE_CLOEXEC)` before executing their equivalent of `runc init` is appropriate.\n\n * crun 1.12 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell), but no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `crun` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `crun` can lead to these attacks becoming exploitable.\n * youki 0.3.1 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell) however this appears to be pure luck. `youki` does leak a directory file descriptor from the host mount namespace, but it just so happens that the directory is the rootfs of the container (which then gets `pivot_root`'d into and so ends up as a in-root path thanks to `chroot_fs_refs`). In addition, no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `youki` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `youki` can lead to these attacks becoming exploitable.\n * LXC 5.0.3 does not appear to leak any useful file descriptors, and they have comments noting the importance of not leaking file descriptors in `lxc-attach`. However, they don't seem to have any proactive protection against file descriptor leaks at the point of `chdir` such as using `close_range(...)` (they do have RAII-like `__do_fclose` closers but those don't necessarily stop all leaks in this context) nor do they have any check after `chdir(2)` to ensure the working directory is inside the container. Unfortunately it seems they cannot use `CLOSE_RANGE_CLOEXEC` because they don't need to re-exec themselves.\n\n### Workarounds\nFor attacks 1 and 2, only permit containers (and `runc exec`) to use a `process.cwd` of `/`. It is not possible for `/` to be replaced with a symlink (the path is resolved from within the container's mount namespace, and you cannot change the root of a mount namespace or an fs root to a symlink).\n\nFor attacks 1 and 3a, only permit users to run trusted images.\n\nFor attack 3b, there is no practical workaround other than never using `runc exec` because any binary you try to execute with `runc exec` could end up being a malicious binary target.\n\n### See Also\n* https://www.cve.org/CVERecord?id=CVE-2024-21626\n* https://github.com/opencontainers/runc/releases/tag/v1.1.12\n* The runc 1.1.12 merge commit https://github.com/opencontainers/runc/commit/a9833ff391a71b30069a6c3f816db113379a4346, which contains the following security patches:\n  * https://github.com/opencontainers/runc/commit/506552a88bd3455e80a9b3829568e94ec0160309\n  * https://github.com/opencontainers/runc/commit/0994249a5ec4e363bfcf9af58a87a722e9a3a31b\n  * https://github.com/opencontainers/runc/commit/fbe3eed1e568a376f371d2ced1b4ac16b7d7adde\n  * https://github.com/opencontainers/runc/commit/284ba3057e428f8d6c7afcc3b0ac752e525957df\n  * https://github.com/opencontainers/runc/commit/b6633f48a8c970433737b9be5bfe4f25d58a5aa7\n  * https://github.com/opencontainers/runc/commit/683ad2ff3b01fb142ece7a8b3829de17150cf688\n  * https://github.com/opencontainers/runc/commit/e9665f4d606b64bf9c4652ab2510da368bfbd951\n\n### Credits\n\nThanks to Rory McNamara from Snyk for discovering and disclosing the original vulnerability (attack 1) to Docker, @lifubang from acmcoder for discovering how to adapt the attack to overwrite host binaries (attack 3a), and Aleksa Sarai from SUSE for discovering how to adapt the attacks to work as container breakouts using `runc exec` (attacks 2 and 3b).\n\n|                |                                                 |\n|----------------|-------------------------------------------------|\n| Package        | pkg:golang/github.com/opencontainers/runc@1.1.5 |\n| Affected range | >=1.0.0-rc93,<=1.1.11                           |\n| Fixed version  | 1.1.12                                          |\n| CVSS Score     |                                             8.6 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H    |\n"
              },
              "properties": {
                "affected_version": ">=1.0.0-rc93,<=1.1.11",
                "cvssV3": 8.6,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
                "fixed_version": "1.1.12",
                "purls": [
                  "pkg:golang/github.com/opencontainers/runc@1.1.5"
                ],
                "security-severity": "8.6",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-3676",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-3676: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-3676?s=github&n=kubernetes&ns=k8s.io&t=golang&vr=%3C1.24.17",
              "help": {
                "text": "A security issue was discovered in Kubernetes where a user that can create pods on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes.\n\n",
                "markdown": "> A security issue was discovered in Kubernetes where a user that can create pods on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes.\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/kubernetes@1.24.16         |\n| Affected range | <1.24.17                                     |\n| Fixed version  | 1.24.17                                      |\n| CVSS Score     |                                          8.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<1.24.17",
                "cvssV3": 8.8,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.24.17",
                "purls": [
                  "pkg:golang/k8s.io/kubernetes@1.24.16"
                ],
                "security-severity": "8.8",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-3955",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-3955: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-3955?s=github&n=kubernetes&ns=k8s.io&t=golang&vr=%3C1.24.17",
              "help": {
                "text": "A security issue was discovered in Kubernetes where a user that can create pods on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes.\n\n",
                "markdown": "> A security issue was discovered in Kubernetes where a user that can create pods on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they include Windows nodes.\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/kubernetes@1.24.16         |\n| Affected range | <1.24.17                                     |\n| Fixed version  | 1.24.17                                      |\n| CVSS Score     |                                          8.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<1.24.17",
                "cvssV3": 8.8,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.24.17",
                "purls": [
                  "pkg:golang/k8s.io/kubernetes@1.24.16"
                ],
                "security-severity": "8.8",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-5528",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-5528: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-5528?s=github&n=kubernetes&ns=k8s.io&t=golang&vr=%3C1.25.16",
              "help": {
                "text": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.\n",
                "markdown": "> A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:golang/k8s.io/kubernetes@1.24.16         |\n| Affected range | <1.25.16                                     |\n| Fixed version  | 1.25.16                                      |\n| CVSS Score     |                                          8.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<1.25.16",
                "cvssV3": 8.8,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.25.16",
                "purls": [
                  "pkg:golang/k8s.io/kubernetes@1.24.16"
                ],
                "security-severity": "8.8",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23806",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-23806"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-23806?s=golang&n=stdlib&t=golang&vr=%3E%3D1.17.0-0%2C%3C1.17.7",
              "help": {
                "text": "Some big.Int values that are not valid field elements (negative or overflowing) might cause Curve.IsOnCurve to incorrectly return true. Operating on those values may cause a panic or an invalid curve operation. Note that Unmarshal will never return such values.\n",
                "markdown": "> Some big.Int values that are not valid field elements (negative or overflowing) might cause Curve.IsOnCurve to incorrectly return true. Operating on those values may cause a panic or an invalid curve operation. Note that Unmarshal will never return such values.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | >=1.17.0-0,<1.17.7       |\n| Fixed version  | 1.17.7                   |\n"
              },
              "properties": {
                "affected_version": ">=1.17.0-0,<1.17.7",
                "cvssV3_severity": "CRITICAL",
                "fixed_version": "1.17.7",
                "purls": [
                  "pkg:golang/stdlib@1.17.5"
                ],
                "security-severity": "9.1",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2019-14271",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-14271: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2019-14271?s=gitlab&n=moby&ns=github.com%2Fmoby&t=golang&vr=%3C20.10.0-beta1",
              "help": {
                "text": "In Docker 19.03.x before 19.03.1 linked against the GNU C Library (aka glibc), code injection can occur when the nsswitch facility dynamically loads a library inside a chroot that contains the contents of the container.\n",
                "markdown": "> In Docker 19.03.x before 19.03.1 linked against the GNU C Library (aka glibc), code injection can occur when the nsswitch facility dynamically loads a library inside a chroot that contains the contents of the container.\n\n|                |                                                                     |\n|----------------|---------------------------------------------------------------------|\n| Package        | pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29 |\n| Affected range | <20.10.0-beta1                                                      |\n| Fixed version  | 20.10.0-beta1                                                       |\n| CVSS Score     |                                                                 9.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H                        |\n"
              },
              "properties": {
                "affected_version": "<20.10.0-beta1",
                "cvssV3": 9.8,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "20.10.0-beta1",
                "purls": [
                  "pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-24538",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24538"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8",
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected.\n\nBackticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template.\n\nAs ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml.\n\nWith fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21.\n\nUsers who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.\n",
                "markdown": "> Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected.\n\nBackticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template.\n\nAs ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml.\n\nWith fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21.\n\nUsers who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.\n\n|                |                          |\n|----------------|--------------------------|\n| Package        | pkg:golang/stdlib@1.17.5 |\n| Affected range | <1.19.8                  |\n| Fixed version  | 1.19.8                   |\n"
              },
              "properties": {
                "affected_version": "<1.19.8",
                "cvssV3_severity": "CRITICAL",
                "fixed_version": "1.19.8",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-24540",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-24540"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9",
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.\n",
                "markdown": "> Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.\n\n|                |                           |\n|----------------|---------------------------|\n| Package        | pkg:golang/stdlib@1.18.10 |\n| Affected range | <1.19.9                   |\n| Fixed version  | 1.19.9                    |\n"
              },
              "properties": {
                "affected_version": "<1.19.9",
                "cvssV3_severity": "CRITICAL",
                "fixed_version": "1.19.9",
                "purls": [
                  "pkg:golang/stdlib@1.17.5",
                  "pkg:golang/stdlib@1.18.10",
                  "pkg:golang/stdlib@1.19.7"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            }
          ],
          "version": "1.9.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.9                    \n  Fixed version   : 1.21.9                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.132280                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.8  \n  Affected range  : <1.21.9                   \n  Fixed version   : 1.21.9                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/bandwidth"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/cni"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/firewall"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.9                   \n  Fixed version   : 1.21.9                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.9                    \n  Fixed version   : 1.21.9                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.132280                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.9                   \n  Fixed version   : 1.21.9                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.9                   \n  Fixed version   : 1.21.9                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.9                    \n  Fixed version   : 1.21.9                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.132280                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.9                   \n  Fixed version   : 1.21.9                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.9                   \n  Fixed version   : 1.21.9                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.132280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45289            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45290             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24783             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24784             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.8                    \n  Fixed version   : 1.21.8                     \n  EPSS Score      : 0.000440                   \n  EPSS Percentile : 0.102930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24785            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.8                   \n  Fixed version   : 1.21.8                    \n  EPSS Score      : 0.000440                  \n  EPSS Percentile : 0.102930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.8  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/bandwidth"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/cni"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/firewall"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.3  \n  Affected range  : >=1.22.0-0,<1.22.4        \n  Fixed version   : 1.22.4                    \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24789            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.12  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790             \n  Severity        : UNSPECIFIED                \n  Package         : pkg:golang/stdlib@1.20.13  \n  Affected range  : <1.21.11                   \n  Fixed version   : 1.21.11                    \n  EPSS Score      : 0.000450                   \n  EPSS Percentile : 0.154300                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.22.3  \n  Affected range  : >=1.22.0-0,<1.22.4        \n  Fixed version   : 1.22.4                    \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.7  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24790            \n  Severity        : UNSPECIFIED               \n  Package         : pkg:golang/stdlib@1.21.8  \n  Affected range  : <1.21.11                  \n  Fixed version   : 1.21.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.154300                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/bandwidth"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/cni"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/firewall"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2022-4130",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2022-4130                           \n  Severity       : UNSPECIFIED                             \n  Package        : pkg:golang/kubevirt.io/kubevirt@0.54.0  \n  Affected range : >=0.20.0,<0.55.1                        \n  Fixed version  : 0.55.1                                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2022-6813",
          "ruleIndex": 9,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2022-6813                                                        \n  Severity       : UNSPECIFIED                                                          \n  Package        : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range : <=20.10.19                                                           \n  Fixed version  : 20.10.20                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2023-3788",
          "ruleIndex": 10,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2023-3788                             \n  Severity       : UNSPECIFIED                               \n  Package        : pkg:golang/google.golang.org/grpc@1.40.0  \n  Affected range : <1.56.3                                   \n  Fixed version  : 1.56.3, 1.57.1, 1.58.3                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2023-3788",
          "ruleIndex": 10,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2023-3788                             \n  Severity       : UNSPECIFIED                               \n  Package        : pkg:golang/google.golang.org/grpc@1.45.0  \n  Affected range : <1.56.3                                   \n  Fixed version  : 1.56.3, 1.57.1, 1.58.3                    \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2023-3981",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2023-3981                                                         \n  Severity       : UNSPECIFIED                                                           \n  Package        : pkg:golang/github.com/docker/docker@20.10.25%!B(MISSING)incompatible  \n  Affected range : <20.10.27                                                             \n  Fixed version  : 23.0.8, 24.0.7, 20.10.27                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2023-3981",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2023-3981                                                         \n  Severity       : UNSPECIFIED                                                           \n  Package        : pkg:golang/github.com/docker/docker@20.10.24%!B(MISSING)incompatible  \n  Affected range : <20.10.27                                                             \n  Fixed version  : 23.0.8, 24.0.7, 20.10.27                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2023-3981",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "none",
          "message": {
            "text": "  Vulnerability  : GMS-2023-3981                                                        \n  Severity       : UNSPECIFIED                                                          \n  Package        : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range : <20.10.27                                                            \n  Fixed version  : v24.0.7                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-vp35-85q5-9f25",
          "ruleIndex": 12,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability  : GHSA-vp35-85q5-9f25                                                  \n  Severity       : LOW                                                                  \n  Package        : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range : <=20.10.19                                                           \n  Fixed version  : 20.10.20                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8912",
          "ruleIndex": 13,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8912                                 \n  Severity        : LOW                                           \n  Package         : pkg:golang/github.com/aws/aws-sdk-go@1.50.38  \n  Affected range  : >=0                                           \n  Fixed version   : not fixed                                     \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.128200                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8912",
          "ruleIndex": 13,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8912                                \n  Severity        : LOW                                          \n  Package         : pkg:golang/github.com/aws/aws-sdk-go@1.34.0  \n  Affected range  : >=0                                          \n  Fixed version   : not fixed                                    \n  EPSS Score      : 0.000440                                     \n  EPSS Percentile : 0.128200                                     \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3177",
          "ruleIndex": 14,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2024-3177                                 \n  Severity        : LOW                                           \n  Package         : pkg:golang/k8s.io/kubernetes@1.24.16          \n  Affected range  : <1.27.13                                      \n  Fixed version   : 1.27.13                                       \n  CVSS Score      : 2.7                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N  \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3177",
          "ruleIndex": 14,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2024-3177                                 \n  Severity        : LOW                                           \n  Package         : pkg:golang/k8s.io/kubernetes@1.29.3           \n  Affected range  : >=1.29.0,<=1.29.3                             \n  Fixed version   : 1.29.4                                        \n  CVSS Score      : 2.7                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N  \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3177",
          "ruleIndex": 14,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2024-3177                                 \n  Severity        : LOW                                           \n  Package         : pkg:golang/k8s.io/kubernetes@1.27.10          \n  Affected range  : <1.27.13                                      \n  Fixed version   : 1.27.13                                       \n  CVSS Score      : 2.7                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N  \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25743",
          "ruleIndex": 15,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2021-25743                                \n  Severity        : LOW                                           \n  Package         : pkg:golang/k8s.io/kubernetes@1.24.16          \n  Affected range  : <1.26.0-alpha.3                               \n  Fixed version   : 1.26.0-alpha.3                                \n  CVSS Score      : 3.0                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N  \n  EPSS Score      : 0.000540                                      \n  EPSS Percentile : 0.226280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629",
          "ruleIndex": 16,
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30629            \n  Severity        : LOW                       \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.11                  \n  Fixed version   : 1.17.11                   \n  EPSS Score      : 0.001400                  \n  EPSS Percentile : 0.498640                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24786                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/protobuf@1.27.1  \n  Affected range  : <1.33.0                                       \n  Fixed version   : 1.33.0                                        \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24786                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/protobuf@1.32.0  \n  Affected range  : <1.33.0                                       \n  Fixed version   : 1.33.0                                        \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24786                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/protobuf@1.28.1  \n  Affected range  : <1.33.0                                       \n  Fixed version   : 1.33.0                                        \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24786                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/protobuf@1.28.0  \n  Affected range  : <1.33.0                                       \n  Fixed version   : 1.33.0                                        \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24786                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/protobuf@1.31.0  \n  Affected range  : <1.33.0                                       \n  Fixed version   : 1.33.0                                        \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-27304",
          "ruleIndex": 18,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-27304                            \n  Severity        : MEDIUM                                    \n  Package         : pkg:golang/github.com/jackc/pgx@5.4.2#v5  \n  Affected range  : >=5.0.0,<5.5.4                            \n  Fixed version   : 5.5.4                                     \n  EPSS Score      : 0.000440                                  \n  EPSS Percentile : 0.102930                                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33394",
          "ruleIndex": 19,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-33394                          \n  Severity        : MEDIUM                                  \n  Package         : pkg:golang/kubevirt.io/kubevirt@0.54.0  \n  Affected range  : <=1.2.0                                 \n  Fixed version   : not fixed                               \n  EPSS Score      : 0.000430                                \n  EPSS Percentile : 0.089770                                \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-7jwh-3vrq-q3m8",
          "ruleIndex": 20,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : GHSA-7jwh-3vrq-q3m8                       \n  Severity       : MEDIUM                                    \n  Package        : pkg:golang/github.com/jackc/pgx@5.4.2#v5  \n  Affected range : >=5.0.0,<5.5.4                            \n  Fixed version  : 5.5.4                                     \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-jq35-85cj-fj4p",
          "ruleIndex": 21,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : GHSA-jq35-85cj-fj4p                                                   \n  Severity       : MEDIUM                                                                \n  Package        : pkg:golang/github.com/docker/docker@20.10.24%!B(MISSING)incompatible  \n  Affected range : <20.10.27                                                             \n  Fixed version  : 20.10.27                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-jq35-85cj-fj4p",
          "ruleIndex": 21,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : GHSA-jq35-85cj-fj4p                                                   \n  Severity       : MEDIUM                                                                \n  Package        : pkg:golang/github.com/docker/docker@20.10.25%!B(MISSING)incompatible  \n  Affected range : <20.10.27                                                             \n  Fixed version  : 20.10.27                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-jq35-85cj-fj4p",
          "ruleIndex": 21,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : GHSA-jq35-85cj-fj4p                                                  \n  Severity       : MEDIUM                                                               \n  Package        : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range : <20.10.27                                                            \n  Fixed version  : 24.0.7                                                               \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-xmmx-7jpf-fx42",
          "ruleIndex": 22,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability  : GHSA-xmmx-7jpf-fx42                                                  \n  Severity       : MEDIUM                                                               \n  Package        : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range : <20.10.11                                                            \n  Fixed version  : 20.10.11                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 23,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.29.3            \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 23,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.24.10           \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 23,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.29.0            \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 23,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.24.2            \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8552",
          "ruleIndex": 23,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8552                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/k8s.io/apiserver@0.27.10           \n  Affected range  : <1.15.10                                      \n  Fixed version   : 1.15.10, 1.16.7, 1.17.3                       \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.001660                                      \n  EPSS Percentile : 0.533420                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28180",
          "ruleIndex": 24,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-28180                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/gopkg.in/square/go-jose.v2@2.6.0   \n  Affected range  : <=2.6.0                                       \n  Fixed version   : not fixed                                     \n  CVSS Score      : 4.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000460                                      \n  EPSS Percentile : 0.169960                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-3631",
          "ruleIndex": 25,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2015-3631                                                        \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <1.6.1                                                               \n  Fixed version   : 1.6.1                                                                \n  CVSS Score      : 5.1                                                                  \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L                         \n  EPSS Score      : 0.000420                                                             \n  EPSS Percentile : 0.051490                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27534",
          "ruleIndex": 26,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-27534                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <19.03.9                                                             \n  Fixed version   : 19.03.9                                                              \n  CVSS Score      : 5.3                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N                         \n  EPSS Score      : 0.001380                                                             \n  EPSS Percentile : 0.494360                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 27,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-29526            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.10                  \n  Fixed version   : 1.17.10                   \n  EPSS Score      : 0.002440                  \n  EPSS Percentile : 0.646400                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 28,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41717            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.9                   \n  Fixed version   : 1.18.9                    \n  EPSS Score      : 0.002860                  \n  EPSS Percentile : 0.688640                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532",
          "ruleIndex": 29,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24532            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.7                   \n  Fixed version   : 1.19.7                    \n  EPSS Score      : 0.000930                  \n  EPSS Percentile : 0.397440                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532",
          "ruleIndex": 29,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24532             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.7                    \n  Fixed version   : 1.19.7                     \n  EPSS Score      : 0.000930                   \n  EPSS Percentile : 0.397440                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 30,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29409             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.12                   \n  Fixed version   : 1.19.12                    \n  EPSS Score      : 0.000600                   \n  EPSS Percentile : 0.257210                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 30,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29409            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.12                  \n  Fixed version   : 1.19.12                   \n  EPSS Score      : 0.000600                  \n  EPSS Percentile : 0.257210                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 30,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29409            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : >=1.20.0-0,<1.20.7        \n  Fixed version   : 1.20.7                    \n  EPSS Score      : 0.000600                  \n  EPSS Percentile : 0.257210                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 30,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29409            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.12                  \n  Fixed version   : 1.19.12                   \n  EPSS Score      : 0.000600                  \n  EPSS Percentile : 0.257210                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 31,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39326            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.20.12                  \n  Fixed version   : 1.20.12                   \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 31,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39326            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : >=1.21.0-0,<1.21.5        \n  Fixed version   : 1.21.5                    \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 31,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39326             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.12                   \n  Fixed version   : 1.20.12                    \n  EPSS Score      : 0.000520                   \n  EPSS Percentile : 0.202910                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 31,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39326            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.12                  \n  Fixed version   : 1.20.12                   \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 31,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39326            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.12                  \n  Fixed version   : 1.20.12                   \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 32,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-44487                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.11.0            \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.731850                                      \n  EPSS Percentile : 0.981100                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 32,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-44487                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.8.0             \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.731850                                      \n  EPSS Percentile : 0.981100                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 32,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-44487                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.12.0            \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.731850                                      \n  EPSS Percentile : 0.981100                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 32,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-44487                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/grpc@1.40.0      \n  Affected range  : <1.56.3                                       \n  Fixed version   : 1.56.3                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.731850                                      \n  EPSS Percentile : 0.981100                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 32,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-44487                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/google.golang.org/grpc@1.45.0      \n  Affected range  : <1.56.3                                       \n  Fixed version   : 1.56.3                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.731850                                      \n  EPSS Percentile : 0.981100                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 33,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45284             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.11                   \n  Fixed version   : 1.20.11                    \n  EPSS Score      : 0.000520                   \n  EPSS Percentile : 0.202910                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 33,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45284            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.11                  \n  Fixed version   : 1.20.11                   \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 33,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45284            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.20.11                  \n  Fixed version   : 1.20.11                   \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 33,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45284            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : >=1.21.0-0,<1.21.4        \n  Fixed version   : 1.21.4                    \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 33,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45284            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.11                  \n  Fixed version   : 1.20.11                   \n  EPSS Score      : 0.000520                  \n  EPSS Percentile : 0.202910                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.12.0            \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.11.0            \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.8.0             \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.19.0            \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45288                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.17.0            \n  Affected range  : <0.23.0                                       \n  Fixed version   : 0.23.0                                        \n  CVSS Score      : 5.3                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L  \n  EPSS Score      : 0.000440                                      \n  EPSS Percentile : 0.132280                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/etcdctl"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962",
          "ruleIndex": 34,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-1962             \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.000630                  \n  EPSS Percentile : 0.269710                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35255",
          "ruleIndex": 35,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-35255                                                     \n  Severity        : MEDIUM                                                             \n  Package         : pkg:golang/github.com/azure/azure-sdk-for-go@1.5.2#sdk/azidentity  \n  Affected range  : <1.6.0                                                             \n  Fixed version   : 1.6.0                                                              \n  CVSS Score      : 5.5                                                                \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N                       \n  EPSS Score      : 0.000430                                                           \n  EPSS Percentile : 0.089770                                                           \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8911",
          "ruleIndex": 36,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8911                                \n  Severity        : MEDIUM                                       \n  Package         : pkg:golang/github.com/aws/aws-sdk-go@1.34.0  \n  Affected range  : >=0                                          \n  Fixed version   : not fixed                                    \n  EPSS Score      : 0.000510                                     \n  EPSS Percentile : 0.200700                                     \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8911",
          "ruleIndex": 36,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2020-8911                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/github.com/aws/aws-sdk-go@1.50.38  \n  Affected range  : >=0                                           \n  Fixed version   : not fixed                                     \n  EPSS Score      : 0.000510                                      \n  EPSS Percentile : 0.200700                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41091",
          "ruleIndex": 37,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2021-41091                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <20.10.9                                                             \n  Fixed version   : 20.10.9                                                              \n  CVSS Score      : 5.9                                                                  \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L                         \n  EPSS Score      : 0.000470                                                             \n  EPSS Percentile : 0.174660                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24769",
          "ruleIndex": 38,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-24769                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range  : <20.10.14                                                            \n  Fixed version   : 20.10.14                                                             \n  CVSS Score      : 5.9                                                                  \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L                         \n  EPSS Score      : 0.000930                                                             \n  EPSS Percentile : 0.397090                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24769",
          "ruleIndex": 38,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-24769                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <20.10.14                                                            \n  Fixed version   : 20.10.14                                                             \n  CVSS Score      : 5.9                                                                  \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L                         \n  EPSS Score      : 0.000930                                                             \n  EPSS Percentile : 0.397090                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45286",
          "ruleIndex": 39,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45286                                 \n  Severity        : MEDIUM                                         \n  Package         : pkg:golang/github.com/go-resty/resty@2.7.0#v2  \n  Affected range  : <=v2.10.0                                      \n  Fixed version   : not fixed                                      \n  CVSS Score      : 5.9                                            \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N   \n  EPSS Score      : 0.000860                                       \n  EPSS Percentile : 0.366380                                       \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 40,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-48795                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/crypto@0.10.0         \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 5.9                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N  \n  EPSS Score      : 0.961680                                      \n  EPSS Percentile : 0.995190                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 40,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-48795                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/crypto@0.14.0         \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 5.9                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N  \n  EPSS Score      : 0.961680                                      \n  EPSS Percentile : 0.995190                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 40,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-48795                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/crypto@0.16.0         \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 5.9                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N  \n  EPSS Score      : 0.961680                                      \n  EPSS Percentile : 0.995190                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29018",
          "ruleIndex": 41,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-29018                                                        \n  Severity        : MEDIUM                                                                \n  Package         : pkg:golang/github.com/docker/docker@20.10.24%!B(MISSING)incompatible  \n  Affected range  : <23.0.11                                                              \n  Fixed version   : 23.0.11                                                               \n  CVSS Score      : 5.9                                                                   \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N                          \n  EPSS Score      : 0.000430                                                              \n  EPSS Percentile : 0.089770                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29018",
          "ruleIndex": 41,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-29018                                                        \n  Severity        : MEDIUM                                                                \n  Package         : pkg:golang/github.com/docker/docker@20.10.25%!B(MISSING)incompatible  \n  Affected range  : <23.0.11                                                              \n  Fixed version   : 23.0.11                                                               \n  CVSS Score      : 5.9                                                                   \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N                          \n  EPSS Score      : 0.000430                                                              \n  EPSS Percentile : 0.089770                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29018",
          "ruleIndex": 41,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-29018                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range  : <23.0.11                                                             \n  Fixed version   : 23.0.11                                                              \n  CVSS Score      : 5.9                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N                         \n  EPSS Score      : 0.000430                                                             \n  EPSS Percentile : 0.089770                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29018",
          "ruleIndex": 41,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-29018                                                        \n  Severity        : MEDIUM                                                                \n  Package         : pkg:golang/github.com/docker/docker@20.10.27%!B(MISSING)incompatible  \n  Affected range  : <23.0.11                                                              \n  Fixed version   : 23.0.11                                                               \n  CVSS Score      : 5.9                                                                   \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N                          \n  EPSS Score      : 0.000430                                                              \n  EPSS Percentile : 0.089770                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 42,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39318            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.20.8                   \n  Fixed version   : 1.20.8                    \n  EPSS Score      : 0.000840                  \n  EPSS Percentile : 0.358960                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 42,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39318            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.8                   \n  Fixed version   : 1.20.8                    \n  EPSS Score      : 0.000840                  \n  EPSS Percentile : 0.358960                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 42,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39318            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.8                   \n  Fixed version   : 1.20.8                    \n  EPSS Score      : 0.000840                  \n  EPSS Percentile : 0.358960                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 42,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39318             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.8                    \n  Fixed version   : 1.20.8                     \n  EPSS Score      : 0.000840                   \n  EPSS Percentile : 0.358960                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 43,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39319             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.8                    \n  Fixed version   : 1.20.8                     \n  EPSS Score      : 0.000610                   \n  EPSS Percentile : 0.259730                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 43,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39319            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.8                   \n  Fixed version   : 1.20.8                    \n  EPSS Score      : 0.000610                  \n  EPSS Percentile : 0.259730                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 43,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39319            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.20.8                   \n  Fixed version   : 1.20.8                    \n  EPSS Score      : 0.000610                  \n  EPSS Percentile : 0.259730                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 43,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39319            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.8                   \n  Fixed version   : 1.20.8                    \n  EPSS Score      : 0.000610                  \n  EPSS Percentile : 0.259730                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978",
          "ruleIndex": 44,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-3978                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.12.0            \n  Affected range  : <0.13.0                                       \n  Fixed version   : 0.13.0                                        \n  CVSS Score      : 6.1                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N  \n  EPSS Score      : 0.000520                                      \n  EPSS Percentile : 0.205400                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978",
          "ruleIndex": 44,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-3978                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.11.0            \n  Affected range  : <0.13.0                                       \n  Fixed version   : 0.13.0                                        \n  CVSS Score      : 6.1                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N  \n  EPSS Score      : 0.000520                                      \n  EPSS Percentile : 0.205400                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978",
          "ruleIndex": 44,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-3978                                 \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/golang.org/x/net@0.8.0             \n  Affected range  : <0.13.0                                       \n  Fixed version   : 0.13.0                                        \n  CVSS Score      : 6.1                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N  \n  EPSS Score      : 0.000520                                      \n  EPSS Percentile : 0.205400                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-36109",
          "ruleIndex": 45,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-36109                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <20.10.18                                                            \n  Fixed version   : 20.10.18                                                             \n  CVSS Score      : 6.3                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L                         \n  EPSS Score      : 0.001780                                                             \n  EPSS Percentile : 0.549680                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21285",
          "ruleIndex": 46,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2021-21285                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <19.3.15                                                             \n  Fixed version   : 19.3.15                                                              \n  CVSS Score      : 6.5                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H                         \n  EPSS Score      : 0.005530                                                             \n  EPSS Percentile : 0.776060                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705",
          "ruleIndex": 47,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-1705             \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001720                  \n  EPSS Percentile : 0.544360                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148",
          "ruleIndex": 48,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2022-32148            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001550                  \n  EPSS Percentile : 0.519190                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 49,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29406            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.11                  \n  Fixed version   : 1.19.11                   \n  EPSS Score      : 0.000910                  \n  EPSS Percentile : 0.388510                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 49,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29406            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : >=1.20.0-0,<1.20.6        \n  Fixed version   : 1.20.6                    \n  EPSS Score      : 0.000910                  \n  EPSS Percentile : 0.388510                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 49,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29406             \n  Severity        : MEDIUM                     \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.11                   \n  Fixed version   : 1.19.11                    \n  EPSS Score      : 0.000910                   \n  EPSS Percentile : 0.388510                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 49,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29406            \n  Severity        : MEDIUM                    \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.11                  \n  Fixed version   : 1.19.11                   \n  EPSS Score      : 0.000910                  \n  EPSS Percentile : 0.388510                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-40453",
          "ruleIndex": 50,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-40453                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/github.com/docker/machine@0.16.2   \n  Affected range  : <=v0.16.2                                     \n  Fixed version   : not fixed                                     \n  CVSS Score      : 6.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.000490                                      \n  EPSS Percentile : 0.187360                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-31420",
          "ruleIndex": 51,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-31420                                \n  Severity        : MEDIUM                                        \n  Package         : pkg:golang/kubevirt.io/kubevirt@0.54.0        \n  Affected range  : <=1.2.0                                       \n  Fixed version   : not fixed                                     \n  CVSS Score      : 6.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.000430                                      \n  EPSS Percentile : 0.089770                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21284",
          "ruleIndex": 52,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2021-21284                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <19.3.15                                                             \n  Fixed version   : 19.3.15                                                              \n  CVSS Score      : 6.8                                                                  \n  CVSS Vector     : CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N                         \n  EPSS Score      : 0.000470                                                             \n  EPSS Percentile : 0.171050                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28841",
          "ruleIndex": 53,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-28841                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range  : >=1.12.0,<20.10.24                                                   \n  Fixed version   : 20.10.24                                                             \n  CVSS Score      : 6.8                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N                         \n  EPSS Score      : 0.002470                                                             \n  EPSS Percentile : 0.648580                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28842",
          "ruleIndex": 54,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2023-28842                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range  : >=1.12.0,<20.10.24                                                   \n  Fixed version   : 20.10.24                                                             \n  CVSS Score      : 6.8                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N                         \n  EPSS Score      : 0.003070                                                             \n  EPSS Percentile : 0.699670                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                        \n  Severity        : MEDIUM                                                                \n  Package         : pkg:golang/github.com/docker/docker@20.10.24%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                               \n  Fixed version   : 24.0.9                                                                \n  CVSS Score      : 6.9                                                                   \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                          \n  EPSS Score      : 0.000530                                                              \n  EPSS Percentile : 0.214410                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                      \n  Severity        : MEDIUM                                                              \n  Package         : pkg:golang/github.com/docker/docker@24.0.7%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                             \n  Fixed version   : 24.0.9                                                              \n  CVSS Score      : 6.9                                                                 \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                        \n  EPSS Score      : 0.000530                                                            \n  EPSS Percentile : 0.214410                                                            \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/helm_v3"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-amd64"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/rancher-system-agent-arm64"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                        \n  Severity        : MEDIUM                                                                \n  Package         : pkg:golang/github.com/docker/docker@20.10.27%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                               \n  Fixed version   : 24.0.9                                                                \n  CVSS Score      : 6.9                                                                   \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                          \n  EPSS Score      : 0.000530                                                              \n  EPSS Percentile : 0.214410                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <24.0.9                                                              \n  Fixed version   : 24.0.9, 25.0.2                                                       \n  CVSS Score      : 6.9                                                                  \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                         \n  EPSS Score      : 0.000530                                                             \n  EPSS Percentile : 0.214410                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                       \n  Severity        : MEDIUM                                                               \n  Package         : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                              \n  Fixed version   : 24.0.9                                                               \n  CVSS Score      : 6.9                                                                  \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                         \n  EPSS Score      : 0.000530                                                             \n  EPSS Percentile : 0.214410                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                                                         \n  Severity        : MEDIUM                                                                                                 \n  Package         : pkg:golang/github.com/docker/docker@24.0.0-rc.2.0.20230801142700-69c9adb7d386%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                                                                \n  Fixed version   : 24.0.9                                                                                                 \n  CVSS Score      : 6.9                                                                                                    \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                                                           \n  EPSS Score      : 0.000530                                                                                               \n  EPSS Percentile : 0.214410                                                                                               \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 55,
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "  Vulnerability   : CVE-2024-24557                                                        \n  Severity        : MEDIUM                                                                \n  Package         : pkg:golang/github.com/docker/docker@20.10.25%!B(MISSING)incompatible  \n  Affected range  : <24.0.9                                                               \n  Fixed version   : 24.0.9                                                                \n  CVSS Score      : 6.9                                                                   \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L                          \n  EPSS Score      : 0.000530                                                              \n  EPSS Percentile : 0.214410                                                              \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-qv98-3369-g364",
          "ruleIndex": 56,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : GHSA-qv98-3369-g364                     \n  Severity       : HIGH                                    \n  Package        : pkg:golang/kubevirt.io/kubevirt@0.54.0  \n  Affected range : >=0.20.0,<0.55.1                        \n  Fixed version  : 0.55.1                                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3154",
          "ruleIndex": 57,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-3154                                     \n  Severity        : HIGH                                              \n  Package         : pkg:golang/github.com/opencontainers/runc@1.1.12  \n  Affected range  : <1.2.0-rc.1                                       \n  Fixed version   : 1.2.0-rc.1                                        \n  CVSS Score      : 7.2                                               \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H      \n  EPSS Score      : 0.000440                                          \n  EPSS Percentile : 0.130050                                          \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3154",
          "ruleIndex": 57,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-3154                                    \n  Severity        : HIGH                                             \n  Package         : pkg:golang/github.com/opencontainers/runc@1.1.5  \n  Affected range  : <1.2.0-rc.1                                      \n  Fixed version   : 1.2.0-rc.1                                       \n  CVSS Score      : 7.2                                              \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H     \n  EPSS Score      : 0.000440                                         \n  EPSS Percentile : 0.130050                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-c5pj-mqfh-rvc3",
          "ruleIndex": 58,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : GHSA-c5pj-mqfh-rvc3                              \n  Severity       : HIGH                                             \n  Package        : pkg:golang/github.com/opencontainers/runc@1.1.5  \n  Affected range : <1.2.0-rc.1                                      \n  Fixed version  : 1.2.0-rc.1                                       \n  CVSS Score     : 7.2                                              \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H     \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-c5pj-mqfh-rvc3",
          "ruleIndex": 58,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : GHSA-c5pj-mqfh-rvc3                               \n  Severity       : HIGH                                              \n  Package        : pkg:golang/github.com/opencontainers/runc@1.1.12  \n  Affected range : <1.2.0-rc.1                                       \n  Fixed version  : 1.2.0-rc.1                                        \n  CVSS Score     : 7.2                                               \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 59,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24539            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.9                   \n  Fixed version   : 1.19.9                    \n  EPSS Score      : 0.001270                  \n  EPSS Percentile : 0.475850                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 59,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24539            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.9                   \n  Fixed version   : 1.19.9                    \n  EPSS Score      : 0.001270                  \n  EPSS Percentile : 0.475850                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 59,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24539             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.9                    \n  Fixed version   : 1.19.9                     \n  EPSS Score      : 0.001270                   \n  EPSS Percentile : 0.475850                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 60,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29400             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.9                    \n  Fixed version   : 1.19.9                     \n  EPSS Score      : 0.001270                   \n  EPSS Percentile : 0.475850                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 60,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29400            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.9                   \n  Fixed version   : 1.19.9                    \n  EPSS Score      : 0.001270                  \n  EPSS Percentile : 0.475850                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 60,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29400            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.9                   \n  Fixed version   : 1.19.9                    \n  EPSS Score      : 0.001270                  \n  EPSS Percentile : 0.475850                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12608",
          "ruleIndex": 61,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2018-12608                                                       \n  Severity        : HIGH                                                                 \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <17.06.0-ce                                                          \n  Fixed version   : 17.06.0-ce                                                           \n  CVSS Score      : 7.5                                                                  \n  CVSS Vector     : CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N                         \n  EPSS Score      : 0.000660                                                             \n  EPSS Percentile : 0.291420                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772",
          "ruleIndex": 62,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-23772            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : >=1.17.0-0,<1.17.7        \n  Fixed version   : 1.17.7                    \n  EPSS Score      : 0.003680                  \n  EPSS Percentile : 0.726110                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675",
          "ruleIndex": 63,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-24675            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.9                   \n  Fixed version   : 1.17.9                    \n  EPSS Score      : 0.004200                  \n  EPSS Percentile : 0.742380                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921",
          "ruleIndex": 64,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-24921            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : >=1.17.0-0,<1.17.8        \n  Fixed version   : 1.17.8                    \n  EPSS Score      : 0.001860                  \n  EPSS Percentile : 0.559560                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 65,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-27664            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.6                   \n  Fixed version   : 1.18.6                    \n  EPSS Score      : 0.002390                  \n  EPSS Percentile : 0.620590                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131",
          "ruleIndex": 66,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-28131            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001870                  \n  EPSS Percentile : 0.561940                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327",
          "ruleIndex": 67,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-28327            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.9                   \n  Fixed version   : 1.17.9                    \n  EPSS Score      : 0.003800                  \n  EPSS Percentile : 0.730130                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879",
          "ruleIndex": 68,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-2879             \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.7                   \n  Fixed version   : 1.18.7                    \n  EPSS Score      : 0.002070                  \n  EPSS Percentile : 0.588120                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880",
          "ruleIndex": 69,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-2880             \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.7                   \n  Fixed version   : 1.18.7                    \n  EPSS Score      : 0.001560                  \n  EPSS Percentile : 0.521330                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804",
          "ruleIndex": 70,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-29804            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.11                  \n  Fixed version   : 1.17.11                   \n  EPSS Score      : 0.001620                  \n  EPSS Percentile : 0.529510                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630",
          "ruleIndex": 71,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30630            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001850                  \n  EPSS Percentile : 0.558030                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631",
          "ruleIndex": 72,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30631            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001850                  \n  EPSS Percentile : 0.558030                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632",
          "ruleIndex": 73,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30632            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001850                  \n  EPSS Percentile : 0.558030                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633",
          "ruleIndex": 74,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30633            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001850                  \n  EPSS Percentile : 0.558030                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634",
          "ruleIndex": 75,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30634            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.11                  \n  Fixed version   : 1.17.11                   \n  EPSS Score      : 0.001520                  \n  EPSS Percentile : 0.515730                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635",
          "ruleIndex": 76,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30635            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.12                  \n  Fixed version   : 1.17.12                   \n  EPSS Score      : 0.001850                  \n  EPSS Percentile : 0.558030                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189",
          "ruleIndex": 77,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-32189            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.13                  \n  Fixed version   : 1.17.13                   \n  EPSS Score      : 0.001950                  \n  EPSS Percentile : 0.571360                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715",
          "ruleIndex": 78,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41715            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.7                   \n  Fixed version   : 1.18.7                    \n  EPSS Score      : 0.002190                  \n  EPSS Percentile : 0.600430                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716",
          "ruleIndex": 79,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41716            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.8                   \n  Fixed version   : 1.18.8                    \n  EPSS Score      : 0.001020                  \n  EPSS Percentile : 0.418960                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720",
          "ruleIndex": 80,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41720            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.18.9                   \n  Fixed version   : 1.18.9                    \n  EPSS Score      : 0.001690                  \n  EPSS Percentile : 0.539000                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722",
          "ruleIndex": 81,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41722            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.6                   \n  Fixed version   : 1.19.6                    \n  EPSS Score      : 0.001110                  \n  EPSS Percentile : 0.445280                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722",
          "ruleIndex": 81,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41722             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.6                    \n  Fixed version   : 1.19.6                     \n  EPSS Score      : 0.001110                   \n  EPSS Percentile : 0.445280                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 82,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41723            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.6                   \n  Fixed version   : 1.19.6                    \n  EPSS Score      : 0.024130                  \n  EPSS Percentile : 0.899570                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 82,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41723             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.6                    \n  Fixed version   : 1.19.6                     \n  EPSS Score      : 0.024130                   \n  EPSS Percentile : 0.899570                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724",
          "ruleIndex": 83,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41724             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.6                    \n  Fixed version   : 1.19.6                     \n  EPSS Score      : 0.001290                   \n  EPSS Percentile : 0.479510                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724",
          "ruleIndex": 83,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41724            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.6                   \n  Fixed version   : 1.19.6                    \n  EPSS Score      : 0.001290                  \n  EPSS Percentile : 0.479510                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725",
          "ruleIndex": 84,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41725            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.6                   \n  Fixed version   : 1.19.6                    \n  EPSS Score      : 0.001320                  \n  EPSS Percentile : 0.484780                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725",
          "ruleIndex": 84,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-41725             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.6                    \n  Fixed version   : 1.19.6                     \n  EPSS Score      : 0.001320                   \n  EPSS Percentile : 0.484780                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 85,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24534            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.002150                  \n  EPSS Percentile : 0.596760                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 85,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24534             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.8                    \n  Fixed version   : 1.19.8                     \n  EPSS Score      : 0.002150                   \n  EPSS Percentile : 0.596760                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 85,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24534            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.002150                  \n  EPSS Percentile : 0.596760                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 86,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24536             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.8                    \n  Fixed version   : 1.19.8                     \n  EPSS Score      : 0.005380                   \n  EPSS Percentile : 0.772930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 86,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24536            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.005380                  \n  EPSS Percentile : 0.772930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 86,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24536            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.005380                  \n  EPSS Percentile : 0.772930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 87,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24537             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.8                    \n  Fixed version   : 1.19.8                     \n  EPSS Score      : 0.001040                   \n  EPSS Percentile : 0.424930                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 87,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24537            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.001040                  \n  EPSS Percentile : 0.424930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 87,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24537            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.001040                  \n  EPSS Percentile : 0.424930                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28840",
          "ruleIndex": 88,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-28840                                                       \n  Severity        : HIGH                                                                 \n  Package         : pkg:golang/github.com/docker/docker@20.10.9%!B(MISSING)incompatible  \n  Affected range  : >=1.12.0,<20.10.24                                                   \n  Fixed version   : 20.10.24                                                             \n  CVSS Score      : 7.5                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:L                         \n  EPSS Score      : 0.002390                                                             \n  EPSS Percentile : 0.620450                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325                                \n  Severity        : HIGH                                          \n  Package         : pkg:golang/golang.org/x/net@0.8.0             \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.002090                                      \n  EPSS Percentile : 0.589890                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/runc"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325                                \n  Severity        : HIGH                                          \n  Package         : pkg:golang/golang.org/x/net@0.11.0            \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.002090                                      \n  EPSS Percentile : 0.589890                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.10                  \n  Fixed version   : 1.20.10                   \n  EPSS Score      : 0.002090                  \n  EPSS Percentile : 0.589890                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.20.10                  \n  Fixed version   : 1.20.10                   \n  EPSS Score      : 0.002090                  \n  EPSS Percentile : 0.589890                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.10                  \n  Fixed version   : 1.20.10                   \n  EPSS Score      : 0.002090                  \n  EPSS Percentile : 0.589890                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.10                   \n  Fixed version   : 1.20.10                    \n  EPSS Score      : 0.002090                   \n  EPSS Percentile : 0.589890                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 89,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-39325                                \n  Severity        : HIGH                                          \n  Package         : pkg:golang/golang.org/x/net@0.12.0            \n  Affected range  : <0.17.0                                       \n  Fixed version   : 0.17.0                                        \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.002090                                      \n  EPSS Percentile : 0.589890                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45142",
          "ruleIndex": 90,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45142                                                                   \n  Severity        : HIGH                                                                             \n  Package         : pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.35.1#net/http/otelhttp  \n  Affected range  : <0.44.0                                                                          \n  Fixed version   : 0.44.0                                                                           \n  CVSS Score      : 7.5                                                                              \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H                                     \n  EPSS Score      : 0.001160                                                                         \n  EPSS Percentile : 0.455080                                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 91,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45283            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.11                  \n  Fixed version   : 1.20.11                   \n  EPSS Score      : 0.000980                  \n  EPSS Percentile : 0.411420                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 91,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45283            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.21.3  \n  Affected range  : >=1.21.0-0,<1.21.4        \n  Fixed version   : 1.21.4                    \n  EPSS Score      : 0.000980                  \n  EPSS Percentile : 0.411420                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 91,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45283             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.11                   \n  Fixed version   : 1.20.11                    \n  EPSS Score      : 0.000980                   \n  EPSS Percentile : 0.411420                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 91,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45283            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.11                  \n  Fixed version   : 1.20.11                   \n  EPSS Score      : 0.000980                  \n  EPSS Percentile : 0.411420                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 91,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45283            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.20.5  \n  Affected range  : <1.20.11                  \n  Fixed version   : 1.20.11                   \n  EPSS Score      : 0.000980                  \n  EPSS Percentile : 0.411420                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-linode"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 92,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45287            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.20.0                   \n  Fixed version   : 1.20.0                    \n  EPSS Score      : 0.000710                  \n  EPSS Percentile : 0.306540                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 92,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45287            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.20.0                   \n  Fixed version   : 1.20.0                    \n  EPSS Score      : 0.000710                  \n  EPSS Percentile : 0.306540                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 92,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-45287             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.20.0                    \n  Fixed version   : 1.20.0                     \n  EPSS Score      : 0.000710                   \n  EPSS Percentile : 0.306540                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-47108",
          "ruleIndex": 93,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-47108                                                                                 \n  Severity        : HIGH                                                                                           \n  Package         : pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.35.0#google.golang.org/grpc/otelgrpc  \n  Affected range  : <0.46.0                                                                                        \n  Fixed version   : 0.46.0                                                                                         \n  CVSS Score      : 7.5                                                                                            \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H                                                   \n  EPSS Score      : 0.000880                                                                                       \n  EPSS Percentile : 0.378060                                                                                       \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22189",
          "ruleIndex": 94,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-22189                                \n  Severity        : HIGH                                          \n  Package         : pkg:golang/github.com/quic-go/quic-go@0.38.2  \n  Affected range  : <0.42.0                                       \n  Fixed version   : 0.42.0                                        \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.154300                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/k3s"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-m425-mq94-257g",
          "ruleIndex": 95,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : GHSA-m425-mq94-257g                           \n  Severity       : HIGH                                          \n  Package        : pkg:golang/google.golang.org/grpc@1.45.0      \n  Affected range : <1.56.3                                       \n  Fixed version  : 1.56.3                                        \n  CVSS Score     : 7.5                                           \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-m425-mq94-257g",
          "ruleIndex": 95,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : GHSA-m425-mq94-257g                           \n  Severity       : HIGH                                          \n  Package        : pkg:golang/google.golang.org/grpc@1.40.0      \n  Affected range : <1.56.3                                       \n  Fixed version  : 1.56.3                                        \n  CVSS Score     : 7.5                                           \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580",
          "ruleIndex": 96,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-30580            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.17.11                  \n  Fixed version   : 1.17.11                   \n  EPSS Score      : 0.000450                  \n  EPSS Percentile : 0.141750                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 97,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29403             \n  Severity        : HIGH                       \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.10                   \n  Fixed version   : 1.19.10                    \n  EPSS Score      : 0.000580                   \n  EPSS Percentile : 0.240800                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 97,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29403            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.10                  \n  Fixed version   : 1.19.10                   \n  EPSS Score      : 0.000580                  \n  EPSS Percentile : 0.240800                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 97,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-29403            \n  Severity        : HIGH                      \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.10                  \n  Fixed version   : 1.19.10                   \n  EPSS Score      : 0.000580                  \n  EPSS Percentile : 0.240800                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26484",
          "ruleIndex": 98,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-26484                                \n  Severity        : HIGH                                          \n  Package         : pkg:golang/kubevirt.io/kubevirt@0.54.0        \n  Affected range  : <=0.59.0                                      \n  Fixed version   : not fixed                                     \n  CVSS Score      : 8.2                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N  \n  EPSS Score      : 0.000640                                      \n  EPSS Percentile : 0.274900                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32193",
          "ruleIndex": 99,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2023-32193                                                          \n  Severity       : HIGH                                                                    \n  Package        : pkg:golang/github.com/rancher/norman@0.0.0-20221205184727-32ef2e185b99  \n  Affected range : <0.0.0-20240207153100-3bb70b772b52                                      \n  Fixed version  : 0.0.0-20240207153100-3bb70b772b52                                       \n  CVSS Score     : 8.3                                                                     \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L                            \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/drivers/management-state/bin/docker-machine-driver-harvester"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32193",
          "ruleIndex": 99,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2023-32193                                                          \n  Severity       : HIGH                                                                    \n  Package        : pkg:golang/github.com/rancher/norman@0.0.0-20210709145327-afd06f533ca3  \n  Affected range : <0.0.0-20240207153100-3bb70b772b52                                      \n  Fixed version  : 0.0.0-20240207153100-3bb70b772b52                                       \n  CVSS Score     : 8.3                                                                     \n  CVSS Vector    : CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L                            \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/telemetry"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21626",
          "ruleIndex": 100,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-21626                                   \n  Severity        : HIGH                                             \n  Package         : pkg:golang/github.com/opencontainers/runc@1.1.5  \n  Affected range  : >=1.0.0-rc93,<=1.1.11                            \n  Fixed version   : 1.1.12                                           \n  CVSS Score      : 8.6                                              \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H     \n  EPSS Score      : 0.050620                                         \n  EPSS Percentile : 0.929420                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/containerd-shim-runc-v2"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3676",
          "ruleIndex": 101,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-3676                                 \n  Severity        : HIGH                                          \n  Package         : pkg:golang/k8s.io/kubernetes@1.24.16          \n  Affected range  : <1.24.17                                      \n  Fixed version   : 1.24.17                                       \n  CVSS Score      : 8.8                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H  \n  EPSS Score      : 0.000580                                      \n  EPSS Percentile : 0.247090                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3955",
          "ruleIndex": 102,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-3955                                 \n  Severity        : HIGH                                          \n  Package         : pkg:golang/k8s.io/kubernetes@1.24.16          \n  Affected range  : <1.24.17                                      \n  Fixed version   : 1.24.17                                       \n  CVSS Score      : 8.8                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H  \n  EPSS Score      : 0.000700                                      \n  EPSS Percentile : 0.306220                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5528",
          "ruleIndex": 103,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-5528                                 \n  Severity        : HIGH                                          \n  Package         : pkg:golang/k8s.io/kubernetes@1.24.16          \n  Affected range  : <1.25.16                                      \n  Fixed version   : 1.25.16                                       \n  CVSS Score      : 8.8                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H  \n  EPSS Score      : 0.000820                                      \n  EPSS Percentile : 0.351970                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806",
          "ruleIndex": 104,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-23806            \n  Severity        : CRITICAL                  \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : >=1.17.0-0,<1.17.7        \n  Fixed version   : 1.17.7                    \n  EPSS Score      : 0.003390                  \n  EPSS Percentile : 0.714510                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14271",
          "ruleIndex": 105,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2019-14271                                                       \n  Severity        : CRITICAL                                                             \n  Package         : pkg:golang/github.com/moby/moby@1.4.2-0.20170731201646-1009e6a40b29  \n  Affected range  : <20.10.0-beta1                                                       \n  Fixed version   : 20.10.0-beta1                                                        \n  CVSS Score      : 9.8                                                                  \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H                         \n  EPSS Score      : 0.015960                                                             \n  EPSS Percentile : 0.874150                                                             \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/rancher-machine"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 106,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24538            \n  Severity        : CRITICAL                  \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.003430                  \n  EPSS Percentile : 0.716160                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 106,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24538             \n  Severity        : CRITICAL                   \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.8                    \n  Fixed version   : 1.19.8                     \n  EPSS Score      : 0.003430                   \n  EPSS Percentile : 0.716160                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 106,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24538            \n  Severity        : CRITICAL                  \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.8                   \n  Fixed version   : 1.19.8                    \n  EPSS Score      : 0.003430                  \n  EPSS Percentile : 0.716160                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 107,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24540            \n  Severity        : CRITICAL                  \n  Package         : pkg:golang/stdlib@1.17.5  \n  Affected range  : <1.19.9                   \n  Fixed version   : 1.19.9                    \n  EPSS Score      : 0.002560                  \n  EPSS Percentile : 0.655600                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/loglevel"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 107,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24540            \n  Severity        : CRITICAL                  \n  Package         : pkg:golang/stdlib@1.19.7  \n  Affected range  : <1.19.9                   \n  Fixed version   : 1.19.9                    \n  EPSS Score      : 0.002560                  \n  EPSS Percentile : 0.655600                  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/bin/kustomize"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 107,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2023-24540             \n  Severity        : CRITICAL                   \n  Package         : pkg:golang/stdlib@1.18.10  \n  Affected range  : <1.19.9                    \n  Fixed version   : 1.19.9                     \n  EPSS Score      : 0.002560                   \n  EPSS Percentile : 0.655600                   \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/share/rancher/ui/assets/wins.exe"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
