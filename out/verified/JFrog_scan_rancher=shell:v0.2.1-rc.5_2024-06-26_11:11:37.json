{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2024-6257_github.com/hashicorp/go-getter_1.7.4",
              "shortDescription": {
                "text": "[CVE-2024-6257] github.com/hashicorp/go-getter 1.7.4"
              },
              "help": {
                "text": "HashiCorpâ€™s go-getter library can be coerced into executing Git update on an existing maliciously modified Git Configuration, potentially leading to arbitrary code execution.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.4      | `sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar `       | [1.7.5]   |"
              },
              "properties": {
                "security-severity": "8.4"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.22.0",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.22.0"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-32473_github.com/docker/docker_26.0.1+incompatible",
              "shortDescription": {
                "text": "[CVE-2024-32473] github.com/docker/docker 26.0.1+incompatible"
              },
              "help": {
                "text": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. In 26.0.0, IPv6 is not disabled on network interfaces, including those belonging to networks where `--ipv6=false`. An container with an `ipvlan` or `macvlan` interface will normally be configured to share an external network link with the host machine. Because of this direct access, (1) Containers may be able to communicate with other hosts on the local network over link-local IPv6 addresses, (2) if router advertisements are being broadcast over the local network, containers may get SLAAC-assigned addresses, and (3) the interface  will be a member of IPv6 multicast groups. This means interfaces in IPv4-only networks present an unexpectedly and unnecessarily increased attack surface. The issue is patched in 26.0.2. To completely disable IPv6 in a container, use `--sysctl=net.ipv6.conf.all.disable_ipv6=1` in the `docker create` or `docker run` command. Or, in the service configuration of a `compose` file.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar `       | [26.0.2]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2024-0406_github.com/mholt/archiver/v3_3.5.1",
              "shortDescription": {
                "text": "[CVE-2024-0406] github.com/mholt/archiver/v3 3.5.1"
              },
              "help": {
                "text": "A flaw was discovered in the mholt/archiver package. This flaw allows an attacker to create a specially crafted tar file, which, when unpacked, may allow access to restricted files or directories. This issue can allow the creation or overwriting of files with the user's or application's privileges using the library.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.1      | `sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2019-13225_libonig4_0:6.7.0-150000.3.3.1",
              "shortDescription": {
                "text": "[CVE-2019-13225] libonig4 0:6.7.0-150000.3.3.1"
              },
              "help": {
                "text": "libonig5-6.9.8-2.8 on GA media (Moderate)",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.5      | `sha256__994fd4654ff45a40d4624841117cac5ed4693d3deddd6fc368bc42ccd0580ec7.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            }
          ],
          "version": "3.97.3"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-6257_github.com/hashicorp/go-getter_1.7.4",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2024-6257] sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.22.0",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32473_github.com/docker/docker_26.0.1+incompatible",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-32473] sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0406_github.com/mholt/archiver/v3_3.5.1",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0406] sha256__22aaaf1066d02009b1d920aa07045fd39831266e3cffa068d19d8fac6680abd3.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13225_libonig4_0:6.7.0-150000.3.3.1",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-13225] sha256__994fd4654ff45a40d4624841117cac5ed4693d3deddd6fc368bc42ccd0580ec7.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
