{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2023-5528_k8s.io/kubernetes_1.26.10",
              "shortDescription": {
                "text": "[CVE-2023-5528] k8s.io/kubernetes 1.26.10"
              },
              "help": {
                "text": "A security issue was discovered in Kubernetes where a user that can create pods and persistent volumes on Windows nodes may be able to escalate to admin privileges on those nodes. Kubernetes clusters are only affected if they are using an in-tree storage plugin for Windows nodes.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar `       | [1.25.16], [1.26.11], [1.27.8], [1.28.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-5408_k8s.io/kubernetes_1.26.10",
              "shortDescription": {
                "text": "[CVE-2023-5408] k8s.io/kubernetes 1.26.10"
              },
              "help": {
                "text": "A privilege escalation flaw was found in the node restriction admission plugin of the kubernetes api server of OpenShift. A remote attacker who modifies the node role label could steer workloads from the control plane and etcd nodes onto different worker nodes and gain broader access to the cluster.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.2      | `sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2018-20225_pip_22.0.4",
              "shortDescription": {
                "text": "[CVE-2018-20225] pip 22.0.4"
              },
              "help": {
                "text": "An issue was discovered in pip (all versions) because it installs the version with the highest version number, even if the user had intended to obtain a private package from a private index. This only affects use of the --extra-index-url option, and exploitation requires that the package does not already exist in the public index (and thus the attacker can put the package there with an arbitrary version number). NOTE: it has been reported that this is intended functionality and the user is responsible for using --extra-index-url securely",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.8      | `sha256__f8fe6842f2db98f85544749af3ee1bd97515110b54876018fada829f306e783b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2024-37891_urllib3_1.26.18",
              "shortDescription": {
                "text": "[CVE-2024-37891] urllib3 1.26.18"
              },
              "help": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.4      | `sha256__623dfdc676632aafed6f678cd27be9be82821720cb97d16523af7954084c6cc1.tar `       | [1.26.19], [2.2.2]   |"
              },
              "properties": {
                "security-severity": "4.4"
              }
            },
            {
              "id": "CVE-2022-40897_setuptools_58.1.0",
              "shortDescription": {
                "text": "[CVE-2022-40897] setuptools 58.1.0"
              },
              "help": {
                "text": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.9      | `sha256__f8fe6842f2db98f85544749af3ee1bd97515110b54876018fada829f306e783b.tar `       | [65.5.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.20.14",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.20.14"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-5752_pip_22.0.4",
              "shortDescription": {
                "text": "[CVE-2023-5752] pip 22.0.4"
              },
              "help": {
                "text": "When installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.3      | `sha256__f8fe6842f2db98f85544749af3ee1bd97515110b54876018fada829f306e783b.tar `       | [23.3]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2024-3177_k8s.io/kubernetes_1.26.10",
              "shortDescription": {
                "text": "[CVE-2024-3177] k8s.io/kubernetes 1.26.10"
              },
              "help": {
                "text": "A security issue was discovered in Kubernetes where users may be able to launch containers that bypass the mountable secrets policy enforced by the ServiceAccount admission plugin when using containers, init containers, and ephemeral containers with the envFrom field populated. The policy ensures pods running with a service account may only reference secrets specified in the service accountâ€™s secrets field. Kubernetes clusters are only affected if the ServiceAccount admission plugin and the kubernetes.io/enforce-mountable-secrets annotation are used together with containers, init containers, and ephemeral containers with the envFrom field populated.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 2.7      | `sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar `       | [1.27.13], [1.28.9], [1.29.4]   |"
              },
              "properties": {
                "security-severity": "2.7"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-5528_k8s.io/kubernetes_1.26.10",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5528] sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5408_k8s.io/kubernetes_1.26.10",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5408] sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20225_pip_22.0.4",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20225] sha256__f8fe6842f2db98f85544749af3ee1bd97515110b54876018fada829f306e783b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37891_urllib3_1.26.18",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-37891] sha256__623dfdc676632aafed6f678cd27be9be82821720cb97d16523af7954084c6cc1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897_setuptools_58.1.0",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-40897] sha256__f8fe6842f2db98f85544749af3ee1bd97515110b54876018fada829f306e783b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.20.14",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752_pip_22.0.4",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "[CVE-2023-5752] sha256__f8fe6842f2db98f85544749af3ee1bd97515110b54876018fada829f306e783b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3177_k8s.io/kubernetes_1.26.10",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "[CVE-2024-3177] sha256__2dea92845eff4bd02b6977a36043f16199191779748cac619e3a7bc2c8ce4552.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
