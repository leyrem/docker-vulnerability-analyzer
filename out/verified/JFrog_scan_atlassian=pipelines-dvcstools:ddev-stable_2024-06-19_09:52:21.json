{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2018-1000517_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2018-1000517] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14809_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-14809] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "net/url in Go before 1.11.13 and 1.12.x before 1.12.8 mishandles malformed hosts in URLs, leading to an authorization bypass in some applications. This is related to a Host field with a suffix appearing in neither Hostname() nor Port(), and is related to a non-numeric port number. For example, an attacker can compose a crafted javascript:// URL that results in a hostname of google.com.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.11.13], [1.12.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2018-1000517_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2018-1000517] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "BusyBox project BusyBox wget version prior to commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e contains a Buffer Overflow vulnerability in Busybox wget that can result in heap buffer overflow. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in after commit 8e2174e9bd836e53c8b9c6e00d1bc6e2a718686e.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.7:libressl2.6-libssl_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.7:libressl2.6-libssl 2.6.5-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.7:libressl2.6-libcrypto_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.7:libressl2.6-libcrypto 2.6.5-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-46880_3.7:libressl2.6-libtls_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-46880] 3.7:libressl2.6-libtls 2.6.5-r0"
              },
              "help": {
                "text": "x509/x509_verify.c in LibreSSL before 3.4.2, and OpenBSD before 7.0 errata 006, allows authentication bypass because an error for an unverified certificate chain is sometimes discarded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14697_3.7:musl-utils_1.1.18-r3",
              "shortDescription": {
                "text": "[CVE-2019-14697] 3.7:musl-utils 1.1.18-r3"
              },
              "help": {
                "text": "musl libc through 1.1.23 has an x87 floating-point stack adjustment imbalance, related to the math/i386/ directory. In some cases, use of this library could introduce out-of-bounds writes that are not present in an application's source code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.1.18-r4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23521_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-23521] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.39.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.7:libressl2.6-libtls_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.7:libressl2.6-libtls 2.6.5-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-35784_3.7:libressl2.6-libssl_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.7:libressl2.6-libssl 2.6.5-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14697_3.7:musl_1.1.18-r3",
              "shortDescription": {
                "text": "[CVE-2019-14697] 3.7:musl 1.1.18-r3"
              },
              "help": {
                "text": "musl libc through 1.1.23 has an x87 floating-point stack adjustment imbalance, related to the math/i386/ directory. In some cases, use of this library could introduce out-of-bounds writes that are not present in an application's source code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.1.18-r4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-19646_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2019-19646] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-13347_3.7:mercurial_4.5.2-r1",
              "shortDescription": {
                "text": "[CVE-2018-13347] 3.7:mercurial 4.5.2-r1"
              },
              "help": {
                "text": "mpatch.c in Mercurial before 4.6.1 mishandles integer addition and subtraction, aka OVE-20180430-0002.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-19486_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2018-19486] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git before 2.19.2 on Linux and UNIX executes commands from the current working directory (as if '.' were at the end of $PATH) in certain cases involving the run_command() API and run-command.c, because there was a dangerous change from execvp to execv during 2017.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.r-r1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15041_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2017-15041] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.8.4 and 1.9.x before 1.9.1 allows \"go get\" remote command execution. Using custom domains, it is possible to arrange things so that example.com/pkg1 points to a Subversion repository but example.com/pkg1/pkg2 points to a Git repository. If the Subversion repository includes a Git checkout in its pkg2 directory and some other work is done to ensure the proper ordering of operations, \"go get\" can be tricked into reusing this Git checkout for the fetch of code from pkg2. If the Subversion repository's Git checkout has malicious commands in .git/hooks/, they will execute on the system running \"go get.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-36159_3.7:apk-tools_2.10.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-36159] 3.7:apk-tools 2.10.1-r0"
              },
              "help": {
                "text": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [2.12.6-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2021-3177_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2021-3177] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.7.18-r1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-22945_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22945] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2018-1000802_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2018-1000802] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-41903_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-41903] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.39.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32207_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-32207] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-17983_3.7:mercurial_4.5.2-r1",
              "shortDescription": {
                "text": "[CVE-2018-17983] 3.7:mercurial 4.5.2-r1"
              },
              "help": {
                "text": "cext/manifest.c in Mercurial before 4.7.2 has an out-of-bounds read during parsing of a malformed manifest entry.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-35784_3.7:libressl2.6-libcrypto_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2023-35784] 3.7:libressl2.6-libcrypto 2.6.5-r0"
              },
              "help": {
                "text": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-1353_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1353] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. When running Git in the Windows Subsystem for Linux (also known as \"WSL\") while accessing a working directory on a regular Windows drive, none of the NTFS protections were active.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-17596_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-17596] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.12.11 and 1.3.x before 1.13.2 can panic upon an attempt to process network traffic containing an invalid DSA public key. There are several attack scenarios, such as traffic from a client to a server that verifies client certificates.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.12.11], [1.13.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27534_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-27534] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1000500_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2018-1000500] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "Busybox contains a Missing SSL certificate validation vulnerability in The \"busybox wget\" applet that can result in arbitrary code execution. This attack appear to be exploitable via Simply download any file over HTTPS using \"busybox wget https://compromised-domain.com/important-file\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Applicable       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.28.3-r2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33195_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33195] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-1000500_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2018-1000500] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "Busybox contains a Missing SSL certificate validation vulnerability in The \"busybox wget\" applet that can result in arbitrary code execution. This attack appear to be exploitable via Simply download any file over HTTPS using \"busybox wget https://compromised-domain.com/important-file\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Applicable       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.28.3-r2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-27782_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27782] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29007_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-29007] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Undetermined       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.40.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42383_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2023-38039_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-38039] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-6486_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-6486] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.10.8 and 1.11.x before 1.11.5 mishandles P-521 and P-384 elliptic curves, which allows attackers to cause a denial of service (CPU consumption) or possibly conduct ECDH private key recovery attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.2      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.10.8], [1.11.5]   |"
              },
              "properties": {
                "security-severity": "8.2"
              }
            },
            {
              "id": "CVE-2021-42385_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-28831_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.33.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5018_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2019-5018] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "An exploitable use after free vulnerability exists in the window function functionality of Sqlite3 3.26.0. A specially crafted SQL command can cause a use after free vulnerability, potentially resulting in remote code execution. An attacker can send a malicious SQL command to trigger this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.28.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-20679_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2018-20679] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.29.3-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1349_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1349] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1350, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-28367_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-28367] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-40330_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2021-40330] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.26.3-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8169_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2020-8169] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.71.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-19604_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-19604] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Arbitrary command execution is possible in Git before 2.20.2, 2.21.x before 2.21.1, 2.22.x before 2.22.2, 2.23.x before 2.23.1, and 2.24.x before 2.24.1 because a \"git submodule update\" operation can run commands found in the .gitmodules file of a malicious repository.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.24.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-11008_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2020-11008] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.26.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-46143_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2021-46143] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-1387_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1387] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. Recursive clones are currently affected by a vulnerability that is caused by too-lax validation of submodule names, allowing very targeted attacks via remote code execution in recursive clones.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-5747_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2019-5747] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1352_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1352] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1354, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-0778_3.7:libressl2.6-libcrypto_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.7:libressl2.6-libcrypto 2.6.5-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42915_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-42915] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-27780_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27780] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29458_3.7:ncurses-terminfo_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2022-29458] 3.7:ncurses-terminfo 6.0_p20171125-r1"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.3_p20220416-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2021-30139_3.7:apk-tools_2.10.1-r0",
              "shortDescription": {
                "text": "[CVE-2021-30139] 3.7:apk-tools 2.10.1-r0"
              },
              "help": {
                "text": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [2.12.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42379_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-8231_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2020-8231] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.72.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-7187_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-7187] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The \"go get\" implementation in Go 1.9.4, when the -insecure command-line option is used, does not validate the import path (get/vcs.go only checks for \"://\" anywhere in the string), which allows remote attackers to execute arbitrary OS commands via a crafted web site.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.10.1], [1.9.5]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42381_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0778_3.7:libressl2.6-libtls_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.7:libressl2.6-libtls 2.6.5-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42384_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-1350_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1350] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-39537_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2021-39537] 3.7:ncurses-terminfo-base 6.0_p20171125-r1"
              },
              "help": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.2_p20200530-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-29187_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-29187] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.37.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-0778_3.7:libressl2.6-libssl_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.7:libressl2.6-libssl 2.6.5-r0"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [3.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42383_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-21300_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2021-21300] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.30.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-28366_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-28366] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.14.12], [1.15.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42381_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-11655_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-11655] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "SQLite through 3.31.1 allows attackers to cause a denial of service (segmentation fault) via a malformed window-function query because the AggInfo object's initialization is mishandled.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.30.1-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-28319_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-28319] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22901_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22901] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-15903_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-15903] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "In libexpat before 2.2.8, crafted XML input could fool the parser into changing from DTD parsing to document parsing too early; a consecutive call to XML_GetCurrentLineNumber (or XML_GetCurrentColumnNumber) then resulted in a heap-based buffer over-read.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.7.17-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-28831_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.33.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8285_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2020-8285] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16875_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-16875] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-5747_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2019-5747] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "An issue was discovered in BusyBox through 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP client, server, and/or relay) might allow a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to assurance of a 4-byte length when decoding DHCP_SUBNET. NOTE: this issue exists because of an incomplete fix for CVE-2018-20679.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-20916_pip_9.0.3",
              "shortDescription": {
                "text": "[CVE-2019-20916] pip 9.0.3"
              },
              "help": {
                "text": "The pip package before 19.2 for Python allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22926_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22926] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16276_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-16276] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.12.10 and 1.13.x before 1.13.1 allow HTTP Request Smuggling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.12.10], [1.13.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-16874_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-16874] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30065_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42386_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42386_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-5260_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2020-5260] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that contain an encoded newline can inject unintended values into the credential helper protocol stream, causing the credential helper to retrieve the password for one server (e.g., good.example.com) for an HTTP request being made to another server (e.g., evil.example.com), resulting in credentials for the former being sent to the latter. There are no restrictions on the relationship between the two, meaning that an attacker can craft a URL that will present stored credentials for any host to a host of their choosing. The vulnerability can be triggered by feeding a malicious URL to git clone. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The problem has been patched in the versions published on April 14th, 2020, going back to v2.17.x. Anyone wishing to backport the change further can do so by applying commit 9a6bbee (the full release includes extra checks for git fsck, but that commit is sufficient to protect clients against the vulnerability). The patched versions are: 2.17.4, 2.18.3, 2.19.4, 2.20.3, 2.21.2, 2.22.3, 2.23.2, 2.24.2, 2.25.3, 2.26.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.26.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42382_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-28391_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-39537_3.7:ncurses-libs_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2021-39537] 3.7:ncurses-libs 6.0_p20171125-r1"
              },
              "help": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.2_p20200530-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-24765_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-24765] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.35.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42380_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-5010_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-5010] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.7.15-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25314_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-25314] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-20679_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2018-20679] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "An issue was discovered in BusyBox before 1.30.0. An out of bounds read in udhcp components (consumed by the DHCP server, client, and relay) allows a remote attacker to leak sensitive information from the stack by sending a crafted DHCP message. This is related to verification in udhcp_get_option() in networking/udhcp/common.c that 4-byte options are indeed 4 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.29.3-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-1354_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1354] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1352, CVE-2019-1387.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-30065_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-19244_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2019-19244] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.30.1-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-39260_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-39260] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.38.1-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42382_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42379_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-45960_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2021-45960] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-8177_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2020-8177] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.71.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42378_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2019-1351_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1351] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "A tampering vulnerability exists when Git for Visual Studio improperly handles virtual drive paths, aka 'Git for Visual Studio Tampering Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28391_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-16873_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-16873] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.10.6], [1.11.3]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-27775_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27775] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-6574_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2018-6574] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.8.7, Go 1.9.x before 1.9.4, and Go 1.10 pre-releases before Go 1.10rc2 allow \"go get\" remote command execution during source code build, by leveraging the gcc or clang plugin feature, because -fplugin= and -plugin= arguments were not blocked.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.8.7], [1.9.4]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-5436_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2019-5436] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A heap buffer overflow in the TFTP receiving code allows for DoS or arbitrary code execution in libcurl versions 7.19.4 through 7.64.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.65.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-29458_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2022-29458] 3.7:ncurses-terminfo-base 6.0_p20171125-r1"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.3_p20220416-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2022-29458_3.7:ncurses-libs_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2022-29458] 3.7:ncurses-libs 6.0_p20171125-r1"
              },
              "help": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.3_p20220416-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2021-42385_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2023-23946_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-23946] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.39.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42380_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-8286_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2020-8286] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42384_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-39537_3.7:ncurses-terminfo_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2021-39537] 3.7:ncurses-terminfo 6.0_p20171125-r1"
              },
              "help": {
                "text": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.2_p20200530-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42378_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2013-7338_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2013-7338] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Python before 3.3.4 RC1 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a file size value larger than the size of the zip file to the (1) ZipExtFile.read, (2) ZipExtFile.read(n), (3) ZipExtFile.readlines, (4) ZipFile.extract, or (5) ZipFile.extractall function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-24975_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-24975] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option. Note: This has been disputed by multiple 3rd parties who believe this is an intended feature of the git binary and does not pose a security risk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-42915_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-42915] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "Multiple issues were addressed by updating to curl version 8.4.0. This issue is fixed in macOS Ventura 13.6.4, macOS Sonoma 14.2, macOS Monterey 12.7.3, iOS 16.7.5 and iPadOS 16.7.5. Multiple issues in curl.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2019-5443_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2019-5443] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A non-privileged user or program can put code and a config file in a known non-privileged path (under C:/usr/local/) that will make curl \u003c= 7.65.1 automatically run the code (as an openssl \"engine\") on invocation. If that curl is invoked by a privileged user it can do anything it wants.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-28667_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2021-28667] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "StackStorm before 3.4.1, in some situations, has an infinite loop that consumes all available memory and disk space. This can occur if Python 3.x is used, the locale is not utf-8, and there is an attempt to log Unicode data (from an action or rule name).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2009-2940_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2009-2940] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The pygresql module 3.8.1 and 4.0 for Python does not properly support the PQescapeStringConn function, which might allow remote attackers to leverage escaping issues involving multibyte character encodings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-31012_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-31012] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git for Windows is a fork of Git that contains Windows-specific patches. This vulnerability in versions prior to 2.37.1 lets Git for Windows' installer execute a binary into `C:\\mingw64\\bin\\git.exe` by mistake. This only happens upon a fresh install, not when upgrading Git for Windows. A patch is included in version 2.37.1. Two workarounds are available. Create the `C:\\mingw64` folder and remove read/write access from this folder, or disallow arbitrary authenticated users to create folders in `C:\\`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2015-5652_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2015-5652] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Untrusted search path vulnerability in python.exe in Python through 3.5.0 on Windows allows local users to gain privileges via a Trojan horse readline.pyd file in the current working directory.  NOTE: the vendor says \"It was determined that this is a longtime behavior of Python that cannot really be altered at this point.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-13630_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-13630] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow, related to the snippet feature.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2021-46101_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2021-46101] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "In Git for windows through 2.34.1 when using git pull to update the local warehouse, git.cmd can be run directly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-20225_pip_9.0.3",
              "shortDescription": {
                "text": "[CVE-2018-20225] pip 9.0.3"
              },
              "help": {
                "text": "An issue was discovered in pip (all versions) because it installs the version with the highest version number, even if the user had intended to obtain a private package from a private index. This only affects use of the --extra-index-url option, and exploitation requires that the package does not already exist in the public index (and thus the attacker can put the package there with an arbitrary version number). NOTE: it has been reported that this is intended functionality and the user is responsible for using --extra-index-url securely",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-26488_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2022-26488] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "In Python before 3.10.3 on Windows, local users can gain privileges because the search path is inadequately secured. The installer may allow a local attacker to add user-writable directories to the system search path. To exploit, an administrator must have installed Python for all users and enabled PATH entries. A non-administrative user can trigger a repair that incorrectly adds user-writable paths into PATH, enabling search-path hijacking of other users and system services. This affects Python (CPython) through 3.7.12, 3.8.x through 3.8.12, 3.9.x through 3.9.10, and 3.10.x through 3.10.2.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2018-13348_3.7:mercurial_4.5.2-r1",
              "shortDescription": {
                "text": "[CVE-2018-13348] 3.7:mercurial 4.5.2-r1"
              },
              "help": {
                "text": "The mpatch_decode function in mpatch.c in Mercurial before 4.6.1 mishandles certain situations where there should be at least 12 bytes remaining after the current position in the patch data, but actually are not, aka OVE-20180430-0001.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-17522_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2017-17522] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Lib/webbrowser.py in Python through 3.6.3 does not validate strings before launching the program specified by the BROWSER environment variable, which might allow remote attackers to conduct argument-injection attacks via a crafted URL. NOTE: a software maintainer indicates that exploitation is impossible because the code relies on subprocess.Popen and the default shell=False setting",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2018-13346_3.7:mercurial_4.5.2-r1",
              "shortDescription": {
                "text": "[CVE-2018-13346] 3.7:mercurial 4.5.2-r1"
              },
              "help": {
                "text": "The mpatch_apply function in mpatch.c in Mercurial before 4.6.1 incorrectly proceeds in cases where the fragment start is past the end of the original data, aka OVE-20180430-0004.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-13404_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-13404] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The MSI installer for Python through 2.7.16 on Windows defaults to the C:\\Python27 directory, which makes it easier for local users to deploy Trojan horse code. (This also affects old 3.x releases before 3.5.) NOTE: the vendor's position is that it is the user's responsibility to ensure C:\\Python27 access control or choose a different directory, because backwards compatibility requires that C:\\Python27 remain the default for 2.7.x",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-28321_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-28321] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-48795_3.7:libssh2_1.9.0-r1",
              "shortDescription": {
                "text": "[CVE-2023-48795] 3.7:libssh2 1.9.0-r1"
              },
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Undetermined       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [1.11.0-r1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42364_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2017-15042_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2017-15042] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "An unintended cleartext issue exists in Go before 1.8.4 and 1.9.x before 1.9.1. RFC 4954 requires that, during SMTP, the PLAIN auth scheme must only be used on network connections secured with TLS. The original implementation of smtp.PlainAuth in Go 1.0 enforced this requirement, and it was documented to do so. In 2013, upstream issue #5184, this was changed so that the server may decide whether PLAIN is acceptable. The result is that if you set up a man-in-the-middle SMTP server that doesn't advertise STARTTLS and does advertise that PLAIN auth is OK, the smtp.PlainAuth implementation sends the username and password.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.8.4], [1.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-32205_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-32205] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2020-1971_3.7:libressl2.6-libssl_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.7:libressl2.6-libssl 2.6.5-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-3114_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-3114] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-42375_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46219_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-42374_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-27537_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-27537] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-19242_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2019-19242] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "SQLite 3.30.1 mishandles pExpr-\u003ey.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.30.1-r1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-27538_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-27538] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-28320_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-28320] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-28928_3.7:musl_1.1.18-r3",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.7:musl 1.1.18-r3"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.2.2_pre2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-23916_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-23916] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-15586_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-15586] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-13434_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-13434] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.32.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-16168_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2019-16168] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "In SQLite through 3.29.0, whereLoopAddBtreeIndex in sqlite3.c can crash a browser or other application because of missing validation of a sqlite_stat1 sz field, aka a \"severe division by zero in the query planner.\"",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.28.0-r1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-1971_3.7:libressl2.6-libcrypto_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.7:libressl2.6-libcrypto 2.6.5-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42366_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42374_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-27774_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27774] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.7"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-43552_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-43552] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-22947_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22947] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-35260_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-35260] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-23915_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-23915] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-42375_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-30115_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-30115] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2019-16935_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-16935] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.7.16-r3]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2020-29511_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-29511] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2020-28928_3.7:musl-utils_1.1.18-r3",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.7:musl-utils 1.1.18-r3"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.2.2_pre2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-34558_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-34558] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.14], [1.16.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32206_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-32206] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-20227_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2021-20227] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "A flaw was found in SQLite's SELECT query functionality (src/select.c). This flaw allows an attacker who is capable of running SQL queries locally on the SQLite database to cause a denial of service or possible code execution by triggering a use-after-free. The highest threat from this vulnerability is to system availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.34.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-1971_3.7:libressl2.6-libtls_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.7:libressl2.6-libtls 2.6.5-r0"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-29510_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-29510] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.6]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2022-27776_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27776] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-22490_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-22490] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.\n\nA fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.39.2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-24553_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-24553] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.14.8], [1.15.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-27779_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27779] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-16980_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2018-16980] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "dotCMS V5.0.1 has XSS in the /html/portlet/ext/contentlet/image_tools/index.jsp fieldName and inode parameters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.64.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-32208_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-32208] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-52426_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2023-52426] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-46218_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-39253_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2022-39253] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.38.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-24056_3.7:pkgconf_1.3.10-r0",
              "shortDescription": {
                "text": "[CVE-2023-24056] 3.7:pkgconf 1.3.10-r0"
              },
              "help": {
                "text": "In pkgconf through 1.9.3, variable duplication can cause unbounded string expansion due to incorrect checks in libpkgconf/tuple.c:pkgconf_tuple_parse. For example, a .pc file containing a few hundred bytes can expand to one billion bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [1.9.4-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-13435_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-13435] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "SQLite through 3.32.0 has a segmentation fault in sqlite3ExprCodeTarget in expr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.32.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27535_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-27535] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-3572_pip_9.0.3",
              "shortDescription": {
                "text": "[CVE-2021-3572] pip 9.0.3"
              },
              "help": {
                "text": "A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [21.1]   |"
              },
              "properties": {
                "security-severity": "5.7"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22876_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22876] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-0853_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22925_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22925] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-18348_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-18348] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.). This is fixed in: v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1; v3.6.11, v3.6.11rc1, v3.6.12; v3.7.8, v3.7.8rc1, v3.7.9; v3.8.3, v3.8.3rc1, v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.7.18-r0]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-15358_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-15358] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "In SQLite before 3.32.3, select.c mishandles query-flattener optimization, leading to a multiSelectOrderBy heap overflow because of misuse of transitive properties for constant propagation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.32.1-r1]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2009-3720_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2009-3720] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The updatePosition function in lib/xmltok_impl.c in libexpat in Expat 2.0.1, as used in Python, PyXML, w3c-libwww, and other software, allows context-dependent attackers to cause a denial of service (application crash) via an XML document with crafted UTF-8 sequences that trigger a buffer over-read, a different vulnerability than CVE-2009-2625.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-42376_3.7:busybox_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.7:busybox 1.27.2-r11"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2017-18207_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2017-18207] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The Wave_read._read_fmt_chunk function in Lib/wave.py in Python through 3.6.4 does not ensure a nonzero channel value, which allows attackers to cause a denial of service (divide-by-zero and exception) via a crafted wav format audio file. NOTE: the vendor disputes this issue because Python applications \"need to be prepared to handle a wide variety of exceptions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-27043_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2023-27043] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-48437_3.7:libressl2.6-libcrypto_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.7:libressl2.6-libcrypto 2.6.5-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-13632_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-13632] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-9947_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-9947] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-22897_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22897] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-41581_3.7:libressl2.6-libssl_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.7:libressl2.6-libssl 2.6.5-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-19645_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2019-19645] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-48564_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2022-48564] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3733_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2021-3733] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "There's a flaw in urllib's AbstractBasicAuthHandler class. An attacker who controls a malicious HTTP server that an HTTP client (such as web browser) connects to, could trigger a Regular Expression Denial of Service (ReDOS) during an authentication request with a specially crafted payload that is sent by the server to the client. The greatest threat that this flaw poses is to application availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-42376_3.7:ssl_client_1.27.2-r11",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.7:ssl_client 1.27.2-r11"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-48437_3.7:libressl2.6-libtls_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.7:libressl2.6-libtls 2.6.5-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-48437_3.7:libressl2.6-libssl_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2022-48437] 3.7:libressl2.6-libssl 2.6.5-r0"
              },
              "help": {
                "text": "An issue was discovered in x509/x509_verify.c in LibreSSL before 3.6.1, and in OpenBSD before 7.2 errata 001. x509_verify_ctx_add_chain does not store errors that occur during leaf certificate verification, and therefore an incorrect error is returned. This behavior occurs when there is an installed verification callback that instructs the verifier to continue upon detecting an invalid certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-9740_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-9740] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2019-17595_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2019-17595] 3.7:ncurses-terminfo-base 6.0_p20171125-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2020-13631_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-13631] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables, related to alter.c and build.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-17595_3.7:ncurses-terminfo_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2019-17595] 3.7:ncurses-terminfo 6.0_p20171125-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2021-41581_3.7:libressl2.6-libtls_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.7:libressl2.6-libtls 2.6.5-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2019-17595_3.7:ncurses-libs_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2019-17595] 3.7:ncurses-libs 6.0_p20171125-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.4      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.4"
              }
            },
            {
              "id": "CVE-2021-41581_3.7:libressl2.6-libcrypto_2.6.5-r0",
              "shortDescription": {
                "text": "[CVE-2021-41581] 3.7:libressl2.6-libcrypto 2.6.5-r0"
              },
              "help": {
                "text": "x509_constraints_parse_mailbox in lib/libcrypto/x509/x509_constraints.c in LibreSSL through 3.4.0 has a stack-based buffer over-read. When the input exceeds DOMAIN_PART_MAX_LEN, the buffer lacks '\\0' termination.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2018-20852_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2018-20852] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-17594_3.7:ncurses-terminfo_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2019-17594] 3.7:ncurses-terminfo 6.0_p20171125-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-17594_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2019-17594] 3.7:ncurses-terminfo-base 6.0_p20171125-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-17594_3.7:ncurses-libs_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2019-17594] 3.7:ncurses-libs 6.0_p20171125-r1"
              },
              "help": {
                "text": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2013-0340_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2013-0340] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-22924_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22924] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2022-35252_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-35252] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.85.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2019-5435_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2019-5435] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.65.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-5752_pip_9.0.3",
              "shortDescription": {
                "text": "[CVE-2023-5752] pip 9.0.3"
              },
              "help": {
                "text": "When installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [23.3]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2021-22898_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22898] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2021-22890_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22890] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-38546_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-38546] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2020-8284_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2020-8284] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.74.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-25815_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-25815] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "In Git for Windows, the Windows port of Git, no localized messages are shipped with the installer. As a consequence, Git is expected not to localize messages at all, and skips the gettext initialization. However, due to a change in MINGW-packages, the `gettext()` function's implicit initialization no longer uses the runtime prefix but uses the hard-coded path `C:\\mingw64\\share\\locale` to look for localized messages. And since any authenticated user has the permission to create folders in `C:\\` (and since `C:\\mingw64` does not typically exist), it is possible for low-privilege users to place fake messages in that location where `git.exe` will pick them up in version 2.40.1.\n\nThis vulnerability is relatively hard to exploit and requires social engineering. For example, a legitimate message at the end of a clone could be maliciously modified to ask the user to direct their web browser to a malicious website, and the user might think that the message comes from Git and is legitimate. It does require local write access by the attacker, though, which makes this attack vector less likely. Version 2.40.1 contains a patch for this issue. Some workarounds are available. Do not work on a Windows machine with shared accounts, or alternatively create a `C:\\mingw64` folder and leave it empty. Users who have administrative rights may remove the permission to create folders in `C:\\`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.2      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.40.1-r0]   |"
              },
              "properties": {
                "security-severity": "2.2"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2019-1348_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2019-1348] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. The --export-marks option of git fast-import is exposed also via the in-stream command feature export-marks=... and it allows overwriting arbitrary paths.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.15.4-r0]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2024-2004_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32465_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-32465] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28757_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2024-28757] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.6.2-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32020_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-32020] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32021_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-32021] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32002_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-32002] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.0      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "9.0"
              }
            },
            {
              "id": "CVE-2023-38545_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-38545] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-23914] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-25236_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-25236] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23852_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-23852] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.4-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-1587_3.7:pcre2_10.30-r0",
              "shortDescription": {
                "text": "[CVE-2022-1587] 3.7:pcre2 10.30-r0"
              },
              "help": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [10.40-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-1586_3.7:pcre2_10.30-r0",
              "shortDescription": {
                "text": "[CVE-2022-1586] 3.7:pcre2 10.30-r0"
              },
              "help": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [10.40-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-25235_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-25235] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-37434_3.7:zlib_1.2.11-r1",
              "shortDescription": {
                "text": "[CVE-2022-37434] 3.7:zlib 1.2.11-r1"
              },
              "help": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.2.12-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-25315_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-25315] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32221_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-32221] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-11888_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-11888] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go through 1.12.5 on Windows mishandles process creation with a nil environment in conjunction with a non-nil token, which allows attackers to obtain sensitive information or gain privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.12.6], [1.13beta1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22823_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-22823] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22822_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-22822] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22824_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-22824] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48565_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2022-48565] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-11656_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-11656] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "In SQLite through 3.31.1, the ALTER TABLE implementation has a use-after-free, as demonstrated by an ORDER BY clause that belongs to a compound SELECT statement.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-10160_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-10160] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-52425_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2023-52425] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_3.7:ncurses-terminfo_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2023-29491] 3.7:ncurses-terminfo 6.0_p20171125-r1"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.4_p20230424-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-23990_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-23990] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22946_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22946] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22825_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-22825] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27533_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-27533] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-0601_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-0601] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates.An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source, aka 'Windows CryptoAPI Spoofing Vulnerability'.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.12.16], [1.13.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-25032_3.7:zlib_1.2.11-r1",
              "shortDescription": {
                "text": "[CVE-2018-25032] 3.7:zlib 1.2.11-r1"
              },
              "help": {
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar `       | [1.2.11-r4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42916_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-42916] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-33196_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33196] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-27918_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-27918] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.9], [1.16.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22827_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-22827] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-43680_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-43680] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22576_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-22576] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-40674_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-40674] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.9-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_3.7:ncurses-libs_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2023-29491] 3.7:ncurses-libs 6.0_p20171125-r1"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.4_p20230424-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-33198_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33198] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22826_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-22826] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27781_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-27781] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3115_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-3115] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.14.14 and 1.15.x before 1.15.7 on Windows is vulnerable to Command Injection and remote code execution when using the \"go get\" command to fetch modules that make use of cgo (for example, cgo can execute a gcc program from an untrusted download).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.14.14], [1.15.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-16056_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-16056] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.7.16-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-7104_3.7:sqlite-libs_3.25.3-r2",
              "shortDescription": {
                "text": "[CVE-2023-7104] 3.7:sqlite-libs 3.25.3-r2"
              },
              "help": {
                "text": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [3.41.2-r3]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41409_3.7:pcre2_10.30-r0",
              "shortDescription": {
                "text": "[CVE-2022-41409] 3.7:pcre2 10.30-r0"
              },
              "help": {
                "text": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [10.41-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29491_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
              "shortDescription": {
                "text": "[CVE-2023-29491] 3.7:ncurses-terminfo-base 6.0_p20171125-r1"
              },
              "help": {
                "text": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [6.4_p20230424-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39293_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-39293] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.16.8], [1.17.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-25652_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2023-25652] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.40.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9634_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2019-9634] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go through 1.12 on Windows misuses certain LoadLibrary functionality, leading to DLL injection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.11.10], [1.12.2]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-43551_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2022-43551] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-0391_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2022-0391] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "A flaw was found in Python, specifically within the urllib.parse module. This module helps break Uniform Resource Locator (URL) strings into components. The issue involves how the urlparse method does not sanitize input and allows characters like '\\r' and '\\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks. This flaw affects Python versions prior to 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-36632_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2023-36632] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24329_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2023-24329] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-18276_3.7:bash_4.4.19-r1",
              "shortDescription": {
                "text": "[CVE-2019-18276] 3.7:bash 4.4.19-r1"
              },
              "help": {
                "text": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-48560_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2022-48560] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-9674_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2019-9674] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Lib/zipfile.py in Python through 3.7.2 allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2007-4559_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2007-4559] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "Directory traversal vulnerability in the (1) extract and (2) extractall functions in the tarfile module in Python allows user-assisted remote attackers to overwrite arbitrary files via a .. (dot dot) sequence in filenames in a TAR archive, a related issue to CVE-2001-1267.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-14039_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2020-14039] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.13.13], [1.14.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-48566_3.7:python2_2.7.15-r2",
              "shortDescription": {
                "text": "[CVE-2022-48566] 3.7:python2 2.7.15-r2"
              },
              "help": {
                "text": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-25313_3.7:expat_2.2.8-r0",
              "shortDescription": {
                "text": "[CVE-2022-25313] 3.7:expat 2.2.8-r0"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-27536_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-27536] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-22923_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22923] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-40897_setuptools_39.0.1",
              "shortDescription": {
                "text": "[CVE-2022-40897] setuptools 39.0.1"
              },
              "help": {
                "text": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [65.5.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-36221_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-36221] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.15], [1.16.7]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-33197_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-33197] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.15.13], [1.16.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.8.3"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22922_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2021-22922] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-28322_3.7:libcurl_7.61.1-r3",
              "shortDescription": {
                "text": "[CVE-2023-28322] 3.7:libcurl 7.61.1-r3"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2024-32004_3.7:git_2.15.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-32004] 3.7:git 2.15.3-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar `       | [2.45.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2018-1000517_3.7:busybox_1.27.2-r11",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000517] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14809_github.com/golang/go_1.8.3",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14809] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.8.3",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000517_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000517] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.7:libressl2.6-libssl_2.6.5-r0",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.7:libressl2.6-libcrypto_2.6.5-r0",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46880_3.7:libressl2.6-libtls_2.6.5-r0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46880] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14697_3.7:musl-utils_1.1.18-r3",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14697] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23521_3.7:git_2.15.3-r0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23521] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.7:libressl2.6-libtls_2.6.5-r0",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.7:libressl2.6-libssl_2.6.5-r0",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14697_3.7:musl_1.1.18-r3",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14697] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19646_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2019-19646] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-13347_3.7:mercurial_4.5.2-r1",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2018-13347] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19486_3.7:git_2.15.3-r0",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19486] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15041_github.com/golang/go_1.8.3",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15041] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36159_3.7:apk-tools_2.10.1-r0",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2021-36159] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3177_3.7:python2_2.7.15-r2",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3177] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.7:busybox_1.27.2-r11",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22945] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000802_3.7:python2_2.7.15-r2",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000802] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41903_3.7:git_2.15.3-r0",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41903] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32207] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-17983_3.7:mercurial_4.5.2-r1",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2018-17983] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35784_3.7:libressl2.6-libcrypto_2.6.5-r0",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35784] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1353_3.7:git_2.15.3-r0",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1353] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.8.3",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17596_github.com/golang/go_1.8.3",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17596] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.8.3",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.8.3",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.8.3",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.8.3",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.8.3",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000500_3.7:busybox_1.27.2-r11",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000500] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.8.3",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195_github.com/golang/go_1.8.3",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33195] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.8.3",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.8.3",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000500_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "[CVE-2018-1000500] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27782] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.8.3",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29007_3.7:git_2.15.3-r0",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29007] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38039] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6486_github.com/golang/go_1.8.3",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "[CVE-2019-6486] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.7:busybox_1.27.2-r11",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5018_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5018] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20679] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1349_3.7:git_2.15.3-r0",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1349] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28367_github.com/golang/go_1.8.3",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28367] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-40330_3.7:git_2.15.3-r0",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "[CVE-2021-40330] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8169_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8169] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19604_3.7:git_2.15.3-r0",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "[CVE-2019-19604] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11008_3.7:git_2.15.3-r0",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11008] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46143_3.7:expat_2.2.8-r0",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46143] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1387_3.7:git_2.15.3-r0",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1387] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5747] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1352_3.7:git_2.15.3-r0",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1352] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.7:libressl2.6-libcrypto_2.6.5-r0",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42915] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27780_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27780] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_3.7:ncurses-terminfo_6.0_p20171125-r1",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-30139_3.7:apk-tools_2.10.1-r0",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "[CVE-2021-30139] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8231_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8231] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7187_github.com/golang/go_1.8.3",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7187] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.7:busybox_1.27.2-r11",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.7:libressl2.6-libtls_2.6.5-r0",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1350_3.7:git_2.15.3-r0",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1350] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39537] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29187_3.7:git_2.15.3-r0",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29187] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.7:libressl2.6-libssl_2.6.5-r0",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.7:busybox_1.27.2-r11",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21300_3.7:git_2.15.3-r0",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2021-21300] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28366_github.com/golang/go_1.8.3",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "[CVE-2020-28366] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11655_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11655] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2023-28319] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22901_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22901] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15903_3.7:python2_2.7.15-r2",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2019-15903] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.7:busybox_1.27.2-r11",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8285_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8285] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16875_github.com/golang/go_1.8.3",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16875] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5747_3.7:busybox_1.27.2-r11",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5747] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20916_pip_9.0.3",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2019-20916] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22926] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16276_github.com/golang/go_1.8.3",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16276] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16874_github.com/golang/go_1.8.3",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16874] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.7:busybox_1.27.2-r11",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-5260_3.7:git_2.15.3-r0",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2020-5260] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537_3.7:ncurses-libs_6.0_p20171125-r1",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39537] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24765_3.7:git_2.15.3-r0",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24765] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.7:busybox_1.27.2-r11",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5010_3.7:python2_2.7.15-r2",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5010] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25314_3.7:expat_2.2.8-r0",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25314] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20679_3.7:busybox_1.27.2-r11",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20679] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1354_3.7:git_2.15.3-r0",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1354] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.7:busybox_1.27.2-r11",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19244_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2019-19244] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-39260_3.7:git_2.15.3-r0",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-39260] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.7:busybox_1.27.2-r11",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.7:busybox_1.27.2-r11",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45960_3.7:expat_2.2.8-r0",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2021-45960] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8177_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8177] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1351_3.7:git_2.15.3-r0",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2019-1351] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.7:busybox_1.27.2-r11",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16873_github.com/golang/go_1.8.3",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2018-16873] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27775] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-6574_github.com/golang/go_1.8.3",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2018-6574] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5436_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5436] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458_3.7:ncurses-libs_6.0_p20171125-r1",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29458] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23946_3.7:git_2.15.3-r0",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23946] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8286_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8286] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.7:busybox_1.27.2-r11",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39537_3.7:ncurses-terminfo_6.0_p20171125-r1",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39537] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.7:busybox_1.27.2-r11",
          "ruleIndex": 127,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-7338_3.7:python2_2.7.15-r2",
          "ruleIndex": 128,
          "level": "error",
          "message": {
            "text": "[CVE-2013-7338] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24975_3.7:git_2.15.3-r0",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24975] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42915_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42915] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5443_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "[CVE-2019-5443] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28667_3.7:python2_2.7.15-r2",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28667] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-2940_3.7:python2_2.7.15-r2",
          "ruleIndex": 133,
          "level": "error",
          "message": {
            "text": "[CVE-2009-2940] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31012_3.7:git_2.15.3-r0",
          "ruleIndex": 134,
          "level": "error",
          "message": {
            "text": "[CVE-2022-31012] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-5652_3.7:python2_2.7.15-r2",
          "ruleIndex": 135,
          "level": "error",
          "message": {
            "text": "[CVE-2015-5652] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13630_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 136,
          "level": "error",
          "message": {
            "text": "[CVE-2020-13630] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46101_3.7:git_2.15.3-r0",
          "ruleIndex": 137,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46101] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20225_pip_9.0.3",
          "ruleIndex": 138,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20225] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-26488_3.7:python2_2.7.15-r2",
          "ruleIndex": 139,
          "level": "error",
          "message": {
            "text": "[CVE-2022-26488] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-13348_3.7:mercurial_4.5.2-r1",
          "ruleIndex": 140,
          "level": "error",
          "message": {
            "text": "[CVE-2018-13348] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17522_3.7:python2_2.7.15-r2",
          "ruleIndex": 141,
          "level": "error",
          "message": {
            "text": "[CVE-2017-17522] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-13346_3.7:mercurial_4.5.2-r1",
          "ruleIndex": 142,
          "level": "error",
          "message": {
            "text": "[CVE-2018-13346] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13404_3.7:python2_2.7.15-r2",
          "ruleIndex": 143,
          "level": "error",
          "message": {
            "text": "[CVE-2019-13404] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.8.3",
          "ruleIndex": 144,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.8.3",
          "ruleIndex": 145,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.8.3",
          "ruleIndex": 146,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 147,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795_3.7:libssh2_1.9.0-r1",
          "ruleIndex": 148,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-48795] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 149,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15042_github.com/golang/go_1.8.3",
          "ruleIndex": 150,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-15042] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 151,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32205] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.7:libressl2.6-libssl_2.6.5-r0",
          "ruleIndex": 152,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114_github.com/golang/go_1.8.3",
          "ruleIndex": 153,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3114] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 154,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 155,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 156,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 157,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.7:busybox_1.27.2-r11",
          "ruleIndex": 158,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.8.3",
          "ruleIndex": 159,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 160,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27537] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.8.3",
          "ruleIndex": 161,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19242_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 162,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-19242] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 163,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 164,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28320] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.7:musl_1.1.18-r3",
          "ruleIndex": 165,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 166,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 167,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23916] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.7:busybox_1.27.2-r11",
          "ruleIndex": 168,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586_github.com/golang/go_1.8.3",
          "ruleIndex": 169,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15586] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13434_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 170,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13434] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16168_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 171,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-16168] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.7:libressl2.6-libcrypto_2.6.5-r0",
          "ruleIndex": 172,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.7:busybox_1.27.2-r11",
          "ruleIndex": 173,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 174,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 175,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27774] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.8.3",
          "ruleIndex": 176,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 177,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-43552] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 178,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22947] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35260_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 179,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-35260] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 180,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.7:busybox_1.27.2-r11",
          "ruleIndex": 181,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30115_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 182,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-30115] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16935_3.7:python2_2.7.15-r2",
          "ruleIndex": 183,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-16935] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29511_github.com/golang/go_1.8.3",
          "ruleIndex": 184,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29511] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.7:musl-utils_1.1.18-r3",
          "ruleIndex": 185,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558_github.com/golang/go_1.8.3",
          "ruleIndex": 186,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-34558] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 187,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32206] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.7:busybox_1.27.2-r11",
          "ruleIndex": 188,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20227_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 189,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-20227] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.7:libressl2.6-libtls_2.6.5-r0",
          "ruleIndex": 190,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29510_github.com/golang/go_1.8.3",
          "ruleIndex": 191,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-29510] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 192,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27776] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22490_3.7:git_2.15.3-r0",
          "ruleIndex": 193,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-22490] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.7:busybox_1.27.2-r11",
          "ruleIndex": 194,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553_github.com/golang/go_1.8.3",
          "ruleIndex": 195,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-24553] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27779_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 196,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27779] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16980_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 197,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-16980] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 198,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32208] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52426_3.7:expat_2.2.8-r0",
          "ruleIndex": 199,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-52426] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 200,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-39253_3.7:git_2.15.3-r0",
          "ruleIndex": 201,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-39253] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24056_3.7:pkgconf_1.3.10-r0",
          "ruleIndex": 202,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24056] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13435_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 203,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13435] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 204,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3572_pip_9.0.3",
          "ruleIndex": 205,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3572] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.8.3",
          "ruleIndex": 206,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22876_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 207,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22876] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 208,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 209,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22925] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-18348_3.7:python2_2.7.15-r2",
          "ruleIndex": 210,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-18348] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.8.3",
          "ruleIndex": 211,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.8.3",
          "ruleIndex": 212,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15358_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 213,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15358] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3720_3.7:python2_2.7.15-r2",
          "ruleIndex": 214,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3720] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.7:busybox_1.27.2-r11",
          "ruleIndex": 215,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18207_3.7:python2_2.7.15-r2",
          "ruleIndex": 216,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-18207] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27043_3.7:python2_2.7.15-r2",
          "ruleIndex": 217,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27043] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.7:libressl2.6-libcrypto_2.6.5-r0",
          "ruleIndex": 218,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13632_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 219,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13632] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9947_3.7:python2_2.7.15-r2",
          "ruleIndex": 220,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-9947] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22897_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 221,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22897] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.7:libressl2.6-libssl_2.6.5-r0",
          "ruleIndex": 222,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19645_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 223,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-19645] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48564_3.7:python2_2.7.15-r2",
          "ruleIndex": 224,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48564] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3733_3.7:python2_2.7.15-r2",
          "ruleIndex": 225,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3733] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.7:ssl_client_1.27.2-r11",
          "ruleIndex": 226,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.7:libressl2.6-libtls_2.6.5-r0",
          "ruleIndex": 227,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48437_3.7:libressl2.6-libssl_2.6.5-r0",
          "ruleIndex": 228,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48437] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9740_3.7:python2_2.7.15-r2",
          "ruleIndex": 229,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-9740] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
          "ruleIndex": 230,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17595] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13631_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 231,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13631] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595_3.7:ncurses-terminfo_6.0_p20171125-r1",
          "ruleIndex": 232,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17595] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.7:libressl2.6-libtls_2.6.5-r0",
          "ruleIndex": 233,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17595_3.7:ncurses-libs_6.0_p20171125-r1",
          "ruleIndex": 234,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17595] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41581_3.7:libressl2.6-libcrypto_2.6.5-r0",
          "ruleIndex": 235,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-41581] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20852_3.7:python2_2.7.15-r2",
          "ruleIndex": 236,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-20852] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594_3.7:ncurses-terminfo_6.0_p20171125-r1",
          "ruleIndex": 237,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17594] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
          "ruleIndex": 238,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17594] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17594_3.7:ncurses-libs_6.0_p20171125-r1",
          "ruleIndex": 239,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-17594] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-0340_3.7:expat_2.2.8-r0",
          "ruleIndex": 240,
          "level": "warning",
          "message": {
            "text": "[CVE-2013-0340] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22924_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 241,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22924] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 242,
          "level": "note",
          "message": {
            "text": "[CVE-2022-35252] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-5435_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 243,
          "level": "note",
          "message": {
            "text": "[CVE-2019-5435] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752_pip_9.0.3",
          "ruleIndex": 244,
          "level": "note",
          "message": {
            "text": "[CVE-2023-5752] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 245,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22898] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22890_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 246,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22890] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 247,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 248,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8284] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25815_3.7:git_2.15.3-r0",
          "ruleIndex": 249,
          "level": "note",
          "message": {
            "text": "[CVE-2023-25815] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.8.3",
          "ruleIndex": 250,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1348_3.7:git_2.15.3-r0",
          "ruleIndex": 251,
          "level": "note",
          "message": {
            "text": "[CVE-2019-1348] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 252,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32465_3.7:git_2.15.3-r0",
          "ruleIndex": 253,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32465] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28757_3.7:expat_2.2.8-r0",
          "ruleIndex": 254,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28757] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 255,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 256,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 257,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32020_3.7:git_2.15.3-r0",
          "ruleIndex": 258,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32020] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32021_3.7:git_2.15.3-r0",
          "ruleIndex": 259,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32021] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32002_3.7:git_2.15.3-r0",
          "ruleIndex": 260,
          "level": "error",
          "message": {
            "text": "[CVE-2024-32002] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 261,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.8.3",
          "ruleIndex": 262,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 263,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25236_3.7:expat_2.2.8-r0",
          "ruleIndex": 264,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25236] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.8.3",
          "ruleIndex": 265,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23852_3.7:expat_2.2.8-r0",
          "ruleIndex": 266,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23852] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1587_3.7:pcre2_10.30-r0",
          "ruleIndex": 267,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1587] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.8.3",
          "ruleIndex": 268,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1586_3.7:pcre2_10.30-r0",
          "ruleIndex": 269,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1586] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25235_3.7:expat_2.2.8-r0",
          "ruleIndex": 270,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25235] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434_3.7:zlib_1.2.11-r1",
          "ruleIndex": 271,
          "level": "error",
          "message": {
            "text": "[CVE-2022-37434] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.8.3",
          "ruleIndex": 272,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25315_3.7:expat_2.2.8-r0",
          "ruleIndex": 273,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25315] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 274,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32221] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11888_github.com/golang/go_1.8.3",
          "ruleIndex": 275,
          "level": "error",
          "message": {
            "text": "[CVE-2019-11888] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.8.3",
          "ruleIndex": 276,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22823_3.7:expat_2.2.8-r0",
          "ruleIndex": 277,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22823] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22822_3.7:expat_2.2.8-r0",
          "ruleIndex": 278,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22822] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.8.3",
          "ruleIndex": 279,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22824_3.7:expat_2.2.8-r0",
          "ruleIndex": 280,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22824] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48565_3.7:python2_2.7.15-r2",
          "ruleIndex": 281,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48565] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11656_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 282,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11656] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10160_3.7:python2_2.7.15-r2",
          "ruleIndex": 283,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10160] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52425_3.7:expat_2.2.8-r0",
          "ruleIndex": 284,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52425] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_3.7:ncurses-terminfo_6.0_p20171125-r1",
          "ruleIndex": 285,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23990_3.7:expat_2.2.8-r0",
          "ruleIndex": 286,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23990] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.8.3",
          "ruleIndex": 287,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.8.3",
          "ruleIndex": 288,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.8.3",
          "ruleIndex": 289,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.8.3",
          "ruleIndex": 290,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 291,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22946] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.8.3",
          "ruleIndex": 292,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.8.3",
          "ruleIndex": 293,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.8.3",
          "ruleIndex": 294,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22825_3.7:expat_2.2.8-r0",
          "ruleIndex": 295,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22825] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.8.3",
          "ruleIndex": 296,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 297,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.8.3",
          "ruleIndex": 298,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0601_github.com/golang/go_1.8.3",
          "ruleIndex": 299,
          "level": "error",
          "message": {
            "text": "[CVE-2020-0601] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25032_3.7:zlib_1.2.11-r1",
          "ruleIndex": 300,
          "level": "error",
          "message": {
            "text": "[CVE-2018-25032] sha256__3fc64803ca2de7279269048fe2b8b3c73d4536448c87c32375b2639ac168a48b.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 301,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196_github.com/golang/go_1.8.3",
          "ruleIndex": 302,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33196] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918_github.com/golang/go_1.8.3",
          "ruleIndex": 303,
          "level": "error",
          "message": {
            "text": "[CVE-2021-27918] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.8.3",
          "ruleIndex": 304,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22827_3.7:expat_2.2.8-r0",
          "ruleIndex": 305,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22827] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43680_3.7:expat_2.2.8-r0",
          "ruleIndex": 306,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43680] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.8.3",
          "ruleIndex": 307,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 308,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22576] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40674_3.7:expat_2.2.8-r0",
          "ruleIndex": 309,
          "level": "error",
          "message": {
            "text": "[CVE-2022-40674] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.8.3",
          "ruleIndex": 310,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.8.3",
          "ruleIndex": 311,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_3.7:ncurses-libs_6.0_p20171125-r1",
          "ruleIndex": 312,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198_github.com/golang/go_1.8.3",
          "ruleIndex": 313,
          "level": "error",
          "message": {
            "text": "[CVE-2021-33198] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22826_3.7:expat_2.2.8-r0",
          "ruleIndex": 314,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22826] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.8.3",
          "ruleIndex": 315,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.8.3",
          "ruleIndex": 316,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.8.3",
          "ruleIndex": 317,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.8.3",
          "ruleIndex": 318,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.8.3",
          "ruleIndex": 319,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 320,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27781] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3115_github.com/golang/go_1.8.3",
          "ruleIndex": 321,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3115] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.8.3",
          "ruleIndex": 322,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16056_3.7:python2_2.7.15-r2",
          "ruleIndex": 323,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16056] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7104_3.7:sqlite-libs_3.25.3-r2",
          "ruleIndex": 324,
          "level": "error",
          "message": {
            "text": "[CVE-2023-7104] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.8.3",
          "ruleIndex": 325,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41409_3.7:pcre2_10.30-r0",
          "ruleIndex": 326,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41409] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29491_3.7:ncurses-terminfo-base_6.0_p20171125-r1",
          "ruleIndex": 327,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29491] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.8.3",
          "ruleIndex": 328,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.8.3",
          "ruleIndex": 329,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.8.3",
          "ruleIndex": 330,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293_github.com/golang/go_1.8.3",
          "ruleIndex": 331,
          "level": "error",
          "message": {
            "text": "[CVE-2021-39293] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.8.3",
          "ruleIndex": 332,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25652_3.7:git_2.15.3-r0",
          "ruleIndex": 333,
          "level": "error",
          "message": {
            "text": "[CVE-2023-25652] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9634_github.com/golang/go_1.8.3",
          "ruleIndex": 334,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9634] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 335,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.8.3",
          "ruleIndex": 336,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0391_3.7:python2_2.7.15-r2",
          "ruleIndex": 337,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0391] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36632_3.7:python2_2.7.15-r2",
          "ruleIndex": 338,
          "level": "error",
          "message": {
            "text": "[CVE-2023-36632] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24329_3.7:python2_2.7.15-r2",
          "ruleIndex": 339,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24329] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-18276_3.7:bash_4.4.19-r1",
          "ruleIndex": 340,
          "level": "error",
          "message": {
            "text": "[CVE-2019-18276] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48560_3.7:python2_2.7.15-r2",
          "ruleIndex": 341,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48560] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-9674_3.7:python2_2.7.15-r2",
          "ruleIndex": 342,
          "level": "error",
          "message": {
            "text": "[CVE-2019-9674] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2007-4559_3.7:python2_2.7.15-r2",
          "ruleIndex": 343,
          "level": "warning",
          "message": {
            "text": "[CVE-2007-4559] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039_github.com/golang/go_1.8.3",
          "ruleIndex": 344,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-14039] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48566_3.7:python2_2.7.15-r2",
          "ruleIndex": 345,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-48566] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25313_3.7:expat_2.2.8-r0",
          "ruleIndex": 346,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-25313] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 347,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 348,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22923] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.8.3",
          "ruleIndex": 349,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.8.3",
          "ruleIndex": 350,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897_setuptools_39.0.1",
          "ruleIndex": 351,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-40897] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221_github.com/golang/go_1.8.3",
          "ruleIndex": 352,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36221] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197_github.com/golang/go_1.8.3",
          "ruleIndex": 353,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-33197] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.8.3",
          "ruleIndex": 354,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__f6146202082dec17ef6ac17ae161f4abb840c9aac225e275cb04629e83bc2e95.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 355,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22922] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_3.7:libcurl_7.61.1-r3",
          "ruleIndex": 356,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32004_3.7:git_2.15.3-r0",
          "ruleIndex": 357,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32004] sha256__ada60d45b88d4b8c59ea92dc92b65537bddbbff6a2def532fc40d25d6403f926.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2007-4559",
              "name": "CVE-2007-4559",
              "shortDescription": {
                "text": "Scanner for CVE-2007-4559"
              },
              "fullDescription": {
                "text": "The scanner checks whether `tarfile.open` is called with external input, and whether any of the following vulnerable functions are called on its result:\n\n* `tarfile.TarFile.extractall`\n\n* `tarfile.TarInfo.extract`",
                "markdown": "The scanner checks whether `tarfile.open` is called with external input, and whether any of the following vulnerable functions are called on its result:\n\n* `tarfile.TarFile.extractall`\n\n* `tarfile.TarInfo.extract`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-29804",
              "name": "CVE-2022-29804",
              "shortDescription": {
                "text": "Scanner for CVE-2022-29804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-38297",
              "name": "CVE-2021-38297",
              "shortDescription": {
                "text": "Scanner for CVE-2021-38297"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-9634",
              "name": "CVE-2019-9634",
              "shortDescription": {
                "text": "Scanner for CVE-2019-9634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30580",
              "name": "CVE-2022-30580",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30580"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-0601",
              "name": "CVE-2020-0601",
              "shortDescription": {
                "text": "Scanner for CVE-2020-0601"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30634",
              "name": "CVE-2022-30634",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14039",
              "name": "CVE-2020-14039",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41716",
              "name": "CVE-2022-41716",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41716"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41720",
              "name": "CVE-2022-41720",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41720"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called.",
                "markdown": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41722",
              "name": "CVE-2022-41722",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41722"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3115",
              "name": "CVE-2021-3115",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-1000517",
              "name": "CVE-2018-1000517",
              "shortDescription": {
                "text": "Scanner for CVE-2018-1000517"
              },
              "fullDescription": {
                "text": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified.",
                "markdown": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-1000500",
              "name": "CVE-2018-1000500",
              "shortDescription": {
                "text": "Scanner for CVE-2018-1000500"
              },
              "fullDescription": {
                "text": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified.",
                "markdown": "The scanner checks whether the BusyBox binary supports `wget`.\n\nNote: The scanner does not check whether busybox's `wget` is executed in the image. To confirm the applicability, this should also be verified."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-25032",
              "name": "CVE-2018-25032",
              "shortDescription": {
                "text": "Scanner for CVE-2018-25032"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `deflateInit2` is called.",
                "markdown": "The scanner checks whether the vulnerable function `deflateInit2` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28321",
              "name": "CVE-2023-28321",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28321"
              },
              "fullDescription": {
                "text": "The CVE is applicable in all possible configurations of cURL",
                "markdown": "The CVE is applicable in all possible configurations of cURL"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2022-0391",
              "name": "CVE-2022-0391",
              "shortDescription": {
                "text": "Scanner for CVE-2022-0391"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24329",
              "name": "CVE-2023-24329",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24329"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-10160",
              "name": "CVE-2019-10160",
              "shortDescription": {
                "text": "Scanner for CVE-2019-10160"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45283",
              "name": "CVE-2023-45283",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45283"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-11888",
              "name": "CVE-2019-11888",
              "shortDescription": {
                "text": "Scanner for CVE-2019-11888"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14809",
              "name": "CVE-2019-14809",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14809"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-16056",
              "name": "CVE-2019-16056",
              "shortDescription": {
                "text": "Scanner for CVE-2019-16056"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-36632",
              "name": "CVE-2023-36632",
              "shortDescription": {
                "text": "Scanner for CVE-2023-36632"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17596",
              "name": "CVE-2019-17596",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17596"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-9674",
              "name": "CVE-2019-9674",
              "shortDescription": {
                "text": "Scanner for CVE-2019-9674"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `ZipFile.extractall` is called.",
                "markdown": "The scanner checks whether the vulnerable function `ZipFile.extractall` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-11656",
              "name": "CVE-2020-11656",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11656"
              },
              "fullDescription": {
                "text": "The scanner searches for an `sqlite` binary that is compiled with the vulnerable `SQLITE_DEBUG` flag, by checking for the ELF symbol `sqlite3DebugPrintf` in the binary",
                "markdown": "The scanner searches for an `sqlite` binary that is compiled with the vulnerable `SQLITE_DEBUG` flag, by checking for the ELF symbol `sqlite3DebugPrintf` in the binary"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22923",
              "name": "CVE-2021-22923",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22923"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22922",
              "name": "CVE-2021-22922",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22922"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22946",
              "name": "CVE-2021-22946",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22946"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`",
                "markdown": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-27918",
              "name": "CVE-2021-27918",
              "shortDescription": {
                "text": "Scanner for CVE-2021-27918"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33195",
              "name": "CVE-2021-33195",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33195"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33196",
              "name": "CVE-2021-33196",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33196"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2880",
              "name": "CVE-2022-2880",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-36221",
              "name": "CVE-2021-36221",
              "shortDescription": {
                "text": "Scanner for CVE-2021-36221"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33197",
              "name": "CVE-2021-33197",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33197"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-33198",
              "name": "CVE-2021-33198",
              "shortDescription": {
                "text": "Scanner for CVE-2021-33198"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-39293",
              "name": "CVE-2021-39293",
              "shortDescription": {
                "text": "Scanner for CVE-2021-39293"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41771",
              "name": "CVE-2021-41771",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41771"
              },
              "fullDescription": {
                "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input.",
                "markdown": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41772",
              "name": "CVE-2021-41772",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used.",
                "markdown": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-44717",
              "name": "CVE-2021-44717",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44717"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1586",
              "name": "CVE-2022-1586",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1586"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1587",
              "name": "CVE-2022-1587",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1587"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1962",
              "name": "CVE-2022-1962",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1962"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23772",
              "name": "CVE-2022-23772",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Rat.SetString` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Rat.SetString` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23806",
              "name": "CVE-2022-23806",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23806"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```",
                "markdown": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24675",
              "name": "CVE-2022-24675",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24675"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `pem.Decode` is called.",
                "markdown": "The scanner checks whether the vulnerable function `pem.Decode` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24921",
              "name": "CVE-2022-24921",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24921"
              },
              "fullDescription": {
                "text": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```",
                "markdown": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28131",
              "name": "CVE-2022-28131",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28131"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28327",
              "name": "CVE-2022-28327",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28327"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2879",
              "name": "CVE-2022-2879",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2879"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called.",
                "markdown": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30630",
              "name": "CVE-2022-30630",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30630"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `fs.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `fs.Glob` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30631",
              "name": "CVE-2022-30631",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30631"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Reader.Read` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Reader.Read` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30632",
              "name": "CVE-2022-30632",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30632"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `filepath.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `filepath.Glob` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30633",
              "name": "CVE-2022-30633",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30633"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32148",
              "name": "CVE-2022-32148",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32148"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32189",
              "name": "CVE-2022-32189",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32189"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called.",
                "markdown": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-37434",
              "name": "CVE-2022-37434",
              "shortDescription": {
                "text": "Scanner for CVE-2022-37434"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22824",
              "name": "CVE-2022-22824",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22824"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-40674",
              "name": "CVE-2022-40674",
              "shortDescription": {
                "text": "Scanner for CVE-2022-40674"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43680",
              "name": "CVE-2022-43680",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43680"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22822",
              "name": "CVE-2022-22822",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22822"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25235",
              "name": "CVE-2022-25235",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25235"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23990",
              "name": "CVE-2022-23990",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23990"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23852",
              "name": "CVE-2022-23852",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23852"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22825",
              "name": "CVE-2022-22825",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22825"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-52425",
              "name": "CVE-2023-52425",
              "shortDescription": {
                "text": "Scanner for CVE-2023-52425"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks.",
                "markdown": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25313",
              "name": "CVE-2022-25313",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25313"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22823",
              "name": "CVE-2022-22823",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22823"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22827",
              "name": "CVE-2022-22827",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22827"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22826",
              "name": "CVE-2022-22826",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22826"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25315",
              "name": "CVE-2022-25315",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25315"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25236",
              "name": "CVE-2022-25236",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25236"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-40897",
              "name": "CVE-2022-40897",
              "shortDescription": {
                "text": "Scanner for CVE-2022-40897"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `find_external_links` is called.\n\nNote that the scanner does not check for an additional vulnerable case in which the `pip` CLI tool is executed with the  `--editable` flag. In this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal security impact.",
                "markdown": "The scanner checks whether the vulnerable function `find_external_links` is called.\n\nNote that the scanner does not check for an additional vulnerable case in which the `pip` CLI tool is executed with the  `--editable` flag. In this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal security impact."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41715",
              "name": "CVE-2022-41715",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41715"
              },
              "fullDescription": {
                "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`.",
                "markdown": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41724",
              "name": "CVE-2022-41724",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41724"
              },
              "fullDescription": {
                "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)",
                "markdown": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41725",
              "name": "CVE-2022-41725",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41725"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24536",
              "name": "CVE-2023-24536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24536"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42916",
              "name": "CVE-2022-42916",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42916"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43551",
              "name": "CVE-2022-43551",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43551"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-23914",
              "name": "CVE-2023-23914",
              "shortDescription": {
                "text": "Scanner for CVE-2023-23914"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24534",
              "name": "CVE-2023-24534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24534"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24537",
              "name": "CVE-2023-24537",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24537"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24538",
              "name": "CVE-2023-24538",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24538"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24539",
              "name": "CVE-2023-24539",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24539"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24540",
              "name": "CVE-2023-24540",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24540"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27533",
              "name": "CVE-2023-27533",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27533"
              },
              "fullDescription": {
                "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`",
                "markdown": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27536",
              "name": "CVE-2023-27536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27536"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28322",
              "name": "CVE-2023-28322",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28322"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)",
                "markdown": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32221",
              "name": "CVE-2022-32221",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32221"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler.",
                "markdown": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29400",
              "name": "CVE-2023-29400",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29400"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29402",
              "name": "CVE-2023-29402",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29402"
              },
              "fullDescription": {
                "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)",
                "markdown": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29403",
              "name": "CVE-2023-29403",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29403"
              },
              "fullDescription": {
                "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled",
                "markdown": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29406",
              "name": "CVE-2023-29406",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29406"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29491",
              "name": "CVE-2023-29491",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29491"
              },
              "fullDescription": {
                "text": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`",
                "markdown": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29409",
              "name": "CVE-2023-29409",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29409"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-48565",
              "name": "CVE-2022-48565",
              "shortDescription": {
                "text": "Scanner for CVE-2022-48565"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called -\n\n* `plist.load`\n* `plist.loads` with a non-constant 1st (`data`) argument",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called -\n\n* `plist.load`\n* `plist.loads` with a non-constant 1st (`data`) argument"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-48566",
              "name": "CVE-2022-48566",
              "shortDescription": {
                "text": "Scanner for CVE-2022-48566"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called -\n\n* `hmac.compare_digest`\n* `multiprocessing.connection.Listener` (indirectly calls `compare_digest`)\n\nEven if the vulnerable functions are called, the attacker must be able to mount a side-channel timing attack on `hmac.compare_digest`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called -\n\n* `hmac.compare_digest`\n* `multiprocessing.connection.Listener` (indirectly calls `compare_digest`)\n\nEven if the vulnerable functions are called, the attacker must be able to mount a side-channel timing attack on `hmac.compare_digest`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-48560",
              "name": "CVE-2022-48560",
              "shortDescription": {
                "text": "Scanner for CVE-2022-48560"
              },
              "fullDescription": {
                "text": "The scanner checks whether the functions `heapq.heappushpop()` or `heapq.heappush()` are called.",
                "markdown": "The scanner checks whether the functions `heapq.heappushpop()` or `heapq.heappush()` are called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29405",
              "name": "CVE-2023-29405",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29405"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23773",
              "name": "CVE-2022-23773",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23773"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39323",
              "name": "CVE-2023-39323",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39323"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29404",
              "name": "CVE-2023-29404",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29404"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45285",
              "name": "CVE-2023-45285",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45285"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction.",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41409",
              "name": "CVE-2022-41409",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41409"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact.",
                "markdown": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-38545",
              "name": "CVE-2023-38545",
              "shortDescription": {
                "text": "Scanner for CVE-2023-38545"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45287",
              "name": "CVE-2023-45287",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45287"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-48795",
              "name": "CVE-2023-48795",
              "shortDescription": {
                "text": "Scanner for CVE-2023-48795"
              },
              "fullDescription": {
                "text": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable).",
                "markdown": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable)."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2023-7104",
              "name": "CVE-2023-7104",
              "shortDescription": {
                "text": "Scanner for CVE-2023-7104"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)",
                "markdown": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27534",
              "name": "CVE-2023-27534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27534"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address.",
                "markdown": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-25652",
              "name": "CVE-2023-25652",
              "shortDescription": {
                "text": "Scanner for CVE-2023-25652"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `git apply` command is used with the vulnerable option:\n\n* `--reject` \n\nThis vulnerability can also be triggered by an interactive user.",
                "markdown": "The scanner checks whether the vulnerable `git apply` command is used with the vulnerable option:\n\n* `--reject` \n\nThis vulnerability can also be triggered by an interactive user."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45288",
              "name": "CVE-2023-45288",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45288"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`.",
                "markdown": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-27782",
              "name": "CVE-2022-27782",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27782"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29007",
              "name": "CVE-2023-29007",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29007"
              },
              "fullDescription": {
                "text": "The scanner checks whether git is used with one or more of the vulnerable options\n\n* `--rename-section`\n* `--remove-section`\n\nAlso, it checks whether the vulnerable `git` command is used with the vulnerable option `git submodule deinit`.\n\nThis vulnerability can also be triggered by an interactive user.",
                "markdown": "The scanner checks whether git is used with one or more of the vulnerable options\n\n* `--rename-section`\n* `--remove-section`\n\nAlso, it checks whether the vulnerable `git` command is used with the vulnerable option `git submodule deinit`.\n\nThis vulnerability can also be triggered by an interactive user."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2022-27781",
              "name": "CVE-2022-27781",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27781"
              },
              "fullDescription": {
                "text": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`.",
                "markdown": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22576",
              "name": "CVE-2022-22576",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22576"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used.",
                "markdown": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-32002",
              "name": "CVE-2024-32002",
              "shortDescription": {
                "text": "Scanner for CVE-2024-32002"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-18276",
              "name": "CVE-2019-18276",
              "shortDescription": {
                "text": "Scanner for CVE-2019-18276"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable ‘setuid()’ function is called from a SUID binary.",
                "markdown": "The scanner checks whether the vulnerable ‘setuid()’ function is called from a SUID binary."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-32004",
              "name": "CVE-2024-32004",
              "shortDescription": {
                "text": "Scanner for CVE-2024-32004"
              },
              "fullDescription": {
                "text": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`).",
                "markdown": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30635",
              "name": "CVE-2022-30635",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30635"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called.",
                "markdown": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-15358",
              "name": "CVE-2020-15358",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15358"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27043",
              "name": "CVE-2023-27043",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27043"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2013-7338",
              "name": "CVE-2013-7338",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2013-7338"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1387",
              "name": "CVE-2019-1387",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1387"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15586",
              "name": "CVE-2020-15586",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15586"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5436",
              "name": "CVE-2019-5436",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5436"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8169",
              "name": "CVE-2020-8169",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8169"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-9740",
              "name": "CVE-2019-9740",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-9740"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8231",
              "name": "CVE-2020-8231",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8231"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32205",
              "name": "CVE-2022-32205",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32205"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-17594",
              "name": "CVE-2019-17594",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17594"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22876",
              "name": "CVE-2021-22876",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22876"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-25815",
              "name": "CVE-2023-25815",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-25815"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39318",
              "name": "CVE-2023-39318",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39318"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-20916",
              "name": "CVE-2019-20916",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-20916"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27776",
              "name": "CVE-2022-27776",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27776"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-24765",
              "name": "CVE-2022-24765",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-24765"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3733",
              "name": "CVE-2021-3733",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3733"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5018",
              "name": "CVE-2019-5018",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5018"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-14697",
              "name": "CVE-2019-14697",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-14697"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1349",
              "name": "CVE-2019-1349",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1349"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20852",
              "name": "CVE-2018-20852",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20852"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-15903",
              "name": "CVE-2019-15903",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-15903"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13435",
              "name": "CVE-2020-13435",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13435"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20225",
              "name": "CVE-2018-20225",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20225"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42384",
              "name": "CVE-2021-42384",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42384"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-13347",
              "name": "CVE-2018-13347",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-13347"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5443",
              "name": "CVE-2019-5443",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5443"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32208",
              "name": "CVE-2022-32208",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32208"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5752",
              "name": "CVE-2023-5752",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5752"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5435",
              "name": "CVE-2019-5435",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5435"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16168",
              "name": "CVE-2019-16168",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16168"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-22490",
              "name": "CVE-2023-22490",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-22490"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-15041",
              "name": "CVE-2017-15041",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-15041"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28366",
              "name": "CVE-2020-28366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42915",
              "name": "CVE-2023-42915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-31012",
              "name": "CVE-2022-31012",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-31012"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23915",
              "name": "CVE-2023-23915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38039",
              "name": "CVE-2023-38039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22925",
              "name": "CVE-2021-22925",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22925"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27774",
              "name": "CVE-2022-27774",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27774"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-17983",
              "name": "CVE-2018-17983",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-17983"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-24532",
              "name": "CVE-2023-24532",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-24532"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27537",
              "name": "CVE-2023-27537",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27537"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3114",
              "name": "CVE-2021-3114",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3114"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28667",
              "name": "CVE-2021-28667",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28667"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-1971",
              "name": "CVE-2020-1971",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-1971"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8285",
              "name": "CVE-2020-8285",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8285"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32021",
              "name": "CVE-2024-32021",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32021"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1351",
              "name": "CVE-2019-1351",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1351"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36159",
              "name": "CVE-2021-36159",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36159"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42380",
              "name": "CVE-2021-42380",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42380"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46880",
              "name": "CVE-2021-46880",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42378",
              "name": "CVE-2021-42378",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42378"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13434",
              "name": "CVE-2020-13434",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13434"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2398",
              "name": "CVE-2024-2398",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2398"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46101",
              "name": "CVE-2021-46101",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46101"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-5260",
              "name": "CVE-2020-5260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-5260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-23521",
              "name": "CVE-2022-23521",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-23521"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-25314",
              "name": "CVE-2022-25314",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-25314"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3572",
              "name": "CVE-2021-3572",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3572"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28757",
              "name": "CVE-2024-28757",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28757"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-15042",
              "name": "CVE-2017-15042",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-15042"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-28391",
              "name": "CVE-2022-28391",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-28391"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42382",
              "name": "CVE-2021-42382",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42382"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8284",
              "name": "CVE-2020-8284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39319",
              "name": "CVE-2023-39319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13632",
              "name": "CVE-2020-13632",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13632"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-39253",
              "name": "CVE-2022-39253",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-39253"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32465",
              "name": "CVE-2024-32465",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32465"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-17522",
              "name": "CVE-2017-17522",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-17522"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-18348",
              "name": "CVE-2019-18348",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-18348"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22890",
              "name": "CVE-2021-22890",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22890"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-35252",
              "name": "CVE-2022-35252",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35252"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-6574",
              "name": "CVE-2018-6574",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-6574"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-19486",
              "name": "CVE-2018-19486",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-19486"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-41903",
              "name": "CVE-2022-41903",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-41903"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-17595",
              "name": "CVE-2019-17595",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-17595"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1348",
              "name": "CVE-2019-1348",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1348"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22947",
              "name": "CVE-2021-22947",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22947"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-2940",
              "name": "CVE-2009-2940",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-2940"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-13404",
              "name": "CVE-2019-13404",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-13404"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-5652",
              "name": "CVE-2015-5652",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-5652"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-35784",
              "name": "CVE-2023-35784",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-35784"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42379",
              "name": "CVE-2021-42379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5747",
              "name": "CVE-2019-5747",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5747"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2466",
              "name": "CVE-2024-2466",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2466"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20679",
              "name": "CVE-2018-20679",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20679"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28367",
              "name": "CVE-2020-28367",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28367"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-3720",
              "name": "CVE-2009-3720",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-3720"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-1705",
              "name": "CVE-2022-1705",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-1705"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22926",
              "name": "CVE-2021-22926",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22926"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28928",
              "name": "CVE-2020-28928",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28928"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-40330",
              "name": "CVE-2021-40330",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-40330"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22924",
              "name": "CVE-2021-22924",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22924"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-24553",
              "name": "CVE-2020-24553",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-24553"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3177",
              "name": "CVE-2021-3177",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3177"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42381",
              "name": "CVE-2021-42381",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42381"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-6486",
              "name": "CVE-2019-6486",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-6486"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-39537",
              "name": "CVE-2021-39537",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-39537"
              },
              "fullDescription": {
                "text": "The scanner searches for execution evidence of the vulnerable tool `captoinfo`.",
                "markdown": "The scanner searches for execution evidence of the vulnerable tool `captoinfo`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-24975",
              "name": "CVE-2022-24975",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-24975"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46218",
              "name": "CVE-2023-46218",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46218"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-24056",
              "name": "CVE-2023-24056",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-24056"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19604",
              "name": "CVE-2019-19604",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19604"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22897",
              "name": "CVE-2021-22897",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22897"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32206",
              "name": "CVE-2022-32206",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32206"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16935",
              "name": "CVE-2019-16935",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16935"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42375",
              "name": "CVE-2021-42375",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42375"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42376",
              "name": "CVE-2021-42376",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42376"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19646",
              "name": "CVE-2019-19646",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19646"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1354",
              "name": "CVE-2019-1354",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1354"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-41581",
              "name": "CVE-2021-41581",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-41581"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42374",
              "name": "CVE-2021-42374",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42374"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46219",
              "name": "CVE-2023-46219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19244",
              "name": "CVE-2019-19244",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19244"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-39260",
              "name": "CVE-2022-39260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-39260"
              },
              "fullDescription": {
                "text": "The scanner checks whether `git shell` has interactive mode enabled and is also configured as a login shell for a user.",
                "markdown": "The scanner checks whether `git shell` has interactive mode enabled and is also configured as a login shell for a user."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1352",
              "name": "CVE-2019-1352",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1352"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-9947",
              "name": "CVE-2019-9947",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-9947"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27779",
              "name": "CVE-2022-27779",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27779"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16980",
              "name": "CVE-2018-16980",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16980"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42383",
              "name": "CVE-2021-42383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-5010",
              "name": "CVE-2019-5010",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-5010"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52426",
              "name": "CVE-2023-52426",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52426"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-13348",
              "name": "CVE-2018-13348",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-13348"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16873",
              "name": "CVE-2018-16873",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16873"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-29187",
              "name": "CVE-2022-29187",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-29187"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1000802",
              "name": "CVE-2018-1000802",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1000802"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23916",
              "name": "CVE-2023-23916",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23916"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0778",
              "name": "CVE-2022-0778",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0778"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-18207",
              "name": "CVE-2017-18207",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-18207"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8286",
              "name": "CVE-2020-8286",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8286"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39326",
              "name": "CVE-2023-39326",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39326"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-45960",
              "name": "CVE-2021-45960",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-45960"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22901",
              "name": "CVE-2021-22901",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22901"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30629",
              "name": "CVE-2022-30629",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30629"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-13346",
              "name": "CVE-2018-13346",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-13346"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48564",
              "name": "CVE-2022-48564",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48564"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2013-0340",
              "name": "CVE-2013-0340",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2013-0340"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-11655",
              "name": "CVE-2020-11655",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-11655"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27775",
              "name": "CVE-2022-27775",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27775"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32207",
              "name": "CVE-2022-32207",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32207"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1353",
              "name": "CVE-2019-1353",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1353"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28320",
              "name": "CVE-2023-28320",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28320"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-43552",
              "name": "CVE-2022-43552",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-43552"
              },
              "fullDescription": {
                "text": "The scanner checks whether the function `curl_easy_setopt()` is called to define `curl` options. The scanner does not check which options are passed to the function. \nA manual check is required to check if the `CURLOPT_PROXY` is defined along with a `CURLOPT_URL`  starting by `smb:` or `telnet:`.",
                "markdown": "The scanner checks whether the function `curl_easy_setopt()` is called to define `curl` options. The scanner does not check which options are passed to the function. \nA manual check is required to check if the `CURLOPT_PROXY` is defined along with a `CURLOPT_URL`  starting by `smb:` or `telnet:`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-29458",
              "name": "CVE-2022-29458",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-29458"
              },
              "fullDescription": {
                "text": "The scanner searches for execution evidence of the vulnerable tool  `tic`.",
                "markdown": "The scanner searches for execution evidence of the vulnerable tool  `tic`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-1350",
              "name": "CVE-2019-1350",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-1350"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-30139",
              "name": "CVE-2021-30139",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-30139"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38546",
              "name": "CVE-2023-38546",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38546"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-20227",
              "name": "CVE-2021-20227",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-20227"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46143",
              "name": "CVE-2021-46143",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46143"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27535",
              "name": "CVE-2023-27535",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27535"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13630",
              "name": "CVE-2020-13630",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13630"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0853",
              "name": "CVE-2024-0853",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0853"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-34558",
              "name": "CVE-2021-34558",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-34558"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16874",
              "name": "CVE-2018-16874",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16874"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-42915",
              "name": "CVE-2022-42915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-42915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-16276",
              "name": "CVE-2019-16276",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-16276"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32020",
              "name": "CVE-2024-32020",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32020"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42386",
              "name": "CVE-2021-42386",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42386"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-21300",
              "name": "CVE-2021-21300",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-21300"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48437",
              "name": "CVE-2022-48437",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48437"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23946",
              "name": "CVE-2023-23946",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23946"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `git apply` command is used in the init flow.",
                "markdown": "The scanner checks whether the `git apply` command is used in the init flow."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27780",
              "name": "CVE-2022-27780",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27780"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-29511",
              "name": "CVE-2020-29511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-29511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28319",
              "name": "CVE-2023-28319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28831",
              "name": "CVE-2021-28831",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28831"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30115",
              "name": "CVE-2022-30115",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-11008",
              "name": "CVE-2020-11008",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-11008"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27538",
              "name": "CVE-2023-27538",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27538"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-26488",
              "name": "CVE-2022-26488",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-26488"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22898",
              "name": "CVE-2021-22898",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22898"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-7187",
              "name": "CVE-2018-7187",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-7187"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42385",
              "name": "CVE-2021-42385",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42385"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2004",
              "name": "CVE-2024-2004",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2004"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13631",
              "name": "CVE-2020-13631",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13631"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-35260",
              "name": "CVE-2022-35260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8177",
              "name": "CVE-2020-8177",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8177"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19645",
              "name": "CVE-2019-19645",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19645"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45284",
              "name": "CVE-2023-45284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2379",
              "name": "CVE-2024-2379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-29510",
              "name": "CVE-2020-29510",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-29510"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22945",
              "name": "CVE-2021-22945",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22945"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30065",
              "name": "CVE-2022-30065",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30065"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-19242",
              "name": "CVE-2019-19242",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-19242"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-16875",
              "name": "CVE-2018-16875",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-16875"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718790781-1054783399/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718790741-701055474/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2007-4559",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `tarfile.open` is called with external input, and whether any of the following vulnerable functions are called on its result:\n\n* `tarfile.TarFile.extractall`\n\n* `tarfile.TarInfo.extract`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-29804",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-38297",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2019-9634",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30580",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-0601",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30634",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-14039",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41716",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41722",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-3115",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2018-1000517",
          "message": {
            "text": "The vulnerable `BusyBox` containing `wget` tool is present"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/busybox"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-1000500",
          "message": {
            "text": "The vulnerable `BusyBox` containing `wget` tool is present"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///bin/busybox"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2018-25032",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `deflateInit2` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-0391",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2023-24329",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2019-10160",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `urlparse` with external input to its 1st (`urlstring`) argument.\n* `urlsplit` with external input to its 1st (`url`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45283",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2019-11888",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function parseHost is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Hostname is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-14809",
          "message": {
            "text": "The vulnerable function URL.Port is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-16056",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2023-36632",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `parseaddr` is called with external input to its 1st (`address`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2019-17596",
          "message": {
            "text": "The vulnerable function Verify is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-9674",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `ZipFile.extractall` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-11656",
          "kind": "pass",
          "message": {
            "text": "The scanner searches for an `sqlite` binary that is compiled with the vulnerable `SQLITE_DEBUG` flag, by checking for the ELF symbol `sqlite3DebugPrintf` in the binary"
          }
        },
        {
          "ruleId": "applic_CVE-2021-22923",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22922",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22946",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-27918",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupCNAME is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupSRV is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupMX is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupNS is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33195",
          "message": {
            "text": "The vulnerable function Resolver.lookupAddr is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-33196",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `zip.OpenReader`\n\t\n* `zip.NewReader`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-2880",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-36221",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-33197",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-33198",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-39293",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-41771",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2021-41772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "message": {
            "text": "The vulnerable function forkExec is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-1586",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-1587",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `pcre2_jit_compile`\n* `pcre2_jit_compile_8`\n* `pcre2_jit_compile_16`\n* `pcre2_jit_compile_32`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-1962",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-23772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Rat.SetString` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30630",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `fs.Glob` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "message": {
            "text": "The vulnerable function gzip.Reader.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "message": {
            "text": "The vulnerable function filepath.Glob is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-22824",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-40674",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-43680",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22822",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25235",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23990",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23852",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22825",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-52425",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25313",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22823",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22827",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22826",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25315",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25236",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-40897",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `find_external_links` is called.\n\nNote that the scanner does not check for an additional vulnerable case in which the `pip` CLI tool is executed with the  `--editable` flag. In this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal security impact."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41715",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41724",
          "kind": "pass",
          "message": {
            "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
          }
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.ReadForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.readForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function newPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Part.populateHeaders is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "message": {
            "text": "The vulnerable function Reader.NextPart is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-42916",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-43551",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-23914",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.ReadMIMEHeader is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "message": {
            "text": "The vulnerable function Reader.upcomingHeaderNewlines is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24537",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-27533",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27536",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-28322",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
          }
        },
        {
          "ruleId": "applic_CVE-2022-32221",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "kind": "pass",
          "message": {
            "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29403",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Get is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Do is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Post is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.PostForm is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Client.Head is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.WriteProxy is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Request.write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.RoundTrip is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CloseIdleConnections is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "message": {
            "text": "The vulnerable function Transport.CancelRequest is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29491",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether a **setuid** binary calls any of the following vulnerable functions -\n- `initscr` \n- `setupterm`\n- `restartterm`\n- `_nc_read_file_entry`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Write is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Read is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Conn.Handshake is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function DialWithDialer is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "message": {
            "text": "The vulnerable function Dial is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-48565",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called -\n\n* `plist.load`\n* `plist.loads` with a non-constant 1st (`data`) argument"
          }
        },
        {
          "ruleId": "applic_CVE-2022-48566",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called -\n\n* `hmac.compare_digest`\n* `multiprocessing.connection.Listener` (indirectly calls `compare_digest`)\n\nEven if the vulnerable functions are called, the attacker must be able to mount a side-channel timing attack on `hmac.compare_digest`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-48560",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the functions `heapq.heappushpop()` or `heapq.heappush()` are called."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29405",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2022-23773",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-39323",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29404",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45285",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41409",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `pcre2test` binary exists on the scanned artifact."
          }
        },
        {
          "ruleId": "applic_CVE-2023-38545",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-7104",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-fetch"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-push"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftps"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-http"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27534",
          "message": {
            "text": "The vulnerable function curl_easy_setopt is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-https"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-25652",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `git apply` command is used with the vulnerable option:\n\n* `--reject` \n\nThis vulnerability can also be triggered by an interactive user."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-fetch"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-http-push"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftp"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-ftps"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-http"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "message": {
            "text": "The vulnerable function `curl_easy_setopt` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/libexec/git-core/git-remote-https"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27781",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-22576",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2024-32002",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2019-18276",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable ‘setuid()’ function is called from a SUID binary."
          }
        },
        {
          "ruleId": "applic_CVE-2024-32004",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`)."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30635",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/git-lfs"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718790781-1054783399/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718790741-701055474/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
