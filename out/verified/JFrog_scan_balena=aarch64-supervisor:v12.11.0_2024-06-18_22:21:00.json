{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2022-1292_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-1292] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-2068_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-2068] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-3711_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3711] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1l-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-1292_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-1292] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-2068_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-2068] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-3711_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3711] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1l-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-22945_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22945] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-32207_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32207] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32207_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32207] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48174_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-42810_systeminformation_5.6.10",
              "shortDescription": {
                "text": "[CVE-2023-42810] systeminformation 5.6.10"
              },
              "help": {
                "text": "systeminformation is a System Information Library for Node.JS. Versions 5.0.0 through 5.21.6 have a SSID Command Injection Vulnerability. The problem was fixed with a parameter check in version 5.21.7. As a workaround, check or sanitize parameter strings that are passed to `wifiConnections()`, `wifiNetworks()` (string only).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [5.21.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-36159_3.11:apk-tools_2.10.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-36159] 3.11:apk-tools 2.10.4-r3"
              },
              "help": {
                "text": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [2.10.7-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-48174_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2022-48174] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-22945_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22945] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2021-3712_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3712] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1l-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2023-0217_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0217] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3712_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3712] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1l-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2023-0215_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0215] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0286_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0286] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2023-0401_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0401] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0464_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0464] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-25032_3.11:zlib_1.2.11-r3",
              "shortDescription": {
                "text": "[CVE-2018-25032] 3.11:zlib 1.2.11-r3"
              },
              "help": {
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.2.11-r4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0286_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0286] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2023-0216_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0216] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0217_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0217] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0401_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0401] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-3786_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-3786] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-3786_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-3786] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0464_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0464] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0215_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0215] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0216_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0216] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-4450_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-4450] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-4450_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-4450] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-3602_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-3602] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-3602_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-3602] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.7-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27534_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27534] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Undetermined       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-27534_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27534] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Undetermined       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42382_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-45960_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2021-45960] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42384_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2023-28319_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28319] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27775_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27775] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-28319_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28319] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-11080_3.11:nghttp2-libs_1.40.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-11080] 3.11:nghttp2-libs 1.40.0-r0"
              },
              "help": {
                "text": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., \u003e 32), then drop the connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [1.40.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-28391_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-29154_3.11:rsync_3.1.3-r2",
              "shortDescription": {
                "text": "[CVE-2022-29154] 3.11:rsync 3.1.3-r2"
              },
              "help": {
                "text": "An issue was discovered in rsync before 3.2.5 that allows malicious remote servers to write arbitrary files inside the directories of connecting peers. The server chooses which files/directories are sent to the client. However, the rsync client performs insufficient validation of file names. A malicious rsync server (or Man-in-The-Middle attacker) can overwrite arbitrary files in the rsync client target directory and subdirectories (for example, overwrite the .ssh/authorized_keys file).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.2.4-r2]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2022-27780_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27780] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8285_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8285] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-0778_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42385_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-30065_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-22901_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22901] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-28391_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2022-28391] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.35.0-r7]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-42378_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42379_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42384_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42384] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-8169_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8169] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22926_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22926] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-11655_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-11655] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "SQLite through 3.31.1 allows attackers to cause a denial of service (segmentation fault) via a malformed window-function query because the AggInfo object's initialization is mishandled.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.30.1-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-38039_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-38039] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8231_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8231] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-1271_3.11:xz-libs_5.2.4-r0",
              "shortDescription": {
                "text": "[CVE-2022-1271] 3.11:xz-libs 5.2.4-r0"
              },
              "help": {
                "text": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [5.2.5-r1]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-1967_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2020-1967] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1g-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42381_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42383_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42383_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42383] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-30065_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2022-30065] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.35.0-r17]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-42380_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-46143_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2021-46143] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-22901_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22901] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.77.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-3450_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3450] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1k-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2022-42915_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-42915] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2023-38039_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-38039] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-30139_3.11:apk-tools_2.10.4-r3",
              "shortDescription": {
                "text": "[CVE-2021-30139] 3.11:apk-tools 2.10.4-r3"
              },
              "help": {
                "text": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [2.10.6-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42381_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42381] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42379_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42379] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42380_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42380] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-42385_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42385] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-8286_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8286] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-28831_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-3450_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3450] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1k-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2021-23840_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-23840] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1j-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42378_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42378] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2021-22926_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22926] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8177_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8177] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2020-1967_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2020-1967] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1g-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27780_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27780] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42386_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-42915_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-42915] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-8286_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8286] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-23840_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-23840] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1j-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8285_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8285] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42382_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42382] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2022-0778_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-0778] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-28831_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-28831] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r10]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27775_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27775] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25314_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-25314] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-8231_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8231] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-42386_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42386] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.2      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "7.2"
              }
            },
            {
              "id": "CVE-2020-8169_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8169] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-14387_3.11:rsync_3.1.3-r2",
              "shortDescription": {
                "text": "[CVE-2020-14387] 3.11:rsync 3.1.3-r2"
              },
              "help": {
                "text": "A flaw was found in rsync in versions since 3.2.0pre1. Rsync improperly validates certificate with host mismatch vulnerability. A remote, unauthenticated attacker could exploit the flaw by performing a man-in-the-middle attack using a valid certificate for another hostname which could compromise confidentiality and integrity of data transmitted using rsync-ssl. The highest threat from this vulnerability is to data confidentiality and integrity. This flaw affects rsync versions before 3.2.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.2.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2020-8177_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8177] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-42915_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-42915] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "Multiple issues were addressed by updating to curl version 8.4.0. This issue is fixed in macOS Ventura 13.6.4, macOS Sonoma 14.2, macOS Monterey 12.7.3, iOS 16.7.5 and iPadOS 16.7.5. Multiple issues in curl.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-37322_3.11:libgcc_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2021-37322] 3.11:libgcc 9.2.0-r4"
              },
              "help": {
                "text": "GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2024-29415_ip_1.1.5",
              "shortDescription": {
                "text": "[CVE-2024-29415] ip 1.1.5"
              },
              "help": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2020-13630_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-13630] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow, related to the snippet feature.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2021-37322_3.11:libstdc++_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2021-37322] 3.11:libstdc++ 9.2.0-r4"
              },
              "help": {
                "text": "GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2021-26720_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-26720] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is executed as root via /etc/network/if-up.d/avahi-daemon, and allows a local attacker to cause a denial of service or create arbitrary empty files via a symlink attack on files under /run/avahi-daemon. NOTE: this only affects the packaging for Debian GNU/Linux (used indirectly by SUSE), not the upstream Avahi product.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-42915_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-42915] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "Multiple issues were addressed by updating to curl version 8.4.0. This issue is fixed in macOS Ventura 13.6.4, macOS Sonoma 14.2, macOS Monterey 12.7.3, iOS 16.7.5 and iPadOS 16.7.5. Multiple issues in curl.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2000-1254_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2000-1254] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-26720_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-26720] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is executed as root via /etc/network/if-up.d/avahi-daemon, and allows a local attacker to cause a denial of service or create arbitrary empty files via a symlink attack on files under /run/avahi-daemon. NOTE: this only affects the packaging for Debian GNU/Linux (used indirectly by SUSE), not the upstream Avahi product.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2000-1254_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2000-1254] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-0465_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0465] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.0-r2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-0466_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0466] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r3]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-2650_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-2650] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.1-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-0466_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0466] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r3]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-2097_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-2097] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-2097_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-2097] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.5-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-0465_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-0465] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.0-r2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-28321_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28321] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-2650_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-2650] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.1-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-28321_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28321] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-23915_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-23915] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-5678_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-5678] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-38472_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38472] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_rdata_parse() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-6129_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-6129] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r3]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32208_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32208] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42366_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32206_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32206] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22947_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22947] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-12049_3.11:dbus_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2020-12049] 3.11:dbus 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in dbus \u003e= 1.3.0 before 1.12.18. The DBusServer in libdbus, as used in dbus-daemon, leaks file descriptors when a message exceeds the per-message file descriptor limit. A local attacker with access to the D-Bus system bus or another system service's private AF_UNIX socket could use this to make the system service reach its file descriptor limit, denying service to subsequent D-Bus clients.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.12.16-r3]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-38470_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38470] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_escape_label() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-4304_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-4304] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-42364_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-42011_3.11:dbus-libs_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2022-42011] 3.11:dbus-libs 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in D-Bus before 1.12.24, 1.13.x and 1.14.x before 1.14.4, and 1.15.x before 1.15.2. An authenticated attacker can cause dbus-daemon and other programs that use libdbus to crash when receiving a message where an array length is inconsistent with the size of the element type.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.14.4-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-23916_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-23916] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-46219_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-2975_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-2975] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be mislead by removing\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.1-r2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46218_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-15366_ajv_6.6.1",
              "shortDescription": {
                "text": "[CVE-2020-15366] ajv 6.6.1"
              },
              "help": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.6      | Not Covered       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [6.12.3]   |"
              },
              "properties": {
                "security-severity": "5.6"
              }
            },
            {
              "id": "CVE-2022-32206_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32206] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32208_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32208] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-52426_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2023-52426] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27537_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27537] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-46218_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46218] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-32205_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32205] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2023-38470_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38470] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_escape_label() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-1971_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1i-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-4304_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-4304] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-28928_3.11:musl_1.1.24-r2",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.11:musl 1.1.24-r2"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.24-r3]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-27776_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27776] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22925_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22925] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-28928_3.11:musl-utils_1.1.24-r2",
              "shortDescription": {
                "text": "[CVE-2020-28928] 3.11:musl-utils 1.1.24-r2"
              },
              "help": {
                "text": "In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and source character limit, as demonstrated by an invalid write access (buffer overflow).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.24-r3]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-28320_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28320] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-1981_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-1981] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in the avahi library. This flaw allows an unprivileged user to make a dbus call, causing the avahi daemon to crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-3446_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-3446] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.1-r3]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-46219_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-46219] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42365_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-13435_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-13435] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "SQLite through 3.32.0 has a segmentation fault in sqlite3ExprCodeTarget in expr.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.32.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-43552_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-43552] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-23915_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-23915] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-15358_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-15358] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "In SQLite before 3.32.3, select.c mishandles query-flattener optimization, leading to a multiSelectOrderBy heap overflow because of misuse of transitive properties for constant propagation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.32.1-r1]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-1255_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-1255] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.0-r4]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-38473_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38473] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_alternative_host_name() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-42011_3.11:dbus_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2022-42011] 3.11:dbus 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in D-Bus before 1.12.24, 1.13.x and 1.14.x before 1.14.4, and 1.15.x before 1.15.2. An authenticated attacker can cause dbus-daemon and other programs that use libdbus to crash when receiving a message where an array length is inconsistent with the size of the element type.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.14.4-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-30115_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-30115] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2023-38473_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38473] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_alternative_host_name() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-22925_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22925] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-4203_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-4203] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "4.9"
              }
            },
            {
              "id": "CVE-2023-38471_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38471] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the dbus_set_host_name function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r15]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r25]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-23841_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-23841] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1j-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-27774_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27774] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.7"
              }
            },
            {
              "id": "CVE-2021-3502_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-3502] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A flaw was found in avahi 0.8-5. A reachable assertion is present in avahi_s_host_name_resolver_start function allowing a local attacker to crash the avahi service by requesting hostname resolutions through the avahi socket or dbus methods for invalid hostnames. The highest threat from this vulnerability is to the service availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r5]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-3468_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-3468] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A flaw was found in avahi in versions 0.6 up to 0.8. The event used to signal the termination of the client connection on the avahi Unix socket is not correctly handled in the client_work function, allowing a local attacker to trigger an infinite loop. The highest threat from this vulnerability is to the availability of the avahi service, which becomes unresponsive after this flaw is triggered.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r1]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-3817_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-3817] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.2-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-32205_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32205] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.84.0-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2021-20227_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2021-20227] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "A flaw was found in SQLite's SELECT query functionality (src/select.c). This flaw allows an attacker who is capable of running SQL queries locally on the SQLite database to cause a denial of service or possible code execution by triggering a use-after-free. The highest threat from this vulnerability is to system availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.34.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27538_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27538] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_3.11:libgcc_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.11:libgcc 9.2.0-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2024-0853_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-27774_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27774] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.7"
              }
            },
            {
              "id": "CVE-2020-12049_3.11:dbus-libs_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2020-12049] 3.11:dbus-libs 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in dbus \u003e= 1.3.0 before 1.12.18. The DBusServer in libdbus, as used in dbus-daemon, leaks file descriptors when a message exceeds the per-message file descriptor limit. A local attacker with access to the D-Bus system bus or another system service's private AF_UNIX socket could use this to make the system service reach its file descriptor limit, denying service to subsequent D-Bus clients.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.12.16-r3]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-5678_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-5678] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-23916_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-23916] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An allocation of resources without limits or throttling vulnerability exists in curl \u003cv7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-30115_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-30115] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "4.3"
              }
            },
            {
              "id": "CVE-2021-3502_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-3502] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A flaw was found in avahi 0.8-5. A reachable assertion is present in avahi_s_host_name_resolver_start function allowing a local attacker to crash the avahi service by requesting hostname resolutions through the avahi socket or dbus methods for invalid hostnames. The highest threat from this vulnerability is to the service availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r5]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-4039_3.11:libstdc++_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2023-4039] 3.11:libstdc++ 9.2.0-r4"
              },
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [13.2.1_git20231014-r0]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-23841_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-23841] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1j-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-27779_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27779] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-42012_3.11:dbus-libs_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2022-42012] 3.11:dbus-libs 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in D-Bus before 1.12.24, 1.13.x and 1.14.x before 1.14.4, and 1.15.x before 1.15.2. An authenticated attacker can cause dbus-daemon and other programs that use libdbus to crash by sending a message with attached file descriptors in an unexpected format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.14.4-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2024-0853_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22876_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22876] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3468_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-3468] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A flaw was found in avahi in versions 0.6 up to 0.8. The event used to signal the termination of the client connection on the avahi Unix socket is not correctly handled in the client_work function, allowing a local attacker to trigger an infinite loop. The highest threat from this vulnerability is to the availability of the avahi service, which becomes unresponsive after this flaw is triggered.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r1]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-1981_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-1981] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in the avahi library. This flaw allows an unprivileged user to make a dbus call, causing the avahi daemon to crash.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-27538_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27538] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-28320_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28320] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2022-43552_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-43552] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A use after free vulnerability exists in curl \u003c7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-27535_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27535] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-0727_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-0727] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r5]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-22947_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22947] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-13434_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-13434] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.32.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-38472_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38472] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_rdata_parse() function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r14]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-3446_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-3446] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.1-r3]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-6129_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-6129] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r3]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22876_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22876] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-27537_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27537] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A double free vulnerability exists in libcurl \u003c8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-0727_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-0727] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r5]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-38469_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38469] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi, where a reachable assertion exists in avahi_dns_packet_append_record.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r15]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-35260_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-35260] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-38469_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38469] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi, where a reachable assertion exists in avahi_dns_packet_append_record.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r15]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-42012_3.11:dbus_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2022-42012] 3.11:dbus 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in D-Bus before 1.12.24, 1.13.x and 1.14.x before 1.14.4, and 1.15.x before 1.15.2. An authenticated attacker can cause dbus-daemon and other programs that use libdbus to crash by sending a message with attached file descriptors in an unexpected format.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.14.4-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2017-16137_debug_3.2.6",
              "shortDescription": {
                "text": "[CVE-2017-16137] debug 3.2.6"
              },
              "help": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [2.6.9], [3.1.0], [3.2.7], [4.3.1]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-1255_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-1255] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.0-r4]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-42375_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-23386_dns-packet_4.2.0",
              "shortDescription": {
                "text": "[CVE-2021-23386] dns-packet 4.2.0"
              },
              "help": {
                "text": "This affects the package dns-packet before 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [1.3.2], [5.2.2]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-27776_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27776] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-27535_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27535] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists in libcurl \u003c8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-1971_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2020-1971] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1i-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-3817_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-3817] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.2-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-42374_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42364_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r29]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-38471_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2023-38471] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "A vulnerability was found in Avahi. A reachable assertion exists in the dbus_set_host_name function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r15]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42374_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42374] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "An out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.31.1-r11]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-42010_3.11:dbus-libs_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2022-42010] 3.11:dbus-libs 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in D-Bus before 1.12.24, 1.13.x and 1.14.x before 1.14.4, and 1.15.x before 1.15.2. An authenticated attacker can cause dbus-daemon and other programs that use libdbus to crash when receiving a message with certain invalid type signatures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.14.4-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-27779_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27779] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42363_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.36.1-r27]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-42375_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42375] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "An incorrect handling of a special element in Busybox's ash applet leads to denial of service when processing a crafted shell command, due to the shell mistaking specific characters for reserved characters. This may be used for DoS under rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.34.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-4203_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2022-4203] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.0.8-r0]   |"
              },
              "properties": {
                "security-severity": "4.9"
              }
            },
            {
              "id": "CVE-2023-2975_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-2975] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be mislead by removing\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.1-r2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2022-35260_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-35260] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2022-42010_3.11:dbus_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2022-42010] 3.11:dbus 1.12.16-r2"
              },
              "help": {
                "text": "An issue was discovered in D-Bus before 1.12.24, 1.13.x and 1.14.x before 1.14.4, and 1.15.x before 1.15.2. An authenticated attacker can cause dbus-daemon and other programs that use libdbus to crash when receiving a message with certain invalid type signatures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [1.14.4-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-4160_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-4160] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-13631_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-13631] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "SQLite before 3.32.0 allows a virtual table to be renamed to the name of one of its shadow tables, related to alter.c and build.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-22897_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22897] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3826_3.11:libstdc++_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2021-3826] 3.11:libstdc++ 9.2.0-r4"
              },
              "help": {
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2013-0340_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2013-0340] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2009-3767_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-3826_3.11:libgcc_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2021-3826] 3.11:libgcc 9.2.0-r4"
              },
              "help": {
                "text": "Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2009-3767_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-28155_request_2.88.2",
              "shortDescription": {
                "text": "[CVE-2023-28155] request 2.88.2"
              },
              "help": {
                "text": "The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-42376_3.11:busybox_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.11:busybox 1.31.1-r9"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-34969_3.11:dbus_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2023-34969] 3.11:dbus 1.12.16-r2"
              },
              "help": {
                "text": "D-Bus before 1.15.6 sometimes allows unprivileged users to crash dbus-daemon. If a privileged user with control over the dbus-daemon is using the org.freedesktop.DBus.Monitoring interface to monitor message bus traffic, then an unprivileged user with the ability to connect to the same dbus-daemon can cause a dbus-daemon crash under some circumstances via an unreplyable message. When done on the well-known system bus, this is a denial-of-service vulnerability. The fixed versions are 1.12.28, 1.14.8, and 1.15.6.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-42376_3.11:ssl_client_1.31.1-r9",
              "shortDescription": {
                "text": "[CVE-2021-42376] 3.11:ssl_client 1.31.1-r9"
              },
              "help": {
                "text": "A NULL pointer dereference in Busybox's hush applet leads to denial of service when processing a crafted shell command, due to missing validation after a \\x03 delimiter character. This may be used for DoS under very rare conditions of filtered command input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-22897_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22897] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-13632_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-13632] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-4160_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-4160] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-34969_3.11:dbus-libs_1.12.16-r2",
              "shortDescription": {
                "text": "[CVE-2023-34969] 3.11:dbus-libs 1.12.16-r2"
              },
              "help": {
                "text": "D-Bus before 1.15.6 sometimes allows unprivileged users to crash dbus-daemon. If a privileged user with control over the dbus-daemon is using the org.freedesktop.DBus.Monitoring interface to monitor message bus traffic, then an unprivileged user with the ability to connect to the same dbus-daemon can cause a dbus-daemon crash under some circumstances via an unreplyable message. When done on the well-known system bus, this is a denial-of-service vulnerability. The fixed versions are 1.12.28, 1.14.8, and 1.15.6.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22890_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22890] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-22898_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22898] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r4]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2021-23839_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-23839] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1j-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-2602_3.11:libcap_2.27-r0",
              "shortDescription": {
                "text": "[CVE-2023-2602] 3.11:libcap 2.27-r0"
              },
              "help": {
                "text": "A vulnerability was found in the pthread_create() function in libcap. This issue may allow a malicious actor to use cause __real_pthread_create() to return an error, which can exhaust the process memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.66-r1]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2023-38546_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-38546] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-22898_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22898] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.67.0-r4]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2021-22924_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22924] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2022-35252_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-35252] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.85.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-22924_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22924] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-22890_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22890] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.76.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2020-8284_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8284] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-23839_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-23839] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1j-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2020-8284_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2020-8284] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2022-35252_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-35252] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.85.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-38546_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-38546] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2024-2398_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4603_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.3.0-r2]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-6237_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-6237] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r4]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-36217_3.11:avahi-libs_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-36217] 3.11:avahi-libs 0.7-r4"
              },
              "help": {
                "text": "CVE-2021-36217",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r5]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28757_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2024-28757] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.6.2-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2021-36217_3.11:avahi_0.7-r4",
              "shortDescription": {
                "text": "[CVE-2021-36217] 3.11:avahi 0.7-r4"
              },
              "help": {
                "text": "CVE-2021-36217",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [0.8-r5]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-6237_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-6237] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r4]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4603_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.3.0-r2]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.2.1-r2]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.2.1-r2]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-1394_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-1394] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-1394_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2024-1394] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-49210_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-49210] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22823_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-22823] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-49210_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-49210] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \"a nonsense wrapper with no real purpose\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-11656_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2020-11656] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "In SQLite through 3.31.1, the ALTER TABLE implementation has a use-after-free, as demonstrated by an ORDER BY clause that belongs to a compound SELECT statement.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32221_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32221] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-3918_json-schema_0.2.3",
              "shortDescription": {
                "text": "[CVE-2021-3918] json-schema 0.2.3"
              },
              "help": {
                "text": "json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [0.4.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-26136_tough-cookie_2.5.0",
              "shortDescription": {
                "text": "[CVE-2023-26136] tough-cookie 2.5.0"
              },
              "help": {
                "text": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [4.1.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22824_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-22824] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-23914] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2022-25235_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-25235] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23852_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-23852] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.4-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-23914_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-23914] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A cleartext transmission of sensitive information vulnerability exists in curl \u003cv7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.88.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-38545_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-38545] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-25315_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-25315] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-38545_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-38545] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.4.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-25236_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-25236] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-42282_ip_1.1.5",
              "shortDescription": {
                "text": "[CVE-2023-42282] ip 1.1.5"
              },
              "help": {
                "text": "The ip package before 1.1.9 for Node.js might allow SSRF because some IP addresses (such as 0x7f.1) are improperly categorized as globally routable via isPublic.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [1.1.9], [2.0.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-37434_3.11:zlib_1.2.11-r3",
              "shortDescription": {
                "text": "[CVE-2022-37434] 3.11:zlib 1.2.11-r3"
              },
              "help": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.2.11-r4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-32221_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-32221] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-44906_minimist_1.2.5",
              "shortDescription": {
                "text": "[CVE-2021-44906] minimist 1.2.5"
              },
              "help": {
                "text": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [0.2.4], [1.2.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-22822_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-22822] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-22946_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22946] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43680_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-43680] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.5.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23990_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-23990] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2019-15847_3.11:libgcc_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2019-15847] 3.11:libgcc 9.2.0-r4"
              },
              "help": {
                "text": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [9.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22826_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-22826] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-7104_3.11:sqlite-libs_3.30.1-r1",
              "shortDescription": {
                "text": "[CVE-2023-7104] 3.11:sqlite-libs 3.30.1-r1"
              },
              "help": {
                "text": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [3.41.2-r3]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-5363_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-5363] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25883_semver_5.7.1",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 5.7.1"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-5363_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2023-5363] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [3.1.4-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24999_qs_6.5.2",
              "shortDescription": {
                "text": "[CVE-2022-24999] qs 6.5.2"
              },
              "help": {
                "text": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [6.10.3], [6.2.4], [6.3.3], [6.4.1], [6.5.3], [6.6.1], [6.7.3], [6.8.3], [6.9.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-40674_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-40674] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.9-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-3517_minimatch_3.0.4",
              "shortDescription": {
                "text": "[CVE-2022-3517] minimatch 3.0.4"
              },
              "help": {
                "text": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [3.0.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27782_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27782] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22576_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-22576] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-42916_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-42916] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22576_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-22576] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-22825_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-22825] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2023-52425_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2023-52425] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-22946_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22946] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43551_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-43551] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27533_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27533] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-27781_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27781] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25883_semver_7.3.2",
              "shortDescription": {
                "text": "[CVE-2022-25883] semver 7.3.2"
              },
              "help": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [5.7.2], [6.3.1], [7.5.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2603_3.11:libcap_2.27-r0",
              "shortDescription": {
                "text": "[CVE-2023-2603] 3.11:libcap 2.27-r0"
              },
              "help": {
                "text": "A vulnerability was found in libcap. This issue occurs in the _libcap_strdup() function and can lead to an integer overflow if the input string is close to 4GiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.66-r1]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-35945_3.11:nghttp2-libs_1.40.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-35945] 3.11:nghttp2-libs 1.40.0-r0"
              },
              "help": {
                "text": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [1.51.0-r1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27782_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27782] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-43551_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-43551] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "A vulnerability exists in curl \u003c7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.87.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42916_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-42916] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.86.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-22827_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-22827] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.3-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-15847_3.11:libstdc++_9.2.0-r4",
              "shortDescription": {
                "text": "[CVE-2019-15847] 3.11:libstdc++ 9.2.0-r4"
              },
              "help": {
                "text": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [9.3.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-27533_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27533] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-27781_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-27781] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.83.1-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-44487_3.11:nghttp2-libs_1.40.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-44487] 3.11:nghttp2-libs 1.40.0-r0"
              },
              "help": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [1.57.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-7798_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2016-7798] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-7798_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2016-7798] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-25313_3.11:expat_2.2.9-r1",
              "shortDescription": {
                "text": "[CVE-2022-25313] 3.11:expat 2.2.9-r1"
              },
              "help": {
                "text": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar `       | [2.4.5-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-3449_3.11:libcrypto1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3449] 3.11:libcrypto1.1 1.1.1d-r3"
              },
              "help": {
                "text": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1k-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-27536_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27536] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2024-28863_tar_4.4.19",
              "shortDescription": {
                "text": "[CVE-2024-28863] tar 4.4.19"
              },
              "help": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar `       | [6.2.1]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-27536_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-27536] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An authentication bypass vulnerability exists libcurl \u003c8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.0.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-22922_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22922] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-22923_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22923] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-3449_3.11:libssl1.1_1.1.1d-r3",
              "shortDescription": {
                "text": "[CVE-2021-3449] 3.11:libssl1.1 1.1.1d-r3"
              },
              "help": {
                "text": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar `       | [1.1.1k-r0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-22923_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22923] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.79.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2021-22922_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2021-22922] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [7.78.0-r0]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-28322_3.11:curl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28322] 3.11:curl 7.67.0-r0"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2023-28322_3.11:libcurl_7.67.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-28322] 3.11:libcurl 7.67.0-r0"
              },
              "help": {
                "text": "An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Applicable       | `sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar `       | [8.1.0-r0]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-1292_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1292] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2068_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2068] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3711_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3711] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1292_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1292] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2068_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2068] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3711_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3711] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22945] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32207] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207_3.11:curl_7.67.0-r0",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32207] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.11:busybox_1.31.1-r9",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42810_systeminformation_5.6.10",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42810] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36159_3.11:apk-tools_2.10.4-r3",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2021-36159] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48174_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48174] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945_3.11:curl_7.67.0-r0",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22945] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3712_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3712] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0217_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0217] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3712_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3712] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0215] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0286] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0401_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0401] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0464] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25032_3.11:zlib_1.2.11-r3",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2018-25032] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0286] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0216_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0216] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0217_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0217] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0401_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0401] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3786_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3786] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3786_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3786] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0464] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0215] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0216_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "[CVE-2023-0216] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "[CVE-2022-4450] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "[CVE-2022-4450] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3602_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3602] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3602_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3602] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_3.11:curl_7.67.0-r0",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27534_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27534] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.11:busybox_1.31.1-r9",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45960_3.11:expat_2.2.9-r1",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "[CVE-2021-45960] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "[CVE-2023-28319] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775_3.11:curl_7.67.0-r0",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27775] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28319_3.11:curl_7.67.0-r0",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "[CVE-2023-28319] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11080_3.11:nghttp2-libs_1.40.0-r0",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11080] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.11:busybox_1.31.1-r9",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29154_3.11:rsync_3.1.3-r2",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29154] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27780_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27780] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8285_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8285] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22901_3.11:curl_7.67.0-r0",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22901] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28391] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.11:busybox_1.31.1-r9",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384_3.11:busybox_1.31.1-r9",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42384] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8169_3.11:curl_7.67.0-r0",
          "ruleIndex": 56,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8169] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926_3.11:curl_7.67.0-r0",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22926] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11655_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11655] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039_3.11:curl_7.67.0-r0",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38039] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8231_3.11:curl_7.67.0-r0",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8231] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1271_3.11:xz-libs_5.2.4-r0",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "[CVE-2022-1271] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1967_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "[CVE-2020-1967] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.11:busybox_1.31.1-r9",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42383] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065_3.11:busybox_1.31.1-r9",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30065] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.11:busybox_1.31.1-r9",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46143_3.11:expat_2.2.9-r1",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "[CVE-2021-46143] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22901_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22901] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3450_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3450] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42915] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38039_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38039] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-30139_3.11:apk-tools_2.10.4-r3",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "[CVE-2021-30139] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381_3.11:busybox_1.31.1-r9",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42381] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42379] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42380] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385_3.11:busybox_1.31.1-r9",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42385] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8286_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8286] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.11:busybox_1.31.1-r9",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3450_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3450] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23840_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23840] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378_3.11:busybox_1.31.1-r9",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42378] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22926] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8177_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8177] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1967_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2020-1967] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27780_3.11:curl_7.67.0-r0",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27780] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.11:busybox_1.31.1-r9",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42915_3.11:curl_7.67.0-r0",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42915] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8286_3.11:curl_7.67.0-r0",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8286] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23840_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23840] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8285_3.11:curl_7.67.0-r0",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8285] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42382] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2022-0778] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28831] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27775] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25314_3.11:expat_2.2.9-r1",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25314] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8231_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8231] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42386] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8169_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8169] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14387_3.11:rsync_3.1.3-r2",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14387] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8177_3.11:curl_7.67.0-r0",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8177] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42915_3.11:curl_7.67.0-r0",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42915] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37322_3.11:libgcc_9.2.0-r4",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37322] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415_ip_1.1.5",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2024-29415] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13630_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2020-13630] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37322_3.11:libstdc++_9.2.0-r4",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37322] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-26720_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2021-26720] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42915_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42915] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2000-1254_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2000-1254] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-26720_3.11:avahi_0.7-r4",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2021-26720] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2000-1254_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2000-1254] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 112,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0465] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0466_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 113,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0466] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 114,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2650] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0466_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 115,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0466] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 116,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-2097] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 117,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-2097] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 118,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-0465] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_3.11:curl_7.67.0-r0",
          "ruleIndex": 119,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 120,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2650] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28321_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28321] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_3.11:curl_7.67.0-r0",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 123,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5678] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38472_3.11:avahi_0.7-r4",
          "ruleIndex": 124,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38472] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6129_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 125,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-6129] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208_3.11:curl_7.67.0-r0",
          "ruleIndex": 126,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32208] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 127,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 128,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32206] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 129,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22947] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-12049_3.11:dbus_1.12.16-r2",
          "ruleIndex": 130,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-12049] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38470_3.11:avahi_0.7-r4",
          "ruleIndex": 131,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38470] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 132,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-4304] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.11:busybox_1.31.1-r9",
          "ruleIndex": 133,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42011_3.11:dbus-libs_1.12.16-r2",
          "ruleIndex": 134,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-42011] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 135,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23916] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 136,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2975_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 137,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2975] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.11:curl_7.67.0-r0",
          "ruleIndex": 138,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366_ajv_6.6.1",
          "ruleIndex": 139,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15366] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206_3.11:curl_7.67.0-r0",
          "ruleIndex": 140,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32206] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 141,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32208] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52426_3.11:expat_2.2.9-r1",
          "ruleIndex": 142,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-52426] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 143,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27537] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46218_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 144,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46218] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 145,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32205] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38470_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 146,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38470] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 147,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 148,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-4304] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.11:musl_1.1.24-r2",
          "ruleIndex": 149,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 150,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27776] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 151,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22925] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28928_3.11:musl-utils_1.1.24-r2",
          "ruleIndex": 152,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-28928] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 153,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28320] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1981_3.11:avahi_0.7-r4",
          "ruleIndex": 154,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-1981] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 155,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3446] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46219_3.11:curl_7.67.0-r0",
          "ruleIndex": 156,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-46219] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.11:busybox_1.31.1-r9",
          "ruleIndex": 157,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13435_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 158,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13435] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552_3.11:curl_7.67.0-r0",
          "ruleIndex": 159,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-43552] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23915_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 160,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23915] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15358_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 161,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15358] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1255_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 162,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-1255] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38473_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 163,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38473] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42011_3.11:dbus_1.12.16-r2",
          "ruleIndex": 164,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-42011] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30115_3.11:curl_7.67.0-r0",
          "ruleIndex": 165,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-30115] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38473_3.11:avahi_0.7-r4",
          "ruleIndex": 166,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38473] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925_3.11:curl_7.67.0-r0",
          "ruleIndex": 167,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22925] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4203_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 168,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-4203] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38471_3.11:avahi_0.7-r4",
          "ruleIndex": 169,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38471] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.11:busybox_1.31.1-r9",
          "ruleIndex": 170,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23841_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 171,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23841] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 172,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27774] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3502_3.11:avahi_0.7-r4",
          "ruleIndex": 173,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3502] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 174,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3468_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 175,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3468] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 176,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3817] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205_3.11:curl_7.67.0-r0",
          "ruleIndex": 177,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32205] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20227_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 178,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-20227] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 179,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.11:libgcc_9.2.0-r4",
          "ruleIndex": 180,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 181,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774_3.11:curl_7.67.0-r0",
          "ruleIndex": 182,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27774] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-12049_3.11:dbus-libs_1.12.16-r2",
          "ruleIndex": 183,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-12049] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 184,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-5678] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23916_3.11:curl_7.67.0-r0",
          "ruleIndex": 185,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-23916] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30115_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 186,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-30115] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3502_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 187,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3502] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039_3.11:libstdc++_9.2.0-r4",
          "ruleIndex": 188,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-4039] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23841_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 189,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23841] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27779_3.11:curl_7.67.0-r0",
          "ruleIndex": 190,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27779] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42012_3.11:dbus-libs_1.12.16-r2",
          "ruleIndex": 191,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-42012] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.11:curl_7.67.0-r0",
          "ruleIndex": 192,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22876_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 193,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22876] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3468_3.11:avahi_0.7-r4",
          "ruleIndex": 194,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3468] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1981_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 195,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-1981] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27538_3.11:curl_7.67.0-r0",
          "ruleIndex": 196,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27538] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28320_3.11:curl_7.67.0-r0",
          "ruleIndex": 197,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28320] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43552_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 198,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-43552] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 199,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 200,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0727] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947_3.11:curl_7.67.0-r0",
          "ruleIndex": 201,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22947] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13434_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 202,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13434] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38472_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 203,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38472] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 204,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3446] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6129_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 205,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-6129] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22876_3.11:curl_7.67.0-r0",
          "ruleIndex": 206,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22876] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27537_3.11:curl_7.67.0-r0",
          "ruleIndex": 207,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27537] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 208,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0727] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38469_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 209,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38469] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35260_3.11:curl_7.67.0-r0",
          "ruleIndex": 210,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-35260] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38469_3.11:avahi_0.7-r4",
          "ruleIndex": 211,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38469] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42012_3.11:dbus_1.12.16-r2",
          "ruleIndex": 212,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-42012] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137_debug_3.2.6",
          "ruleIndex": 213,
          "level": "warning",
          "message": {
            "text": "[CVE-2017-16137] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-1255_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 214,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-1255] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 215,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.11:busybox_1.31.1-r9",
          "ruleIndex": 216,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23386_dns-packet_4.2.0",
          "ruleIndex": 217,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-23386] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776_3.11:curl_7.67.0-r0",
          "ruleIndex": 218,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27776] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27535_3.11:curl_7.67.0-r0",
          "ruleIndex": 219,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27535] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1971_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 220,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-1971] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 221,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-3817] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 222,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 223,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38471_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 224,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-38471] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374_3.11:busybox_1.31.1-r9",
          "ruleIndex": 225,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42374] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42010_3.11:dbus-libs_1.12.16-r2",
          "ruleIndex": 226,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-42010] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27779_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 227,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-27779] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 228,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42375_3.11:busybox_1.31.1-r9",
          "ruleIndex": 229,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42375] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4203_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 230,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-4203] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2975_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 231,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-2975] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35260_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 232,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-35260] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42010_3.11:dbus_1.12.16-r2",
          "ruleIndex": 233,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-42010] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4160_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 234,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-4160] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13631_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 235,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13631] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22897_3.11:curl_7.67.0-r0",
          "ruleIndex": 236,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22897] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3826_3.11:libstdc++_9.2.0-r4",
          "ruleIndex": 237,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3826] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2013-0340_3.11:expat_2.2.9-r1",
          "ruleIndex": 238,
          "level": "warning",
          "message": {
            "text": "[CVE-2013-0340] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 239,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3826_3.11:libgcc_9.2.0-r4",
          "ruleIndex": 240,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3826] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 241,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155_request_2.88.2",
          "ruleIndex": 242,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-28155] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.11:busybox_1.31.1-r9",
          "ruleIndex": 243,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-34969_3.11:dbus_1.12.16-r2",
          "ruleIndex": 244,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-34969] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42376_3.11:ssl_client_1.31.1-r9",
          "ruleIndex": 245,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42376] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22897_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 246,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22897] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13632_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 247,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-13632] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4160_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 248,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-4160] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-34969_3.11:dbus-libs_1.12.16-r2",
          "ruleIndex": 249,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-34969] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22890_3.11:curl_7.67.0-r0",
          "ruleIndex": 250,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22890] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 251,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22898] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23839_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 252,
          "level": "note",
          "message": {
            "text": "[CVE-2021-23839] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2602_3.11:libcap_2.27-r0",
          "ruleIndex": 253,
          "level": "note",
          "message": {
            "text": "[CVE-2023-2602] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 254,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898_3.11:curl_7.67.0-r0",
          "ruleIndex": 255,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22898] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22924_3.11:curl_7.67.0-r0",
          "ruleIndex": 256,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22924] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252_3.11:curl_7.67.0-r0",
          "ruleIndex": 257,
          "level": "note",
          "message": {
            "text": "[CVE-2022-35252] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22924_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 258,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22924] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22890_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 259,
          "level": "note",
          "message": {
            "text": "[CVE-2021-22890] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284_3.11:curl_7.67.0-r0",
          "ruleIndex": 260,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8284] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23839_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 261,
          "level": "note",
          "message": {
            "text": "[CVE-2021-23839] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 262,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8284] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 263,
          "level": "note",
          "message": {
            "text": "[CVE-2022-35252] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38546_3.11:curl_7.67.0-r0",
          "ruleIndex": 264,
          "level": "note",
          "message": {
            "text": "[CVE-2023-38546] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.11:curl_7.67.0-r0",
          "ruleIndex": 265,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 266,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4603] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 267,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6237_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 268,
          "level": "none",
          "message": {
            "text": "[CVE-2023-6237] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36217_3.11:avahi-libs_0.7-r4",
          "ruleIndex": 269,
          "level": "none",
          "message": {
            "text": "[CVE-2021-36217] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 270,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 271,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28757_3.11:expat_2.2.9-r1",
          "ruleIndex": 272,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28757] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36217_3.11:avahi_0.7-r4",
          "ruleIndex": 273,
          "level": "none",
          "message": {
            "text": "[CVE-2021-36217] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6237_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 274,
          "level": "none",
          "message": {
            "text": "[CVE-2023-6237] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.11:curl_7.67.0-r0",
          "ruleIndex": 275,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.11:curl_7.67.0-r0",
          "ruleIndex": 276,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 277,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4603] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 278,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 279,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 280,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.11:curl_7.67.0-r0",
          "ruleIndex": 281,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1394_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 282,
          "level": "none",
          "message": {
            "text": "[CVE-2024-1394] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-1394_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 283,
          "level": "none",
          "message": {
            "text": "[CVE-2024-1394] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-49210_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 284,
          "level": "error",
          "message": {
            "text": "[CVE-2023-49210] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22823_3.11:expat_2.2.9-r1",
          "ruleIndex": 285,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22823] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-49210_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 286,
          "level": "error",
          "message": {
            "text": "[CVE-2023-49210] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11656_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 287,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11656] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 288,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32221] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3918_json-schema_0.2.3",
          "ruleIndex": 289,
          "level": "error",
          "message": {
            "text": "[CVE-2021-3918] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136_tough-cookie_2.5.0",
          "ruleIndex": 290,
          "level": "error",
          "message": {
            "text": "[CVE-2023-26136] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22824_3.11:expat_2.2.9-r1",
          "ruleIndex": 291,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22824] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 292,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25235_3.11:expat_2.2.9-r1",
          "ruleIndex": 293,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25235] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23852_3.11:expat_2.2.9-r1",
          "ruleIndex": 294,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23852] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23914_3.11:curl_7.67.0-r0",
          "ruleIndex": 295,
          "level": "error",
          "message": {
            "text": "[CVE-2023-23914] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_3.11:curl_7.67.0-r0",
          "ruleIndex": 296,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25315_3.11:expat_2.2.9-r1",
          "ruleIndex": 297,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25315] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-38545_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 298,
          "level": "error",
          "message": {
            "text": "[CVE-2023-38545] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25236_3.11:expat_2.2.9-r1",
          "ruleIndex": 299,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25236] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42282_ip_1.1.5",
          "ruleIndex": 300,
          "level": "error",
          "message": {
            "text": "[CVE-2023-42282] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434_3.11:zlib_1.2.11-r3",
          "ruleIndex": 301,
          "level": "error",
          "message": {
            "text": "[CVE-2022-37434] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32221_3.11:curl_7.67.0-r0",
          "ruleIndex": 302,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32221] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906_minimist_1.2.5",
          "ruleIndex": 303,
          "level": "error",
          "message": {
            "text": "[CVE-2021-44906] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22822_3.11:expat_2.2.9-r1",
          "ruleIndex": 304,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22822] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 305,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22946] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43680_3.11:expat_2.2.9-r1",
          "ruleIndex": 306,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43680] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23990_3.11:expat_2.2.9-r1",
          "ruleIndex": 307,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23990] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15847_3.11:libgcc_9.2.0-r4",
          "ruleIndex": 308,
          "level": "error",
          "message": {
            "text": "[CVE-2019-15847] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22826_3.11:expat_2.2.9-r1",
          "ruleIndex": 309,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22826] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-7104_3.11:sqlite-libs_3.30.1-r1",
          "ruleIndex": 310,
          "level": "error",
          "message": {
            "text": "[CVE-2023-7104] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5363_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 311,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5363] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_5.7.1",
          "ruleIndex": 312,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5363_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 313,
          "level": "error",
          "message": {
            "text": "[CVE-2023-5363] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999_qs_6.5.2",
          "ruleIndex": 314,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24999] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40674_3.11:expat_2.2.9-r1",
          "ruleIndex": 315,
          "level": "error",
          "message": {
            "text": "[CVE-2022-40674] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517_minimatch_3.0.4",
          "ruleIndex": 316,
          "level": "error",
          "message": {
            "text": "[CVE-2022-3517] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782_3.11:curl_7.67.0-r0",
          "ruleIndex": 317,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27782] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576_3.11:curl_7.67.0-r0",
          "ruleIndex": 318,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22576] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 319,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 320,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22576] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22825_3.11:expat_2.2.9-r1",
          "ruleIndex": 321,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22825] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52425_3.11:expat_2.2.9-r1",
          "ruleIndex": 322,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52425] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946_3.11:curl_7.67.0-r0",
          "ruleIndex": 323,
          "level": "error",
          "message": {
            "text": "[CVE-2021-22946] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 324,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_3.11:curl_7.67.0-r0",
          "ruleIndex": 325,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781_3.11:curl_7.67.0-r0",
          "ruleIndex": 326,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27781] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883_semver_7.3.2",
          "ruleIndex": 327,
          "level": "error",
          "message": {
            "text": "[CVE-2022-25883] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2603_3.11:libcap_2.27-r0",
          "ruleIndex": 328,
          "level": "error",
          "message": {
            "text": "[CVE-2023-2603] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35945_3.11:nghttp2-libs_1.40.0-r0",
          "ruleIndex": 329,
          "level": "error",
          "message": {
            "text": "[CVE-2023-35945] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 330,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27782] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43551_3.11:curl_7.67.0-r0",
          "ruleIndex": 331,
          "level": "error",
          "message": {
            "text": "[CVE-2022-43551] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42916_3.11:curl_7.67.0-r0",
          "ruleIndex": 332,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42916] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22827_3.11:expat_2.2.9-r1",
          "ruleIndex": 333,
          "level": "error",
          "message": {
            "text": "[CVE-2022-22827] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-15847_3.11:libstdc++_9.2.0-r4",
          "ruleIndex": 334,
          "level": "error",
          "message": {
            "text": "[CVE-2019-15847] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27533_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 335,
          "level": "error",
          "message": {
            "text": "[CVE-2023-27533] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 336,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27781] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487_3.11:nghttp2-libs_1.40.0-r0",
          "ruleIndex": 337,
          "level": "error",
          "message": {
            "text": "[CVE-2023-44487] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-7798_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 338,
          "level": "error",
          "message": {
            "text": "[CVE-2016-7798] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-7798_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 339,
          "level": "error",
          "message": {
            "text": "[CVE-2016-7798] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25313_3.11:expat_2.2.9-r1",
          "ruleIndex": 340,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-25313] sha256__262149c6905c059a04c2fd0b22de8e341955b2a0a9c98349ef3db177b5e8c979.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3449_3.11:libcrypto1.1_1.1.1d-r3",
          "ruleIndex": 341,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3449] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 342,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863_tar_4.4.19",
          "ruleIndex": 343,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-28863] sha256__dad2e428f231006fa823a085dd1ff6355b4c289335d1decef94413833890fd57.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27536_3.11:curl_7.67.0-r0",
          "ruleIndex": 344,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-27536] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 345,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22922] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_3.11:curl_7.67.0-r0",
          "ruleIndex": 346,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22923] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3449_3.11:libssl1.1_1.1.1d-r3",
          "ruleIndex": 347,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-3449] sha256__294ac687b5fcac6acedb9a20cc756ffe39ebc87e8a0214d3fb8ef3fc3189ee2a.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 348,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22923] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22922_3.11:curl_7.67.0-r0",
          "ruleIndex": 349,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-22922] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_3.11:curl_7.67.0-r0",
          "ruleIndex": 350,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28322_3.11:libcurl_7.67.0-r0",
          "ruleIndex": 351,
          "level": "note",
          "message": {
            "text": "[CVE-2023-28322] sha256__f8ae73c0cfefeda7babc5b0b46bf1b93cff5af95edba240224223ba964600560.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2018-25032",
              "name": "CVE-2018-25032",
              "shortDescription": {
                "text": "Scanner for CVE-2018-25032"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `deflateInit2` is called.",
                "markdown": "The scanner checks whether the vulnerable function `deflateInit2` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28321",
              "name": "CVE-2023-28321",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28321"
              },
              "fullDescription": {
                "text": "The CVE is applicable in all possible configurations of cURL",
                "markdown": "The CVE is applicable in all possible configurations of cURL"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2019-15847",
              "name": "CVE-2019-15847",
              "shortDescription": {
                "text": "Scanner for CVE-2019-15847"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-11656",
              "name": "CVE-2020-11656",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11656"
              },
              "fullDescription": {
                "text": "The scanner searches for an `sqlite` binary that is compiled with the vulnerable `SQLITE_DEBUG` flag, by checking for the ELF symbol `sqlite3DebugPrintf` in the binary",
                "markdown": "The scanner searches for an `sqlite` binary that is compiled with the vulnerable `SQLITE_DEBUG` flag, by checking for the ELF symbol `sqlite3DebugPrintf` in the binary"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-44906",
              "name": "CVE-2021-44906",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44906"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22923",
              "name": "CVE-2021-22923",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22923"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22922",
              "name": "CVE-2021-22922",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22922"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used.",
                "markdown": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-22946",
              "name": "CVE-2021-22946",
              "shortDescription": {
                "text": "Scanner for CVE-2021-22946"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`",
                "markdown": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-28863",
              "name": "CVE-2024-28863",
              "shortDescription": {
                "text": "Scanner for CVE-2024-28863"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3918",
              "name": "CVE-2021-3918",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3918"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `json-schema.validate` with external input to its 1st (`instance`) argument.\n* `json-schema.checkPropertyChange` with external input to its 2nd (`schema`) argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `json-schema.validate` with external input to its 1st (`instance`) argument.\n* `json-schema.checkPropertyChange` with external input to its 2nd (`schema`) argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2097",
              "name": "CVE-2022-2097",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2097"
              },
              "fullDescription": {
                "text": "The scanner checks if the vulnerable function `EVP_EncryptInit_ex` is called.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the system's architecture is 32bit / x86.",
                "markdown": "The scanner checks if the vulnerable function `EVP_EncryptInit_ex` is called.\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: the system's architecture is 32bit / x86."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24999",
              "name": "CVE-2022-24999",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24999"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `qs.parse` is called with the non-default option 'allowPrototypes' enabled, and the `Object.freeze()` remediation is not present.\nIt also checks whether `express.js` has a GET path that processes its query strings.",
                "markdown": "The scanner checks whether the vulnerable function `qs.parse` is called with the non-default option 'allowPrototypes' enabled, and the `Object.freeze()` remediation is not present.\nIt also checks whether `express.js` has a GET path that processes its query strings."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-3517",
              "name": "CVE-2022-3517",
              "shortDescription": {
                "text": "Scanner for CVE-2022-3517"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called with external input to the `pattern` argument and brace expansion is not disabled (by the option `{nobrace: true}`):\n\n- `minimatch()`\n- `minimatch.braceExpand()`\n- `minimatch.filter()`\n- `minimatch.match()`\n- `minimatch.makeRe()`\n- `minimatch.Minimatch.prototype.braceExpand()`\n- `minimatch.Minimatch() `\n\nNote that if a call to the `minimatch.filter()` function was found by the scanner, the vulnerability is applicable only if the function returned by `minimatch.filter()` is invoked. Currently, the scanner does not check that.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called with external input to the `pattern` argument and brace expansion is not disabled (by the option `{nobrace: true}`):\n\n- `minimatch()`\n- `minimatch.braceExpand()`\n- `minimatch.filter()`\n- `minimatch.match()`\n- `minimatch.makeRe()`\n- `minimatch.Minimatch.prototype.braceExpand()`\n- `minimatch.Minimatch() `\n\nNote that if a call to the `minimatch.filter()` function was found by the scanner, the vulnerability is applicable only if the function returned by `minimatch.filter()` is invoked. Currently, the scanner does not check that."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-3786",
              "name": "CVE-2022-3786",
              "shortDescription": {
                "text": "Scanner for CVE-2022-3786"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the vulnerable functions is called:\n```\nSSL_connect\nBIO_new_ssl_connect\nBIO_do_handshake\nBIO_do_connect\nBIO_new_connect\nSSL_accept\nSSL_set_verify\nSSL_CTX_set_verify\nX509_verify_cert\n```\nThen, if the application is a server, the client authentication option should be checked manually. \nIt is a client, it is applicable as described in the description.",
                "markdown": "The scanner checks if at least one of the vulnerable functions is called:\n```\nSSL_connect\nBIO_new_ssl_connect\nBIO_do_handshake\nBIO_do_connect\nBIO_new_connect\nSSL_accept\nSSL_set_verify\nSSL_CTX_set_verify\nX509_verify_cert\n```\nThen, if the application is a server, the client authentication option should be checked manually. \nIt is a client, it is applicable as described in the description."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-3602",
              "name": "CVE-2022-3602",
              "shortDescription": {
                "text": "Scanner for CVE-2022-3602"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the vulnerable functions is called:\n```\nSSL_connect\nBIO_new_ssl_connect\nBIO_do_handshake\nBIO_do_connect\nBIO_new_connect\nSSL_accept\nSSL_set_verify\nSSL_CTX_set_verify\nX509_verify_cert\n```\nThen, if the application is a server, the client authentication option should be checked manually. \nIt is a client, it is applicable as described in the description.",
                "markdown": "The scanner checks if at least one of the vulnerable functions is called:\n```\nSSL_connect\nBIO_new_ssl_connect\nBIO_do_handshake\nBIO_do_connect\nBIO_new_connect\nSSL_accept\nSSL_set_verify\nSSL_CTX_set_verify\nX509_verify_cert\n```\nThen, if the application is a server, the client authentication option should be checked manually. \nIt is a client, it is applicable as described in the description."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-37434",
              "name": "CVE-2022-37434",
              "shortDescription": {
                "text": "Scanner for CVE-2022-37434"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called.",
                "markdown": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25315",
              "name": "CVE-2022-25315",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25315"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-40674",
              "name": "CVE-2022-40674",
              "shortDescription": {
                "text": "Scanner for CVE-2022-40674"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22822",
              "name": "CVE-2022-22822",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22822"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22823",
              "name": "CVE-2022-22823",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22823"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22824",
              "name": "CVE-2022-22824",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22824"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22825",
              "name": "CVE-2022-22825",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22825"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23852",
              "name": "CVE-2022-23852",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23852"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23990",
              "name": "CVE-2022-23990",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23990"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25235",
              "name": "CVE-2022-25235",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25235"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25236",
              "name": "CVE-2022-25236",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25236"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22826",
              "name": "CVE-2022-22826",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22826"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22827",
              "name": "CVE-2022-22827",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22827"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25313",
              "name": "CVE-2022-25313",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25313"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-52425",
              "name": "CVE-2023-52425",
              "shortDescription": {
                "text": "Scanner for CVE-2023-52425"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks.",
                "markdown": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43680",
              "name": "CVE-2022-43680",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43680"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42916",
              "name": "CVE-2022-42916",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42916"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-23914",
              "name": "CVE-2023-23914",
              "shortDescription": {
                "text": "Scanner for CVE-2023-23914"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-43551",
              "name": "CVE-2022-43551",
              "shortDescription": {
                "text": "Scanner for CVE-2022-43551"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-4450",
              "name": "CVE-2022-4450",
              "shortDescription": {
                "text": "Scanner for CVE-2022-4450"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the vulnerable functions is called:\n```\nPEM_read_bio_ex()\nPEM_read_bio()\nPEM_read()\nPEM_read_DHparams()\nPEM_read_PrivateKey()\nPEM_read_bio_PrivateKey()\nPEM_read_RSA_PUBKEY()\nPEM_read_bio_RSA_PUBKEY()\nPEM_read_RSAPrivateKey()\nPEM_read_bio_RSAPrivateKey()\nPEM_read_PKCS7()\nPEM_read_bio_PKCS7()\nPEM_read_X509()\nPEM_read_bio_X509()\nPEM_read_X509_AUX()\nPEM_read_bio_X509_AUX()\nPEM_read_X509_CRL()\nPEM_read_bio_X509_CRL()\nPEM_read_bio_X509_REQ()\nPEM_read_bio_ECPrivateKey()\nPEM_read_bio_PKCS8()\n\nPEM_X509_INFO_read_bio_ex()\nSSL_CTX_use_serverinfo_file()\nSSL_use_cert_and_key() \nSSL_CTX_use_certificate_chain_file()\nSSL_CTX_load_verify_locations()\nSSL_CTX_set1_verify_file()\nSSL_CTX_set1_verify_path()\nX509_LOOKUP_load_file()\n\nSSL_load_client_CA_file_ex()\nSSL_load_client_CA_file()\nSSL_add_file_cert_subjects_to_stack()\nSSL_add_dir_cert_subjects_to_stack()\nSSL_add_store_cert_subjects_to_stack()\n\nuse_certificate_chain_file\nSSL_use_certificate_file\nSSL_CTX_use_certificate_file\nSSL_use_PrivateKey_file\nSSL_CTX_use_PrivateKey_file\nSSL_CTX_use_serverinfo_file\n\nSSL_use_RSAPrivateKey_file\nSSL_CTX_use_RSAPrivateKey_file\n```\n\nNote that while the vulnerability is also exploitable through the use of the command line tool `openssl asn1parse`, the vulnerability's DoS impact in this case does not pose a threat, since the DoS will crash the forked `openssl` tool process only",
                "markdown": "The scanner checks if at least one of the vulnerable functions is called:\n```\nPEM_read_bio_ex()\nPEM_read_bio()\nPEM_read()\nPEM_read_DHparams()\nPEM_read_PrivateKey()\nPEM_read_bio_PrivateKey()\nPEM_read_RSA_PUBKEY()\nPEM_read_bio_RSA_PUBKEY()\nPEM_read_RSAPrivateKey()\nPEM_read_bio_RSAPrivateKey()\nPEM_read_PKCS7()\nPEM_read_bio_PKCS7()\nPEM_read_X509()\nPEM_read_bio_X509()\nPEM_read_X509_AUX()\nPEM_read_bio_X509_AUX()\nPEM_read_X509_CRL()\nPEM_read_bio_X509_CRL()\nPEM_read_bio_X509_REQ()\nPEM_read_bio_ECPrivateKey()\nPEM_read_bio_PKCS8()\n\nPEM_X509_INFO_read_bio_ex()\nSSL_CTX_use_serverinfo_file()\nSSL_use_cert_and_key() \nSSL_CTX_use_certificate_chain_file()\nSSL_CTX_load_verify_locations()\nSSL_CTX_set1_verify_file()\nSSL_CTX_set1_verify_path()\nX509_LOOKUP_load_file()\n\nSSL_load_client_CA_file_ex()\nSSL_load_client_CA_file()\nSSL_add_file_cert_subjects_to_stack()\nSSL_add_dir_cert_subjects_to_stack()\nSSL_add_store_cert_subjects_to_stack()\n\nuse_certificate_chain_file\nSSL_use_certificate_file\nSSL_CTX_use_certificate_file\nSSL_use_PrivateKey_file\nSSL_CTX_use_PrivateKey_file\nSSL_CTX_use_serverinfo_file\n\nSSL_use_RSAPrivateKey_file\nSSL_CTX_use_RSAPrivateKey_file\n```\n\nNote that while the vulnerability is also exploitable through the use of the command line tool `openssl asn1parse`, the vulnerability's DoS impact in this case does not pose a threat, since the DoS will crash the forked `openssl` tool process only"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0215",
              "name": "CVE-2023-0215",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0215"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the vulnerable functions is called:\n```\nPEM_write_bio_ASN1_stream()\nPEM_write_bio_CMS_stream()\nPEM_write_bio_PKCS7_stream()\nSMIME_write_ASN1()\nSMIME_write_CMS()\nSMIME_write_PKCS7()\nBIO_new_CMS()\nBIO_new_PKCS7()\ni2d_CMS_bio_stream()\ni2d_PKCS7_bio_stream()\ni2d_ASN1_bio_stream()\nBIO_new_NDEF()\n```",
                "markdown": "The scanner checks if at least one of the vulnerable functions is called:\n```\nPEM_write_bio_ASN1_stream()\nPEM_write_bio_CMS_stream()\nPEM_write_bio_PKCS7_stream()\nSMIME_write_ASN1()\nSMIME_write_CMS()\nSMIME_write_PKCS7()\nBIO_new_CMS()\nBIO_new_PKCS7()\ni2d_CMS_bio_stream()\ni2d_PKCS7_bio_stream()\ni2d_ASN1_bio_stream()\nBIO_new_NDEF()\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0217",
              "name": "CVE-2023-0217",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0217"
              },
              "fullDescription": {
                "text": "When checking ELF files, the scanner checks whether the vulnerable `EVP_PKEY_public_check()` function is called.\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked",
                "markdown": "When checking ELF files, the scanner checks whether the vulnerable `EVP_PKEY_public_check()` function is called.\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0286",
              "name": "CVE-2023-0286",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0286"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the vulnerable API calls is called:\n\n* `X509_STORE_CTX_get_check_revocation`\n* `X509_STORE_get_check_revocation`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The CRL checking option must also be enabled.",
                "markdown": "The scanner checks if at least one of the vulnerable API calls is called:\n\n* `X509_STORE_CTX_get_check_revocation`\n* `X509_STORE_get_check_revocation`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The CRL checking option must also be enabled."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0401",
              "name": "CVE-2023-0401",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0401"
              },
              "fullDescription": {
                "text": "When checking ELF files, the scanner checks whether at least one of the vulnerable API calls is called:\n\n* `PKCS7_decrypt`\n* `PKCS7_dataInit`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked",
                "markdown": "When checking ELF files, the scanner checks whether at least one of the vulnerable API calls is called:\n\n* `PKCS7_decrypt`\n* `PKCS7_dataInit`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0464",
              "name": "CVE-2023-0464",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0464"
              },
              "fullDescription": {
                "text": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.",
                "markdown": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0465",
              "name": "CVE-2023-0465",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0465"
              },
              "fullDescription": {
                "text": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.",
                "markdown": "The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the `X509_VERIFY_PARAM_set1_policies` function is called (the functionality is disabled by default)\n\nNote that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag `-policy`. For example, by running `openssl ca -policy match`. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27533",
              "name": "CVE-2023-27533",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27533"
              },
              "fullDescription": {
                "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`",
                "markdown": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27536",
              "name": "CVE-2023-27536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27536"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option.",
                "markdown": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32221",
              "name": "CVE-2022-32221",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32221"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler.",
                "markdown": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-28322",
              "name": "CVE-2023-28322",
              "shortDescription": {
                "text": "Scanner for CVE-2023-28322"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)",
                "markdown": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-26136",
              "name": "CVE-2023-26136",
              "shortDescription": {
                "text": "Scanner for CVE-2023-26136"
              },
              "fullDescription": {
                "text": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false.",
                "markdown": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-25883",
              "name": "CVE-2022-25883",
              "shortDescription": {
                "text": "Scanner for CVE-2022-25883"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`",
                "markdown": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2603",
              "name": "CVE-2023-2603",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2603"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n - `cap_proc_root`\n - `cap_launcher_set_chroot`\n\nTo determine this CVE's applicability, an additional condition (that the scanner currently does not check) should be verified: The application runs in 32-bit mode on a 64-bit Linux host.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n - `cap_proc_root`\n - `cap_launcher_set_chroot`\n\nTo determine this CVE's applicability, an additional condition (that the scanner currently does not check) should be verified: The application runs in 32-bit mode on a 64-bit Linux host."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3711",
              "name": "CVE-2021-3711",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3711"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `EVP_PKEY_decrypt` is called.",
                "markdown": "The scanner checks whether the vulnerable function `EVP_PKEY_decrypt` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0216",
              "name": "CVE-2023-0216",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0216"
              },
              "fullDescription": {
                "text": "When checking ELF files, the scanner checks if at least one of the vulnerable functions is called:\n\n* `d2i_PKCS7()`\n* `d2i_PKCS7_bio()`\n* `d2i_PKCS7_fp()`\n\nWhen checking Python files, the scanner checks if at least one of the vulnerable functions is called with external input to its 1st (`bytes`) argument:\n\n* `cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates`\n* `cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates`",
                "markdown": "When checking ELF files, the scanner checks if at least one of the vulnerable functions is called:\n\n* `d2i_PKCS7()`\n* `d2i_PKCS7_bio()`\n* `d2i_PKCS7_fp()`\n\nWhen checking Python files, the scanner checks if at least one of the vulnerable functions is called with external input to its 1st (`bytes`) argument:\n\n* `cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates`\n* `cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-2650",
              "name": "CVE-2023-2650",
              "shortDescription": {
                "text": "Scanner for CVE-2023-2650"
              },
              "fullDescription": {
                "text": "When checking ELF files, the scanner checks whether one of the following function is called with an external input:\n\n* Direct call to `OBJ_obj2txt()` function (for OpenSSL 1.x and OpenSSL 3.x)\n\n**Only for OpenSSL 3.x:**\n\n* OCSP: `OCSP_basic_verify()`\n\n* PKCS7/SMIME:\n`PKCS7_decrypt()`\n`PKCS7_sign()`\n`PKCS7_verify()`\n\n* CMS:\n`CMS_EncryptedData_decrypt()`\n`CMS_EncryptedData_encrypt()`\n`CMS_EnvelopedData_decrypt()`\n`CMS_final()`\n`CMS_decrypt_set1_password()`\n`CMS_RecipientInfo_decrypt()`\n`CMS_decrypt()`\n`CMS_decrypt_set1_pkey()`\n`CMS_decrypt_set1_pkey_and_peer()`\n`CMS_SignedData_verify()`\n`CMS_verify()`\n`CMS_SignerInfo_verify()`\n`CMS_compress()`\n`CMS_data_create()`\n`CMS_data_create_ex()`\n`CMS_digest_create()`\n`CMS_digest_create_ex()`\n`CMS_digest_verify()`\n`CMS_encrypt()`\n`CMS_encrypt_ex()`\n`CMS_final_digest()`\n`CMS_sign()`\n`CMS_sign_ex()`\n`CMS_add1_signer()`\n`CMS_sign_receipt()`\n`CMS_uncompress()`\n`CMS_verify_receipt()`\n\n* CMP/CRMF:\n`OSSL_CMP_get_caCerts()`\n`OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()`\n`OSSL_CRMF_pbm_new()`\n\n* TS:\n`TS_REQ_print_bio()`\n`TS_OBJ_print_bio()`\n`TS_RESP_create_response()`\n`TS_RESP_print_bio()`\n`TS_RESP_verify_response()`\n`TS_RESP_verify_token()`\n\n* ASN1:\n`ASN1_parse()`\n`X509_NAME_print_ex()`\n`X509_NAME_print_ex_fp()`\n`d2i_AutoPrivateKey()`\n`d2i_PrivateKey()`\n`X509_STORE_CTX_print_verify_cb()`\n`x509_pubkey_ex_d2i_ex()`\n\n* EVP:\n`EVP_PKCS82PKEY()`\n`EVP_PKCS82PKEY_ex()`\n`PKCS5_v2_PBE_keyivgen()`\n`PKCS5_v2_PBE_keyivgen_ex()`\n\n* ESS:\n`OSSL_ESS_check_signing_certs()`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked",
                "markdown": "When checking ELF files, the scanner checks whether one of the following function is called with an external input:\n\n* Direct call to `OBJ_obj2txt()` function (for OpenSSL 1.x and OpenSSL 3.x)\n\n**Only for OpenSSL 3.x:**\n\n* OCSP: `OCSP_basic_verify()`\n\n* PKCS7/SMIME:\n`PKCS7_decrypt()`\n`PKCS7_sign()`\n`PKCS7_verify()`\n\n* CMS:\n`CMS_EncryptedData_decrypt()`\n`CMS_EncryptedData_encrypt()`\n`CMS_EnvelopedData_decrypt()`\n`CMS_final()`\n`CMS_decrypt_set1_password()`\n`CMS_RecipientInfo_decrypt()`\n`CMS_decrypt()`\n`CMS_decrypt_set1_pkey()`\n`CMS_decrypt_set1_pkey_and_peer()`\n`CMS_SignedData_verify()`\n`CMS_verify()`\n`CMS_SignerInfo_verify()`\n`CMS_compress()`\n`CMS_data_create()`\n`CMS_data_create_ex()`\n`CMS_digest_create()`\n`CMS_digest_create_ex()`\n`CMS_digest_verify()`\n`CMS_encrypt()`\n`CMS_encrypt_ex()`\n`CMS_final_digest()`\n`CMS_sign()`\n`CMS_sign_ex()`\n`CMS_add1_signer()`\n`CMS_sign_receipt()`\n`CMS_uncompress()`\n`CMS_verify_receipt()`\n\n* CMP/CRMF:\n`OSSL_CMP_get_caCerts()`\n`OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()`\n`OSSL_CRMF_pbm_new()`\n\n* TS:\n`TS_REQ_print_bio()`\n`TS_OBJ_print_bio()`\n`TS_RESP_create_response()`\n`TS_RESP_print_bio()`\n`TS_RESP_verify_response()`\n`TS_RESP_verify_token()`\n\n* ASN1:\n`ASN1_parse()`\n`X509_NAME_print_ex()`\n`X509_NAME_print_ex_fp()`\n`d2i_AutoPrivateKey()`\n`d2i_PrivateKey()`\n`X509_STORE_CTX_print_verify_cb()`\n`x509_pubkey_ex_d2i_ex()`\n\n* EVP:\n`EVP_PKCS82PKEY()`\n`EVP_PKCS82PKEY_ex()`\n`PKCS5_v2_PBE_keyivgen()`\n`PKCS5_v2_PBE_keyivgen_ex()`\n\n* ESS:\n`OSSL_ESS_check_signing_certs()`\n\nNote that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-38545",
              "name": "CVE-2023-38545",
              "shortDescription": {
                "text": "Scanner for CVE-2023-38545"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1292",
              "name": "CVE-2022-1292",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1292"
              },
              "fullDescription": {
                "text": "The scanner checks for the execution of the vulnerable `c_rehash` by searching the artifact for the vulnerable command.",
                "markdown": "The scanner checks for the execution of the vulnerable `c_rehash` by searching the artifact for the vulnerable command."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2068",
              "name": "CVE-2022-2068",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2068"
              },
              "fullDescription": {
                "text": "The scanner checks for the execution of the vulnerable `c_rehash` by searching the artifact for the vulnerable command.",
                "markdown": "The scanner checks for the execution of the vulnerable `c_rehash` by searching the artifact for the vulnerable command."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-5363",
              "name": "CVE-2023-5363",
              "shortDescription": {
                "text": "Scanner for CVE-2023-5363"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `EVP_EncryptInit_ex2`\n- `EVP_DecryptInit_ex2`\n- `EVP_CipherInit_ex2`",
                "markdown": "The scanner checks if any of the following vulnerable functions are called:\n\n- `EVP_EncryptInit_ex2`\n- `EVP_DecryptInit_ex2`\n- `EVP_CipherInit_ex2`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-35945",
              "name": "CVE-2023-35945",
              "shortDescription": {
                "text": "Scanner for CVE-2023-35945"
              },
              "fullDescription": {
                "text": "The scanner checks whether the Envoy YAML or JSON configuration contains a definition for an upstream cluster.\nFor example -\n```yaml\nstatic_resources:\n\tclusters:\n\t- name: ...\t\n```",
                "markdown": "The scanner checks whether the Envoy YAML or JSON configuration contains a definition for an upstream cluster.\nFor example -\n```yaml\nstatic_resources:\n\tclusters:\n\t- name: ...\t\n```"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-7104",
              "name": "CVE-2023-7104",
              "shortDescription": {
                "text": "Scanner for CVE-2023-7104"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)",
                "markdown": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-0466",
              "name": "CVE-2023-0466",
              "shortDescription": {
                "text": "Scanner for CVE-2023-0466"
              },
              "fullDescription": {
                "text": "The scanner checks whether `X509_VERIFY_PARAM_add0_policy()` is called.\n\nNote that calling `X509_VERIFY_PARAM_set_flags()` with the parameter `X509_V_FLAG_POLICY_CHECK` mitigates this vulnerability. The scanner currently does not check for that mitigation.",
                "markdown": "The scanner checks whether `X509_VERIFY_PARAM_add0_policy()` is called.\n\nNote that calling `X509_VERIFY_PARAM_set_flags()` with the parameter `X509_V_FLAG_POLICY_CHECK` mitigates this vulnerability. The scanner currently does not check for that mitigation."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-27534",
              "name": "CVE-2023-27534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-27534"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address.",
                "markdown": "The scanner checks if any of the following conditions are met:\n\n- The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n- A connection to an SFTP server is made using Curl.\n\nIf any of the conditions are not met, the scanner will return an inconclusive result because Curl may be executed dynamically with user-provided SFTP address."
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            },
            {
              "id": "applic_CVE-2023-42282",
              "name": "CVE-2023-42282",
              "shortDescription": {
                "text": "Scanner for CVE-2023-42282"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`",
                "markdown": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-49210",
              "name": "CVE-2023-49210",
              "shortDescription": {
                "text": "Scanner for CVE-2023-49210"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable `openssl` function is used with external input.",
                "markdown": "The scanner checks whether the vulnerable `openssl` function is used with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2016-7798",
              "name": "CVE-2016-7798",
              "shortDescription": {
                "text": "Scanner for CVE-2016-7798"
              },
              "fullDescription": {
                "text": "The scanner checks if the function `OpenSSL::Cipher.new()` is called with AES gcm is as the encryption type. \nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization.",
                "markdown": "The scanner checks if the function `OpenSSL::Cipher.new()` is called with AES gcm is as the encryption type. \nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-27782",
              "name": "CVE-2022-27782",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27782"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`",
                "markdown": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-27781",
              "name": "CVE-2022-27781",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27781"
              },
              "fullDescription": {
                "text": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`.",
                "markdown": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-22576",
              "name": "CVE-2022-22576",
              "shortDescription": {
                "text": "Scanner for CVE-2022-22576"
              },
              "fullDescription": {
                "text": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used.",
                "markdown": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-44487",
              "name": "CVE-2023-44487",
              "shortDescription": {
                "text": "Scanner for CVE-2023-44487"
              },
              "fullDescription": {
                "text": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages",
                "markdown": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3712",
              "name": "CVE-2021-3712",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3712"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `ASN1_STRING` structure is created by searching for the existence of all the functions that create the `ASN1_STRING` structure or other structures that are based on the `ASN1_STRING` structure:\n\n* ASN1_STRING_new()\nASN1_STRING_type_new()\nASN1_OCTET_STRING_new()\nASN1_BIT_STRING_new()\nASN1_INTEGER_new()\nASN1_ENUMERATED_new()\nASN1_UTF8STRING_new()\nASN1_IA5STRING_new()\nASN1_UNIVERSALSTRING_new()\nASN1_BMPSTRING_new()\nASN1_GENERALSTRING_new()\nASN1_T61STRING_new()\nASN1_VISIBLESTRING_new()\nASN1_PRINTABLESTRING_new()\nASN1_PRINTABLE_new()\nDIRECTORYSTRING_new()\nDISPLAYTEXT_new()  \nASN1_GENERALIZEDTIME_new()\nASN1_UTCTIME_new()\nASN1_TIME_new()",
                "markdown": "The scanner checks whether the `ASN1_STRING` structure is created by searching for the existence of all the functions that create the `ASN1_STRING` structure or other structures that are based on the `ASN1_STRING` structure:\n\n* ASN1_STRING_new()\nASN1_STRING_type_new()\nASN1_OCTET_STRING_new()\nASN1_BIT_STRING_new()\nASN1_INTEGER_new()\nASN1_ENUMERATED_new()\nASN1_UTF8STRING_new()\nASN1_IA5STRING_new()\nASN1_UNIVERSALSTRING_new()\nASN1_BMPSTRING_new()\nASN1_GENERALSTRING_new()\nASN1_T61STRING_new()\nASN1_VISIBLESTRING_new()\nASN1_PRINTABLESTRING_new()\nASN1_PRINTABLE_new()\nDIRECTORYSTRING_new()\nDISPLAYTEXT_new()  \nASN1_GENERALIZEDTIME_new()\nASN1_UTCTIME_new()\nASN1_TIME_new()"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-3449",
              "name": "CVE-2021-3449",
              "shortDescription": {
                "text": "Scanner for CVE-2021-3449"
              },
              "fullDescription": {
                "text": "The scanner checks whether the server is configured with both:\n\n* TLSv1.2\n* Renegotiation is enabled\n\n\nThis CVE is applicable in ELF files under additional conditions (that the scanner currently does not check), which should be verified. The conditions are:\n\n1. The server code explicity sets the minimum and maximum versions of TLS to support TLSv1.2 (TLSv1.3 support 1.2 as well)\n\nFor example:\n```\nSSL_CTX_set_min_proto_version(ctx, TLS1_2_VERSION);\nSSL_CTX_set_max_proto_version(ctx, TLS1_3_VERSION);\n```\n\n2. The server code *does not* explicity disables renegotiation by `SSL_CTX_set_options(ctx, SSL_OP_NO_RENEGOTIATION)`.",
                "markdown": "The scanner checks whether the server is configured with both:\n\n* TLSv1.2\n* Renegotiation is enabled\n\n\nThis CVE is applicable in ELF files under additional conditions (that the scanner currently does not check), which should be verified. The conditions are:\n\n1. The server code explicity sets the minimum and maximum versions of TLS to support TLSv1.2 (TLSv1.3 support 1.2 as well)\n\nFor example:\n```\nSSL_CTX_set_min_proto_version(ctx, TLS1_2_VERSION);\nSSL_CTX_set_max_proto_version(ctx, TLS1_3_VERSION);\n```\n\n2. The server code *does not* explicity disables renegotiation by `SSL_CTX_set_options(ctx, SSL_OP_NO_RENEGOTIATION)`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-8285",
              "name": "CVE-2020-8285",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8285"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22876",
              "name": "CVE-2021-22876",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22876"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27537",
              "name": "CVE-2023-27537",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27537"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3446",
              "name": "CVE-2023-3446",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3446"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28155",
              "name": "CVE-2023-28155",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28155"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2466",
              "name": "CVE-2024-2466",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2466"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-35252",
              "name": "CVE-2022-35252",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35252"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-29154",
              "name": "CVE-2022-29154",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-29154"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0727",
              "name": "CVE-2024-0727",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0727"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27535",
              "name": "CVE-2023-27535",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27535"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28320",
              "name": "CVE-2023-28320",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28320"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2379",
              "name": "CVE-2024-2379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-28928",
              "name": "CVE-2020-28928",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-28928"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23840",
              "name": "CVE-2021-23840",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23840"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-30139",
              "name": "CVE-2021-30139",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-30139"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-42915",
              "name": "CVE-2022-42915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-42915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22945",
              "name": "CVE-2021-22945",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22945"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46218",
              "name": "CVE-2023-46218",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46218"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42374",
              "name": "CVE-2021-42374",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42374"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-20227",
              "name": "CVE-2021-20227",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-20227"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23839",
              "name": "CVE-2021-23839",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23839"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-37322",
              "name": "CVE-2021-37322",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-37322"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8286",
              "name": "CVE-2020-8286",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8286"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-25314",
              "name": "CVE-2022-25314",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-25314"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-28391",
              "name": "CVE-2022-28391",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-28391"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42380",
              "name": "CVE-2021-42380",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42380"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4603",
              "name": "CVE-2024-4603",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4603"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42379",
              "name": "CVE-2021-42379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32207",
              "name": "CVE-2022-32207",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32207"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8284",
              "name": "CVE-2020-8284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-34969",
              "name": "CVE-2023-34969",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-34969"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42385",
              "name": "CVE-2021-42385",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42385"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30065",
              "name": "CVE-2022-30065",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30065"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3468",
              "name": "CVE-2021-3468",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3468"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36159",
              "name": "CVE-2021-36159",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36159"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38470",
              "name": "CVE-2023-38470",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38470"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-2975",
              "name": "CVE-2023-2975",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-2975"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48174",
              "name": "CVE-2022-48174",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48174"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52426",
              "name": "CVE-2023-52426",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52426"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-1255",
              "name": "CVE-2023-1255",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-1255"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-11655",
              "name": "CVE-2020-11655",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-11655"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30115",
              "name": "CVE-2022-30115",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30115"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-26720",
              "name": "CVE-2021-26720",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-26720"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2004",
              "name": "CVE-2024-2004",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2004"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-12049",
              "name": "CVE-2020-12049",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-12049"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27780",
              "name": "CVE-2022-27780",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27780"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42378",
              "name": "CVE-2021-42378",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42378"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22898",
              "name": "CVE-2021-22898",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22898"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-1271",
              "name": "CVE-2022-1271",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-1271"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `xz-utils` or`xzgrep` or `zutils` or `zgrep` tools are present in the system.\nNote that even if `xzgrep` or `zgrep` executables are present, the issue may still not be exploitable, since exploitation depends on the tools to handle attacker-supplied filenames (see extended information).",
                "markdown": "The scanner checks whether the `xz-utils` or`xzgrep` or `zutils` or `zgrep` tools are present in the system.\nNote that even if `xzgrep` or `zgrep` executables are present, the issue may still not be exploitable, since exploitation depends on the tools to handle attacker-supplied filenames (see extended information)."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23841",
              "name": "CVE-2021-23841",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23841"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13435",
              "name": "CVE-2020-13435",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13435"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38471",
              "name": "CVE-2023-38471",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38471"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27775",
              "name": "CVE-2022-27775",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27775"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23915",
              "name": "CVE-2023-23915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13434",
              "name": "CVE-2020-13434",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13434"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27776",
              "name": "CVE-2022-27776",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27776"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38472",
              "name": "CVE-2023-38472",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38472"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-14387",
              "name": "CVE-2020-14387",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-14387"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8231",
              "name": "CVE-2020-8231",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8231"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8169",
              "name": "CVE-2020-8169",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8169"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-46143",
              "name": "CVE-2021-46143",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-46143"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-42012",
              "name": "CVE-2022-42012",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-42012"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42376",
              "name": "CVE-2021-42376",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42376"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-16137",
              "name": "CVE-2017-16137",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-16137"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-1967",
              "name": "CVE-2020-1967",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-1967"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-4160",
              "name": "CVE-2021-4160",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-4160"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-1394",
              "name": "CVE-2024-1394",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-1394"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22926",
              "name": "CVE-2021-22926",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22926"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-42010",
              "name": "CVE-2022-42010",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-42010"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32206",
              "name": "CVE-2022-32206",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32206"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32205",
              "name": "CVE-2022-32205",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32205"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13630",
              "name": "CVE-2020-13630",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13630"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22890",
              "name": "CVE-2021-22890",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22890"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13631",
              "name": "CVE-2020-13631",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13631"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-6237",
              "name": "CVE-2023-6237",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-6237"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42915",
              "name": "CVE-2023-42915",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42915"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-11080",
              "name": "CVE-2020-11080",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-11080"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27779",
              "name": "CVE-2022-27779",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27779"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-29415",
              "name": "CVE-2024-29415",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-29415"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`",
                "markdown": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`"
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-23916",
              "name": "CVE-2023-23916",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-23916"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-3767",
              "name": "CVE-2009-3767",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-3767"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-46219",
              "name": "CVE-2023-46219",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-46219"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28757",
              "name": "CVE-2024-28757",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28757"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42383",
              "name": "CVE-2021-42383",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42383"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38473",
              "name": "CVE-2023-38473",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38473"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2013-0340",
              "name": "CVE-2013-0340",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2013-0340"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-42011",
              "name": "CVE-2022-42011",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-42011"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15366",
              "name": "CVE-2020-15366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-2602",
              "name": "CVE-2023-2602",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-2602"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42810",
              "name": "CVE-2023-42810",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42810"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-32208",
              "name": "CVE-2022-32208",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-32208"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28831",
              "name": "CVE-2021-28831",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28831"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22901",
              "name": "CVE-2021-22901",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22901"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42384",
              "name": "CVE-2021-42384",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42384"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15358",
              "name": "CVE-2020-15358",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15358"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36217",
              "name": "CVE-2021-36217",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36217"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2511",
              "name": "CVE-2024-2511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-8177",
              "name": "CVE-2020-8177",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-8177"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-43552",
              "name": "CVE-2022-43552",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-43552"
              },
              "fullDescription": {
                "text": "The scanner checks whether the function `curl_easy_setopt()` is called to define `curl` options. The scanner does not check which options are passed to the function. \nA manual check is required to check if the `CURLOPT_PROXY` is defined along with a `CURLOPT_URL`  starting by `smb:` or `telnet:`.",
                "markdown": "The scanner checks whether the function `curl_easy_setopt()` is called to define `curl` options. The scanner does not check which options are passed to the function. \nA manual check is required to check if the `CURLOPT_PROXY` is defined along with a `CURLOPT_URL`  starting by `smb:` or `telnet:`."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2398",
              "name": "CVE-2024-2398",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2398"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-4203",
              "name": "CVE-2022-4203",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-4203"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `SSL_CTX_set_verify()` or `SSL_set_verify()` functions are called.\nA call with the `SSL_VERIFY_PEER` mode is enabling client authentication and makes this vulnerability possible.",
                "markdown": "The scanner checks whether the `SSL_CTX_set_verify()` or `SSL_set_verify()` functions are called.\nA call with the `SSL_VERIFY_PEER` mode is enabling client authentication and makes this vulnerability possible."
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-35260",
              "name": "CVE-2022-35260",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-35260"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-6129",
              "name": "CVE-2023-6129",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-6129"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22925",
              "name": "CVE-2021-22925",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22925"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-1981",
              "name": "CVE-2023-1981",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-1981"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22947",
              "name": "CVE-2021-22947",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22947"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42382",
              "name": "CVE-2021-42382",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42382"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-28319",
              "name": "CVE-2023-28319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-28319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42386",
              "name": "CVE-2021-42386",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42386"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-45960",
              "name": "CVE-2021-45960",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-45960"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-13632",
              "name": "CVE-2020-13632",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-13632"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22924",
              "name": "CVE-2021-22924",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22924"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42375",
              "name": "CVE-2021-42375",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42375"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-4304",
              "name": "CVE-2022-4304",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-4304"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-0778",
              "name": "CVE-2022-0778",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-0778"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3826",
              "name": "CVE-2021-3826",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3826"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38546",
              "name": "CVE-2023-38546",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38546"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0853",
              "name": "CVE-2024-0853",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0853"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-3817",
              "name": "CVE-2023-3817",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-3817"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-27774",
              "name": "CVE-2022-27774",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-27774"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38469",
              "name": "CVE-2023-38469",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38469"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-5678",
              "name": "CVE-2023-5678",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-5678"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-42381",
              "name": "CVE-2021-42381",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-42381"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3450",
              "name": "CVE-2021-3450",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3450"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-4039",
              "name": "CVE-2023-4039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-4039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23386",
              "name": "CVE-2021-23386",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23386"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-27538",
              "name": "CVE-2023-27538",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-27538"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2000-1254",
              "name": "CVE-2000-1254",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2000-1254"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-3502",
              "name": "CVE-2021-3502",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-3502"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-38039",
              "name": "CVE-2023-38039",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-38039"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-1971",
              "name": "CVE-2020-1971",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-1971"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-22897",
              "name": "CVE-2021-22897",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-22897"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718749304-2624242943/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718749260-1652010377/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2018-25032",
          "message": {
            "text": "The vulnerable function deflateInit2 is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-15847",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2020-11656",
          "kind": "pass",
          "message": {
            "text": "The scanner searches for an `sqlite` binary that is compiled with the vulnerable `SQLITE_DEBUG` flag, by checking for the ELF symbol `sqlite3DebugPrintf` in the binary"
          }
        },
        {
          "ruleId": "applic_CVE-2021-44906",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `minimist` is called with external input to its 1st (`args`) argument, and the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22923",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22922",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable file download functionality, by checking whether the vulnerable flag `--metalink` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-22946",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` supports the vulnerable functionality, by checking whether any of the following vulnerable flags are used:\n\n- `--ssl-reqd`\n- `--ftp-ssl-reqd`"
          }
        },
        {
          "ruleId": "applic_CVE-2024-28863",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `tar.x`\n* `tar.extract`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-3918",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `json-schema.validate` with external input to its 1st (`instance`) argument.\n* `json-schema.checkPropertyChange` with external input to its 2nd (`schema`) argument.\n\nThe scanner also checks whether the `Object.freeze()` remediation is not present."
          }
        },
        {
          "ruleId": "applic_CVE-2022-2097",
          "message": {
            "text": "The vulnerable function EVP_EncryptInit_ex is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24999",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `qs.parse` is called with the non-default option 'allowPrototypes' enabled, and the `Object.freeze()` remediation is not present.\nIt also checks whether `express.js` has a GET path that processes its query strings."
          }
        },
        {
          "ruleId": "applic_CVE-2022-3517",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called with external input to the `pattern` argument and brace expansion is not disabled (by the option `{nobrace: true}`):\n\n- `minimatch()`\n- `minimatch.braceExpand()`\n- `minimatch.filter()`\n- `minimatch.match()`\n- `minimatch.makeRe()`\n- `minimatch.Minimatch.prototype.braceExpand()`\n- `minimatch.Minimatch() `\n\nNote that if a call to the `minimatch.filter()` function was found by the scanner, the vulnerability is applicable only if the function returned by `minimatch.filter()` is invoked. Currently, the scanner does not check that."
          }
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///sbin/apk"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///sbin/apk"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libcurl.so.4.6.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libcurl.so.4.6.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libcurl.so.4.6.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_accept is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function BIO_new_ssl_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_accept is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function SSL_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function BIO_new_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3786",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///sbin/apk"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///sbin/apk"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libcurl.so.4.6.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libcurl.so.4.6.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libcurl.so.4.6.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_accept is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/lib/libtls-standalone.so.1.0.0"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function BIO_new_ssl_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_CTX_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_accept is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function SSL_set_verify is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function BIO_new_connect is called, indicating a TLS client that may accept crafted server certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-3602",
          "message": {
            "text": "The vulnerable function X509_verify_cert is called, may indicate a TLS server that may accept crafted client certificates"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-37434",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `inflateGetHeader()` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25315",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-40674",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22822",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22823",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22824",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22825",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23852",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-23990",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25235",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25236",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22826",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-22827",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-25313",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-52425",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the next functions are called:\n\n* `XML_Parse()`\n* `XML_ParseBuffer()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The vulnerable functions are used to parse an attacker-controlled file by chunks."
          }
        },
        {
          "ruleId": "applic_CVE-2022-43680",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `XML_Parse`\n* `XML_ParseBuffer`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-42916",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2023-23914",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-43551",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--hsts` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-4450",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `i2d_ASN1_bio_stream` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `PEM_write_bio_ASN1_stream` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `SMIME_write_ASN1` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `BIO_new_NDEF` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `BIO_new_CMS` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `i2d_CMS_bio_stream` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `PEM_write_bio_CMS_stream` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `SMIME_write_CMS` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `BIO_new_PKCS7` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `i2d_PKCS7_bio_stream` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `PEM_write_bio_PKCS7_stream` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0215",
          "message": {
            "text": "The vulnerable function `SMIME_write_PKCS7` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0217",
          "message": {
            "text": "The vulnerable function `EVP_PKEY_public_check` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0286",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0286",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0401",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0401",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0464",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0465",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-27533",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether curl is executed with the vulnerable `--telnet-option` flag, and the flag references one of the following vulnerable options -\n\n- `TTYPE`\n- `XDISPLOC`\n- `NEW_ENV`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-27536",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl` command-line tool is invoked with the `--delegation` option."
          }
        },
        {
          "ruleId": "applic_CVE-2022-32221",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `curl_easy_setopt()` is called.\n\nTo determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified. The condition is that both CURLOPT_READFUNCTION and CURLOPT_POSTFIELDS options are set through `curl_easy_setopt()` on the same handler."
          }
        },
        {
          "ruleId": "applic_CVE-2023-28322",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `curl_easy_setopt` is called (this flaw cannot be triggered with the command line tool).\n\nNote that the scanner currently does not check for the specific arguments that must be passed to `curl_easy_setopt` (over multiple calls) for the vulnerability to be applicable -\n\n* `CURLOPT_READFUNCTION` - to set up a read callback that supplies data to the following PUT request\n\n* `CURLOPT_PUT / CURLOPT_UPLOAD` - to perform a PUT request\n\n* `CURLOPT_POSTFIELDS` - to (attempt to) supply data for the following POST request\n\n* `CURLOPT_POST` - to perform a POST request (which will erroneously use the read callback previously set)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-26136",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for the initialization of `CookieJar()` with the vulnerable option ` rejectPublicSuffixes` set to false."
          }
        },
        {
          "ruleId": "applic_CVE-2022-25883",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following function are called:\n\n* `Range`\n* `satisfies`\n* `intersects`\n* `maxSatisfying`\n* `minSatisfying`\n* `minVersion`\n* `outside`\n* `subset`\n* `toComparators`\n* `validRange`\n* `gtr`\n* `ltr`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-2603",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n - `cap_proc_root`\n - `cap_launcher_set_chroot`\n\nTo determine this CVE's applicability, an additional condition (that the scanner currently does not check) should be verified: The application runs in 32-bit mode on a 64-bit Linux host."
          }
        },
        {
          "ruleId": "applic_CVE-2021-3711",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0216",
          "message": {
            "text": "The vulnerable function `d2i_PKCS7` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0216",
          "message": {
            "text": "The vulnerable function `d2i_PKCS7_fp` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-0216",
          "message": {
            "text": "The vulnerable function `d2i_PKCS7_bio` is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for both OpenSSL 1.x and 3.x were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-2650",
          "message": {
            "text": "References to the vulnerable functions for OpenSSL 3.x only were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-38545",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is called with the vulnerable argument `--socks5-hostname`.\n2. Whether the vulnerable scheme `socks5h://` is referenced anywhere. This includes (but not limited to) command line arguments, environment variables and shell scripts.\n3. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, for fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n* `curl_easy_setopt(handle, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5_HOSTNAME)`\n* `curl_easy_setopt(handle, CURLOPT_PROXY, \"socks5h://...\")`\n* `curl_easy_setopt(handle, CURLOPT_PRE_PROXY, \"socks5h://...\")`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-1292",
          "message": {
            "text": "The vulnerable string 'c_rehash' was found in the image"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///etc/ca-certificates/update.d/certhash"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2068",
          "message": {
            "text": "The vulnerable string 'c_rehash' was found in the image"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///etc/ca-certificates/update.d/certhash"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-5363",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following vulnerable functions are called:\n\n- `EVP_EncryptInit_ex2`\n- `EVP_DecryptInit_ex2`\n- `EVP_CipherInit_ex2`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-35945",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the Envoy YAML or JSON configuration contains a definition for an upstream cluster.\nFor example -\n```yaml\nstatic_resources:\n\tclusters:\n\t- name: ...\t\n```"
          }
        },
        {
          "ruleId": "applic_CVE-2023-7104",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the vulnerable functions are called -\n\n- `sqlite3_open()`\n- `sqlite3_open16()` \n- `sqlite3_open_v2()`\n\nNote that vulnerability can also be exploited for DoS when opening a database with the `sqlite3` command line utility, but in that case it would have no security impact (crashing a forked client process)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-0466",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-42282",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following functions are called with external input:\n\n- `ip.isPublic`\n\n- `ip.isPrivate`\n\n- `ip.isLoopback`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-49210",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable `openssl` function is used with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2016-7798",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if the function `OpenSSL::Cipher.new()` is called with AES gcm is as the encryption type. \nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization."
          }
        },
        {
          "ruleId": "applic_CVE-2022-27782",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the vulnerable conditions:\n1. Whether the `curl` CLI tool is used with the vulnerable argument `--crlfile` or `--proxy-crlfile`.\n2. Whether the function `curl_easy_setopt` is called when using `libcurl`.\n\nIn the case of the last condition, to fully determine the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with any of the following arguments:\n\n**TLS options**\n\n* `CURLOPT_SSL_OPTIONS`\n* `CURLOPT_CRLFILE`\n* `CURLOPT_TLSAUTH_USERNAME`\n* `CURLOPT_TLSAUTH_PASSWORD`\n* `CURLOPT_PROXY_SSL_OPTIONS`\n* `CURLOPT_PROXY_CRLFILE`\n* `CURLOPT_PROXY_TLSAUTH_USERNAME`\n* `CURLOPT_PROXY_TLSAUTH_PASSWORD`\n\n**SSH options**\n\n* `CURLOPT_SSH_PUBLIC_KEYFILE`\n* `CURLOPT_SSH_PRIVATE_KEYFILE`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-27781",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if both of the following conditions are met:\n\n* The vulnerable `libcurl` function `curl_easy_setopt()` is called.\n* The library `libnss3` is linked with the `curl`.\n\nFor fully determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: `curl_easy_setopt` must be called with the argument `CURLOPT_CERTINFO`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-22576",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether `curl` uses the vulnerable configuration, by checking whether the vulnerable flag `--oauth2-bearer` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2023-44487",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for each vendor listed here:\n\n* Tomcat: configuration enables HTTP/2 either through the XML file or Java's `addUpgradeProtocol()` method.\n* Jetty: HTTP/2 enabled through `HTTP2CServerConnectionFactory`/`HTTP2ServerConnectionFactory` class initialization. Note: it also checks whether `jenkins` enables http/2 through its configuration.\n* Nginx: check whether one of the HTTP configurations is enabling http/2.\nNote: the following parameters should be configured properly to make the vulnerability not applicable:\n`keepalive_requests` should be kept at the default setting of 1000 requests\n`http2_max_concurrent_streams` should be kept at the default setting of 128 streams\n`limit_conn and limit_req` should be set `with a reasonable setting balancing application performance and security`. \n* Netty: check whether the `http2` codec classes are used in a java class\n* NodeJS: check whether the `http2.createSecureServer()` is used\n* NGHttp2: check whether a web server is instantiated through one of the symbols `nghttp2_session_server_new` or `listen_and_serve`.\n* Go: check whether a server is instantiated through the `net/http` or `net/http2` packages"
          }
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3712",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/local/bin/node"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-3449",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the server is configured with both:\n\n* TLSv1.2\n* Renegotiation is enabled\n\n\nThis CVE is applicable in ELF files under additional conditions (that the scanner currently does not check), which should be verified. The conditions are:\n\n1. The server code explicity sets the minimum and maximum versions of TLS to support TLSv1.2 (TLSv1.3 support 1.2 as well)\n\nFor example:\n```\nSSL_CTX_set_min_proto_version(ctx, TLS1_2_VERSION);\nSSL_CTX_set_max_proto_version(ctx, TLS1_3_VERSION);\n```\n\n2. The server code *does not* explicity disables renegotiation by `SSL_CTX_set_options(ctx, SSL_OP_NO_RENEGOTIATION)`."
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718749304-2624242943/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718749260-1652010377/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
