{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2017-7658_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2017-7658] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.2.25.v20180606], [9.3.24.v20180605], [9.4.11.v20180605]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-23792_com.twelvemonkeys.imageio:imageio-metadata_3.3.1",
              "shortDescription": {
                "text": "[CVE-2021-23792] com.twelvemonkeys.imageio:imageio-metadata 3.3.1"
              },
              "help": {
                "text": "The package com.twelvemonkeys.imageio:imageio-metadata before 3.7.1 are vulnerable to XML External Entity (XXE) Injection due to an insecurely initialized XML parser for reading XMP Metadata. An attacker can exploit this vulnerability if they are able to supply a file (e.g. when an online profile picture is processed) with a malicious XMP segment. If the XMP metadata of the uploaded image is parsed, then the XXE vulnerability is triggered.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [3.7.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-36090_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2021-36090] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6378_ch.qos.logback:logback-classic_1.1.3",
              "shortDescription": {
                "text": "[CVE-2023-6378] ch.qos.logback:logback-classic 1.1.3"
              },
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of \nlogback version 1.4.11 allows an attacker to mount a Denial-Of-Service \nattack by sending poisoned data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.2.13], [1.3.12], [1.4.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-6378_ch.qos.logback:logback-core_1.1.3",
              "shortDescription": {
                "text": "[CVE-2023-6378] ch.qos.logback:logback-core 1.1.3"
              },
              "help": {
                "text": "A serialization vulnerability in logback receiver component part of \nlogback version 1.4.11 allows an attacker to mount a Denial-Of-Service \nattack by sending poisoned data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.2.13], [1.3.12], [1.4.12]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-37714_org.jsoup:jsoup_1.8.3",
              "shortDescription": {
                "text": "[CVE-2021-37714] org.jsoup:jsoup 1.8.3"
              },
              "help": {
                "text": "jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.14.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36518_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36518] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.12.6.1], [2.13.2.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "XRAY-185154_org.apache.pdfbox:fontbox_2.0.6",
              "shortDescription": {
                "text": "[XRAY-185154] org.apache.pdfbox:fontbox 2.0.6"
              },
              "help": {
                "text": "Crash when repeating flag is outside of range.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.9]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "XRAY-80753_org.apache.pdfbox:fontbox_2.0.6",
              "shortDescription": {
                "text": "[XRAY-80753] org.apache.pdfbox:fontbox 2.0.6"
              },
              "help": {
                "text": "NPE in Type1Parser.readValue()",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.15]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2016-1000342_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000342] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier ECDSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-45868_com.h2database:h2_1.4.193",
              "shortDescription": {
                "text": "[CVE-2022-45868] com.h2database:h2 1.4.193"
              },
              "help": {
                "text": "The web-based admin console in H2 Database Engine before 2.2.220 can be started via the CLI with the argument -webAdminPassword, which allows the user to specify the password in cleartext for the web admin console. Consequently, a local user (or an attacker that has obtained local access through some means) would be able to discover the password by listing processes and their arguments. NOTE: the vendor states \"This is not a vulnerability of H2 Console ... Passwords should never be passed on the command line and every qualified DBA or system administrator is expected to know that.\" Nonetheless, the issue was fixed in 2.2.220.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.2.220]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2016-1000343_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000343] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier the DSA key pair generator generates a weak private key if used with default values. If the JCA key pair generator is not explicitly initialised with DSA parameters, 1.55 and earlier generates a private value assuming a 1024 bit key size. In earlier releases this can be dealt with by explicitly passing parameters to the key pair generator.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "XRAY-209128_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[XRAY-209128] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "A carefully crafted pdf can trigger an infinite loop while parsing",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.26], [3.0.0-alpha3]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2018-12538_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2018-12538] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty versions 9.4.0 through 9.4.8, when using the optional Jetty provided FileSessionDataStore for persistent storage of HttpSession details, it is possible for a malicious user to access/hijack other HttpSessions and even delete unmatched HttpSessions present in the FileSystem's storage for the FileSessionDataStore.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.4.11.v20180605]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2017-7656_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2017-7656] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.3.24.v20180605], [9.4.11.v20180605]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2017-9735_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2017-9735] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.2.22.v20170606], [9.3.20.v20170531], [9.4.6.v20170531]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-28165_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2021-28165] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [10.0.2], [11.0.2], [9.4.39]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-1000338_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000338] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In Bouncy Castle JCE Provider version 1.55 and earlier the DSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2016-1000352_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000352] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier the ECIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2016-1000344_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000344] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2018-12545_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2018-12545] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty version 9.3.x and 9.4.x, the server is vulnerable to Denial of Service conditions if a remote client sends either large SETTINGs frames container containing many settings, or many small SETTINGs frames. The vulnerability is due to the additional CPU and memory allocations required to handle changed settings.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.3.25.v20180904], [9.4.12.v20180830]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23596_com.github.junrar:junrar_3.0.1-Ubooquity",
              "shortDescription": {
                "text": "[CVE-2022-23596] com.github.junrar:junrar 3.0.1-Ubooquity"
              },
              "help": {
                "text": "Junrar is an open source java RAR archive library. In affected versions A carefully crafted RAR archive can trigger an infinite loop while extracting said archive. The impact depends solely on how the application uses the library, and whether files can be provided by malignant users. The problem is patched in 7.4.1. There are no known workarounds and users are advised to upgrade as soon as possible.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [7.4.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2023-35116] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2020-15522_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2020-15522] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "Bouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.66]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2018-8036_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[CVE-2018-8036] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "In Apache PDFBox 1.8.0 to 1.8.14 and 2.0.0RC1 to 2.0.10, a carefully crafted (or fuzzed) file can trigger an infinite loop which leads to an out of memory exception in Apache PDFBox's AFMParser.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.8.15], [2.0.11]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2019-10247_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2019-10247] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.2.28.v20190418], [9.3.27.v20190418], [9.4.17.v20190418]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-14335_com.h2database:h2_1.4.193",
              "shortDescription": {
                "text": "[CVE-2018-14335] com.h2database:h2 1.4.193"
              },
              "help": {
                "text": "An issue was discovered in H2 1.4.197. Insecure handling of permissions in the backup function allows attackers to read sensitive files (outside of their permissions) via a symlink to a fake database file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.4.198]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2018-1324_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2018-1324] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "A specially crafted ZIP archive can be used to cause an infinite loop inside of Apache Commons Compress' extra field parser used by the ZipFile and ZipArchiveInputStream classes in versions 1.11 to 1.15. This can be used to mount a denial of service attack against services that use Compress' zip package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-31812_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[CVE-2021-31812] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "In Apache PDFBox, a carefully crafted PDF file can trigger an infinite loop while loading the file. This issue affects Apache PDFBox version 2.0.23 and prior 2.0.x versions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.24]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-30171_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2024-30171] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "An issue was discovered in Bouncy Castle Java TLS API and JSSE Provider before 1.78. Timing-based leakage may occur in RSA based handshakes because of exception processing.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.78]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2020-27218_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2020-27218] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.4.35.v20201120]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2021-31811_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[CVE-2021-31811] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "In Apache PDFBox, a carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.23 and prior 2.0.x versions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.24]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-27807_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[CVE-2021-27807] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "A carefully crafted PDF file can trigger an infinite loop while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.23]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-26048_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2023-26048] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [10.0.14], [11.0.14], [9.4.51.v20230217]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-11771_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2018-11771] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.18]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-26049_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2023-26049] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [10.0.14], [11.0.14], [12.0.0.beta0], [9.4.51.v20230217]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-30172_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2024-30172] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "An issue was discovered in Bouncy Castle Java Cryptography APIs before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.78]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2018-11797_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[CVE-2018-11797] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "In Apache PDFBox 1.8.0 to 1.8.15 and 2.0.0RC1 to 2.0.11, a carefully crafted PDF file can trigger an extremely long running computation when parsing the page tree.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.8.16], [2.0.12]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-27906_org.apache.pdfbox:pdfbox_2.0.6",
              "shortDescription": {
                "text": "[CVE-2021-27906] org.apache.pdfbox:pdfbox 2.0.6"
              },
              "help": {
                "text": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.23]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-36033_org.jsoup:jsoup_1.8.3",
              "shortDescription": {
                "text": "[CVE-2022-36033] org.jsoup:jsoup 1.8.3"
              },
              "help": {
                "text": "jsoup is a Java HTML parser, built for HTML editing, cleaning, scraping, and cross-site scripting (XSS) safety. jsoup may incorrectly sanitize HTML including `javascript:` URL expressions, which could allow XSS attacks when a reader subsequently clicks that link. If the non-default `SafeList.preserveRelativeLinks` option is enabled, HTML including `javascript:` URLs that have been crafted with control characters will not be sanitized. If the site that this HTML is published on does not set a Content Security Policy, an XSS attack is then possible. This issue is patched in jsoup 1.15.3. Users should upgrade to this version. Additionally, as the unsanitized input may have been persisted, old content should be cleaned again using the updated version. To remediate this issue without immediately upgrading: - disable `SafeList.preserveRelativeLinks`, which will rewrite input URLs as absolute URLs - ensure an appropriate [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) is defined. (This should be used regardless of upgrading, as a defence-in-depth best practice.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.15.3]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2024-29857_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2024-29857] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "An issue was discovered in ECCurve.java and ECCurve.cs in Bouncy Castle Java (BC Java) before 1.78, BC Java LTS before 2.73.6, BC-FJA before 1.0.2.5, and BC C# .Net before 2.3.1. Importing an EC certificate with crafted F2m parameters can lead to excessive CPU consumption during the evaluation of the curve parameters.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.78]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2020-26939_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2020-26939] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In Legion of the Bouncy Castle BC before 1.61 and BC-FJA before 1.0.1.2, attackers can obtain sensitive information about a private exponent because of Observable Differences in Behavior to Error Inputs. This occurs in org.bouncycastle.crypto.encodings.OAEPEncoding. Sending invalid ciphertext that decrypts to a short payload in the OAEP Decoder could result in the throwing of an early exception, potentially leaking some information about the private exponent of the RSA private key performing the encryption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.61]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-25710_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2024-25710] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.26.0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2018-12536_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2018-12536] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.3.24.v20180605], [9.4.11.v20180605]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2016-1000341_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000341] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier DSA signature generation is vulnerable to timing attack. Where timings can be closely observed for the generation of signatures, the lack of blinding in 1.55, or earlier, may allow an attacker to gain information about the signature's k value and ultimately the private value as well.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2016-1000345_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000345] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES/ECIES CBC mode vulnerable to padding oracle attack. For BC 1.55 and older, in an environment where timings can be easily observed, it is possible with enough observations to identify when the decryption is failing due to padding.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2016-1000339_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000339] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier the primary engine class used for AES was AESFastEngine. Due to the highly table driven approach used in the algorithm it turns out that if the data channel on the CPU can be monitored the lookup table accesses are sufficient to leak information on the AES key being used. There was also a leak in AESEngine although it was substantially less. AESEngine has been modified to remove any signs of leakage (testing carried out on Intel X86-64) and is now the primary AES class for the BC JCE provider from 1.56. Use of AESFastEngine is now only recommended where otherwise deemed appropriate.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2019-10241_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2019-10241] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.2.27.v20190403], [9.3.26.v20190403], [9.4.16.v20190411]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2019-10246_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2019-10246] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [9.2.28.v20190418], [9.3.27.v20190418], [9.4.17.v20190418]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-40167_org.eclipse.jetty:jetty-http_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2023-40167] org.eclipse.jetty:jetty-http 9.4.0.v20161208"
              },
              "help": {
                "text": "Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [10.0.16], [11.0.16], [12.0.1], [9.4.52]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-33201_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2023-33201] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "Bouncy Castle For Java before 1.74 is affected by an LDAP injection vulnerability. The vulnerability only affects applications that use an LDAP CertStore from Bouncy Castle to validate X.509 certificates. During the certificate validation process, Bouncy Castle inserts the certificate's Subject Name into an LDAP search filter without any escaping, which leads to an LDAP injection vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-33202_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2023-33202] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class. This class parses OpenSSL PEM encoded streams containing X.509 certificates, PKCS8 encoded keys, and PKCS7 objects. Parsing a file that has crafted ASN.1 data through the PEMParser causes an OutOfMemoryError, which can enable a denial of service attack. (For users of the FIPS Java API: BC-FJA 1.0.2.3 and earlier are affected; BC-FJA 1.0.2.4 is fixed.)",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-0187_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2020-0187] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In engineSetMode of BaseBlockCipher.java, there is a possible incorrect cryptographic algorithm chosen due to an incomplete comparison. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-148517383",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-2047_org.eclipse.jetty:jetty-http_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2022-2047] org.eclipse.jetty:jetty-http 9.4.0.v20161208"
              },
              "help": {
                "text": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 2.7      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [10.0.10], [11.0.10], [9.4.47]   |"
              },
              "properties": {
                "security-severity": "2.7"
              }
            },
            {
              "id": "CVE-2015-6644_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2015-6644] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "Bouncy Castle in Android before 5.1.1 LMY49F and 6.0 before 2016-01-01 allows attackers to obtain sensitive information via a crafted application, aka internal bug 24106146.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.3      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.55]   |"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2016-1000346_org.bouncycastle:bcprov-jdk15on_1.53",
              "shortDescription": {
                "text": "[CVE-2016-1000346] org.bouncycastle:bcprov-jdk15on 1.53"
              },
              "help": {
                "text": "In the Bouncy Castle JCE Provider version 1.55 and earlier the other party DH public key is not fully validated. This can cause issues as invalid keys can be used to reveal details about the other party's private key where static Diffie-Hellman is in use. As of release 1.56 the key parameters are checked on agreement calculation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.7      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.56]   |"
              },
              "properties": {
                "security-severity": "3.7"
              }
            },
            {
              "id": "CVE-2021-34428_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
              "shortDescription": {
                "text": "[CVE-2021-34428] org.eclipse.jetty:jetty-server 9.4.0.v20161208"
              },
              "help": {
                "text": "For Eclipse Jetty versions \u003c= 9.4.40, \u003c= 10.0.2, \u003c= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.5      | Not Covered       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [10.0.3], [11.0.3], [9.4.41]   |"
              },
              "properties": {
                "security-severity": "3.5"
              }
            },
            {
              "id": "CVE-2018-14718_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-14718] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14892_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-14892] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.3], [2.8.11.5], [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-16943_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-16943] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14893_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-14893] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.3], [2.7.9.7], [2.8.11.5], [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14721_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-14721] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 10.0      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.2], [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "10.0"
              }
            },
            {
              "id": "CVE-2018-19360_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-19360] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-9548_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-9548] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14379_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-14379] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.9.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-15095_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2017-15095] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.8.11], [2.9.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-20330_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-20330] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.7.9.7], [2.8.11.5], [2.9.10.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-5929_ch.qos.logback:logback-core_1.1.3",
              "shortDescription": {
                "text": "[CVE-2017-5929] ch.qos.logback:logback-core 1.1.3"
              },
              "help": {
                "text": "QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.2.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-7489_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-7489] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.8.11.1], [2.9.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-16335_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-16335] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-19362_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-19362] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-23221_com.h2database:h2_1.4.193",
              "shortDescription": {
                "text": "[CVE-2022-23221] com.h2database:h2 1.4.193"
              },
              "help": {
                "text": "H2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.1.210]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-9547_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-9547] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-42392_com.h2database:h2_1.4.193",
              "shortDescription": {
                "text": "[CVE-2021-42392] com.h2database:h2 1.4.193"
              },
              "help": {
                "text": "The org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.0.206]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-14540_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-14540] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-11307_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-11307] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.7.9.4], [2.8.11.2], [2.9.6]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-17485_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2017-17485] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.8.11], [2.9.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14719_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-14719] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-19361_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-19361] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-7525_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2017-7525] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.1], [2.7.9.1], [2.8.9]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-17267_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-17267] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2018-14720_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-14720] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.2], [2.7.9.5], [2.8.11.3], [2.9.7]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-8840_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-8840] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.7.9.7], [2.8.11.5], [2.9.10.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2019-17531_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-17531] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.1]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2017-5929_ch.qos.logback:logback-classic_1.1.3",
              "shortDescription": {
                "text": "[CVE-2017-5929] ch.qos.logback:logback-classic 1.1.3"
              },
              "help": {
                "text": "QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.2.0]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2020-36189_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36189] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-10172_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-10172] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.3], [2.7.9.5], [2.8.11.3], [2.9.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-35515_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2021-35515] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-14060_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-14060] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.9.10.5]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-11619_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-11619] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-35517_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2021-35517] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-25649_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-25649] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.10.5.1], [2.6.7.4], [2.9.10.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-11620_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-11620] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-36182_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36182] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-35516_org.apache.commons:commons-compress_1.13",
              "shortDescription": {
                "text": "[CVE-2021-35516] org.apache.commons:commons-compress 1.13"
              },
              "help": {
                "text": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.21]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36184_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36184] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-14061_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-14061] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.9.10.5]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-14062_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-14062] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.4], [2.9.10.5]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-14439_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-14439] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.9.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36181_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36181] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-12023_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-12023] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.7.9.4], [2.8.11.2], [2.9.6]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-35491_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-35491] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-24750_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-24750] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.6.7.5], [2.9.10.6]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-36186_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36186] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-36180_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36180] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-35728_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-35728] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-36183_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36183] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-36179_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36179] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-20190_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2021-20190] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.7]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-35490_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-35490] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-24616_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-24616] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.6]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-36187_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36187] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2019-12086_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-12086] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.9]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36188_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36188] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-10650_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-10650] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A deserialization flaw was discovered in jackson-databind through 2.9.10.4. It could allow an unauthenticated user to perform code execution via ignite-jta or quartz-core: org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup, org.apache.ignite.cache.jta.jndi.CacheJndiTmFactory, and org.quartz.utils.JNDIConnectionProvider.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-42004_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2022-42004] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.12.7.1], [2.13.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42003_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2022-42003] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.12.7.1], [2.13.4.1], [2.14.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2018-5968_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-5968] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.8.11], [2.9.4]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-12022_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2018-12022] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.7.9.4], [2.8.11.2], [2.9.6]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36185_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-36185] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.8]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2020-10673_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2020-10673] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.10.4]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2019-12814_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-12814] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2019-12384_com.fasterxml.jackson.core:jackson-databind_2.8.4",
              "shortDescription": {
                "text": "[CVE-2019-12384] com.fasterxml.jackson.core:jackson-databind 2.8.4"
              },
              "help": {
                "text": "FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.9.9.1]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2021-42550_ch.qos.logback:logback-core_1.1.3",
              "shortDescription": {
                "text": "[CVE-2021-42550] ch.qos.logback:logback-core 1.1.3"
              },
              "help": {
                "text": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.6      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [1.2.9]   |"
              },
              "properties": {
                "security-severity": "6.6"
              }
            },
            {
              "id": "CVE-2021-29425_commons-io:commons-io_2.5",
              "shortDescription": {
                "text": "[CVE-2021-29425] commons-io:commons-io 2.5"
              },
              "help": {
                "text": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Applicable       | `sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar `       | [2.7]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2017-7658_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2017-7658] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23792_com.twelvemonkeys.imageio:imageio-metadata_3.3.1",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2021-23792] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36090_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2021-36090] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378_ch.qos.logback:logback-classic_1.1.3",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6378] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-6378_ch.qos.logback:logback-core_1.1.3",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2023-6378] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37714_org.jsoup:jsoup_1.8.3",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2021-37714] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36518_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36518] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-185154_org.apache.pdfbox:fontbox_2.0.6",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[XRAY-185154] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-80753_org.apache.pdfbox:fontbox_2.0.6",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[XRAY-80753] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000342_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2016-1000342] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-45868_com.h2database:h2_1.4.193",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2022-45868] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000343_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2016-1000343] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "XRAY-209128_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[XRAY-209128] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12538_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12538] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7656_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2017-7656] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-9735_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2017-9735] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28165_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2021-28165] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000338_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2016-1000338] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000352_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2016-1000352] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000344_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2016-1000344] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12545_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12545] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23596_com.github.junrar:junrar_3.0.1-Ubooquity",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23596] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-35116] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15522_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-15522] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-8036_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-8036] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10247_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-10247] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14335_com.h2database:h2_1.4.193",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-14335] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1324_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-1324] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31812_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-31812] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-30171_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-30171] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27218_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-27218] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31811_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-31811] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27807_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-27807] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26048_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26048] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-11771_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-11771] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26049_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-26049] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-30172_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-30172] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-11797_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-11797] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27906_org.apache.pdfbox:pdfbox_2.0.6",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-27906] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-36033_org.jsoup:jsoup_1.8.3",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-36033] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29857_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-29857] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-26939_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-26939] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25710_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-25710] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12536_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "[CVE-2018-12536] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000341_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "[CVE-2016-1000341] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000345_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "[CVE-2016-1000345] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000339_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "[CVE-2016-1000339] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10241_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-10241] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10246_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-10246] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-40167_org.eclipse.jetty:jetty-http_9.4.0.v20161208",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-40167] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-33201_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 50,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-33201] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-33202_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-33202] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-0187_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-0187] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2047_org.eclipse.jetty:jetty-http_9.4.0.v20161208",
          "ruleIndex": 53,
          "level": "note",
          "message": {
            "text": "[CVE-2022-2047] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-6644_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 54,
          "level": "note",
          "message": {
            "text": "[CVE-2015-6644] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000346_org.bouncycastle:bcprov-jdk15on_1.53",
          "ruleIndex": 55,
          "level": "note",
          "message": {
            "text": "[CVE-2016-1000346] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34428_org.eclipse.jetty:jetty-server_9.4.0.v20161208",
          "ruleIndex": 56,
          "level": "note",
          "message": {
            "text": "[CVE-2021-34428] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14718_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 57,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14718] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14892_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14892] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16943_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16943] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14893_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14893] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14721_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14721] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19360_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 62,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19360] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9548_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 63,
          "level": "error",
          "message": {
            "text": "[CVE-2020-9548] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14379_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14379] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15095_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "[CVE-2017-15095] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20330_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "[CVE-2019-20330] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-5929_ch.qos.logback:logback-core_1.1.3",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "[CVE-2017-5929] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-7489_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "[CVE-2018-7489] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16335_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "[CVE-2019-16335] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19362_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19362] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23221_com.h2database:h2_1.4.193",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23221] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9547_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "[CVE-2020-9547] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42392_com.h2database:h2_1.4.193",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "[CVE-2021-42392] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14540_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14540] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-11307_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "[CVE-2018-11307] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17485_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "[CVE-2017-17485] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14719_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14719] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-19361_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "[CVE-2018-19361] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-7525_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "[CVE-2017-7525] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17267_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17267] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-14720_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2018-14720] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8840_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2020-8840] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-17531_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2019-17531] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-5929_ch.qos.logback:logback-classic_1.1.3",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2017-5929] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36189_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36189] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10172_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2019-10172] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35515_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2021-35515] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14060_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14060] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11619_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11619] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35517_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2021-35517] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-25649_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2020-25649] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11620_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2020-11620] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36182_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36182] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-35516_org.apache.commons:commons-compress_1.13",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2021-35516] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36184_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36184] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14061_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14061] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14062_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2020-14062] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-14439_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2019-14439] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36181_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36181] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12023_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12023] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35491_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35491] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24750_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2020-24750] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36186_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36186] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36180_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36180] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35728_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35728] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36183_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36183] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36179_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36179] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20190_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2021-20190] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35490_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2020-35490] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24616_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2020-24616] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36187_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36187] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12086_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2019-12086] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36188_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36188] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10650_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2020-10650] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42004_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42004] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-42003_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2022-42003] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-5968_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2018-5968] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-12022_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "[CVE-2018-12022] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36185_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2020-36185] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10673_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "[CVE-2020-10673] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12814_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-12814] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-12384_com.fasterxml.jackson.core:jackson-databind_2.8.4",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "[CVE-2019-12384] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42550_ch.qos.logback:logback-core_1.1.3",
          "ruleIndex": 123,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-42550] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-29425_commons-io:commons-io_2.5",
          "ruleIndex": 124,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-29425] sha256__95ae67b13b00e51a9d7eb810392ce7fc627737ad53595ec904a7ccbd5f11efcd.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2017-5929",
              "name": "CVE-2017-5929",
              "shortDescription": {
                "text": "Scanner for CVE-2017-5929"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the vulnerable Logback servers/receivers are enabled in Logback's XML configuration -\n\n* `ch.qos.logback.classic.net.SocketServer`\n* `ch.qos.logback.classic.net.SimpleSocketServer`\n* `ch.qos.logback.classic.net.SimpleSSLSocketServer`\n* `ch.qos.logback.classic.net.server.ServerSocketReceiver`\n* `ch.qos.logback.classic.net.server.SSLServerSocketReceiver`",
                "markdown": "The scanner checks whether any of the vulnerable Logback servers/receivers are enabled in Logback's XML configuration -\n\n* `ch.qos.logback.classic.net.SocketServer`\n* `ch.qos.logback.classic.net.SimpleSocketServer`\n* `ch.qos.logback.classic.net.SimpleSSLSocketServer`\n* `ch.qos.logback.classic.net.server.ServerSocketReceiver`\n* `ch.qos.logback.classic.net.server.SSLServerSocketReceiver`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-42550",
              "name": "CVE-2021-42550",
              "shortDescription": {
                "text": "Scanner for CVE-2021-42550"
              },
              "fullDescription": {
                "text": "The scanner checks any of the following in the `logback` configuration file:\n\n1. Whether the vulnerable configuration classes `DriverManagerConnectionSource`, `DataSourceConnectionSource`, or `JNDIConnectionSource` are defined in a `\u003cconnectionSource\u003e` tag.\n2. Whether the vulnerable configuration tag `\u003cinsertFromJNDI\u003e` is set with an `env-entry-name`.",
                "markdown": "The scanner checks any of the following in the `logback` configuration file:\n\n1. Whether the vulnerable configuration classes `DriverManagerConnectionSource`, `DataSourceConnectionSource`, or `JNDIConnectionSource` are defined in a `\u003cconnectionSource\u003e` tag.\n2. Whether the vulnerable configuration tag `\u003cinsertFromJNDI\u003e` is set with an `env-entry-name`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-35116",
              "name": "CVE-2023-35116",
              "shortDescription": {
                "text": "Scanner for CVE-2023-35116"
              },
              "fullDescription": {
                "text": "The scanner checks for calls to the vulnerable functions with external input:\n\n*  `ObjectMapper.writeValue()`\n*  `ObjectMapper.writeValueAsString()`\n*  `ObjectMapper.writeValueAsBytes()`\n*  `ObjectWriter.writeValue()`\n*  `ObjectWriter.writeValueAsString()`\n*  `ObjectWriter.writeValueAsBytes()`\n* `ser.DefaultSerializerProvider.serializeValue()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The input argument to those functions is a cyclic object (e.g. a `HashMap` object with a reference to itself).",
                "markdown": "The scanner checks for calls to the vulnerable functions with external input:\n\n*  `ObjectMapper.writeValue()`\n*  `ObjectMapper.writeValueAsString()`\n*  `ObjectMapper.writeValueAsBytes()`\n*  `ObjectWriter.writeValue()`\n*  `ObjectWriter.writeValueAsString()`\n*  `ObjectWriter.writeValueAsBytes()`\n* `ser.DefaultSerializerProvider.serializeValue()`\n\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The input argument to those functions is a cyclic object (e.g. a `HashMap` object with a reference to itself)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42003",
              "name": "CVE-2022-42003",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42003"
              },
              "fullDescription": {
                "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`",
                "markdown": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-42004",
              "name": "CVE-2022-42004",
              "shortDescription": {
                "text": "Scanner for CVE-2022-42004"
              },
              "fullDescription": {
                "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`",
                "markdown": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-37714",
              "name": "CVE-2021-37714",
              "shortDescription": {
                "text": "Scanner for CVE-2021-37714"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `connect` with external input to its 1st (`url`) argument.\n* `parse` with external input to its 1st (`html`) argument.",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `connect` with external input to its 1st (`url`) argument.\n* `parse` with external input to its 1st (`html`) argument."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-36090",
              "name": "CVE-2021-36090",
              "shortDescription": {
                "text": "Scanner for CVE-2021-36090"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ZipArchiveInputStream`\n* `JarArchiveInputStream`",
                "markdown": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ZipArchiveInputStream`\n* `JarArchiveInputStream`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-35517",
              "name": "CVE-2021-35517",
              "shortDescription": {
                "text": "Scanner for CVE-2021-35517"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ArchiveInputStream`\n* `TarArchiveInputStream`",
                "markdown": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ArchiveInputStream`\n* `TarArchiveInputStream`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-35516",
              "name": "CVE-2021-35516",
              "shortDescription": {
                "text": "Scanner for CVE-2021-35516"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated.",
                "markdown": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-35515",
              "name": "CVE-2021-35515",
              "shortDescription": {
                "text": "Scanner for CVE-2021-35515"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated.",
                "markdown": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-29425",
              "name": "CVE-2021-29425",
              "shortDescription": {
                "text": "Scanner for CVE-2021-29425"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `normalize` is called with external input to its 1st (`fileName`) argument.",
                "markdown": "The scanner checks whether the vulnerable function `normalize` is called with external input to its 1st (`fileName`) argument."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36518",
              "name": "CVE-2020-36518",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36518"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input in the first argument.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner: The second argument must be an untyped object.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input in the first argument.\n\nThe below prerequisites are also crucial for exploitability but are not checked in the scanner: The second argument must be an untyped object."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23221",
              "name": "CVE-2022-23221",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23221"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the following:\n\n* The vulnerable option `webAllowOthers` is set to `true` in the properties file.\n\n* The vulnerable `-webAllowOthers` flag is used in a shell script.\n\n* `Server.createWebServer` is called, including the appearance of the string `-webAllowOthers`.\n\nIf any of these conditions are met, the vulnerability is applicable for remote exploitation, otherwise, the code may still be exploitable through local or esoteric channels.",
                "markdown": "The scanner checks for any of the following:\n\n* The vulnerable option `webAllowOthers` is set to `true` in the properties file.\n\n* The vulnerable `-webAllowOthers` flag is used in a shell script.\n\n* `Server.createWebServer` is called, including the appearance of the string `-webAllowOthers`.\n\nIf any of these conditions are met, the vulnerability is applicable for remote exploitation, otherwise, the code may still be exploitable through local or esoteric channels."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-42392",
              "name": "CVE-2021-42392",
              "shortDescription": {
                "text": "Scanner for CVE-2021-42392"
              },
              "fullDescription": {
                "text": "The scanner checks for any of the following:\n\n* The vulnerable option `webAllowOthers` is set to `true` in the properties file.\n\n* The vulnerable `-webAllowOthers` flag is used in a shell script.\n\n* `Server.createWebServer` is called, including the appearance of the string `-webAllowOthers`.\n\nIf any of these conditions are met, the vulnerability is applicable for remote exploitation, otherwise, the code may still be exploitable through local or esoteric channels.",
                "markdown": "The scanner checks for any of the following:\n\n* The vulnerable option `webAllowOthers` is set to `true` in the properties file.\n\n* The vulnerable `-webAllowOthers` flag is used in a shell script.\n\n* `Server.createWebServer` is called, including the appearance of the string `-webAllowOthers`.\n\nIf any of these conditions are met, the vulnerability is applicable for remote exploitation, otherwise, the code may still be exploitable through local or esoteric channels."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-6378",
              "name": "CVE-2023-6378",
              "shortDescription": {
                "text": "Scanner for CVE-2023-6378"
              },
              "fullDescription": {
                "text": "The scanner checks whether:\n\n1. One of the following class is instantiated in the application:\n\n* RemoteAppenderStreamClient\n* RemoteAppenderServerListener\n* ServerSocketReceiver\n* SSLServerSocketReceiver\n* SocketReceiver\n* SocketNode\n* HardenedObjectInputStream\n* HardenedModelInputStream\n* HardenedLoggingEventInputStream\n\n2. An Appender or Receiver is defined in a configuration file XML.\nFor example -\n```xml\n\u003cconfiguration\u003e\n  \u003creceiver class=\"ch.qos.logback.classic.net.server.ServerSocketReceiver\"\u003e\n  \u003c/receiver\u003e\n\u003c/configuration\u003e\n```",
                "markdown": "The scanner checks whether:\n\n1. One of the following class is instantiated in the application:\n\n* RemoteAppenderStreamClient\n* RemoteAppenderServerListener\n* ServerSocketReceiver\n* SSLServerSocketReceiver\n* SocketReceiver\n* SocketNode\n* HardenedObjectInputStream\n* HardenedModelInputStream\n* HardenedLoggingEventInputStream\n\n2. An Appender or Receiver is defined in a configuration file XML.\nFor example -\n```xml\n\u003cconfiguration\u003e\n  \u003creceiver class=\"ch.qos.logback.classic.net.server.ServerSocketReceiver\"\u003e\n  \u003c/receiver\u003e\n\u003c/configuration\u003e\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-7658",
              "name": "CVE-2017-7658",
              "shortDescription": {
                "text": "Scanner for CVE-2017-7658"
              },
              "fullDescription": {
                "text": "The scanner checks whether a Jetty Server is started by looking for the following function: \n`org.eclipse.jetty.server.Server.start()`",
                "markdown": "The scanner checks whether a Jetty Server is started by looking for the following function: \n`org.eclipse.jetty.server.Server.start()`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-10172",
              "name": "CVE-2019-10172",
              "shortDescription": {
                "text": "Scanner for CVE-2019-10172"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12086",
              "name": "CVE-2019-12086",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12086"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12384",
              "name": "CVE-2019-12384",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12384"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-12814",
              "name": "CVE-2019-12814",
              "shortDescription": {
                "text": "Scanner for CVE-2019-12814"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14379",
              "name": "CVE-2019-14379",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14379"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14439",
              "name": "CVE-2019-14439",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14439"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14540",
              "name": "CVE-2019-14540",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14540"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14892",
              "name": "CVE-2019-14892",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14892"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-14893",
              "name": "CVE-2019-14893",
              "shortDescription": {
                "text": "Scanner for CVE-2019-14893"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-16335",
              "name": "CVE-2019-16335",
              "shortDescription": {
                "text": "Scanner for CVE-2019-16335"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-16943",
              "name": "CVE-2019-16943",
              "shortDescription": {
                "text": "Scanner for CVE-2019-16943"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17267",
              "name": "CVE-2019-17267",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17267"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-17531",
              "name": "CVE-2019-17531",
              "shortDescription": {
                "text": "Scanner for CVE-2019-17531"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2019-20330",
              "name": "CVE-2019-20330",
              "shortDescription": {
                "text": "Scanner for CVE-2019-20330"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-10650",
              "name": "CVE-2020-10650",
              "shortDescription": {
                "text": "Scanner for CVE-2020-10650"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-10673",
              "name": "CVE-2020-10673",
              "shortDescription": {
                "text": "Scanner for CVE-2020-10673"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-11619",
              "name": "CVE-2020-11619",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11619"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-11620",
              "name": "CVE-2020-11620",
              "shortDescription": {
                "text": "Scanner for CVE-2020-11620"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14060",
              "name": "CVE-2020-14060",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14060"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14061",
              "name": "CVE-2020-14061",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14061"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-14062",
              "name": "CVE-2020-14062",
              "shortDescription": {
                "text": "Scanner for CVE-2020-14062"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-24616",
              "name": "CVE-2020-24616",
              "shortDescription": {
                "text": "Scanner for CVE-2020-24616"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-24750",
              "name": "CVE-2020-24750",
              "shortDescription": {
                "text": "Scanner for CVE-2020-24750"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-25649",
              "name": "CVE-2020-25649",
              "shortDescription": {
                "text": "Scanner for CVE-2020-25649"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-35490",
              "name": "CVE-2020-35490",
              "shortDescription": {
                "text": "Scanner for CVE-2020-35490"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-35491",
              "name": "CVE-2020-35491",
              "shortDescription": {
                "text": "Scanner for CVE-2020-35491"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-35728",
              "name": "CVE-2020-35728",
              "shortDescription": {
                "text": "Scanner for CVE-2020-35728"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36179",
              "name": "CVE-2020-36179",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36179"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36180",
              "name": "CVE-2020-36180",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36180"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36181",
              "name": "CVE-2020-36181",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36181"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36182",
              "name": "CVE-2020-36182",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36182"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36183",
              "name": "CVE-2020-36183",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36183"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36184",
              "name": "CVE-2020-36184",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36184"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36185",
              "name": "CVE-2020-36185",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36185"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36186",
              "name": "CVE-2020-36186",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36186"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36187",
              "name": "CVE-2020-36187",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36187"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36188",
              "name": "CVE-2020-36188",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36188"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-36189",
              "name": "CVE-2020-36189",
              "shortDescription": {
                "text": "Scanner for CVE-2020-36189"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-8840",
              "name": "CVE-2020-8840",
              "shortDescription": {
                "text": "Scanner for CVE-2020-8840"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-9547",
              "name": "CVE-2020-9547",
              "shortDescription": {
                "text": "Scanner for CVE-2020-9547"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2020-9548",
              "name": "CVE-2020-9548",
              "shortDescription": {
                "text": "Scanner for CVE-2020-9548"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-20190",
              "name": "CVE-2021-20190",
              "shortDescription": {
                "text": "Scanner for CVE-2021-20190"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-15095",
              "name": "CVE-2017-15095",
              "shortDescription": {
                "text": "Scanner for CVE-2017-15095"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-17485",
              "name": "CVE-2017-17485",
              "shortDescription": {
                "text": "Scanner for CVE-2017-17485"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2017-7525",
              "name": "CVE-2017-7525",
              "shortDescription": {
                "text": "Scanner for CVE-2017-7525"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-11307",
              "name": "CVE-2018-11307",
              "shortDescription": {
                "text": "Scanner for CVE-2018-11307"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-12022",
              "name": "CVE-2018-12022",
              "shortDescription": {
                "text": "Scanner for CVE-2018-12022"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-12023",
              "name": "CVE-2018-12023",
              "shortDescription": {
                "text": "Scanner for CVE-2018-12023"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14718",
              "name": "CVE-2018-14718",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14718"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14719",
              "name": "CVE-2018-14719",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14719"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14720",
              "name": "CVE-2018-14720",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14720"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-14721",
              "name": "CVE-2018-14721",
              "shortDescription": {
                "text": "Scanner for CVE-2018-14721"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-19360",
              "name": "CVE-2018-19360",
              "shortDescription": {
                "text": "Scanner for CVE-2018-19360"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-19361",
              "name": "CVE-2018-19361",
              "shortDescription": {
                "text": "Scanner for CVE-2018-19361"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-19362",
              "name": "CVE-2018-19362",
              "shortDescription": {
                "text": "Scanner for CVE-2018-19362"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-5968",
              "name": "CVE-2018-5968",
              "shortDescription": {
                "text": "Scanner for CVE-2018-5968"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2018-7489",
              "name": "CVE-2018-7489",
              "shortDescription": {
                "text": "Scanner for CVE-2018-7489"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called.",
                "markdown": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2016-1000342",
              "name": "CVE-2016-1000342",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000342"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-29857",
              "name": "CVE-2024-29857",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-29857"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-1324",
              "name": "CVE-2018-1324",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-1324"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-9735",
              "name": "CVE-2017-9735",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-9735"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-31812",
              "name": "CVE-2021-31812",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-31812"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-12538",
              "name": "CVE-2018-12538",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-12538"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-30171",
              "name": "CVE-2024-30171",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-30171"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000341",
              "name": "CVE-2016-1000341",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000341"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000343",
              "name": "CVE-2016-1000343",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000343"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-26939",
              "name": "CVE-2020-26939",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-26939"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-15522",
              "name": "CVE-2020-15522",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-15522"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-27807",
              "name": "CVE-2021-27807",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-27807"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000339",
              "name": "CVE-2016-1000339",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000339"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-31811",
              "name": "CVE-2021-31811",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-31811"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-2047",
              "name": "CVE-2022-2047",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-2047"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-23792",
              "name": "CVE-2021-23792",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-23792"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-36033",
              "name": "CVE-2022-36033",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-36033"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-28165",
              "name": "CVE-2021-28165",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-28165"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2017-7656",
              "name": "CVE-2017-7656",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2017-7656"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-23596",
              "name": "CVE-2022-23596",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-23596"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-0187",
              "name": "CVE-2020-0187",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-0187"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-26049",
              "name": "CVE-2023-26049",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-26049"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-11797",
              "name": "CVE-2018-11797",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-11797"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000352",
              "name": "CVE-2016-1000352",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000352"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-12545",
              "name": "CVE-2018-12545",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-12545"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-14335",
              "name": "CVE-2018-14335",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-14335"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-45868",
              "name": "CVE-2022-45868",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-45868"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10246",
              "name": "CVE-2019-10246",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10246"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-27218",
              "name": "CVE-2020-27218",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-27218"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000346",
              "name": "CVE-2016-1000346",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000346"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-34428",
              "name": "CVE-2021-34428",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-34428"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-12536",
              "name": "CVE-2018-12536",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-12536"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2015-6644",
              "name": "CVE-2015-6644",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2015-6644"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-25710",
              "name": "CVE-2024-25710",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-25710"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000345",
              "name": "CVE-2016-1000345",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000345"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-26048",
              "name": "CVE-2023-26048",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-26048"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-40167",
              "name": "CVE-2023-40167",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-40167"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-33201",
              "name": "CVE-2023-33201",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-33201"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-27906",
              "name": "CVE-2021-27906",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-27906"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000338",
              "name": "CVE-2016-1000338",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000338"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-8036",
              "name": "CVE-2018-8036",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-8036"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10247",
              "name": "CVE-2019-10247",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10247"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2019-10241",
              "name": "CVE-2019-10241",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2019-10241"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-30172",
              "name": "CVE-2024-30172",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-30172"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-11771",
              "name": "CVE-2018-11771",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-11771"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2016-1000344",
              "name": "CVE-2016-1000344",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2016-1000344"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-33202",
              "name": "CVE-2023-33202",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-33202"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718683725-1216225257/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718683686-582393914/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2017-5929",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the vulnerable Logback servers/receivers are enabled in Logback's XML configuration -\n\n* `ch.qos.logback.classic.net.SocketServer`\n* `ch.qos.logback.classic.net.SimpleSocketServer`\n* `ch.qos.logback.classic.net.SimpleSSLSocketServer`\n* `ch.qos.logback.classic.net.server.ServerSocketReceiver`\n* `ch.qos.logback.classic.net.server.SSLServerSocketReceiver`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-42550",
          "kind": "pass",
          "message": {
            "text": "The scanner checks any of the following in the `logback` configuration file:\n\n1. Whether the vulnerable configuration classes `DriverManagerConnectionSource`, `DataSourceConnectionSource`, or `JNDIConnectionSource` are defined in a `\u003cconnectionSource\u003e` tag.\n2. Whether the vulnerable configuration tag `\u003cinsertFromJNDI\u003e` is set with an `env-entry-name`."
          }
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/pref/WritableUserPreferences.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/pref/WritableUserPreferences.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/admin/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/admin/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/admin/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/admin/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/admin/c.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-35116",
          "message": {
            "text": "At least one of the vulnerable functions writeValueAsString, writeValueAsBytes, writeValue, serializeValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/user/b.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-42003",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
          }
        },
        {
          "ruleId": "applic_CVE-2022-42004",
          "kind": "pass",
          "message": {
            "text": "This scanner checks whether or not an `ObjectMapper` object has enabled the vulnerable `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` functionality. If it has, the scanner checks if any of the following vulnerable functions are called with external input:\n\n* `ObjectMapper.readTree()`\n* `ObjectMapper.readValue()`\n* `ObjectMapper.readValues()`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-37714",
          "message": {
            "text": "The vulnerable function parse/connect is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/epubreader/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36090",
          "message": {
            "text": "The vulnerable class ZipArchiveInputStream/JarArchiveInputStream/ZipFile is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/fileformat/cbz/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36090",
          "message": {
            "text": "The vulnerable class ZipArchiveInputStream/JarArchiveInputStream/ZipFile is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/fileformat/epub/b.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36090",
          "message": {
            "text": "The vulnerable class ZipArchiveInputStream/JarArchiveInputStream/ZipFile is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/fileformat/epub/c.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-36090",
          "message": {
            "text": "The vulnerable class ZipArchiveInputStream/JarArchiveInputStream/ZipFile is instantiated"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/fileformat/fb2/a.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2021-35517",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable classes are instantiated:\n* `ArchiveInputStream`\n* `TarArchiveInputStream`"
          }
        },
        {
          "ruleId": "applic_CVE-2021-35516",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
          }
        },
        {
          "ruleId": "applic_CVE-2021-35515",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable class `SevenZFile` is instantiated."
          }
        },
        {
          "ruleId": "applic_CVE-2021-29425",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `normalize` is called with external input to its 1st (`fileName`) argument."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/b/d.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/pref/WritableUserPreferences.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2020-36518",
          "message": {
            "text": "The vulnerable function ObjectMapper.readValue is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/provider/api/user/b.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23221",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the following:\n\n* The vulnerable option `webAllowOthers` is set to `true` in the properties file.\n\n* The vulnerable `-webAllowOthers` flag is used in a shell script.\n\n* `Server.createWebServer` is called, including the appearance of the string `-webAllowOthers`.\n\nIf any of these conditions are met, the vulnerability is applicable for remote exploitation, otherwise, the code may still be exploitable through local or esoteric channels."
          }
        },
        {
          "ruleId": "applic_CVE-2021-42392",
          "kind": "pass",
          "message": {
            "text": "The scanner checks for any of the following:\n\n* The vulnerable option `webAllowOthers` is set to `true` in the properties file.\n\n* The vulnerable `-webAllowOthers` flag is used in a shell script.\n\n* `Server.createWebServer` is called, including the appearance of the string `-webAllowOthers`.\n\nIf any of these conditions are met, the vulnerability is applicable for remote exploitation, otherwise, the code may still be exploitable through local or esoteric channels."
          }
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/logback-classic-1.1.3.jar/ch/qos/logback/classic/net/SSLSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/logback-classic-1.1.3.jar/ch/qos/logback/classic/net/SimpleSocketServer.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/logback-classic-1.1.3.jar/ch/qos/logback/classic/net/server/RemoteAppenderServerListener.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Receiver is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/logback-classic-1.1.3.jar/ch/qos/logback/classic/net/server/SSLServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "A vulnerable Appender is configured in the application"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/logback-classic-1.1.3.jar/ch/qos/logback/classic/net/server/ServerSocketReceiver.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "An appender's configuration is defined within a configuration file"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvoy_l6fe/unpacked/filesystem/blobs/sha256/eee2541fea7f3b5e54010dcca516f72e207c4879778b4b49e5fc58399ac79030/app/ubooquity/Ubooquity.jar/log-config.xml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\u003cappender name=\"Console\" class=\"ch.qos.logback.core.ConsoleAppender\"\u003e\n\t\t\u003c!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder \n\t\t\tby default --\u003e\n\t\t\u003cencoder\u003e\n\t\t\t\u003cpattern\u003e%d{yyyyMMdd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\u003c/pattern\u003e\n\t\t\u003c/encoder\u003e\n\t\u003c/appender\u003e"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-6378",
          "message": {
            "text": "An appender's configuration is defined within a configuration file"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpvoy_l6fe/unpacked/filesystem/blobs/sha256/eee2541fea7f3b5e54010dcca516f72e207c4879778b4b49e5fc58399ac79030/app/ubooquity/Ubooquity.jar/log-config.xml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\u003cappender name=\"RollingFileAppender\"\n\t\tclass=\"ch.qos.logback.core.rolling.RollingFileAppender\"\u003e\n\t\t\u003cfile\u003e${UBOOQUITY_WORK_DIR}/logs/ubooquity.log\u003c/file\u003e\n\t\t\u003crollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\"\u003e\n\t\t\t\u003cfileNamePattern\u003e${UBOOQUITY_WORK_DIR}/logs/ubooquity.%i.log.zip\u003c/fileNamePattern\u003e\n\t\t\t\u003cminIndex\u003e1\u003c/minIndex\u003e\n\t\t\t\u003cmaxIndex\u003e5\u003c/maxIndex\u003e\n\t\t\u003c/rollingPolicy\u003e\n\t\t\u003ctriggeringPolicy\n\t\t\tclass=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\"\u003e\n\t\t\t\u003cmaxFileSize\u003e1MB\u003c/maxFileSize\u003e\n\t\t\u003c/triggeringPolicy\u003e\n\t\t\u003cencoder\u003e\n\t\t\t\u003cpattern\u003e%d{yyyyMMdd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\u003c/pattern\u003e\n\t\t\u003c/encoder\u003e\n\t\u003c/appender\u003e"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2017-7658",
          "message": {
            "text": "The vulnerable function start is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///app/ubooquity/Ubooquity.jar/com/ubooquity/d/e.class"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2019-10172",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12086",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12384",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-12814",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14379",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14439",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14540",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14892",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-14893",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-16335",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-16943",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-17267",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-17531",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2019-20330",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-10650",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-10673",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-11619",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-11620",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-14060",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-14061",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-14062",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-24616",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-24750",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-25649",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-35490",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-35491",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-35728",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36179",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36180",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36181",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36182",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36183",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36184",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36185",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36186",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36187",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36188",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-36189",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-8840",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-9547",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2020-9548",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-20190",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-15095",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-17485",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2017-7525",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-11307",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-12022",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-12023",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14718",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14719",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-14721",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-19360",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-19361",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-19362",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-5968",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2018-7489",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `readValue` is called with external input to its 1st (`jp`) argument.\nIn addition, the scanner checks that the vulnerable \"default typing\" functionality is enabled, by checking that the function `enableDefaultTyping` is called."
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "undetermined",
                "conclusion": "private"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718683725-1216225257/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718683686-582393914/image.tar"
          }
        }
      ],
      "results": []
    }
  ]
}
