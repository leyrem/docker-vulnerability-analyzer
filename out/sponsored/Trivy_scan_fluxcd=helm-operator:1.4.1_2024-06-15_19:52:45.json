{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2022-28391",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: remote attackers may execute arbitrary code if netstat is used"
              },
              "fullDescription": {
                "text": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record\u0026#39;s value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal\u0026#39;s colors."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-28391",
              "help": {
                "text": "Vulnerability CVE-2022-28391\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.32.1-r8\nLink: [CVE-2022-28391](https://avd.aquasec.com/nvd/cve-2022-28391)\nBusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
                "markdown": "**Vulnerability CVE-2022-28391**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.32.1-r8|[CVE-2022-28391](https://avd.aquasec.com/nvd/cve-2022-28391)|\n\nBusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30065",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox 1.35-x\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30065",
              "help": {
                "text": "Vulnerability CVE-2022-30065\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.32.1-r9\nLink: [CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)\nA use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                "markdown": "**Vulnerability CVE-2022-30065**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.32.1-r9|[CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)|\n\nA use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-32207",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Unpreserved file permissions"
              },
              "fullDescription": {
                "text": "When curl \u0026lt; 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32207",
              "help": {
                "text": "Vulnerability CVE-2022-32207\nSeverity: CRITICAL\nPackage: libcurl\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32207](https://avd.aquasec.com/nvd/cve-2022-32207)\nWhen curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
                "markdown": "**Vulnerability CVE-2022-32207**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|libcurl|7.79.1-r2|[CVE-2022-32207](https://avd.aquasec.com/nvd/cve-2022-32207)|\n\nWhen curl \u003c 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-22576",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: OAUTH2 bearer bypass in connection re-use"
              },
              "fullDescription": {
                "text": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22576",
              "help": {
                "text": "Vulnerability CVE-2022-22576\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-22576](https://avd.aquasec.com/nvd/cve-2022-22576)\nAn improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
                "markdown": "**Vulnerability CVE-2022-22576**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.79.1-r1|[CVE-2022-22576](https://avd.aquasec.com/nvd/cve-2022-22576)|\n\nAn improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27775",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: bad local IPv6 connection reuse"
              },
              "fullDescription": {
                "text": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27775",
              "help": {
                "text": "Vulnerability CVE-2022-27775\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27775](https://avd.aquasec.com/nvd/cve-2022-27775)\nAn information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
                "markdown": "**Vulnerability CVE-2022-27775**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.79.1-r1|[CVE-2022-27775](https://avd.aquasec.com/nvd/cve-2022-27775)|\n\nAn information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27781",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: CERTINFO never-ending busy-loop"
              },
              "fullDescription": {
                "text": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server\u0026#39;s certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27781",
              "help": {
                "text": "Vulnerability CVE-2022-27781\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-27781](https://avd.aquasec.com/nvd/cve-2022-27781)\nlibcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
                "markdown": "**Vulnerability CVE-2022-27781**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.79.1-r2|[CVE-2022-27781](https://avd.aquasec.com/nvd/cve-2022-27781)|\n\nlibcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27782",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: TLS and SSH connection too eager reuse"
              },
              "fullDescription": {
                "text": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27782",
              "help": {
                "text": "Vulnerability CVE-2022-27782\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-27782](https://avd.aquasec.com/nvd/cve-2022-27782)\nlibcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
                "markdown": "**Vulnerability CVE-2022-27782**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.79.1-r2|[CVE-2022-27782](https://avd.aquasec.com/nvd/cve-2022-27782)|\n\nlibcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27774",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: credential leak on redirect"
              },
              "fullDescription": {
                "text": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27774",
              "help": {
                "text": "Vulnerability CVE-2022-27774\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27774](https://avd.aquasec.com/nvd/cve-2022-27774)\nAn insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
                "markdown": "**Vulnerability CVE-2022-27774**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.1-r1|[CVE-2022-27774](https://avd.aquasec.com/nvd/cve-2022-27774)|\n\nAn insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-27776",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: auth/cookie leak on redirect"
              },
              "fullDescription": {
                "text": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27776",
              "help": {
                "text": "Vulnerability CVE-2022-27776\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27776](https://avd.aquasec.com/nvd/cve-2022-27776)\nA insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
                "markdown": "**Vulnerability CVE-2022-27776**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.1-r1|[CVE-2022-27776](https://avd.aquasec.com/nvd/cve-2022-27776)|\n\nA insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32205",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Set-Cookie denial of service"
              },
              "fullDescription": {
                "text": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u0026lt; 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven\u0026#39;t expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \u0026#34;sister server\u0026#34; to effectively cause a denial of service for a sibling site on the same second level domain using this method."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32205",
              "help": {
                "text": "Vulnerability CVE-2022-32205\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32205](https://avd.aquasec.com/nvd/cve-2022-32205)\nA malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
                "markdown": "**Vulnerability CVE-2022-32205**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.1-r2|[CVE-2022-32205](https://avd.aquasec.com/nvd/cve-2022-32205)|\n\nA malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl \u003c 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32206",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: HTTP compression denial of service"
              },
              "fullDescription": {
                "text": "curl \u0026lt; 7.84.0 supports \u0026#34;chained\u0026#34; HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \u0026#34;links\u0026#34; in this \u0026#34;decompression chain\u0026#34; was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \u0026#34;malloc bomb\u0026#34;, makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32206",
              "help": {
                "text": "Vulnerability CVE-2022-32206\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32206](https://avd.aquasec.com/nvd/cve-2022-32206)\ncurl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
                "markdown": "**Vulnerability CVE-2022-32206**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.1-r2|[CVE-2022-32206](https://avd.aquasec.com/nvd/cve-2022-32206)|\n\ncurl \u003c 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32208",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: FTP-KRB bad message verification"
              },
              "fullDescription": {
                "text": "When curl \u0026lt; 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32208",
              "help": {
                "text": "Vulnerability CVE-2022-32208\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32208](https://avd.aquasec.com/nvd/cve-2022-32208)\nWhen curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
                "markdown": "**Vulnerability CVE-2022-32208**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.1-r2|[CVE-2022-32208](https://avd.aquasec.com/nvd/cve-2022-32208)|\n\nWhen curl \u003c 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-35252",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Incorrect handling of control code characters in cookies"
              },
              "fullDescription": {
                "text": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\u0026#34;sister site\u0026#34; to deny service to all siblings."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-35252",
              "help": {
                "text": "Vulnerability CVE-2022-35252\nSeverity: LOW\nPackage: libcurl\nFixed Version: 7.79.1-r3\nLink: [CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)\nWhen curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
                "markdown": "**Vulnerability CVE-2022-35252**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcurl|7.79.1-r3|[CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)|\n\nWhen curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-22822",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in addBinding in xmlparse.c"
              },
              "fullDescription": {
                "text": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22822",
              "help": {
                "text": "Vulnerability CVE-2022-22822\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22822](https://avd.aquasec.com/nvd/cve-2022-22822)\naddBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "**Vulnerability CVE-2022-22822**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r2|[CVE-2022-22822](https://avd.aquasec.com/nvd/cve-2022-22822)|\n\naddBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-22823",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in build_model in xmlparse.c"
              },
              "fullDescription": {
                "text": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22823",
              "help": {
                "text": "Vulnerability CVE-2022-22823\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22823](https://avd.aquasec.com/nvd/cve-2022-22823)\nbuild_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "**Vulnerability CVE-2022-22823**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r2|[CVE-2022-22823](https://avd.aquasec.com/nvd/cve-2022-22823)|\n\nbuild_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-22824",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in defineAttribute in xmlparse.c"
              },
              "fullDescription": {
                "text": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22824",
              "help": {
                "text": "Vulnerability CVE-2022-22824\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22824](https://avd.aquasec.com/nvd/cve-2022-22824)\ndefineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "**Vulnerability CVE-2022-22824**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r2|[CVE-2022-22824](https://avd.aquasec.com/nvd/cve-2022-22824)|\n\ndefineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-23852",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in function XML_GetBuffer"
              },
              "fullDescription": {
                "text": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23852",
              "help": {
                "text": "Vulnerability CVE-2022-23852\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r3\nLink: [CVE-2022-23852](https://avd.aquasec.com/nvd/cve-2022-23852)\nExpat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
                "markdown": "**Vulnerability CVE-2022-23852**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r3|[CVE-2022-23852](https://avd.aquasec.com/nvd/cve-2022-23852)|\n\nExpat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-25235",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Malformed 2- and 3-byte UTF-8 sequences can lead to arbitrary code execution"
              },
              "fullDescription": {
                "text": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25235",
              "help": {
                "text": "Vulnerability CVE-2022-25235\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25235](https://avd.aquasec.com/nvd/cve-2022-25235)\nxmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
                "markdown": "**Vulnerability CVE-2022-25235**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r4|[CVE-2022-25235](https://avd.aquasec.com/nvd/cve-2022-25235)|\n\nxmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-25236",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Namespace-separator characters in \u0026#34;xmlns[:prefix]\u0026#34; attribute values can lead to arbitrary code execution"
              },
              "fullDescription": {
                "text": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25236",
              "help": {
                "text": "Vulnerability CVE-2022-25236\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25236](https://avd.aquasec.com/nvd/cve-2022-25236)\nxmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
                "markdown": "**Vulnerability CVE-2022-25236**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r4|[CVE-2022-25236](https://avd.aquasec.com/nvd/cve-2022-25236)|\n\nxmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-25315",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in storeRawNames()"
              },
              "fullDescription": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25315",
              "help": {
                "text": "Vulnerability CVE-2022-25315\nSeverity: CRITICAL\nPackage: expat\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25315](https://avd.aquasec.com/nvd/cve-2022-25315)\nIn Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
                "markdown": "**Vulnerability CVE-2022-25315**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|expat|2.2.10-r4|[CVE-2022-25315](https://avd.aquasec.com/nvd/cve-2022-25315)|\n\nIn Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-45960",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Large number of prefixed XML attributes on a single tag can crash libexpat"
              },
              "fullDescription": {
                "text": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-45960",
              "help": {
                "text": "Vulnerability CVE-2021-45960\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2021-45960](https://avd.aquasec.com/nvd/cve-2021-45960)\nIn Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
                "markdown": "**Vulnerability CVE-2021-45960**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r2|[CVE-2021-45960](https://avd.aquasec.com/nvd/cve-2021-45960)|\n\nIn Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-46143",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in doProlog in xmlparse.c"
              },
              "fullDescription": {
                "text": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-46143",
              "help": {
                "text": "Vulnerability CVE-2021-46143\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2021-46143](https://avd.aquasec.com/nvd/cve-2021-46143)\nIn doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
                "markdown": "**Vulnerability CVE-2021-46143**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r2|[CVE-2021-46143](https://avd.aquasec.com/nvd/cve-2021-46143)|\n\nIn doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22825",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in lookup in xmlparse.c"
              },
              "fullDescription": {
                "text": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22825",
              "help": {
                "text": "Vulnerability CVE-2022-22825\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22825](https://avd.aquasec.com/nvd/cve-2022-22825)\nlookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "**Vulnerability CVE-2022-22825**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r2|[CVE-2022-22825](https://avd.aquasec.com/nvd/cve-2022-22825)|\n\nlookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22826",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in nextScaffoldPart in xmlparse.c"
              },
              "fullDescription": {
                "text": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22826",
              "help": {
                "text": "Vulnerability CVE-2022-22826\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22826](https://avd.aquasec.com/nvd/cve-2022-22826)\nnextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "**Vulnerability CVE-2022-22826**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r2|[CVE-2022-22826](https://avd.aquasec.com/nvd/cve-2022-22826)|\n\nnextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-22827",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in storeAtts in xmlparse.c"
              },
              "fullDescription": {
                "text": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22827",
              "help": {
                "text": "Vulnerability CVE-2022-22827\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22827](https://avd.aquasec.com/nvd/cve-2022-22827)\nstoreAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
                "markdown": "**Vulnerability CVE-2022-22827**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r2|[CVE-2022-22827](https://avd.aquasec.com/nvd/cve-2022-22827)|\n\nstoreAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23990",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: integer overflow in the doProlog function"
              },
              "fullDescription": {
                "text": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23990",
              "help": {
                "text": "Vulnerability CVE-2022-23990\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r3\nLink: [CVE-2022-23990](https://avd.aquasec.com/nvd/cve-2022-23990)\nExpat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
                "markdown": "**Vulnerability CVE-2022-23990**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r3|[CVE-2022-23990](https://avd.aquasec.com/nvd/cve-2022-23990)|\n\nExpat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-25314",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Integer overflow in copyString()"
              },
              "fullDescription": {
                "text": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25314",
              "help": {
                "text": "Vulnerability CVE-2022-25314\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25314](https://avd.aquasec.com/nvd/cve-2022-25314)\nIn Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
                "markdown": "**Vulnerability CVE-2022-25314**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r4|[CVE-2022-25314](https://avd.aquasec.com/nvd/cve-2022-25314)|\n\nIn Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-40674",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: a use-after-free in the doContent function in xmlparse.c"
              },
              "fullDescription": {
                "text": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40674",
              "help": {
                "text": "Vulnerability CVE-2022-40674\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r7\nLink: [CVE-2022-40674](https://avd.aquasec.com/nvd/cve-2022-40674)\nlibexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
                "markdown": "**Vulnerability CVE-2022-40674**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r7|[CVE-2022-40674](https://avd.aquasec.com/nvd/cve-2022-40674)|\n\nlibexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-43680",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate"
              },
              "fullDescription": {
                "text": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-43680",
              "help": {
                "text": "Vulnerability CVE-2022-43680\nSeverity: HIGH\nPackage: expat\nFixed Version: 2.2.10-r8\nLink: [CVE-2022-43680](https://avd.aquasec.com/nvd/cve-2022-43680)\nIn libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
                "markdown": "**Vulnerability CVE-2022-43680**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|expat|2.2.10-r8|[CVE-2022-43680](https://avd.aquasec.com/nvd/cve-2022-43680)|\n\nIn libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-25313",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "expat: Stack exhaustion in doctype parsing"
              },
              "fullDescription": {
                "text": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25313",
              "help": {
                "text": "Vulnerability CVE-2022-25313\nSeverity: MEDIUM\nPackage: expat\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25313](https://avd.aquasec.com/nvd/cve-2022-25313)\nIn Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
                "markdown": "**Vulnerability CVE-2022-25313**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|expat|2.2.10-r4|[CVE-2022-25313](https://avd.aquasec.com/nvd/cve-2022-25313)|\n\nIn Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-24765",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "git: On multi-user machines Git users might find themselves unexpectedly in a Git worktree"
              },
              "fullDescription": {
                "text": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24765",
              "help": {
                "text": "Vulnerability CVE-2022-24765\nSeverity: HIGH\nPackage: git\nFixed Version: 2.30.3-r0\nLink: [CVE-2022-24765](https://avd.aquasec.com/nvd/cve-2022-24765)\nGit for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
                "markdown": "**Vulnerability CVE-2022-24765**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|git|2.30.3-r0|[CVE-2022-24765](https://avd.aquasec.com/nvd/cve-2022-24765)|\n\nGit for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-29187",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "git: Bypass of safe.directory protections"
              },
              "fullDescription": {
                "text": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29187",
              "help": {
                "text": "Vulnerability CVE-2022-29187\nSeverity: HIGH\nPackage: git\nFixed Version: 2.30.5-r0\nLink: [CVE-2022-29187](https://avd.aquasec.com/nvd/cve-2022-29187)\nGit is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
                "markdown": "**Vulnerability CVE-2022-29187**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|git|2.30.5-r0|[CVE-2022-29187](https://avd.aquasec.com/nvd/cve-2022-29187)|\n\nGit is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-39260",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "git: git shell function that splits command arguments can lead to arbitrary heap writes."
              },
              "fullDescription": {
                "text": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git\u0026#39;s push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-39260",
              "help": {
                "text": "Vulnerability CVE-2022-39260\nSeverity: HIGH\nPackage: git\nFixed Version: 2.30.6-r0\nLink: [CVE-2022-39260](https://avd.aquasec.com/nvd/cve-2022-39260)\nGit is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
                "markdown": "**Vulnerability CVE-2022-39260**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|git|2.30.6-r0|[CVE-2022-39260](https://avd.aquasec.com/nvd/cve-2022-39260)|\n\nGit is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-39253",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "git: exposure of sensitive information to a malicious actor"
              },
              "fullDescription": {
                "text": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source\u0026#39;s `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim\u0026#39;s machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-39253",
              "help": {
                "text": "Vulnerability CVE-2022-39253\nSeverity: MEDIUM\nPackage: git\nFixed Version: 2.30.6-r0\nLink: [CVE-2022-39253](https://avd.aquasec.com/nvd/cve-2022-39253)\nGit is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
                "markdown": "**Vulnerability CVE-2022-39253**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|git|2.30.6-r0|[CVE-2022-39253](https://avd.aquasec.com/nvd/cve-2022-39253)|\n\nGit is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-0778",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Infinite loop in BN_mod_sqrt() reachable when parsing certificates"
              },
              "fullDescription": {
                "text": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-0778",
              "help": {
                "text": "Vulnerability CVE-2022-0778\nSeverity: HIGH\nPackage: libssl1.1\nFixed Version: 1.1.1n-r0\nLink: [CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)\nThe BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
                "markdown": "**Vulnerability CVE-2022-0778**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libssl1.1|1.1.1n-r0|[CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)|\n\nThe BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2097",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: AES OCB fails to encrypt some bytes"
              },
              "fullDescription": {
                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn\u0026#39;t written. In the special case of \u0026#34;in place\u0026#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2097",
              "help": {
                "text": "Vulnerability CVE-2022-2097\nSeverity: MEDIUM\nPackage: libssl1.1\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                "markdown": "**Vulnerability CVE-2022-2097**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl1.1|1.1.1q-r0|[CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)|\n\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-29458",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "ncurses: segfaulting OOB read"
              },
              "fullDescription": {
                "text": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29458",
              "help": {
                "text": "Vulnerability CVE-2022-29458\nSeverity: HIGH\nPackage: ncurses-terminfo-base\nFixed Version: 6.2_p20210109-r1\nLink: [CVE-2022-29458](https://avd.aquasec.com/nvd/cve-2022-29458)\nncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
                "markdown": "**Vulnerability CVE-2022-29458**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ncurses-terminfo-base|6.2_p20210109-r1|[CVE-2022-29458](https://avd.aquasec.com/nvd/cve-2022-29458)|\n\nncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-1586",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pcre2: Out-of-bounds read in compile_xclass_matchingpath in pcre2_jit_compile.c"
              },
              "fullDescription": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1586",
              "help": {
                "text": "Vulnerability CVE-2022-1586\nSeverity: CRITICAL\nPackage: pcre2\nFixed Version: 10.36-r1\nLink: [CVE-2022-1586](https://avd.aquasec.com/nvd/cve-2022-1586)\nAn out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
                "markdown": "**Vulnerability CVE-2022-1586**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|pcre2|10.36-r1|[CVE-2022-1586](https://avd.aquasec.com/nvd/cve-2022-1586)|\n\nAn out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-1587",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "pcre2: Out-of-bounds read in get_recurse_data_length in pcre2_jit_compile.c"
              },
              "fullDescription": {
                "text": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1587",
              "help": {
                "text": "Vulnerability CVE-2022-1587\nSeverity: CRITICAL\nPackage: pcre2\nFixed Version: 10.36-r1\nLink: [CVE-2022-1587](https://avd.aquasec.com/nvd/cve-2022-1587)\nAn out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers.",
                "markdown": "**Vulnerability CVE-2022-1587**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|pcre2|10.36-r1|[CVE-2022-1587](https://avd.aquasec.com/nvd/cve-2022-1587)|\n\nAn out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-37434",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field"
              },
              "fullDescription": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37434",
              "help": {
                "text": "Vulnerability CVE-2022-37434\nSeverity: CRITICAL\nPackage: zlib\nFixed Version: 1.2.12-r2\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "**Vulnerability CVE-2022-37434**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|zlib|1.2.12-r2|[CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)|\n\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2018-25032",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zlib: A flaw found in zlib when compressing (not decompressing) certain inputs"
              },
              "fullDescription": {
                "text": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-25032",
              "help": {
                "text": "Vulnerability CVE-2018-25032\nSeverity: HIGH\nPackage: zlib\nFixed Version: 1.2.12-r0\nLink: [CVE-2018-25032](https://avd.aquasec.com/nvd/cve-2018-25032)\nzlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
                "markdown": "**Vulnerability CVE-2018-25032**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|zlib|1.2.12-r0|[CVE-2018-25032](https://avd.aquasec.com/nvd/cve-2018-25032)|\n\nzlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23648",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd: insecure handling of image volumes"
              },
              "fullDescription": {
                "text": "containerd is a container runtime available as a daemon for Linux and Windows. A bug was found in containerd prior to versions 1.6.1, 1.5.10, and 1.14.12 where containers launched through containerd’s CRI implementation on Linux with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host. This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information. Kubernetes and crictl can both be configured to use containerd’s CRI implementation. This bug has been fixed in containerd 1.6.1, 1.5.10, and 1.4.12. Users should update to these versions to resolve the issue."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23648",
              "help": {
                "text": "Vulnerability CVE-2022-23648\nSeverity: HIGH\nPackage: github.com/containerd/containerd\nFixed Version: 1.4.13, 1.5.10, 1.6.1\nLink: [CVE-2022-23648](https://avd.aquasec.com/nvd/cve-2022-23648)\ncontainerd is a container runtime available as a daemon for Linux and Windows. A bug was found in containerd prior to versions 1.6.1, 1.5.10, and 1.14.12 where containers launched through containerd’s CRI implementation on Linux with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host. This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information. Kubernetes and crictl can both be configured to use containerd’s CRI implementation. This bug has been fixed in containerd 1.6.1, 1.5.10, and 1.4.12. Users should update to these versions to resolve the issue.",
                "markdown": "**Vulnerability CVE-2022-23648**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/containerd/containerd|1.4.13, 1.5.10, 1.6.1|[CVE-2022-23648](https://avd.aquasec.com/nvd/cve-2022-23648)|\n\ncontainerd is a container runtime available as a daemon for Linux and Windows. A bug was found in containerd prior to versions 1.6.1, 1.5.10, and 1.14.12 where containers launched through containerd’s CRI implementation on Linux with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host. This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information. Kubernetes and crictl can both be configured to use containerd’s CRI implementation. This bug has been fixed in containerd 1.6.1, 1.5.10, and 1.4.12. Users should update to these versions to resolve the issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23471",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd is an open source container runtime. A bug was found in con ..."
              },
              "fullDescription": {
                "text": "containerd is an open source container runtime. A bug was found in containerd\u0026#39;s CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user\u0026#39;s process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd\u0026#39;s CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. "
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23471",
              "help": {
                "text": "Vulnerability CVE-2022-23471\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.5.16, 1.6.12\nLink: [CVE-2022-23471](https://avd.aquasec.com/nvd/cve-2022-23471)\ncontainerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. ",
                "markdown": "**Vulnerability CVE-2022-23471**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.5.16, 1.6.12|[CVE-2022-23471](https://avd.aquasec.com/nvd/cve-2022-23471)|\n\ncontainerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. "
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-31030",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd is an open source container runtime. A bug was found in the ..."
              },
              "fullDescription": {
                "text": "containerd is an open source container runtime. A bug was found in the containerd\u0026#39;s CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API. This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads. Kubernetes and crictl can both be configured to use containerd\u0026#39;s CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \u0026#34;exec\u0026#34; facility. This bug has been fixed in containerd 1.6.6 and 1.5.13. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-31030",
              "help": {
                "text": "Vulnerability CVE-2022-31030\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.5.13, 1.6.6\nLink: [CVE-2022-31030](https://avd.aquasec.com/nvd/cve-2022-31030)\ncontainerd is an open source container runtime. A bug was found in the containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API. This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads. Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility. This bug has been fixed in containerd 1.6.6 and 1.5.13. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used.",
                "markdown": "**Vulnerability CVE-2022-31030**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.5.13, 1.6.6|[CVE-2022-31030](https://avd.aquasec.com/nvd/cve-2022-31030)|\n\ncontainerd is an open source container runtime. A bug was found in the containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API. This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads. Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility. This bug has been fixed in containerd 1.6.6 and 1.5.13. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-25153",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd: OCI image importer memory exhaustion"
              },
              "fullDescription": {
                "text": "containerd is an open source container runtime. Before versions 1.6.18 and 1.5.18, when importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service. This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25153",
              "help": {
                "text": "Vulnerability CVE-2023-25153\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.5.18, 1.6.18\nLink: [CVE-2023-25153](https://avd.aquasec.com/nvd/cve-2023-25153)\ncontainerd is an open source container runtime. Before versions 1.6.18 and 1.5.18, when importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service. This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.",
                "markdown": "**Vulnerability CVE-2023-25153**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.5.18, 1.6.18|[CVE-2023-25153](https://avd.aquasec.com/nvd/cve-2023-25153)|\n\ncontainerd is an open source container runtime. Before versions 1.6.18 and 1.5.18, when importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service. This bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-25173",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd: Supplementary groups are not set up properly"
              },
              "fullDescription": {
                "text": "containerd is an open source container runtime. A bug was found in containerd prior to versions 1.6.18 and 1.5.18 where supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. Downstream applications that use the containerd client library may be affected as well.\n\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18. Users should update to these versions and recreate containers to resolve this issue. Users who rely on a downstream application that uses containerd\u0026#39;s client library should check that application for a separate advisory and instructions. As a workaround, ensure that the `\u0026#34;USER $USERNAME\u0026#34;` Dockerfile instruction is not used. Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\u0026#34;su\u0026#34;, \u0026#34;-\u0026#34;, \u0026#34;user\u0026#34;]` to allow `su` to properly set up supplementary groups."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25173",
              "help": {
                "text": "Vulnerability CVE-2023-25173\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.5.18, 1.6.18\nLink: [CVE-2023-25173](https://avd.aquasec.com/nvd/cve-2023-25173)\ncontainerd is an open source container runtime. A bug was found in containerd prior to versions 1.6.18 and 1.5.18 where supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. Downstream applications that use the containerd client library may be affected as well.\n\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18. Users should update to these versions and recreate containers to resolve this issue. Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions. As a workaround, ensure that the `\"USER $USERNAME\"` Dockerfile instruction is not used. Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\"su\", \"-\", \"user\"]` to allow `su` to properly set up supplementary groups.",
                "markdown": "**Vulnerability CVE-2023-25173**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.5.18, 1.6.18|[CVE-2023-25173](https://avd.aquasec.com/nvd/cve-2023-25173)|\n\ncontainerd is an open source container runtime. A bug was found in containerd prior to versions 1.6.18 and 1.5.18 where supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. Downstream applications that use the containerd client library may be affected as well.\n\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18. Users should update to these versions and recreate containers to resolve this issue. Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions. As a workaround, ensure that the `\"USER $USERNAME\"` Dockerfile instruction is not used. Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\"su\", \"-\", \"user\"]` to allow `su` to properly set up supplementary groups."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-7ww5-4wqc-m92c",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd allows RAPL to be accessible to a container"
              },
              "fullDescription": {
                "text": "# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel\u0026#39;s RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-7ww5-4wqc-m92c",
              "help": {
                "text": "Vulnerability GHSA-7ww5-4wqc-m92c\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.6.26, 1.7.11\nLink: [GHSA-7ww5-4wqc-m92c](https://github.com/advisories/GHSA-7ww5-4wqc-m92c)\n# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
                "markdown": "**Vulnerability GHSA-7ww5-4wqc-m92c**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.6.26, 1.7.11|[GHSA-7ww5-4wqc-m92c](https://github.com/advisories/GHSA-7ww5-4wqc-m92c)|\n\n# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-c9cp-9c75-9v8c",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd started with non-empty inheritable Linux process capabilities"
              },
              "fullDescription": {
                "text": "### Impact\n\nA bug was found in containerd where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container\u0026#39;s bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container\u0026#39;s bounding set.\n\n\n### Patches\n\nThis bug has been fixed in containerd 1.5.11 and 1.6.2.  Users should update to these versions as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes containerd behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container\u0026#39;s bounding set and that processes may add capabilities to their own inheritable set up to the container\u0026#39;s bounding set per the rules described in the manual page.  In all cases the container\u0026#39;s bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/containerd/containerd/issues/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io) if you think you’ve found a security bug"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-c9cp-9c75-9v8c",
              "help": {
                "text": "Vulnerability GHSA-c9cp-9c75-9v8c\nSeverity: LOW\nPackage: github.com/containerd/containerd\nFixed Version: 1.5.11, 1.6.2\nLink: [GHSA-c9cp-9c75-9v8c](https://github.com/advisories/GHSA-c9cp-9c75-9v8c)\n### Impact\n\nA bug was found in containerd where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n\n### Patches\n\nThis bug has been fixed in containerd 1.5.11 and 1.6.2.  Users should update to these versions as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes containerd behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container's bounding set and that processes may add capabilities to their own inheritable set up to the container's bounding set per the rules described in the manual page.  In all cases the container's bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/containerd/containerd/issues/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io) if you think you’ve found a security bug",
                "markdown": "**Vulnerability GHSA-c9cp-9c75-9v8c**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/containerd/containerd|1.5.11, 1.6.2|[GHSA-c9cp-9c75-9v8c](https://github.com/advisories/GHSA-c9cp-9c75-9v8c)|\n\n### Impact\n\nA bug was found in containerd where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n\n### Patches\n\nThis bug has been fixed in containerd 1.5.11 and 1.6.2.  Users should update to these versions as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes containerd behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container's bounding set and that processes may add capabilities to their own inheritable set up to the container's bounding set per the rules described in the manual page.  In all cases the container's bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/containerd/containerd/issues/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io) if you think you’ve found a security bug"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "GHSA-6xv5-86q9-7xr8",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "SecureJoin: on windows, paths outside of the rootfs could be inadvertently produced"
              },
              "fullDescription": {
                "text": "### Impact\nFor Windows users of `github.com/cyphar/filepath-securejoin`, until v0.2.4 it was possible for certain rootfs and path combinations (in particular, where a malicious Unix-style `/`-separated unsafe path was used with a Windows-style rootfs path) to result in generated paths that were outside of the provided rootfs.\n\nIt is unclear to what extent this has a practical impact on real users, but given the possible severity of the issue we have released an emergency patch release that resolves this issue.\n\nThanks to  @pjbgf for discovering, debugging, and fixing this issue (as well as writing some tests for it).\n\n### Patches\nc121231e1276e11049547bee5ce68d5a2cfe2d9b is the patch fixing this issue. v0.2.4 contains the fix.\n\n### Workarounds\nUsers could use `filepath.FromSlash()` on all unsafe paths before passing them to `filepath-securejoin`.\n\n### References\nSee #9."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-6xv5-86q9-7xr8",
              "help": {
                "text": "Vulnerability GHSA-6xv5-86q9-7xr8\nSeverity: MEDIUM\nPackage: github.com/cyphar/filepath-securejoin\nFixed Version: 0.2.4\nLink: [GHSA-6xv5-86q9-7xr8](https://github.com/advisories/GHSA-6xv5-86q9-7xr8)\n### Impact\nFor Windows users of `github.com/cyphar/filepath-securejoin`, until v0.2.4 it was possible for certain rootfs and path combinations (in particular, where a malicious Unix-style `/`-separated unsafe path was used with a Windows-style rootfs path) to result in generated paths that were outside of the provided rootfs.\n\nIt is unclear to what extent this has a practical impact on real users, but given the possible severity of the issue we have released an emergency patch release that resolves this issue.\n\nThanks to  @pjbgf for discovering, debugging, and fixing this issue (as well as writing some tests for it).\n\n### Patches\nc121231e1276e11049547bee5ce68d5a2cfe2d9b is the patch fixing this issue. v0.2.4 contains the fix.\n\n### Workarounds\nUsers could use `filepath.FromSlash()` on all unsafe paths before passing them to `filepath-securejoin`.\n\n### References\nSee #9.",
                "markdown": "**Vulnerability GHSA-6xv5-86q9-7xr8**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/cyphar/filepath-securejoin|0.2.4|[GHSA-6xv5-86q9-7xr8](https://github.com/advisories/GHSA-6xv5-86q9-7xr8)|\n\n### Impact\nFor Windows users of `github.com/cyphar/filepath-securejoin`, until v0.2.4 it was possible for certain rootfs and path combinations (in particular, where a malicious Unix-style `/`-separated unsafe path was used with a Windows-style rootfs path) to result in generated paths that were outside of the provided rootfs.\n\nIt is unclear to what extent this has a practical impact on real users, but given the possible severity of the issue we have released an emergency patch release that resolves this issue.\n\nThanks to  @pjbgf for discovering, debugging, and fixing this issue (as well as writing some tests for it).\n\n### Patches\nc121231e1276e11049547bee5ce68d5a2cfe2d9b is the patch fixing this issue. v0.2.4 contains the fix.\n\n### Workarounds\nUsers could use `filepath.FromSlash()` on all unsafe paths before passing them to `filepath-securejoin`.\n\n### References\nSee #9."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-2253",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "distribution/distribution: DoS from malicious API request"
              },
              "fullDescription": {
                "text": "A flaw was found in the `/v2/_catalog` endpoint in distribution/distribution, which accepts a parameter to control the maximum number of records returned (query string: `n`). This vulnerability allows a malicious user to submit an unreasonably large value for `n,` causing the allocation of a massive string array, possibly causing a denial of service through excessive use of memory."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-2253",
              "help": {
                "text": "Vulnerability CVE-2023-2253\nSeverity: HIGH\nPackage: github.com/docker/distribution\nFixed Version: 2.8.2-beta.1\nLink: [CVE-2023-2253](https://avd.aquasec.com/nvd/cve-2023-2253)\nA flaw was found in the `/v2/_catalog` endpoint in distribution/distribution, which accepts a parameter to control the maximum number of records returned (query string: `n`). This vulnerability allows a malicious user to submit an unreasonably large value for `n,` causing the allocation of a massive string array, possibly causing a denial of service through excessive use of memory.",
                "markdown": "**Vulnerability CVE-2023-2253**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/docker/distribution|2.8.2-beta.1|[CVE-2023-2253](https://avd.aquasec.com/nvd/cve-2023-2253)|\n\nA flaw was found in the `/v2/_catalog` endpoint in distribution/distribution, which accepts a parameter to control the maximum number of records returned (query string: `n`). This vulnerability allows a malicious user to submit an unreasonably large value for `n,` causing the allocation of a massive string array, possibly causing a denial of service through excessive use of memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-qq97-vm5h-rrhg",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "OCI Manifest Type Confusion Issue"
              },
              "fullDescription": {
                "text": "### Impact\n\nSystems that rely on digest equivalence for image attestations may be vulnerable to type confusion.\n\n### Patches\n\nUpgrade to at least `v2.8.0-beta.1`  if you are running `v2.x` release. If you use the code from the `main` branch, update at least to the commit after [b59a6f827947f9e0e67df0cfb571046de4733586](https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586).\n\n### Workarounds\n\nThere is no way to work around this issue without patching.\n\n### References\n\nDue to [an oversight in the OCI Image Specification](https://github.com/opencontainers/image-spec/pull/411) that removed the embedded `mediaType` field from manifests, a maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image’s digest by modifying the `Content-Type` header returned by a registry. This can invalidate a common pattern of relying on container image digests for equivalence.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution](https://github.com/distribution/distribution) \n* Open an issue in [distribution-spec](https://github.com/opencontainers/distribution-spec) \n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-qq97-vm5h-rrhg",
              "help": {
                "text": "Vulnerability GHSA-qq97-vm5h-rrhg\nSeverity: LOW\nPackage: github.com/docker/distribution\nFixed Version: 2.8.0\nLink: [GHSA-qq97-vm5h-rrhg](https://github.com/advisories/GHSA-qq97-vm5h-rrhg)\n### Impact\n\nSystems that rely on digest equivalence for image attestations may be vulnerable to type confusion.\n\n### Patches\n\nUpgrade to at least `v2.8.0-beta.1`  if you are running `v2.x` release. If you use the code from the `main` branch, update at least to the commit after [b59a6f827947f9e0e67df0cfb571046de4733586](https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586).\n\n### Workarounds\n\nThere is no way to work around this issue without patching.\n\n### References\n\nDue to [an oversight in the OCI Image Specification](https://github.com/opencontainers/image-spec/pull/411) that removed the embedded `mediaType` field from manifests, a maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image’s digest by modifying the `Content-Type` header returned by a registry. This can invalidate a common pattern of relying on container image digests for equivalence.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution](https://github.com/distribution/distribution) \n* Open an issue in [distribution-spec](https://github.com/opencontainers/distribution-spec) \n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n",
                "markdown": "**Vulnerability GHSA-qq97-vm5h-rrhg**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/docker/distribution|2.8.0|[GHSA-qq97-vm5h-rrhg](https://github.com/advisories/GHSA-qq97-vm5h-rrhg)|\n\n### Impact\n\nSystems that rely on digest equivalence for image attestations may be vulnerable to type confusion.\n\n### Patches\n\nUpgrade to at least `v2.8.0-beta.1`  if you are running `v2.x` release. If you use the code from the `main` branch, update at least to the commit after [b59a6f827947f9e0e67df0cfb571046de4733586](https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586).\n\n### Workarounds\n\nThere is no way to work around this issue without patching.\n\n### References\n\nDue to [an oversight in the OCI Image Specification](https://github.com/opencontainers/image-spec/pull/411) that removed the embedded `mediaType` field from manifests, a maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image’s digest by modifying the `Content-Type` header returned by a registry. This can invalidate a common pattern of relying on container image digests for equivalence.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution](https://github.com/distribution/distribution) \n* Open an issue in [distribution-spec](https://github.com/opencontainers/distribution-spec) \n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-27534",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby/buildkit: calls os.OpenFile with a potentially unsafe qemu-check temporary pathname"
              },
              "fullDescription": {
                "text": "util/binfmt_misc/check.go in Builder in Docker Engine before 19.03.9 calls os.OpenFile with a potentially unsafe qemu-check temporary pathname, constructed with an empty first argument in an ioutil.TempDir call."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-27534",
              "help": {
                "text": "Vulnerability CVE-2020-27534\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 19.03.9\nLink: [CVE-2020-27534](https://avd.aquasec.com/nvd/cve-2020-27534)\nutil/binfmt_misc/check.go in Builder in Docker Engine before 19.03.9 calls os.OpenFile with a potentially unsafe qemu-check temporary pathname, constructed with an empty first argument in an ioutil.TempDir call.",
                "markdown": "**Vulnerability CVE-2020-27534**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|19.03.9|[CVE-2020-27534](https://avd.aquasec.com/nvd/cve-2020-27534)|\n\nutil/binfmt_misc/check.go in Builder in Docker Engine before 19.03.9 calls os.OpenFile with a potentially unsafe qemu-check temporary pathname, constructed with an empty first argument in an ioutil.TempDir call."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-21284",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "docker: access to remapped root allows privilege escalation to real root"
              },
              "fullDescription": {
                "text": "In Docker before versions 9.03.15, 20.10.3 there is a vulnerability involving the --userns-remap option in which access to remapped root allows privilege escalation to real root. When using \u0026#34;--userns-remap\u0026#34;, if the root user in the remapped namespace has access to the host filesystem they can modify files under \u0026#34;/var/lib/docker/\u0026lt;remapping\u0026gt;\u0026#34; that cause writing files with extended privileges. Versions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-21284",
              "help": {
                "text": "Vulnerability CVE-2021-21284\nSeverity: MEDIUM\nPackage: github.com/moby/moby\nFixed Version: 19.3.15, 20.10.3\nLink: [CVE-2021-21284](https://avd.aquasec.com/nvd/cve-2021-21284)\nIn Docker before versions 9.03.15, 20.10.3 there is a vulnerability involving the --userns-remap option in which access to remapped root allows privilege escalation to real root. When using \"--userns-remap\", if the root user in the remapped namespace has access to the host filesystem they can modify files under \"/var/lib/docker/\u003cremapping\u003e\" that cause writing files with extended privileges. Versions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user.",
                "markdown": "**Vulnerability CVE-2021-21284**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/moby/moby|19.3.15, 20.10.3|[CVE-2021-21284](https://avd.aquasec.com/nvd/cve-2021-21284)|\n\nIn Docker before versions 9.03.15, 20.10.3 there is a vulnerability involving the --userns-remap option in which access to remapped root allows privilege escalation to real root. When using \"--userns-remap\", if the root user in the remapped namespace has access to the host filesystem they can modify files under \"/var/lib/docker/\u003cremapping\u003e\" that cause writing files with extended privileges. Versions 20.10.3 and 19.03.15 contain patches that prevent privilege escalation from remapped user."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-21285",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "docker: daemon crash during image pull of malicious image"
              },
              "fullDescription": {
                "text": "In Docker before versions 9.03.15, 20.10.3 there is a vulnerability in which pulling an intentionally malformed Docker image manifest crashes the dockerd daemon. Versions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-21285",
              "help": {
                "text": "Vulnerability CVE-2021-21285\nSeverity: MEDIUM\nPackage: github.com/moby/moby\nFixed Version: 19.3.15, 20.10.3\nLink: [CVE-2021-21285](https://avd.aquasec.com/nvd/cve-2021-21285)\nIn Docker before versions 9.03.15, 20.10.3 there is a vulnerability in which pulling an intentionally malformed Docker image manifest crashes the dockerd daemon. Versions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing.",
                "markdown": "**Vulnerability CVE-2021-21285**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/moby/moby|19.3.15, 20.10.3|[CVE-2021-21285](https://avd.aquasec.com/nvd/cve-2021-21285)|\n\nIn Docker before versions 9.03.15, 20.10.3 there is a vulnerability in which pulling an intentionally malformed Docker image manifest crashes the dockerd daemon. Versions 20.10.3 and 19.03.15 contain patches that prevent the daemon from crashing."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-41091",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: data directory contains subdirectories with insufficiently restricted permissions, which could lead to directory traversal"
              },
              "fullDescription": {
                "text": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where the data directory (typically `/var/lib/docker`) contained subdirectories with insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as `setuid`), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade limit access to the host to trusted users. Limit access to host volumes to trusted containers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41091",
              "help": {
                "text": "Vulnerability CVE-2021-41091\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 20.10.9\nLink: [CVE-2021-41091](https://avd.aquasec.com/nvd/cve-2021-41091)\nMoby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where the data directory (typically `/var/lib/docker`) contained subdirectories with insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as `setuid`), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade limit access to the host to trusted users. Limit access to host volumes to trusted containers.",
                "markdown": "**Vulnerability CVE-2021-41091**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|20.10.9|[CVE-2021-41091](https://avd.aquasec.com/nvd/cve-2021-41091)|\n\nMoby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where the data directory (typically `/var/lib/docker`) contained subdirectories with insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as `setuid`), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade limit access to the host to trusted users. Limit access to host volumes to trusted containers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-24769",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: Default inheritable capabilities for linux container should be empty"
              },
              "fullDescription": {
                "text": "Moby is an open-source project created by Docker to enable and accelerate software containerization. A bug was found in Moby (Docker Engine) prior to version 20.10.14 where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`. Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set. Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container\u0026#39;s bounding set. Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted. This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container\u0026#39;s bounding set. This bug has been fixed in Moby (Docker Engine) 20.10.14. Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset. This fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment. As a workaround, the entry point of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24769",
              "help": {
                "text": "Vulnerability CVE-2022-24769\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 20.10.14\nLink: [CVE-2022-24769](https://avd.aquasec.com/nvd/cve-2022-24769)\nMoby is an open-source project created by Docker to enable and accelerate software containerization. A bug was found in Moby (Docker Engine) prior to version 20.10.14 where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`. Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set. Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set. Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted. This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in Moby (Docker Engine) 20.10.14. Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset. This fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment. As a workaround, the entry point of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.",
                "markdown": "**Vulnerability CVE-2022-24769**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|20.10.14|[CVE-2022-24769](https://avd.aquasec.com/nvd/cve-2022-24769)|\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization. A bug was found in Moby (Docker Engine) prior to version 20.10.14 where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`. Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set. Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set. Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted. This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in Moby (Docker Engine) 20.10.14. Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset. This fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment. As a workaround, the entry point of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-36109",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: supplementary groups mishandling"
              },
              "fullDescription": {
                "text": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. This bug is fixed in Moby (Docker Engine) 20.10.18. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\u0026#34;USER $USERNAME\u0026#34;` Dockerfile instruction. Instead by calling `ENTRYPOINT [\u0026#34;su\u0026#34;, \u0026#34;-\u0026#34;, \u0026#34;user\u0026#34;]` the supplementary groups will be set up properly."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-36109",
              "help": {
                "text": "Vulnerability CVE-2022-36109\nSeverity: MEDIUM\nPackage: github.com/moby/moby\nFixed Version: 20.10.18\nLink: [CVE-2022-36109](https://avd.aquasec.com/nvd/cve-2022-36109)\nMoby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. This bug is fixed in Moby (Docker Engine) 20.10.18. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.",
                "markdown": "**Vulnerability CVE-2022-36109**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/moby/moby|20.10.18|[CVE-2022-36109](https://avd.aquasec.com/nvd/cve-2022-36109)|\n\nMoby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. This bug is fixed in Moby (Docker Engine) 20.10.18. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-vp35-85q5-9f25",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Container build can leak any path on the host into the container"
              },
              "fullDescription": {
                "text": "### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \u0026#34;Dockerfile\u0026#34;), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+\u0026lt;protocol\u0026gt;://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-vp35-85q5-9f25",
              "help": {
                "text": "Vulnerability GHSA-vp35-85q5-9f25\nSeverity: LOW\nPackage: github.com/moby/moby\nFixed Version: 20.10.20\nLink: [GHSA-vp35-85q5-9f25](https://github.com/advisories/GHSA-vp35-85q5-9f25)\n### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+\u003cprotocol\u003e://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)",
                "markdown": "**Vulnerability GHSA-vp35-85q5-9f25**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/moby/moby|20.10.20|[GHSA-vp35-85q5-9f25](https://github.com/advisories/GHSA-vp35-85q5-9f25)|\n\n### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+\u003cprotocol\u003e://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-27561",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: volume mount race condition (regression of CVE-2019-19921)"
              },
              "fullDescription": {
                "text": "runc through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-27561",
              "help": {
                "text": "Vulnerability CVE-2023-27561\nSeverity: HIGH\nPackage: github.com/opencontainers/runc\nFixed Version: 1.1.5\nLink: [CVE-2023-27561](https://avd.aquasec.com/nvd/cve-2023-27561)\nrunc through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression.",
                "markdown": "**Vulnerability CVE-2023-27561**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/opencontainers/runc|1.1.5|[CVE-2023-27561](https://avd.aquasec.com/nvd/cve-2023-27561)|\n\nrunc through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-21626",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: file descriptor leak"
              },
              "fullDescription": {
                "text": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from runc exec) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\u0026#34;attack 2\u0026#34;). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through runc run (\u0026#34;attack 1\u0026#34;). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\u0026#34;attack 3a\u0026#34; and \u0026#34;attack 3b\u0026#34;). runc 1.1.12 includes patches for this issue. "
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21626",
              "help": {
                "text": "Vulnerability CVE-2024-21626\nSeverity: HIGH\nPackage: github.com/opencontainers/runc\nFixed Version: 1.1.12\nLink: [CVE-2024-21626](https://avd.aquasec.com/nvd/cve-2024-21626)\nrunc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from runc exec) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through runc run (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\"). runc 1.1.12 includes patches for this issue. ",
                "markdown": "**Vulnerability CVE-2024-21626**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/opencontainers/runc|1.1.12|[CVE-2024-21626](https://avd.aquasec.com/nvd/cve-2024-21626)|\n\nrunc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from runc exec) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through runc run (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\"). runc 1.1.12 includes patches for this issue. "
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-43784",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: integer overflow in netlink bytemsg length field allows attacker to override netlink-based container configuration"
              },
              "fullDescription": {
                "text": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc, netlink is used internally as a serialization system for specifying the relevant container configuration to the `C` portion of the code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration. This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces. The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure). runc version 1.0.3 contains a fix for this bug. As a workaround, one may try disallowing untrusted namespace paths from your container. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-43784",
              "help": {
                "text": "Vulnerability CVE-2021-43784\nSeverity: MEDIUM\nPackage: github.com/opencontainers/runc\nFixed Version: 1.0.3\nLink: [CVE-2021-43784](https://avd.aquasec.com/nvd/cve-2021-43784)\nrunc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc, netlink is used internally as a serialization system for specifying the relevant container configuration to the `C` portion of the code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration. This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces. The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure). runc version 1.0.3 contains a fix for this bug. As a workaround, one may try disallowing untrusted namespace paths from your container. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.",
                "markdown": "**Vulnerability CVE-2021-43784**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/opencontainers/runc|1.0.3|[CVE-2021-43784](https://avd.aquasec.com/nvd/cve-2021-43784)|\n\nrunc is a CLI tool for spawning and running containers on Linux according to the OCI specification. In runc, netlink is used internally as a serialization system for specifying the relevant container configuration to the `C` portion of the code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration. This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces. The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure). runc version 1.0.3 contains a fix for this bug. As a workaround, one may try disallowing untrusted namespace paths from your container. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-29162",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: incorrect handling of inheritable capabilities"
              },
              "fullDescription": {
                "text": "runc is a CLI tool for spawning and running containers on Linux according to the OCI specification. A bug was found in runc prior to version 1.1.2 where `runc exec --cap` created processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2). This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container\u0026#39;s bounding set. This bug has been fixed in runc 1.1.2. This fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities. In addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29162",
              "help": {
                "text": "Vulnerability CVE-2022-29162\nSeverity: MEDIUM\nPackage: github.com/opencontainers/runc\nFixed Version: 1.1.2\nLink: [CVE-2022-29162](https://avd.aquasec.com/nvd/cve-2022-29162)\nrunc is a CLI tool for spawning and running containers on Linux according to the OCI specification. A bug was found in runc prior to version 1.1.2 where `runc exec --cap` created processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2). This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in runc 1.1.2. This fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities. In addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file.",
                "markdown": "**Vulnerability CVE-2022-29162**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/opencontainers/runc|1.1.2|[CVE-2022-29162](https://avd.aquasec.com/nvd/cve-2022-29162)|\n\nrunc is a CLI tool for spawning and running containers on Linux according to the OCI specification. A bug was found in runc prior to version 1.1.2 where `runc exec --cap` created processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2). This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in runc 1.1.2. This fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities. In addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-28642",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration"
              },
              "fullDescription": {
                "text": "runc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28642",
              "help": {
                "text": "Vulnerability CVE-2023-28642\nSeverity: MEDIUM\nPackage: github.com/opencontainers/runc\nFixed Version: 1.1.5\nLink: [CVE-2023-28642](https://avd.aquasec.com/nvd/cve-2023-28642)\nrunc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\n",
                "markdown": "**Vulnerability CVE-2023-28642**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/opencontainers/runc|1.1.5|[CVE-2023-28642](https://avd.aquasec.com/nvd/cve-2023-28642)|\n\nrunc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-25809",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: Rootless runc makes `/sys/fs/cgroup` writable"
              },
              "fullDescription": {
                "text": "runc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users\u0026#39;s cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25809",
              "help": {
                "text": "Vulnerability CVE-2023-25809\nSeverity: LOW\nPackage: github.com/opencontainers/runc\nFixed Version: 1.1.5\nLink: [CVE-2023-25809](https://avd.aquasec.com/nvd/cve-2023-25809)\nrunc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n",
                "markdown": "**Vulnerability CVE-2023-25809**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/opencontainers/runc|1.1.5|[CVE-2023-25809](https://avd.aquasec.com/nvd/cve-2023-25809)|\n\nrunc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-21698",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "prometheus/client_golang: Denial of service using InstrumentHandlerCounter"
              },
              "fullDescription": {
                "text": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21698",
              "help": {
                "text": "Vulnerability CVE-2022-21698\nSeverity: HIGH\nPackage: github.com/prometheus/client_golang\nFixed Version: 1.11.1\nLink: [CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)\nclient_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
                "markdown": "**Vulnerability CVE-2022-21698**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/prometheus/client_golang|1.11.1|[CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)|\n\nclient_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-46402",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "git-urls: regex DoS"
              },
              "fullDescription": {
                "text": "git-urls 1.0.0 allows ReDOS (Regular Expression Denial of Service) in urls.go."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-46402",
              "help": {
                "text": "Vulnerability CVE-2023-46402\nSeverity: HIGH\nPackage: github.com/whilp/git-urls\nFixed Version: \nLink: [CVE-2023-46402](https://avd.aquasec.com/nvd/cve-2023-46402)\ngit-urls 1.0.0 allows ReDOS (Regular Expression Denial of Service) in urls.go.",
                "markdown": "**Vulnerability CVE-2023-46402**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/whilp/git-urls||[CVE-2023-46402](https://avd.aquasec.com/nvd/cve-2023-46402)|\n\ngit-urls 1.0.0 allows ReDOS (Regular Expression Denial of Service) in urls.go."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-43565",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang.org/x/crypto: empty plaintext packet causes panic"
              },
              "fullDescription": {
                "text": "The x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-43565",
              "help": {
                "text": "Vulnerability CVE-2021-43565\nSeverity: HIGH\nPackage: golang.org/x/crypto\nFixed Version: 0.0.0-20211202192323-5770296d904e\nLink: [CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)\nThe x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server.",
                "markdown": "**Vulnerability CVE-2021-43565**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/crypto|0.0.0-20211202192323-5770296d904e|[CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)|\n\nThe x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27191",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crash in a golang.org/x/crypto/ssh server"
              },
              "fullDescription": {
                "text": "The golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27191",
              "help": {
                "text": "Vulnerability CVE-2022-27191\nSeverity: HIGH\nPackage: golang.org/x/crypto\nFixed Version: 0.0.0-20220314234659-1baeb1ce4c0b\nLink: [CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)\nThe golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey.",
                "markdown": "**Vulnerability CVE-2022-27191**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/crypto|0.0.0-20220314234659-1baeb1ce4c0b|[CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)|\n\nThe golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-48795",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ssh: Prefix truncation attack on Binary Packet Protocol (BPP)"
              },
              "fullDescription": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH\u0026#39;s use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-48795",
              "help": {
                "text": "Vulnerability CVE-2023-48795\nSeverity: MEDIUM\nPackage: golang.org/x/crypto\nFixed Version: 0.17.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)\nThe SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "**Vulnerability CVE-2023-48795**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|golang.org/x/crypto|0.17.0|[CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)|\n\nThe SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33194",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: x/net/html: infinite loop in ParseFragment"
              },
              "fullDescription": {
                "text": "golang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33194",
              "help": {
                "text": "Vulnerability CVE-2021-33194\nSeverity: HIGH\nPackage: golang.org/x/net\nFixed Version: 0.0.0-20210520170846-37e1c6afe023\nLink: [CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)\ngolang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input.",
                "markdown": "**Vulnerability CVE-2021-33194**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/net|0.0.0-20210520170846-37e1c6afe023|[CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)|\n\ngolang.org/x/net before v0.0.0-20210520170846-37e1c6afe023 allows attackers to cause a denial of service (infinite loop) via crafted ParseFragment input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-27664",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: handle server errors after sending GOAWAY"
              },
              "fullDescription": {
                "text": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-27664",
              "help": {
                "text": "Vulnerability CVE-2022-27664\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.6, 1.19.1\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)\nIn net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
                "markdown": "**Vulnerability CVE-2022-27664**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.6, 1.19.1|[CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)|\n\nIn net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41723",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "net/http, golang.org/x/net/http2: avoid quadratic complexity in HPACK decoding"
              },
              "fullDescription": {
                "text": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41723",
              "help": {
                "text": "Vulnerability CVE-2022-41723\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)\nA maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
                "markdown": "**Vulnerability CVE-2022-41723**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)|\n\nA maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-39325",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, x/net/http2: rapid stream resets can cause excessive work (CVE-2023-44487)"
              },
              "fullDescription": {
                "text": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39325",
              "help": {
                "text": "Vulnerability CVE-2023-39325\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.20.10, 1.21.3\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)\nA malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
                "markdown": "**Vulnerability CVE-2023-39325**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.20.10, 1.21.3|[CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)|\n\nA malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-31525",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: panic in ReadRequest and ReadResponse when reading a very large header"
              },
              "fullDescription": {
                "text": "net/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-31525",
              "help": {
                "text": "Vulnerability CVE-2021-31525\nSeverity: MEDIUM\nPackage: golang.org/x/net\nFixed Version: 0.0.0-20210428140749-89ef3d95e781\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)\nnet/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations.",
                "markdown": "**Vulnerability CVE-2021-31525**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|golang.org/x/net|0.0.0-20210428140749-89ef3d95e781|[CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)|\n\nnet/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-41717",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: excessive memory growth in a Go server accepting HTTP/2 requests"
              },
              "fullDescription": {
                "text": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41717",
              "help": {
                "text": "Vulnerability CVE-2022-41717\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)\nAn attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
                "markdown": "**Vulnerability CVE-2022-41717**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.18.9, 1.19.4|[CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)|\n\nAn attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-3978",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang.org/x/net/html: Cross site scripting"
              },
              "fullDescription": {
                "text": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-3978",
              "help": {
                "text": "Vulnerability CVE-2023-3978\nSeverity: MEDIUM\nPackage: golang.org/x/net\nFixed Version: 0.13.0\nLink: [CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)\nText nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
                "markdown": "**Vulnerability CVE-2023-3978**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|golang.org/x/net|0.13.0|[CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)|\n\nText nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-44487",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "HTTP/2: Multiple HTTP/2 enabled web servers are vulnerable to a DDoS attack (Rapid Reset Attack)"
              },
              "fullDescription": {
                "text": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-44487",
              "help": {
                "text": "Vulnerability CVE-2023-44487\nSeverity: MEDIUM\nPackage: google.golang.org/grpc\nFixed Version: 1.58.3, 1.57.1, 1.56.3\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
                "markdown": "**Vulnerability CVE-2023-44487**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|google.golang.org/grpc|1.58.3, 1.57.1, 1.56.3|[CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)|\n\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45288",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS"
              },
              "fullDescription": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request\u0026#39;s headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45288",
              "help": {
                "text": "Vulnerability CVE-2023-45288\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.21.9, 1.22.2\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)\nAn attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "**Vulnerability CVE-2023-45288**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.21.9, 1.22.2|[CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)|\n\nAn attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-29526",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: syscall: faccessat checks wrong group"
              },
              "fullDescription": {
                "text": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29526",
              "help": {
                "text": "Vulnerability CVE-2022-29526\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.10, 1.18.2\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)\nGo before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.",
                "markdown": "**Vulnerability CVE-2022-29526**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.10, 1.18.2|[CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)|\n\nGo before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-38561",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: out-of-bounds read in golang.org/x/text/language leads to DoS"
              },
              "fullDescription": {
                "text": "golang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-38561",
              "help": {
                "text": "Vulnerability CVE-2021-38561\nSeverity: HIGH\nPackage: golang.org/x/text\nFixed Version: 0.3.7\nLink: [CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)\ngolang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack.",
                "markdown": "**Vulnerability CVE-2021-38561**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/text|0.3.7|[CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)|\n\ngolang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-32149",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: golang.org/x/text/language: ParseAcceptLanguage takes a long time to parse complex tags"
              },
              "fullDescription": {
                "text": "An attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32149",
              "help": {
                "text": "Vulnerability CVE-2022-32149\nSeverity: HIGH\nPackage: golang.org/x/text\nFixed Version: 0.3.8\nLink: [CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)\nAn attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse.",
                "markdown": "**Vulnerability CVE-2022-32149**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|golang.org/x/text|0.3.8|[CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)|\n\nAn attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-m425-mq94-257g",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "gRPC-Go HTTP/2 Rapid Reset vulnerability"
              },
              "fullDescription": {
                "text": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server\u0026#39;s resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/advisories/GHSA-m425-mq94-257g",
              "help": {
                "text": "Vulnerability GHSA-m425-mq94-257g\nSeverity: HIGH\nPackage: google.golang.org/grpc\nFixed Version: 1.56.3, 1.57.1, 1.58.3\nLink: [GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)\n### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n",
                "markdown": "**Vulnerability GHSA-m425-mq94-257g**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|google.golang.org/grpc|1.56.3, 1.57.1, 1.58.3|[GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)|\n\n### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-24786",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang-protobuf: encoding/protojson, internal/encoding/json: infinite loop in protojson.Unmarshal when unmarshaling certain forms of invalid JSON"
              },
              "fullDescription": {
                "text": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24786",
              "help": {
                "text": "Vulnerability CVE-2024-24786\nSeverity: MEDIUM\nPackage: google.golang.org/protobuf\nFixed Version: 1.33.0\nLink: [CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)\nThe protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
                "markdown": "**Vulnerability CVE-2024-24786**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|google.golang.org/protobuf|1.33.0|[CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)|\n\nThe protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-28948",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang-gopkg-yaml: crash when attempting to deserialize invalid input"
              },
              "fullDescription": {
                "text": "An issue in the Unmarshal function in Go-Yaml v3 causes the program to crash when attempting to deserialize invalid input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-28948",
              "help": {
                "text": "Vulnerability CVE-2022-28948\nSeverity: HIGH\nPackage: gopkg.in/yaml.v3\nFixed Version: 3.0.0-20220521103104-8f96da9f5d5e\nLink: [CVE-2022-28948](https://avd.aquasec.com/nvd/cve-2022-28948)\nAn issue in the Unmarshal function in Go-Yaml v3 causes the program to crash when attempting to deserialize invalid input.",
                "markdown": "**Vulnerability CVE-2022-28948**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|gopkg.in/yaml.v3|3.0.0-20220521103104-8f96da9f5d5e|[CVE-2022-28948](https://avd.aquasec.com/nvd/cve-2022-28948)|\n\nAn issue in the Unmarshal function in Go-Yaml v3 causes the program to crash when attempting to deserialize invalid input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-26147",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: Missing YAML Content Leads To Panic"
              },
              "fullDescription": {
                "text": "Helm is a package manager for Charts for Kubernetes. Versions prior to 3.14.2 contain an uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content. When either an `index.yaml` file or a plugins `plugin.yaml` file were missing all metadata a panic would occur in Helm. In the Helm SDK, this is found when using the `LoadIndexFile` or `DownloadIndexFile` functions in the `repo` package or the `LoadDir` function in the `plugin` package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation. This issue has been resolved in Helm v3.14.2. If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem. If using Helm SDK versions prior to 3.14.2, calls to affected functions can use `recover` to catch the panic."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-26147",
              "help": {
                "text": "Vulnerability CVE-2024-26147\nSeverity: HIGH\nPackage: helm.sh/helm/v3\nFixed Version: 3.14.2\nLink: [CVE-2024-26147](https://avd.aquasec.com/nvd/cve-2024-26147)\nHelm is a package manager for Charts for Kubernetes. Versions prior to 3.14.2 contain an uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content. When either an `index.yaml` file or a plugins `plugin.yaml` file were missing all metadata a panic would occur in Helm. In the Helm SDK, this is found when using the `LoadIndexFile` or `DownloadIndexFile` functions in the `repo` package or the `LoadDir` function in the `plugin` package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation. This issue has been resolved in Helm v3.14.2. If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem. If using Helm SDK versions prior to 3.14.2, calls to affected functions can use `recover` to catch the panic.",
                "markdown": "**Vulnerability CVE-2024-26147**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|helm.sh/helm/v3|3.14.2|[CVE-2024-26147](https://avd.aquasec.com/nvd/cve-2024-26147)|\n\nHelm is a package manager for Charts for Kubernetes. Versions prior to 3.14.2 contain an uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content. When either an `index.yaml` file or a plugins `plugin.yaml` file were missing all metadata a panic would occur in Helm. In the Helm SDK, this is found when using the `LoadIndexFile` or `DownloadIndexFile` functions in the `repo` package or the `LoadDir` function in the `plugin` package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation. This issue has been resolved in Helm v3.14.2. If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem. If using Helm SDK versions prior to 3.14.2, calls to affected functions can use `recover` to catch the panic."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-25210",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: shows secrets with --dry-run option in clear text"
              },
              "fullDescription": {
                "text": "An issue was discovered in Cloud Native Computing Foundation (CNCF) Helm through 3.13.3. It displays values of secrets when the --dry-run flag is used. This is a security concern in some use cases, such as a --dry-run call by a CI/CD tool. NOTE: the vendor\u0026#39;s position is that this behavior was introduced intentionally, and cannot be removed without breaking backwards compatibility (some users may be relying on these values). Also, it is not the Helm Project\u0026#39;s responsibility if a user decides to use --dry-run within a CI/CD environment whose output is visible to unauthorized persons."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-25210",
              "help": {
                "text": "Vulnerability CVE-2019-25210\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: \nLink: [CVE-2019-25210](https://avd.aquasec.com/nvd/cve-2019-25210)\nAn issue was discovered in Cloud Native Computing Foundation (CNCF) Helm through 3.13.3. It displays values of secrets when the --dry-run flag is used. This is a security concern in some use cases, such as a --dry-run call by a CI/CD tool. NOTE: the vendor's position is that this behavior was introduced intentionally, and cannot be removed without breaking backwards compatibility (some users may be relying on these values). Also, it is not the Helm Project's responsibility if a user decides to use --dry-run within a CI/CD environment whose output is visible to unauthorized persons.",
                "markdown": "**Vulnerability CVE-2019-25210**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3||[CVE-2019-25210](https://avd.aquasec.com/nvd/cve-2019-25210)|\n\nAn issue was discovered in Cloud Native Computing Foundation (CNCF) Helm through 3.13.3. It displays values of secrets when the --dry-run flag is used. This is a security concern in some use cases, such as a --dry-run call by a CI/CD tool. NOTE: the vendor's position is that this behavior was introduced intentionally, and cannot be removed without breaking backwards compatibility (some users may be relying on these values). Also, it is not the Helm Project's responsibility if a user decides to use --dry-run within a CI/CD environment whose output is visible to unauthorized persons."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23524",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: Denial of service through string value parsing"
              },
              "fullDescription": {
                "text": "Helm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to Uncontrolled Resource Consumption, resulting in Denial of Service. Input to functions in the _strvals_ package can cause a stack overflow. In Go, a stack overflow cannot be recovered from. Applications that use functions from the _strvals_ package in the Helm SDK can have a Denial of Service attack when they use this package and it panics. This issue has been patched in 3.10.3. SDK users can validate strings supplied by users won\u0026#39;t create large arrays causing significant memory usage before passing them to the _strvals_ functions."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23524",
              "help": {
                "text": "Vulnerability CVE-2022-23524\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: 3.10.3\nLink: [CVE-2022-23524](https://avd.aquasec.com/nvd/cve-2022-23524)\nHelm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to Uncontrolled Resource Consumption, resulting in Denial of Service. Input to functions in the _strvals_ package can cause a stack overflow. In Go, a stack overflow cannot be recovered from. Applications that use functions from the _strvals_ package in the Helm SDK can have a Denial of Service attack when they use this package and it panics. This issue has been patched in 3.10.3. SDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the _strvals_ functions.",
                "markdown": "**Vulnerability CVE-2022-23524**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3|3.10.3|[CVE-2022-23524](https://avd.aquasec.com/nvd/cve-2022-23524)|\n\nHelm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to Uncontrolled Resource Consumption, resulting in Denial of Service. Input to functions in the _strvals_ package can cause a stack overflow. In Go, a stack overflow cannot be recovered from. Applications that use functions from the _strvals_ package in the Helm SDK can have a Denial of Service attack when they use this package and it panics. This issue has been patched in 3.10.3. SDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the _strvals_ functions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23525",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: Denial of service through through repository index file"
              },
              "fullDescription": {
                "text": "Helm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to NULL Pointer Dereference in the _repo_package. The _repo_ package contains a handler that processes the index file of a repository. For example, the Helm client adds references to chart repositories where charts are managed. The _repo_ package parses the index file of the repository and loads it into structures Go can work with. Some index files can cause array data structures to be created causing a memory violation. Applications that use the _repo_ package in the Helm SDK to parse an index file can suffer a Denial of Service when that input causes a panic that cannot be recovered from. The Helm Client will panic with an index file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been patched in 3.10.3. SDK users can validate index files that are correctly formatted before passing them to the _repo_ functions."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23525",
              "help": {
                "text": "Vulnerability CVE-2022-23525\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: 3.10.3\nLink: [CVE-2022-23525](https://avd.aquasec.com/nvd/cve-2022-23525)\nHelm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to NULL Pointer Dereference in the _repo_package. The _repo_ package contains a handler that processes the index file of a repository. For example, the Helm client adds references to chart repositories where charts are managed. The _repo_ package parses the index file of the repository and loads it into structures Go can work with. Some index files can cause array data structures to be created causing a memory violation. Applications that use the _repo_ package in the Helm SDK to parse an index file can suffer a Denial of Service when that input causes a panic that cannot be recovered from. The Helm Client will panic with an index file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been patched in 3.10.3. SDK users can validate index files that are correctly formatted before passing them to the _repo_ functions.",
                "markdown": "**Vulnerability CVE-2022-23525**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3|3.10.3|[CVE-2022-23525](https://avd.aquasec.com/nvd/cve-2022-23525)|\n\nHelm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to NULL Pointer Dereference in the _repo_package. The _repo_ package contains a handler that processes the index file of a repository. For example, the Helm client adds references to chart repositories where charts are managed. The _repo_ package parses the index file of the repository and loads it into structures Go can work with. Some index files can cause array data structures to be created causing a memory violation. Applications that use the _repo_ package in the Helm SDK to parse an index file can suffer a Denial of Service when that input causes a panic that cannot be recovered from. The Helm Client will panic with an index file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been patched in 3.10.3. SDK users can validate index files that are correctly formatted before passing them to the _repo_ functions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23526",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: Denial of service through schema file"
              },
              "fullDescription": {
                "text": "Helm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to NULL Pointer Dereference in the_chartutil_ package that can cause a segmentation violation. The _chartutil_ package contains a parser that loads a JSON Schema validation file. For example, the Helm client when rendering a chart will validate its values with the schema file. The _chartutil_ package parses the schema file and loads it into structures Go can work with. Some schema files can cause array data structures to be created causing a memory violation. Applications that use the _chartutil_ package in the Helm SDK to parse a schema file can suffer a Denial of Service when that input causes a panic that cannot be recovered from. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been patched in 3.10.3. SDK users can validate schema files that are correctly formatted before passing them to the _chartutil_ functions."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23526",
              "help": {
                "text": "Vulnerability CVE-2022-23526\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: 3.10.3\nLink: [CVE-2022-23526](https://avd.aquasec.com/nvd/cve-2022-23526)\nHelm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to NULL Pointer Dereference in the_chartutil_ package that can cause a segmentation violation. The _chartutil_ package contains a parser that loads a JSON Schema validation file. For example, the Helm client when rendering a chart will validate its values with the schema file. The _chartutil_ package parses the schema file and loads it into structures Go can work with. Some schema files can cause array data structures to be created causing a memory violation. Applications that use the _chartutil_ package in the Helm SDK to parse a schema file can suffer a Denial of Service when that input causes a panic that cannot be recovered from. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been patched in 3.10.3. SDK users can validate schema files that are correctly formatted before passing them to the _chartutil_ functions.",
                "markdown": "**Vulnerability CVE-2022-23526**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3|3.10.3|[CVE-2022-23526](https://avd.aquasec.com/nvd/cve-2022-23526)|\n\nHelm is a tool for managing Charts, pre-configured Kubernetes resources. Versions prior to 3.10.3 are subject to NULL Pointer Dereference in the_chartutil_ package that can cause a segmentation violation. The _chartutil_ package contains a parser that loads a JSON Schema validation file. For example, the Helm client when rendering a chart will validate its values with the schema file. The _chartutil_ package parses the schema file and loads it into structures Go can work with. Some schema files can cause array data structures to be created causing a memory violation. Applications that use the _chartutil_ package in the Helm SDK to parse a schema file can suffer a Denial of Service when that input causes a panic that cannot be recovered from. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been patched in 3.10.3. SDK users can validate schema files that are correctly formatted before passing them to the _chartutil_ functions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-36055",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: memory panic"
              },
              "fullDescription": {
                "text": "Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. Fuzz testing, provided by the CNCF, identified input to functions in the _strvals_ package that can cause an out of memory panic. The _strvals_ package contains a parser that turns strings in to Go structures. The _strvals_ package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing an out of memory panic. Applications that use the _strvals_ package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from. The Helm Client will panic with input to `--set`, `--set-string`, and other value setting flags that causes an out of memory panic. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been resolved in 3.9.4. SDK users can validate strings supplied by users won\u0026#39;t create large arrays causing significant memory usage before passing them to the _strvals_ functions."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-36055",
              "help": {
                "text": "Vulnerability CVE-2022-36055\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: 3.9.4\nLink: [CVE-2022-36055](https://avd.aquasec.com/nvd/cve-2022-36055)\nHelm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. Fuzz testing, provided by the CNCF, identified input to functions in the _strvals_ package that can cause an out of memory panic. The _strvals_ package contains a parser that turns strings in to Go structures. The _strvals_ package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing an out of memory panic. Applications that use the _strvals_ package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from. The Helm Client will panic with input to `--set`, `--set-string`, and other value setting flags that causes an out of memory panic. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been resolved in 3.9.4. SDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the _strvals_ functions.",
                "markdown": "**Vulnerability CVE-2022-36055**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3|3.9.4|[CVE-2022-36055](https://avd.aquasec.com/nvd/cve-2022-36055)|\n\nHelm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. Fuzz testing, provided by the CNCF, identified input to functions in the _strvals_ package that can cause an out of memory panic. The _strvals_ package contains a parser that turns strings in to Go structures. The _strvals_ package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing an out of memory panic. Applications that use the _strvals_ package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from. The Helm Client will panic with input to `--set`, `--set-string`, and other value setting flags that causes an out of memory panic. Helm is not a long running service so the panic will not affect future uses of the Helm client. This issue has been resolved in 3.9.4. SDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the _strvals_ functions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-25165",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: getHostByName Function Information Disclosure"
              },
              "fullDescription": {
                "text": "Helm is a tool that streamlines installing and managing Kubernetes applications.`getHostByName` is a Helm template function introduced in Helm v3. The function is able to accept a hostname and return an IP address for that hostname. To get the IP address the function performs a DNS lookup. The DNS lookup happens when used with `helm install|upgrade|template` or when the Helm SDK is used to render a chart. Information passed into the chart can be disclosed to the DNS servers used to lookup the IP address. For example, a malicious chart could inject `getHostByName` into a chart in order to disclose values to a malicious DNS server. The issue has been fixed in Helm 3.11.1. Prior to using a chart with Helm verify the `getHostByName` function is not being used in a template to disclose any information you do not want passed to DNS servers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25165",
              "help": {
                "text": "Vulnerability CVE-2023-25165\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: 3.11.1\nLink: [CVE-2023-25165](https://avd.aquasec.com/nvd/cve-2023-25165)\nHelm is a tool that streamlines installing and managing Kubernetes applications.`getHostByName` is a Helm template function introduced in Helm v3. The function is able to accept a hostname and return an IP address for that hostname. To get the IP address the function performs a DNS lookup. The DNS lookup happens when used with `helm install|upgrade|template` or when the Helm SDK is used to render a chart. Information passed into the chart can be disclosed to the DNS servers used to lookup the IP address. For example, a malicious chart could inject `getHostByName` into a chart in order to disclose values to a malicious DNS server. The issue has been fixed in Helm 3.11.1. Prior to using a chart with Helm verify the `getHostByName` function is not being used in a template to disclose any information you do not want passed to DNS servers.",
                "markdown": "**Vulnerability CVE-2023-25165**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3|3.11.1|[CVE-2023-25165](https://avd.aquasec.com/nvd/cve-2023-25165)|\n\nHelm is a tool that streamlines installing and managing Kubernetes applications.`getHostByName` is a Helm template function introduced in Helm v3. The function is able to accept a hostname and return an IP address for that hostname. To get the IP address the function performs a DNS lookup. The DNS lookup happens when used with `helm install|upgrade|template` or when the Helm SDK is used to render a chart. Information passed into the chart can be disclosed to the DNS servers used to lookup the IP address. For example, a malicious chart could inject `getHostByName` into a chart in order to disclose values to a malicious DNS server. The issue has been fixed in Helm 3.11.1. Prior to using a chart with Helm verify the `getHostByName` function is not being used in a template to disclose any information you do not want passed to DNS servers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-25620",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "helm: Dependency management path traversal"
              },
              "fullDescription": {
                "text": "Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. When either the Helm client or SDK is used to save a chart whose name within the `Chart.yaml` file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name. This issue has been resolved in Helm v3.14.1. Users unable to upgrade should check all charts used by Helm for path changes in their name as found in the `Chart.yaml` file. This includes dependencies."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-25620",
              "help": {
                "text": "Vulnerability CVE-2024-25620\nSeverity: MEDIUM\nPackage: helm.sh/helm/v3\nFixed Version: 3.14.1\nLink: [CVE-2024-25620](https://avd.aquasec.com/nvd/cve-2024-25620)\nHelm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. When either the Helm client or SDK is used to save a chart whose name within the `Chart.yaml` file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name. This issue has been resolved in Helm v3.14.1. Users unable to upgrade should check all charts used by Helm for path changes in their name as found in the `Chart.yaml` file. This includes dependencies.",
                "markdown": "**Vulnerability CVE-2024-25620**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helm.sh/helm/v3|3.14.1|[CVE-2024-25620](https://avd.aquasec.com/nvd/cve-2024-25620)|\n\nHelm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. When either the Helm client or SDK is used to save a chart whose name within the `Chart.yaml` file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name. This issue has been resolved in Helm v3.14.1. Users unable to upgrade should check all charts used by Helm for path changes in their name as found in the `Chart.yaml` file. This includes dependencies."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-23806",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/elliptic: IsOnCurve returns true for invalid field elements"
              },
              "fullDescription": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23806",
              "help": {
                "text": "Vulnerability CVE-2022-23806\nSeverity: CRITICAL\nPackage: stdlib\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)\nCurve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "**Vulnerability CVE-2022-23806**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|stdlib|1.16.14, 1.17.7|[CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)|\n\nCurve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-24538",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: backticks not treated as string delimiters"
              },
              "fullDescription": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \u0026#34;var a = {{.}}\u0026#34;), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24538",
              "help": {
                "text": "Vulnerability CVE-2023-24538\nSeverity: CRITICAL\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)\nTemplates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "**Vulnerability CVE-2023-24538**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|stdlib|1.19.8, 1.20.3|[CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)|\n\nTemplates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-24540",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of JavaScript whitespace"
              },
              "fullDescription": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \u0026#34;\\t\\n\\f\\r\\u0020\\u2028\\u2029\u0026#34; in JavaScript contexts that also contain actions may not be properly sanitized during execution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24540",
              "help": {
                "text": "Vulnerability CVE-2023-24540\nSeverity: CRITICAL\nPackage: stdlib\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)\nNot all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "**Vulnerability CVE-2023-24540**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|stdlib|1.19.9, 1.20.4|[CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)|\n\nNot all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-16845",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: ReadUvarint and ReadVarint can read an unlimited number of bytes from invalid inputs"
              },
              "fullDescription": {
                "text": "Go before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-16845",
              "help": {
                "text": "Vulnerability CVE-2020-16845\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.13.15, 1.14.7\nLink: [CVE-2020-16845](https://avd.aquasec.com/nvd/cve-2020-16845)\nGo before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs.",
                "markdown": "**Vulnerability CVE-2020-16845**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.13.15, 1.14.7|[CVE-2020-16845](https://avd.aquasec.com/nvd/cve-2020-16845)|\n\nGo before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-28362",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big: panic during recursive division of very large numbers"
              },
              "fullDescription": {
                "text": "Go before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28362",
              "help": {
                "text": "Vulnerability CVE-2020-28362\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.14.12, 1.15.5\nLink: [CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)\nGo before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service.",
                "markdown": "**Vulnerability CVE-2020-28362**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.14.12, 1.15.5|[CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)|\n\nGo before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-27918",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/xml: infinite loop when using xml.NewTokenDecoder with a custom TokenReader"
              },
              "fullDescription": {
                "text": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27918",
              "help": {
                "text": "Vulnerability CVE-2021-27918\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.9, 1.16.1\nLink: [CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)\nencoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
                "markdown": "**Vulnerability CVE-2021-27918**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.9, 1.16.1|[CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)|\n\nencoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net: lookup functions may return invalid host names"
              },
              "fullDescription": {
                "text": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33195",
              "help": {
                "text": "Vulnerability CVE-2021-33195\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)\nGo before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
                "markdown": "**Vulnerability CVE-2021-33195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.13, 1.16.5|[CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)|\n\nGo before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33196",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/zip: malformed archive may cause panic or memory exhaustion"
              },
              "fullDescription": {
                "text": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive\u0026#39;s header) can cause a NewReader or OpenReader panic."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33196",
              "help": {
                "text": "Vulnerability CVE-2021-33196\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)\nIn archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
                "markdown": "**Vulnerability CVE-2021-33196**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.13, 1.16.5|[CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)|\n\nIn archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33198",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big.Rat: may cause a panic or an unrecoverable fatal error if passed inputs with very large exponents"
              },
              "fullDescription": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33198",
              "help": {
                "text": "Vulnerability CVE-2021-33198\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)\nIn Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
                "markdown": "**Vulnerability CVE-2021-33198**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.15.13, 1.16.5|[CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)|\n\nIn Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-39293",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/zip: malformed archive may cause panic or memory exhaustion (incomplete fix of CVE-2021-33196)"
              },
              "fullDescription": {
                "text": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-39293",
              "help": {
                "text": "Vulnerability CVE-2021-39293\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.8, 1.17.1\nLink: [CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)\nIn archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
                "markdown": "**Vulnerability CVE-2021-39293**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.8, 1.17.1|[CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)|\n\nIn archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-41771",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: debug/macho: invalid dynamic symbol table command can cause panic"
              },
              "fullDescription": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41771",
              "help": {
                "text": "Vulnerability CVE-2021-41771\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)\nImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "**Vulnerability CVE-2021-41771**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.10, 1.17.3|[CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)|\n\nImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-41772",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/zip: Reader.Open panics on empty string"
              },
              "fullDescription": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41772",
              "help": {
                "text": "Vulnerability CVE-2021-41772\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)\nGo before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "**Vulnerability CVE-2021-41772**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.10, 1.17.3|[CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)|\n\nGo before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-44716",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: limit growth of header canonicalization cache"
              },
              "fullDescription": {
                "text": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44716",
              "help": {
                "text": "Vulnerability CVE-2021-44716\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)\nnet/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.",
                "markdown": "**Vulnerability CVE-2021-44716**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.12, 1.17.5|[CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)|\n\nnet/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23772",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big: uncontrolled memory consumption due to an unhandled overflow via Rat.SetString"
              },
              "fullDescription": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23772",
              "help": {
                "text": "Vulnerability CVE-2022-23772\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)\nRat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "**Vulnerability CVE-2022-23772**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.14, 1.17.7|[CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)|\n\nRat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24675",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/pem: fix stack overflow in Decode"
              },
              "fullDescription": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24675",
              "help": {
                "text": "Vulnerability CVE-2022-24675\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)\nencoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "**Vulnerability CVE-2022-24675**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.9, 1.18.1|[CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)|\n\nencoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24921",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: regexp: stack exhaustion via a deeply nested expression"
              },
              "fullDescription": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24921",
              "help": {
                "text": "Vulnerability CVE-2022-24921\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.16.15, 1.17.8\nLink: [CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)\nregexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "**Vulnerability CVE-2022-24921**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.16.15, 1.17.8|[CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)|\n\nregexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-28131",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/xml: stack exhaustion in Decoder.Skip"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-28131",
              "help": {
                "text": "Vulnerability CVE-2022-28131\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)\nUncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "**Vulnerability CVE-2022-28131**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)|\n\nUncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-28327",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/elliptic: panic caused by oversized scalar"
              },
              "fullDescription": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-28327",
              "help": {
                "text": "Vulnerability CVE-2022-28327\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)\nThe generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "**Vulnerability CVE-2022-28327**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.9, 1.18.1|[CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)|\n\nThe generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2879",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: archive/tar: unbounded memory consumption when reading headers"
              },
              "fullDescription": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2879",
              "help": {
                "text": "Vulnerability CVE-2022-2879\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)\nReader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "**Vulnerability CVE-2022-2879**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.7, 1.19.2|[CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)|\n\nReader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-2880",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: ReverseProxy should not forward unparseable query parameters"
              },
              "fullDescription": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request\u0026#39;s Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2880",
              "help": {
                "text": "Vulnerability CVE-2022-2880\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)\nRequests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "**Vulnerability CVE-2022-2880**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.7, 1.19.2|[CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)|\n\nRequests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-29804",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ELSA-2022-17957: ol8addon security update (IMPORTANT)"
              },
              "fullDescription": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-29804",
              "help": {
                "text": "Vulnerability CVE-2022-29804\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)\nIncorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "**Vulnerability CVE-2022-29804**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.11, 1.18.3|[CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)|\n\nIncorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30580",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: os/exec: Code injection in Cmd.Start"
              },
              "fullDescription": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \u0026#34;..com\u0026#34; or \u0026#34;..exe\u0026#34; by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30580",
              "help": {
                "text": "Vulnerability CVE-2022-30580\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)\nCode injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "**Vulnerability CVE-2022-30580**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.11, 1.18.3|[CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)|\n\nCode injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30630",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: io/fs: stack exhaustion in Glob"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30630",
              "help": {
                "text": "Vulnerability CVE-2022-30630\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)\nUncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "**Vulnerability CVE-2022-30630**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)|\n\nUncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30631",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: compress/gzip: stack exhaustion in Reader.Read"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30631",
              "help": {
                "text": "Vulnerability CVE-2022-30631\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)\nUncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "**Vulnerability CVE-2022-30631**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)|\n\nUncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30632",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: path/filepath: stack exhaustion in Glob"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30632",
              "help": {
                "text": "Vulnerability CVE-2022-30632\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)\nUncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "**Vulnerability CVE-2022-30632**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)|\n\nUncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30633",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/xml: stack exhaustion in Unmarshal"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the \u0026#39;any\u0026#39; field tag."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30633",
              "help": {
                "text": "Vulnerability CVE-2022-30633\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)\nUncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "**Vulnerability CVE-2022-30633**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)|\n\nUncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30634",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ELSA-2022-17957: ol8addon security update (IMPORTANT)"
              },
              "fullDescription": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u0026lt;\u0026lt; 32 - 1 bytes."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30634",
              "help": {
                "text": "Vulnerability CVE-2022-30634\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)\nInfinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "**Vulnerability CVE-2022-30634**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.11, 1.18.3|[CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)|\n\nInfinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-30635",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: encoding/gob: stack exhaustion in Decoder.Decode"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30635",
              "help": {
                "text": "Vulnerability CVE-2022-30635\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)\nUncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "**Vulnerability CVE-2022-30635**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.12, 1.18.4|[CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)|\n\nUncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-32189",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: math/big: decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service"
              },
              "fullDescription": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32189",
              "help": {
                "text": "Vulnerability CVE-2022-32189\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.17.13, 1.18.5\nLink: [CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)\nA too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "**Vulnerability CVE-2022-32189**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.17.13, 1.18.5|[CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)|\n\nA too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41715",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: regexp/syntax: limit memory used by parsing regexps"
              },
              "fullDescription": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41715",
              "help": {
                "text": "Vulnerability CVE-2022-41715\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)\nPrograms which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "**Vulnerability CVE-2022-41715**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.7, 1.19.2|[CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)|\n\nPrograms which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41716",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously se ..."
              },
              "fullDescription": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \u0026#34;A=B\\x00C=D\u0026#34; sets the variables \u0026#34;A=B\u0026#34; and \u0026#34;C=D\u0026#34;."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41716",
              "help": {
                "text": "Vulnerability CVE-2022-41716\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.8, 1.19.3\nLink: [CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)\nDue to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "**Vulnerability CVE-2022-41716**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.8, 1.19.3|[CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)|\n\nDue to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\"."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41720",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: os, net/http: avoid escapes from os.DirFS and http.Dir on Windows"
              },
              "fullDescription": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\u0026#34;C:/tmp\u0026#34;).Open(\u0026#34;COM1\u0026#34;) opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\u0026#34;\u0026#34;) has changed. Previously, an empty root was treated equivalently to \u0026#34;/\u0026#34;, so os.DirFS(\u0026#34;\u0026#34;).Open(\u0026#34;tmp\u0026#34;) would open the path \u0026#34;/tmp\u0026#34;. This now returns an error."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41720",
              "help": {
                "text": "Vulnerability CVE-2022-41720\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)\nOn Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "**Vulnerability CVE-2022-41720**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.18.9, 1.19.4|[CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)|\n\nOn Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41722",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: path/filepath: path-filepath filepath.Clean path traversal"
              },
              "fullDescription": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \u0026#34;a/../c:/b\u0026#34; into the valid path \u0026#34;c:\\b\u0026#34;. This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \u0026#34;.\\c:\\b\u0026#34;."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41722",
              "help": {
                "text": "Vulnerability CVE-2022-41722\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)\nA path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "**Vulnerability CVE-2022-41722**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)|\n\nA path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\"."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41724",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: large handshake records may cause panics"
              },
              "fullDescription": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u0026gt;= RequestClientCert)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41724",
              "help": {
                "text": "Vulnerability CVE-2022-41724\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)\nLarge handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "**Vulnerability CVE-2022-41724**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)|\n\nLarge handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-41725",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, mime/multipart: denial of service from excessive resource consumption"
              },
              "fullDescription": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \u0026#34;up to maxMemory bytes +10MB (reserved for non-file parts) in memory\u0026#34;. File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type\u0026#39;s documentation states, \u0026#34;If stored on disk, the File\u0026#39;s underlying concrete type will be an *os.File.\u0026#34;. This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-41725",
              "help": {
                "text": "Vulnerability CVE-2022-41725\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)\nA denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
                "markdown": "**Vulnerability CVE-2022-41725**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.6, 1.20.1|[CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)|\n\nA denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24534",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, net/textproto: denial of service from excessive memory allocation"
              },
              "fullDescription": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24534",
              "help": {
                "text": "Vulnerability CVE-2023-24534\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)\nHTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "**Vulnerability CVE-2023-24534**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.8, 1.20.3|[CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)|\n\nHTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24536",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http, net/textproto, mime/multipart: denial of service from excessive resource consumption"
              },
              "fullDescription": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24536",
              "help": {
                "text": "Vulnerability CVE-2023-24536\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)\nMultipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "**Vulnerability CVE-2023-24536**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.8, 1.20.3|[CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)|\n\nMultipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24537",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: go/parser: Infinite loop in parsing"
              },
              "fullDescription": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24537",
              "help": {
                "text": "Vulnerability CVE-2023-24537\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)\nCalling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "**Vulnerability CVE-2023-24537**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.8, 1.20.3|[CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)|\n\nCalling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-24539",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper sanitization of CSS values"
              },
              "fullDescription": {
                "text": "Angle brackets (\u0026lt;\u0026gt;) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a \u0026#39;/\u0026#39; character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24539",
              "help": {
                "text": "Vulnerability CVE-2023-24539\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)\nAngle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "**Vulnerability CVE-2023-24539**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.9, 1.20.4|[CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)|\n\nAngle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29400",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of empty HTML attributes"
              },
              "fullDescription": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \u0026#34;attr={{.}}\u0026#34;) executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29400",
              "help": {
                "text": "Vulnerability CVE-2023-29400\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)\nTemplates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "**Vulnerability CVE-2023-29400**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.9, 1.20.4|[CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)|\n\nTemplates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-29403",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: runtime: unexpected behavior of setuid/setgid binaries"
              },
              "fullDescription": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29403",
              "help": {
                "text": "Vulnerability CVE-2023-29403\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.19.10, 1.20.5\nLink: [CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)\nOn Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "**Vulnerability CVE-2023-29403**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.19.10, 1.20.5|[CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)|\n\nOn Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45283",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as sp ..."
              },
              "fullDescription": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45283",
              "help": {
                "text": "Vulnerability CVE-2023-45283\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.20.11, 1.21.4, 1.20.12, 1.21.5\nLink: [CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)\nThe filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "**Vulnerability CVE-2023-45283**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.20.11, 1.21.4, 1.20.12, 1.21.5|[CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)|\n\nThe filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-45287",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: Timing Side Channel attack in RSA based TLS key exchanges."
              },
              "fullDescription": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45287",
              "help": {
                "text": "Vulnerability CVE-2023-45287\nSeverity: HIGH\nPackage: stdlib\nFixed Version: 1.20.0\nLink: [CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)\nBefore Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "**Vulnerability CVE-2023-45287**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|stdlib|1.20.0|[CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)|\n\nBefore Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-14039",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-14039 affecting package golang 1.13.11-"
              },
              "fullDescription": {
                "text": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-14039",
              "help": {
                "text": "Vulnerability CVE-2020-14039\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.13.13, 1.14.5\nLink: [CVE-2020-14039](https://avd.aquasec.com/nvd/cve-2020-14039)\nIn Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
                "markdown": "**Vulnerability CVE-2020-14039**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.13.13, 1.14.5|[CVE-2020-14039](https://avd.aquasec.com/nvd/cve-2020-14039)|\n\nIn Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-15586",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: data race in certain net/http servers including ReverseProxy can lead to DoS"
              },
              "fullDescription": {
                "text": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15586",
              "help": {
                "text": "Vulnerability CVE-2020-15586\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.13.13, 1.14.5\nLink: [CVE-2020-15586](https://avd.aquasec.com/nvd/cve-2020-15586)\nGo before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
                "markdown": "**Vulnerability CVE-2020-15586**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.13.13, 1.14.5|[CVE-2020-15586](https://avd.aquasec.com/nvd/cve-2020-15586)|\n\nGo before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-24553",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: default Content-Type setting in net/http/cgi and net/http/fcgi could cause XSS"
              },
              "fullDescription": {
                "text": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-24553",
              "help": {
                "text": "Vulnerability CVE-2020-24553\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.14.8, 1.15.1\nLink: [CVE-2020-24553](https://avd.aquasec.com/nvd/cve-2020-24553)\nGo before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
                "markdown": "**Vulnerability CVE-2020-24553**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.14.8, 1.15.1|[CVE-2020-24553](https://avd.aquasec.com/nvd/cve-2020-24553)|\n\nGo before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3114",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/elliptic: incorrect operations on the P-224 curve"
              },
              "fullDescription": {
                "text": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3114",
              "help": {
                "text": "Vulnerability CVE-2021-3114\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.14.14, 1.15.7\nLink: [CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)\nIn Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
                "markdown": "**Vulnerability CVE-2021-3114**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.14.14, 1.15.7|[CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)|\n\nIn Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33197",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: ReverseProxy forwards connection headers if first one is empty"
              },
              "fullDescription": {
                "text": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33197",
              "help": {
                "text": "Vulnerability CVE-2021-33197\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)\nIn Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
                "markdown": "**Vulnerability CVE-2021-33197**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.13, 1.16.5|[CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)|\n\nIn Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-34558",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: certificate of wrong type is causing TLS client to panic"
              },
              "fullDescription": {
                "text": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-34558",
              "help": {
                "text": "Vulnerability CVE-2021-34558\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.14, 1.16.6\nLink: [CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)\nThe crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
                "markdown": "**Vulnerability CVE-2021-34558**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.14, 1.16.6|[CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)|\n\nThe crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-36221",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: panic due to racy read of persistConn after handler panic"
              },
              "fullDescription": {
                "text": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-36221",
              "help": {
                "text": "Vulnerability CVE-2021-36221\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.15.15, 1.16.7\nLink: [CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)\nGo before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
                "markdown": "**Vulnerability CVE-2021-36221**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.15.15, 1.16.7|[CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)|\n\nGo before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-44717",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: syscall: don\u0026#39;t close fd 0 on ForkExec error"
              },
              "fullDescription": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44717",
              "help": {
                "text": "Vulnerability CVE-2021-44717\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)\nGo before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "**Vulnerability CVE-2021-44717**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.16.12, 1.17.5|[CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)|\n\nGo before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1705",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: improper sanitization of Transfer-Encoding header"
              },
              "fullDescription": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1705",
              "help": {
                "text": "Vulnerability CVE-2022-1705\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)\nAcceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "**Vulnerability CVE-2022-1705**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.12, 1.18.4|[CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)|\n\nAcceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-1962",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: go/parser: stack exhaustion in all Parse* functions"
              },
              "fullDescription": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1962",
              "help": {
                "text": "Vulnerability CVE-2022-1962\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)\nUncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "**Vulnerability CVE-2022-1962**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.12, 1.18.4|[CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)|\n\nUncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-32148",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/httputil: NewSingleHostReverseProxy - omit X-Forwarded-For not working"
              },
              "fullDescription": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-32148",
              "help": {
                "text": "Vulnerability CVE-2022-32148\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)\nImproper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "**Vulnerability CVE-2022-32148**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.17.12, 1.18.4|[CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)|\n\nImproper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-24532",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/internal/nistec: specific unreduced P-256 scalars produce incorrect results"
              },
              "fullDescription": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-24532",
              "help": {
                "text": "Vulnerability CVE-2023-24532\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.19.7, 1.20.2\nLink: [CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)\nThe ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "**Vulnerability CVE-2023-24532**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.19.7, 1.20.2|[CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)|\n\nThe ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29406",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: insufficient sanitization of Host header"
              },
              "fullDescription": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29406",
              "help": {
                "text": "Vulnerability CVE-2023-29406\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.19.11, 1.20.6\nLink: [CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)\nThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "**Vulnerability CVE-2023-29406**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.19.11, 1.20.6|[CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)|\n\nThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-29409",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: slow verification of certificate chains containing large RSA keys"
              },
              "fullDescription": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u0026lt;= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-29409",
              "help": {
                "text": "Vulnerability CVE-2023-29409\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.19.12, 1.20.7, 1.21.0-rc.4\nLink: [CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)\nExtremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "**Vulnerability CVE-2023-29409**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.19.12, 1.20.7, 1.21.0-rc.4|[CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)|\n\nExtremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39318",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of HTML-like comments within script contexts"
              },
              "fullDescription": {
                "text": "The html/template package does not properly handle HTML-like \u0026#34;\u0026#34; comment tokens, nor hashbang \u0026#34;#!\u0026#34; comment tokens, in \u0026lt;script\u0026gt; contexts. This may cause the template parser to improperly interpret the contents of \u0026lt;script\u0026gt; contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39318",
              "help": {
                "text": "Vulnerability CVE-2023-39318\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)\nThe html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "**Vulnerability CVE-2023-39318**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.8, 1.21.1|[CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)|\n\nThe html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39319",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: improper handling of special tags within script contexts"
              },
              "fullDescription": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \u0026#34;\u0026lt;script\u0026#34;, \u0026#34;\u0026lt;!--\u0026#34;, and \u0026#34;\u0026lt;/script\u0026#34; within JS literals in \u0026lt;script\u0026gt; contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39319",
              "help": {
                "text": "Vulnerability CVE-2023-39319\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)\nThe html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "**Vulnerability CVE-2023-39319**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.8, 1.21.1|[CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)|\n\nThe html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-39326",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/internal: Denial of Service (DoS) via Resource Consumption via HTTP requests"
              },
              "fullDescription": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-39326",
              "help": {
                "text": "Vulnerability CVE-2023-39326\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.12, 1.21.5\nLink: [CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)\nA malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "**Vulnerability CVE-2023-39326**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.12, 1.21.5|[CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)|\n\nA malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45284",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved de ..."
              },
              "fullDescription": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \u0026#34;COM1 \u0026#34;, and reserved names \u0026#34;COM\u0026#34; and \u0026#34;LPT\u0026#34; followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45284",
              "help": {
                "text": "Vulnerability CVE-2023-45284\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.20.11, 1.21.4\nLink: [CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)\nOn Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "**Vulnerability CVE-2023-45284**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.20.11, 1.21.4|[CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)|\n\nOn Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45289",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http/cookiejar: incorrect forwarding of sensitive headers and cookies on HTTP redirect"
              },
              "fullDescription": {
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \u0026#34;Authorization\u0026#34; or \u0026#34;Cookie\u0026#34;. For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45289",
              "help": {
                "text": "Vulnerability CVE-2023-45289\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)\nWhen following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
                "markdown": "**Vulnerability CVE-2023-45289**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)|\n\nWhen following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45290",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/http: memory exhaustion in Request.ParseMultipartForm"
              },
              "fullDescription": {
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45290",
              "help": {
                "text": "Vulnerability CVE-2023-45290\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)\nWhen parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
                "markdown": "**Vulnerability CVE-2023-45290**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)|\n\nWhen parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24783",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/x509: Verify panics on certificates with an unknown public key algorithm"
              },
              "fullDescription": {
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24783",
              "help": {
                "text": "Vulnerability CVE-2024-24783\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)\nVerifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
                "markdown": "**Vulnerability CVE-2024-24783**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)|\n\nVerifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24784",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: net/mail: comments in display names are incorrectly handled"
              },
              "fullDescription": {
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24784",
              "help": {
                "text": "Vulnerability CVE-2024-24784\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)\nThe ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
                "markdown": "**Vulnerability CVE-2024-24784**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)|\n\nThe ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24785",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: html/template: errors returned from MarshalJSON methods may break template escaping"
              },
              "fullDescription": {
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24785",
              "help": {
                "text": "Vulnerability CVE-2024-24785\nSeverity: MEDIUM\nPackage: stdlib\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)\nIf errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
                "markdown": "**Vulnerability CVE-2024-24785**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|stdlib|1.21.8, 1.22.1|[CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)|\n\nIf errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-30629",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "golang: crypto/tls: session tickets lack random ticket_age_add"
              },
              "fullDescription": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-30629",
              "help": {
                "text": "Vulnerability CVE-2022-30629\nSeverity: LOW\nPackage: stdlib\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)\nNon-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "**Vulnerability CVE-2022-30629**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|stdlib|1.17.11, 1.18.3|[CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)|\n\nNon-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-24789",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The archive/zip package\u0026#39;s handling of certain types of invalid zip fil ..."
              },
              "fullDescription": {
                "text": "The archive/zip package\u0026#39;s handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24789",
              "help": {
                "text": "Vulnerability CVE-2024-24789\nSeverity: UNKNOWN\nPackage: stdlib\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)\nThe archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
                "markdown": "**Vulnerability CVE-2024-24789**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|stdlib|1.21.11, 1.22.4|[CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)|\n\nThe archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2024-24790",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as ex ..."
              },
              "fullDescription": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24790",
              "help": {
                "text": "Vulnerability CVE-2024-24790\nSeverity: UNKNOWN\nPackage: stdlib\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)\nThe various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
                "markdown": "**Vulnerability CVE-2024-24790**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|stdlib|1.21.11, 1.22.4|[CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)|\n\nThe various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2022-21235",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "github.com/Masterminds/vcs: Command Injection via argument injection"
              },
              "fullDescription": {
                "text": "The package github.com/masterminds/vcs before 1.13.3 are vulnerable to Command Injection via argument injection. When hg is executed, argument strings are passed to hg in a way that additional flags can be set. The additional flags can be used to perform a command injection."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21235",
              "help": {
                "text": "Vulnerability CVE-2022-21235\nSeverity: CRITICAL\nPackage: github.com/Masterminds/vcs\nFixed Version: 1.13.2\nLink: [CVE-2022-21235](https://avd.aquasec.com/nvd/cve-2022-21235)\nThe package github.com/masterminds/vcs before 1.13.3 are vulnerable to Command Injection via argument injection. When hg is executed, argument strings are passed to hg in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
                "markdown": "**Vulnerability CVE-2022-21235**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|github.com/Masterminds/vcs|1.13.2|[CVE-2022-21235](https://avd.aquasec.com/nvd/cve-2022-21235)|\n\nThe package github.com/masterminds/vcs before 1.13.3 are vulnerable to Command Injection via argument injection. When hg is executed, argument strings are passed to hg in a way that additional flags can be set. The additional flags can be used to perform a command injection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-32760",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd: pulling and extracting crafted container image may result in Unix file permission changes"
              },
              "fullDescription": {
                "text": "containerd is a container runtime. A bug was found in containerd versions prior to 1.4.8 and 1.5.4 where pulling and extracting a specially-crafted container image can result in Unix file permission changes for existing files in the host’s filesystem. Changes to file permissions can deny access to the expected owner of the file, widen access to others, or set extended bits like setuid, setgid, and sticky. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in containerd 1.5.4 and 1.4.8. As a workaround, ensure that users only pull images from trusted sources. Linux security modules (LSMs) like SELinux and AppArmor can limit the files potentially affected by this bug through policies and profiles that prevent containerd from interacting with specific files."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-32760",
              "help": {
                "text": "Vulnerability CVE-2021-32760\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.4.8, 1.5.4\nLink: [CVE-2021-32760](https://avd.aquasec.com/nvd/cve-2021-32760)\ncontainerd is a container runtime. A bug was found in containerd versions prior to 1.4.8 and 1.5.4 where pulling and extracting a specially-crafted container image can result in Unix file permission changes for existing files in the host’s filesystem. Changes to file permissions can deny access to the expected owner of the file, widen access to others, or set extended bits like setuid, setgid, and sticky. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in containerd 1.5.4 and 1.4.8. As a workaround, ensure that users only pull images from trusted sources. Linux security modules (LSMs) like SELinux and AppArmor can limit the files potentially affected by this bug through policies and profiles that prevent containerd from interacting with specific files.",
                "markdown": "**Vulnerability CVE-2021-32760**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.4.8, 1.5.4|[CVE-2021-32760](https://avd.aquasec.com/nvd/cve-2021-32760)|\n\ncontainerd is a container runtime. A bug was found in containerd versions prior to 1.4.8 and 1.5.4 where pulling and extracting a specially-crafted container image can result in Unix file permission changes for existing files in the host’s filesystem. Changes to file permissions can deny access to the expected owner of the file, widen access to others, or set extended bits like setuid, setgid, and sticky. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in containerd 1.5.4 and 1.4.8. As a workaround, ensure that users only pull images from trusted sources. Linux security modules (LSMs) like SELinux and AppArmor can limit the files potentially affected by this bug through policies and profiles that prevent containerd from interacting with specific files."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-41103",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "containerd: insufficiently restricted permissions on container root and plugin directories"
              },
              "fullDescription": {
                "text": "containerd is an open source container runtime with an emphasis on simplicity, robustness and portability. A bug was found in containerd where container root directories and some plugins had insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as setuid), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This vulnerability has been fixed in containerd 1.4.11 and containerd 1.5.7. Users should update to these version when they are released and may restart containers or update directory permissions to mitigate the vulnerability. Users unable to update should limit access to the host to trusted users. Update directory permission on container bundles directories."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41103",
              "help": {
                "text": "Vulnerability CVE-2021-41103\nSeverity: MEDIUM\nPackage: github.com/containerd/containerd\nFixed Version: 1.4.11, 1.5.7\nLink: [CVE-2021-41103](https://avd.aquasec.com/nvd/cve-2021-41103)\ncontainerd is an open source container runtime with an emphasis on simplicity, robustness and portability. A bug was found in containerd where container root directories and some plugins had insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as setuid), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This vulnerability has been fixed in containerd 1.4.11 and containerd 1.5.7. Users should update to these version when they are released and may restart containers or update directory permissions to mitigate the vulnerability. Users unable to update should limit access to the host to trusted users. Update directory permission on container bundles directories.",
                "markdown": "**Vulnerability CVE-2021-41103**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/containerd/containerd|1.4.11, 1.5.7|[CVE-2021-41103](https://avd.aquasec.com/nvd/cve-2021-41103)|\n\ncontainerd is an open source container runtime with an emphasis on simplicity, robustness and portability. A bug was found in containerd where container root directories and some plugins had insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as setuid), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files. This vulnerability has been fixed in containerd 1.4.11 and containerd 1.5.7. Users should update to these version when they are released and may restart containers or update directory permissions to mitigate the vulnerability. Users unable to update should limit access to the host to trusted users. Update directory permission on container bundles directories."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-5j5w-g665-5m35",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Ambiguous OCI manifest parsing"
              },
              "fullDescription": {
                "text": "### Impact\n\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of containerd prior to 1.4.12 and 1.5.8 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\n\nThis issue has been fixed in containerd 1.4.12 and 1.5.8.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\n\nEnsure you only pull images from trusted sources.\n\n### References\n\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-5j5w-g665-5m35",
              "help": {
                "text": "Vulnerability GHSA-5j5w-g665-5m35\nSeverity: LOW\nPackage: github.com/containerd/containerd\nFixed Version: 1.4.12, 1.5.8\nLink: [GHSA-5j5w-g665-5m35](https://github.com/advisories/GHSA-5j5w-g665-5m35)\n### Impact\n\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of containerd prior to 1.4.12 and 1.5.8 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\n\nThis issue has been fixed in containerd 1.4.12 and 1.5.8.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\n\nEnsure you only pull images from trusted sources.\n\n### References\n\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
                "markdown": "**Vulnerability GHSA-5j5w-g665-5m35**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/containerd/containerd|1.4.12, 1.5.8|[GHSA-5j5w-g665-5m35](https://github.com/advisories/GHSA-5j5w-g665-5m35)|\n\n### Impact\n\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of containerd prior to 1.4.12 and 1.5.8 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\n\nThis issue has been fixed in containerd 1.4.12 and 1.5.8.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\n\nEnsure you only pull images from trusted sources.\n\n### References\n\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-41092",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "docker: cli leaks private registry credentials to registry-1.docker.io"
              },
              "fullDescription": {
                "text": "Docker CLI is the command line interface for the docker container runtime. A bug was found in the Docker CLI where running `docker login my-private-registry.example.com` with a misconfigured configuration file (typically `~/.docker/config.json`) listing a `credsStore` or `credHelpers` that could not be executed would result in any provided credentials being sent to `registry-1.docker.io` rather than the intended private registry. This bug has been fixed in Docker CLI 20.10.9. Users should update to this version as soon as possible. For users unable to update ensure that any configured credsStore or credHelpers entries in the configuration file reference an installed credential helper that is executable and on the PATH."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41092",
              "help": {
                "text": "Vulnerability CVE-2021-41092\nSeverity: MEDIUM\nPackage: github.com/docker/cli\nFixed Version: 20.10.9\nLink: [CVE-2021-41092](https://avd.aquasec.com/nvd/cve-2021-41092)\nDocker CLI is the command line interface for the docker container runtime. A bug was found in the Docker CLI where running `docker login my-private-registry.example.com` with a misconfigured configuration file (typically `~/.docker/config.json`) listing a `credsStore` or `credHelpers` that could not be executed would result in any provided credentials being sent to `registry-1.docker.io` rather than the intended private registry. This bug has been fixed in Docker CLI 20.10.9. Users should update to this version as soon as possible. For users unable to update ensure that any configured credsStore or credHelpers entries in the configuration file reference an installed credential helper that is executable and on the PATH.",
                "markdown": "**Vulnerability CVE-2021-41092**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/cli|20.10.9|[CVE-2021-41092](https://avd.aquasec.com/nvd/cve-2021-41092)|\n\nDocker CLI is the command line interface for the docker container runtime. A bug was found in the Docker CLI where running `docker login my-private-registry.example.com` with a misconfigured configuration file (typically `~/.docker/config.json`) listing a `credsStore` or `credHelpers` that could not be executed would result in any provided credentials being sent to `registry-1.docker.io` rather than the intended private registry. This bug has been fixed in Docker CLI 20.10.9. Users should update to this version as soon as possible. For users unable to update ensure that any configured credsStore or credHelpers entries in the configuration file reference an installed credential helper that is executable and on the PATH."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-11468",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "docker-distribution: Does not properly restrict the amount of content accepted from a user"
              },
              "fullDescription": {
                "text": "Docker Registry before 2.6.2 in Docker Distribution does not properly restrict the amount of content accepted from a user, which allows remote attackers to cause a denial of service (memory consumption) via the manifest endpoint."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-11468",
              "help": {
                "text": "Vulnerability CVE-2017-11468\nSeverity: HIGH\nPackage: github.com/docker/distribution\nFixed Version: 2.7.0-rc.0\nLink: [CVE-2017-11468](https://avd.aquasec.com/nvd/cve-2017-11468)\nDocker Registry before 2.6.2 in Docker Distribution does not properly restrict the amount of content accepted from a user, which allows remote attackers to cause a denial of service (memory consumption) via the manifest endpoint.",
                "markdown": "**Vulnerability CVE-2017-11468**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/docker/distribution|2.7.0-rc.0|[CVE-2017-11468](https://avd.aquasec.com/nvd/cve-2017-11468)|\n\nDocker Registry before 2.6.2 in Docker Distribution does not properly restrict the amount of content accepted from a user, which allows remote attackers to cause a denial of service (memory consumption) via the manifest endpoint."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-13509",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "docker: Docker Engine in debug mode may sometimes add secrets to the debug log leading to information disclosure"
              },
              "fullDescription": {
                "text": "In Docker CE and EE before 18.09.8 (as well as Docker EE before 17.06.2-ee-23 and 18.x before 18.03.1-ee-10), Docker Engine in debug mode may sometimes add secrets to the debug log. This applies to a scenario where docker stack deploy is run to redeploy a stack that includes (non external) secrets. It potentially applies to other API users of the stack API if they resend the secret."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-13509",
              "help": {
                "text": "Vulnerability CVE-2019-13509\nSeverity: HIGH\nPackage: github.com/docker/docker\nFixed Version: 18.09.8\nLink: [CVE-2019-13509](https://avd.aquasec.com/nvd/cve-2019-13509)\nIn Docker CE and EE before 18.09.8 (as well as Docker EE before 17.06.2-ee-23 and 18.x before 18.03.1-ee-10), Docker Engine in debug mode may sometimes add secrets to the debug log. This applies to a scenario where docker stack deploy is run to redeploy a stack that includes (non external) secrets. It potentially applies to other API users of the stack API if they resend the secret.",
                "markdown": "**Vulnerability CVE-2019-13509**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/docker/docker|18.09.8|[CVE-2019-13509](https://avd.aquasec.com/nvd/cve-2019-13509)|\n\nIn Docker CE and EE before 18.09.8 (as well as Docker EE before 17.06.2-ee-23 and 18.x before 18.03.1-ee-10), Docker Engine in debug mode may sometimes add secrets to the debug log. This applies to a scenario where docker stack deploy is run to redeploy a stack that includes (non external) secrets. It potentially applies to other API users of the stack API if they resend the secret."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-28840",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: Encrypted overlay network may be unauthenticated"
              },
              "fullDescription": {
                "text": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby, is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in dockerd and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe overlay network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the u32 iptables extension provided by the xt_u32 kernel module to directly filter on a VXLAN packet\u0026#39;s VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nTwo iptables rules serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the INPUT filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container’s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\nPatches are available in Moby releases 23.0.3 and 20.10.24. As Mirantis Container Runtime\u0026#39;s 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary to prevent all VXLAN packet injection, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28840",
              "help": {
                "text": "Vulnerability CVE-2023-28840\nSeverity: HIGH\nPackage: github.com/docker/docker\nFixed Version: 20.10.24, 23.0.3\nLink: [CVE-2023-28840](https://avd.aquasec.com/nvd/cve-2023-28840)\nMoby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby, is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in dockerd and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe overlay network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the u32 iptables extension provided by the xt_u32 kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nTwo iptables rules serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the INPUT filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container’s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\nPatches are available in Moby releases 23.0.3 and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary to prevent all VXLAN packet injection, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.",
                "markdown": "**Vulnerability CVE-2023-28840**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/docker/docker|20.10.24, 23.0.3|[CVE-2023-28840](https://avd.aquasec.com/nvd/cve-2023-28840)|\n\nMoby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby, is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in dockerd and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe overlay network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the u32 iptables extension provided by the xt_u32 kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nTwo iptables rules serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the INPUT filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container’s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\nPatches are available in Moby releases 23.0.3 and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary to prevent all VXLAN packet injection, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-28841",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: Encrypted overlay network traffic may be unencrypted"
              },
              "fullDescription": {
                "text": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet\u0026#39;s VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn iptables rule designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may use Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability this is no longer guaranteed.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime\u0026#39;s 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary in order to prevent unintentionally leaking unencrypted traffic over the Internet, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28841",
              "help": {
                "text": "Vulnerability CVE-2023-28841\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 20.10.24, 23.0.3\nLink: [CVE-2023-28841](https://avd.aquasec.com/nvd/cve-2023-28841)\nMoby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn iptables rule designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may use Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability this is no longer guaranteed.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary in order to prevent unintentionally leaking unencrypted traffic over the Internet, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.",
                "markdown": "**Vulnerability CVE-2023-28841**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|20.10.24, 23.0.3|[CVE-2023-28841](https://avd.aquasec.com/nvd/cve-2023-28841)|\n\nMoby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn iptables rule designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may use Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability this is no longer guaranteed.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary in order to prevent unintentionally leaking unencrypted traffic over the Internet, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-28842",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: Encrypted overlay network with a single endpoint is unauthenticated"
              },
              "fullDescription": {
                "text": "Moby) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet\u0026#39;s VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and GHSA-vwm3-crmr-xfxw should be referenced for a deeper exploration.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime\u0026#39;s 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. In multi-node clusters, deploy a global ‘pause’ container for each encrypted overlay network, on every node. For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features. The Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network. If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28842",
              "help": {
                "text": "Vulnerability CVE-2023-28842\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 20.10.24, 23.0.3\nLink: [CVE-2023-28842](https://avd.aquasec.com/nvd/cve-2023-28842)\nMoby) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and GHSA-vwm3-crmr-xfxw should be referenced for a deeper exploration.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. In multi-node clusters, deploy a global ‘pause’ container for each encrypted overlay network, on every node. For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features. The Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network. If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec.",
                "markdown": "**Vulnerability CVE-2023-28842**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|20.10.24, 23.0.3|[CVE-2023-28842](https://avd.aquasec.com/nvd/cve-2023-28842)|\n\nMoby) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and GHSA-vwm3-crmr-xfxw should be referenced for a deeper exploration.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. In multi-node clusters, deploy a global ‘pause’ container for each encrypted overlay network, on every node. For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features. The Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network. If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24557",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: classic builder cache poisoning"
              },
              "fullDescription": {
                "text": "Moby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24557",
              "help": {
                "text": "Vulnerability CVE-2024-24557\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 25.0.2, 24.0.9\nLink: [CVE-2024-24557](https://avd.aquasec.com/nvd/cve-2024-24557)\nMoby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases.",
                "markdown": "**Vulnerability CVE-2024-24557**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|25.0.2, 24.0.9|[CVE-2024-24557](https://avd.aquasec.com/nvd/cve-2024-24557)|\n\nMoby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29018",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: external DNS requests from \u0026#39;internal\u0026#39; networks could lead to data exfiltration"
              },
              "fullDescription": {
                "text": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby\u0026#39;s networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel\u0026#39;s various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container\u0026#39;s network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host\u0026#39;s configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace\u0026#39;s normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container\u0026#39;s network namespace."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29018",
              "help": {
                "text": "Vulnerability CVE-2024-29018\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 26.0.0-rc3, 25.0.5, 23.0.11\nLink: [CVE-2024-29018](https://avd.aquasec.com/nvd/cve-2024-29018)\nMoby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby's networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container's network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container's network namespace.",
                "markdown": "**Vulnerability CVE-2024-29018**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|26.0.0-rc3, 25.0.5, 23.0.11|[CVE-2024-29018](https://avd.aquasec.com/nvd/cve-2024-29018)|\n\nMoby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby's networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container's network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container's network namespace."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-jq35-85cj-fj4p",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "/sys/devices/virtual/powercap accessible by default to containers"
              },
              "fullDescription": {
                "text": "Intel\u0026#39;s RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-jq35-85cj-fj4p",
              "help": {
                "text": "Vulnerability GHSA-jq35-85cj-fj4p\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 24.0.7, 23.0.8, 20.10.27\nLink: [GHSA-jq35-85cj-fj4p](https://github.com/advisories/GHSA-jq35-85cj-fj4p)\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
                "markdown": "**Vulnerability GHSA-jq35-85cj-fj4p**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|24.0.7, 23.0.8, 20.10.27|[GHSA-jq35-85cj-fj4p](https://github.com/advisories/GHSA-jq35-85cj-fj4p)|\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-xmmx-7jpf-fx42",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Moby (Docker Engine) is vulnerable to Ambiguous OCI manifest parsing"
              },
              "fullDescription": {
                "text": "### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of Moby (Docker Engine) prior to 20.10.11 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\nThis issue has been fixed in Moby (Docker Engine) 20.10.11.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\nEnsure you only pull images from trusted sources.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-xmmx-7jpf-fx42",
              "help": {
                "text": "Vulnerability GHSA-xmmx-7jpf-fx42\nSeverity: MEDIUM\nPackage: github.com/docker/docker\nFixed Version: 20.10.11\nLink: [GHSA-xmmx-7jpf-fx42](https://github.com/advisories/GHSA-xmmx-7jpf-fx42)\n### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of Moby (Docker Engine) prior to 20.10.11 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\nThis issue has been fixed in Moby (Docker Engine) 20.10.11.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\nEnsure you only pull images from trusted sources.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n",
                "markdown": "**Vulnerability GHSA-xmmx-7jpf-fx42**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/docker/docker|20.10.11|[GHSA-xmmx-7jpf-fx42](https://github.com/advisories/GHSA-xmmx-7jpf-fx42)|\n\n### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of Moby (Docker Engine) prior to 20.10.11 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\nThis issue has been fixed in Moby (Docker Engine) 20.10.11.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\nEnsure you only pull images from trusted sources.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-41089",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "moby: `docker cp` allows unexpected chmod of host file"
              },
              "fullDescription": {
                "text": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where attempting to copy files using `docker cp` into a specially-crafted container can result in Unix file permission changes for existing files in the host’s filesystem, widening access to others. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers do not need to be restarted."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41089",
              "help": {
                "text": "Vulnerability CVE-2021-41089\nSeverity: LOW\nPackage: github.com/docker/docker\nFixed Version: 20.10.9\nLink: [CVE-2021-41089](https://avd.aquasec.com/nvd/cve-2021-41089)\nMoby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where attempting to copy files using `docker cp` into a specially-crafted container can result in Unix file permission changes for existing files in the host’s filesystem, widening access to others. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers do not need to be restarted.",
                "markdown": "**Vulnerability CVE-2021-41089**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/docker/docker|20.10.9|[CVE-2021-41089](https://avd.aquasec.com/nvd/cve-2021-41089)|\n\nMoby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where attempting to copy files using `docker cp` into a specially-crafted container can result in Unix file permission changes for existing files in the host’s filesystem, widening access to others. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers do not need to be restarted."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "GHSA-77vh-xpmg-72qh",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Clarify `mediaType` handling"
              },
              "fullDescription": {
                "text": "### Impact\nIn the OCI Image Specification version 1.0.1 and prior, manifest and index documents are not self-describing and documents with a single digest could be interpreted as either a manifest or an index.\n\n### Patches\nThe Image Specification will be updated to recommend that both manifest and index documents contain a `mediaType` field to identify the type of document.\nRelease [v1.0.2](https://github.com/opencontainers/image-spec/releases/tag/v1.0.2) includes these updates.\n\n### Workarounds\nSoftware attempting to deserialize an ambiguous document may reject the document if it contains both “manifests” and “layers” fields or “manifests” and “config” fields.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/opencontainers/image-spec\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org)\n* https://github.com/opencontainers/image-spec/commits/v1.0.2\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-77vh-xpmg-72qh",
              "help": {
                "text": "Vulnerability GHSA-77vh-xpmg-72qh\nSeverity: LOW\nPackage: github.com/opencontainers/image-spec\nFixed Version: 1.0.2\nLink: [GHSA-77vh-xpmg-72qh](https://github.com/advisories/GHSA-77vh-xpmg-72qh)\n### Impact\nIn the OCI Image Specification version 1.0.1 and prior, manifest and index documents are not self-describing and documents with a single digest could be interpreted as either a manifest or an index.\n\n### Patches\nThe Image Specification will be updated to recommend that both manifest and index documents contain a `mediaType` field to identify the type of document.\nRelease [v1.0.2](https://github.com/opencontainers/image-spec/releases/tag/v1.0.2) includes these updates.\n\n### Workarounds\nSoftware attempting to deserialize an ambiguous document may reject the document if it contains both “manifests” and “layers” fields or “manifests” and “config” fields.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/opencontainers/image-spec\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org)\n* https://github.com/opencontainers/image-spec/commits/v1.0.2\n",
                "markdown": "**Vulnerability GHSA-77vh-xpmg-72qh**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/opencontainers/image-spec|1.0.2|[GHSA-77vh-xpmg-72qh](https://github.com/advisories/GHSA-77vh-xpmg-72qh)|\n\n### Impact\nIn the OCI Image Specification version 1.0.1 and prior, manifest and index documents are not self-describing and documents with a single digest could be interpreted as either a manifest or an index.\n\n### Patches\nThe Image Specification will be updated to recommend that both manifest and index documents contain a `mediaType` field to identify the type of document.\nRelease [v1.0.2](https://github.com/opencontainers/image-spec/releases/tag/v1.0.2) includes these updates.\n\n### Workarounds\nSoftware attempting to deserialize an ambiguous document may reject the document if it contains both “manifests” and “layers” fields or “manifests” and “config” fields.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/opencontainers/image-spec\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org)\n* https://github.com/opencontainers/image-spec/commits/v1.0.2\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2019-16884",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: AppArmor/SELinux bypass with malicious image that specifies a volume at /proc"
              },
              "fullDescription": {
                "text": "runc through 1.0.0-rc8, as used in Docker through 19.03.2-ce and other products, allows AppArmor restriction bypass because libcontainer/rootfs_linux.go incorrectly checks mount targets, and thus a malicious Docker image can mount over a /proc directory."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-16884",
              "help": {
                "text": "Vulnerability CVE-2019-16884\nSeverity: HIGH\nPackage: github.com/opencontainers/runc\nFixed Version: 1.0.0-rc8.0.20190930145003-cad42f6e0932\nLink: [CVE-2019-16884](https://avd.aquasec.com/nvd/cve-2019-16884)\nrunc through 1.0.0-rc8, as used in Docker through 19.03.2-ce and other products, allows AppArmor restriction bypass because libcontainer/rootfs_linux.go incorrectly checks mount targets, and thus a malicious Docker image can mount over a /proc directory.",
                "markdown": "**Vulnerability CVE-2019-16884**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/opencontainers/runc|1.0.0-rc8.0.20190930145003-cad42f6e0932|[CVE-2019-16884](https://avd.aquasec.com/nvd/cve-2019-16884)|\n\nrunc through 1.0.0-rc8, as used in Docker through 19.03.2-ce and other products, allows AppArmor restriction bypass because libcontainer/rootfs_linux.go incorrectly checks mount targets, and thus a malicious Docker image can mount over a /proc directory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-30465",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: vulnerable to symlink exchange attack"
              },
              "fullDescription": {
                "text": "runc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-30465",
              "help": {
                "text": "Vulnerability CVE-2021-30465\nSeverity: HIGH\nPackage: github.com/opencontainers/runc\nFixed Version: 1.0.0-rc95\nLink: [CVE-2021-30465](https://avd.aquasec.com/nvd/cve-2021-30465)\nrunc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition.",
                "markdown": "**Vulnerability CVE-2021-30465**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|github.com/opencontainers/runc|1.0.0-rc95|[CVE-2021-30465](https://avd.aquasec.com/nvd/cve-2021-30465)|\n\nrunc before 1.0.0-rc95 allows a Container Filesystem Breakout via Directory Traversal. To exploit the vulnerability, an attacker must be able to create multiple containers with a fairly specific mount configuration. The problem occurs via a symlink-exchange attack that relies on a race condition."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2016-9962",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "docker: insecure opening of file-descriptor allows privilege escalation"
              },
              "fullDescription": {
                "text": "RunC allowed additional container processes via \u0026#39;runc exec\u0026#39; to be ptraced by the pid 1 of the container.  This allows the main processes of the container, if running as root, to gain access to file-descriptors of these new processes during the initialization and can lead to container escapes or modification of runC state before the process is fully placed inside the container."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-9962",
              "help": {
                "text": "Vulnerability CVE-2016-9962\nSeverity: MEDIUM\nPackage: github.com/opencontainers/runc\nFixed Version: 1.0.0-rc3\nLink: [CVE-2016-9962](https://avd.aquasec.com/nvd/cve-2016-9962)\nRunC allowed additional container processes via 'runc exec' to be ptraced by the pid 1 of the container.  This allows the main processes of the container, if running as root, to gain access to file-descriptors of these new processes during the initialization and can lead to container escapes or modification of runC state before the process is fully placed inside the container.",
                "markdown": "**Vulnerability CVE-2016-9962**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/opencontainers/runc|1.0.0-rc3|[CVE-2016-9962](https://avd.aquasec.com/nvd/cve-2016-9962)|\n\nRunC allowed additional container processes via 'runc exec' to be ptraced by the pid 1 of the container.  This allows the main processes of the container, if running as root, to gain access to file-descriptors of these new processes during the initialization and can lead to container escapes or modification of runC state before the process is fully placed inside the container."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-19921",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "runc: volume mount race condition with shared mounts leads to information leak/integrity manipulation"
              },
              "fullDescription": {
                "text": "runc through 1.0.0-rc9 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. (This vulnerability does not affect Docker due to an implementation detail that happens to block the attack.)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-19921",
              "help": {
                "text": "Vulnerability CVE-2019-19921\nSeverity: MEDIUM\nPackage: github.com/opencontainers/runc\nFixed Version: 1.0.0-rc9.0.20200122160610-2fc03cc11c77\nLink: [CVE-2019-19921](https://avd.aquasec.com/nvd/cve-2019-19921)\nrunc through 1.0.0-rc9 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. (This vulnerability does not affect Docker due to an implementation detail that happens to block the attack.)",
                "markdown": "**Vulnerability CVE-2019-19921**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|github.com/opencontainers/runc|1.0.0-rc9.0.20200122160610-2fc03cc11c77|[CVE-2019-19921](https://avd.aquasec.com/nvd/cve-2019-19921)|\n\nrunc through 1.0.0-rc9 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. (This vulnerability does not affect Docker due to an implementation detail that happens to block the attack.)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-g54h-m393-cpwq",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "devices resource list treated as a blacklist by default"
              },
              "fullDescription": {
                "text": "### Impact\nContrary to the [OCI runtime specification](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist), `runc`\u0026#39;s implementation of the `linux.resources.devices` list was a black-list by default. This means that users who created their own `config.json` objects and didn\u0026#39;t prefix a deny-all rule (`{\u0026#34;allow\u0026#34;: false, \u0026#34;permissions\u0026#34;: \u0026#34;rwm\u0026#34;}` or equivalent) were not provided protection by the `devices` cgroup. This would allow malicious containers (with sufficient privileges) to create arbitrary device inodes (assuming they have `CAP_MKNOD`) and operate on any device inodes they may have access to (assuming they have regular Unix DAC permissions).\n\nHowever, most (if not all) programs that make use of `runc` include this deny-all rule. This was most likely added before the specification mandated a white-list of devices, and the fact that all programs wrote their own deny-all rule obscured the existence of this bug for several years. In fact, even the specification\u0026#39;s examples include a default deny-all rule! We therefore believe that while this is a security bug (and has been fixed as such), it was almost certainly not exploitable in the wild due to the inclusion of default deny-all rules by all known users of `runc` -- hence why this advisory has low severity.\n\n### Patches\nThis issue has been fixed in [a patch that was part of a larger rework of the devices cgroup code in runc](https://github.com/opencontainers/runc/pull/2391) -- which lead to the discovery of this security bug. Users should upgrade to 1.0.0-rc91 as soon as it is released, or wait for your distribution to backport the relevant fixes.\n\n### Workarounds\nIf you are using `runc` directly, ensure that there is a deny-all entry at the beginning of `linux.resources.devices` -- such an entry would look like `{\u0026#34;allow\u0026#34;: false, \u0026#34;permissions\u0026#34;: \u0026#34;rwm\u0026#34;}` (all other fields are ignored, though `type` must be set to `\u0026#34;a\u0026#34;` or `null` if it is present).\n\nUsers which consume `runc` through another program should check whether their containers are operating under a white-list -- this can be done by reading `/sys/fs/cgroup/devices/devices.list` inside the container. If the file contains only the entry `a *:* rwm` (meaning the cgroup is in black-list mode, which likely means \u0026#34;allow all device access\u0026#34;) then your containers are vulnerable to this issue.\n\nAs always, we recommend **in the strongest possible terms** that all of our users enable user namespaces on all of their workloads (or pressure their vendors to do so). User namespaces are one of the most significant defense-in-depth protections you can enable for containers, and have prevented many container-related vulnerabilities (both kernel 0days as well as bugs in container runtimes, such as this one).\n\n### References\n* https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/devices.html\n* [opencontainers/runtime-spec/config-linux.md#device-whitelist](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist)\n* https://github.com/opencontainers/runc/pull/2391\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in this repo](https://github.com/opencontainers/runc/issues/new).\n* Email us at \u0026lt;security@opencontainers.org\u0026gt;."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-g54h-m393-cpwq",
              "help": {
                "text": "Vulnerability GHSA-g54h-m393-cpwq\nSeverity: LOW\nPackage: github.com/opencontainers/runc\nFixed Version: 1.0.0-rc91\nLink: [GHSA-g54h-m393-cpwq](https://github.com/advisories/GHSA-g54h-m393-cpwq)\n### Impact\nContrary to the [OCI runtime specification](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist), `runc`'s implementation of the `linux.resources.devices` list was a black-list by default. This means that users who created their own `config.json` objects and didn't prefix a deny-all rule (`{\"allow\": false, \"permissions\": \"rwm\"}` or equivalent) were not provided protection by the `devices` cgroup. This would allow malicious containers (with sufficient privileges) to create arbitrary device inodes (assuming they have `CAP_MKNOD`) and operate on any device inodes they may have access to (assuming they have regular Unix DAC permissions).\n\nHowever, most (if not all) programs that make use of `runc` include this deny-all rule. This was most likely added before the specification mandated a white-list of devices, and the fact that all programs wrote their own deny-all rule obscured the existence of this bug for several years. In fact, even the specification's examples include a default deny-all rule! We therefore believe that while this is a security bug (and has been fixed as such), it was almost certainly not exploitable in the wild due to the inclusion of default deny-all rules by all known users of `runc` -- hence why this advisory has low severity.\n\n### Patches\nThis issue has been fixed in [a patch that was part of a larger rework of the devices cgroup code in runc](https://github.com/opencontainers/runc/pull/2391) -- which lead to the discovery of this security bug. Users should upgrade to 1.0.0-rc91 as soon as it is released, or wait for your distribution to backport the relevant fixes.\n\n### Workarounds\nIf you are using `runc` directly, ensure that there is a deny-all entry at the beginning of `linux.resources.devices` -- such an entry would look like `{\"allow\": false, \"permissions\": \"rwm\"}` (all other fields are ignored, though `type` must be set to `\"a\"` or `null` if it is present).\n\nUsers which consume `runc` through another program should check whether their containers are operating under a white-list -- this can be done by reading `/sys/fs/cgroup/devices/devices.list` inside the container. If the file contains only the entry `a *:* rwm` (meaning the cgroup is in black-list mode, which likely means \"allow all device access\") then your containers are vulnerable to this issue.\n\nAs always, we recommend **in the strongest possible terms** that all of our users enable user namespaces on all of their workloads (or pressure their vendors to do so). User namespaces are one of the most significant defense-in-depth protections you can enable for containers, and have prevented many container-related vulnerabilities (both kernel 0days as well as bugs in container runtimes, such as this one).\n\n### References\n* https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/devices.html\n* [opencontainers/runtime-spec/config-linux.md#device-whitelist](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist)\n* https://github.com/opencontainers/runc/pull/2391\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in this repo](https://github.com/opencontainers/runc/issues/new).\n* Email us at \u003csecurity@opencontainers.org\u003e.",
                "markdown": "**Vulnerability GHSA-g54h-m393-cpwq**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|github.com/opencontainers/runc|1.0.0-rc91|[GHSA-g54h-m393-cpwq](https://github.com/advisories/GHSA-g54h-m393-cpwq)|\n\n### Impact\nContrary to the [OCI runtime specification](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist), `runc`'s implementation of the `linux.resources.devices` list was a black-list by default. This means that users who created their own `config.json` objects and didn't prefix a deny-all rule (`{\"allow\": false, \"permissions\": \"rwm\"}` or equivalent) were not provided protection by the `devices` cgroup. This would allow malicious containers (with sufficient privileges) to create arbitrary device inodes (assuming they have `CAP_MKNOD`) and operate on any device inodes they may have access to (assuming they have regular Unix DAC permissions).\n\nHowever, most (if not all) programs that make use of `runc` include this deny-all rule. This was most likely added before the specification mandated a white-list of devices, and the fact that all programs wrote their own deny-all rule obscured the existence of this bug for several years. In fact, even the specification's examples include a default deny-all rule! We therefore believe that while this is a security bug (and has been fixed as such), it was almost certainly not exploitable in the wild due to the inclusion of default deny-all rules by all known users of `runc` -- hence why this advisory has low severity.\n\n### Patches\nThis issue has been fixed in [a patch that was part of a larger rework of the devices cgroup code in runc](https://github.com/opencontainers/runc/pull/2391) -- which lead to the discovery of this security bug. Users should upgrade to 1.0.0-rc91 as soon as it is released, or wait for your distribution to backport the relevant fixes.\n\n### Workarounds\nIf you are using `runc` directly, ensure that there is a deny-all entry at the beginning of `linux.resources.devices` -- such an entry would look like `{\"allow\": false, \"permissions\": \"rwm\"}` (all other fields are ignored, though `type` must be set to `\"a\"` or `null` if it is present).\n\nUsers which consume `runc` through another program should check whether their containers are operating under a white-list -- this can be done by reading `/sys/fs/cgroup/devices/devices.list` inside the container. If the file contains only the entry `a *:* rwm` (meaning the cgroup is in black-list mode, which likely means \"allow all device access\") then your containers are vulnerable to this issue.\n\nAs always, we recommend **in the strongest possible terms** that all of our users enable user namespaces on all of their workloads (or pressure their vendors to do so). User namespaces are one of the most significant defense-in-depth protections you can enable for containers, and have prevented many container-related vulnerabilities (both kernel 0days as well as bugs in container runtimes, such as this one).\n\n### References\n* https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v1/devices.html\n* [opencontainers/runtime-spec/config-linux.md#device-whitelist](https://github.com/opencontainers/runtime-spec/blob/v1.0.2/config-linux.md#device-whitelist)\n* https://github.com/opencontainers/runc/pull/2391\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue in this repo](https://github.com/opencontainers/runc/issues/new).\n* Email us at \u003csecurity@opencontainers.org\u003e."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            }
          ],
          "version": "0.52.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-28391",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.32.1-r7\nVulnerability CVE-2022-28391\nSeverity: HIGH\nFixed Version: 1.32.1-r8\nLink: [CVE-2022-28391](https://avd.aquasec.com/nvd/cve-2022-28391)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: busybox@1.32.1-r7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.32.1-r7\nVulnerability CVE-2022-30065\nSeverity: HIGH\nFixed Version: 1.32.1-r9\nLink: [CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: busybox@1.32.1-r7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32207\nSeverity: CRITICAL\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32207](https://avd.aquasec.com/nvd/cve-2022-32207)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-22576\nSeverity: HIGH\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-22576](https://avd.aquasec.com/nvd/cve-2022-22576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27775\nSeverity: HIGH\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27775](https://avd.aquasec.com/nvd/cve-2022-27775)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27781\nSeverity: HIGH\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-27781](https://avd.aquasec.com/nvd/cve-2022-27781)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27782\nSeverity: HIGH\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-27782](https://avd.aquasec.com/nvd/cve-2022-27782)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27774\nSeverity: MEDIUM\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27774](https://avd.aquasec.com/nvd/cve-2022-27774)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27776\nSeverity: MEDIUM\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27776](https://avd.aquasec.com/nvd/cve-2022-27776)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32205\nSeverity: MEDIUM\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32205](https://avd.aquasec.com/nvd/cve-2022-32205)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32206\nSeverity: MEDIUM\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32206](https://avd.aquasec.com/nvd/cve-2022-32206)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32208\nSeverity: MEDIUM\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32208](https://avd.aquasec.com/nvd/cve-2022-32208)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-35252\nSeverity: LOW\nFixed Version: 7.79.1-r3\nLink: [CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: curl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22822",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-22822\nSeverity: CRITICAL\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22822](https://avd.aquasec.com/nvd/cve-2022-22822)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22823",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-22823\nSeverity: CRITICAL\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22823](https://avd.aquasec.com/nvd/cve-2022-22823)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22824",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-22824\nSeverity: CRITICAL\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22824](https://avd.aquasec.com/nvd/cve-2022-22824)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23852",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-23852\nSeverity: CRITICAL\nFixed Version: 2.2.10-r3\nLink: [CVE-2022-23852](https://avd.aquasec.com/nvd/cve-2022-23852)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25235",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-25235\nSeverity: CRITICAL\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25235](https://avd.aquasec.com/nvd/cve-2022-25235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25236",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-25236\nSeverity: CRITICAL\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25236](https://avd.aquasec.com/nvd/cve-2022-25236)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25315",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-25315\nSeverity: CRITICAL\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25315](https://avd.aquasec.com/nvd/cve-2022-25315)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45960",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2021-45960\nSeverity: HIGH\nFixed Version: 2.2.10-r2\nLink: [CVE-2021-45960](https://avd.aquasec.com/nvd/cve-2021-45960)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-46143",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2021-46143\nSeverity: HIGH\nFixed Version: 2.2.10-r2\nLink: [CVE-2021-46143](https://avd.aquasec.com/nvd/cve-2021-46143)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22825",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-22825\nSeverity: HIGH\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22825](https://avd.aquasec.com/nvd/cve-2022-22825)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22826",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-22826\nSeverity: HIGH\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22826](https://avd.aquasec.com/nvd/cve-2022-22826)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22827",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-22827\nSeverity: HIGH\nFixed Version: 2.2.10-r2\nLink: [CVE-2022-22827](https://avd.aquasec.com/nvd/cve-2022-22827)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23990",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-23990\nSeverity: HIGH\nFixed Version: 2.2.10-r3\nLink: [CVE-2022-23990](https://avd.aquasec.com/nvd/cve-2022-23990)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25314",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-25314\nSeverity: HIGH\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25314](https://avd.aquasec.com/nvd/cve-2022-25314)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40674",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-40674\nSeverity: HIGH\nFixed Version: 2.2.10-r7\nLink: [CVE-2022-40674](https://avd.aquasec.com/nvd/cve-2022-40674)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43680",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-43680\nSeverity: HIGH\nFixed Version: 2.2.10-r8\nLink: [CVE-2022-43680](https://avd.aquasec.com/nvd/cve-2022-43680)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25313",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "Package: expat\nInstalled Version: 2.2.10-r1\nVulnerability CVE-2022-25313\nSeverity: MEDIUM\nFixed Version: 2.2.10-r4\nLink: [CVE-2022-25313](https://avd.aquasec.com/nvd/cve-2022-25313)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: expat@2.2.10-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24765",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Package: git\nInstalled Version: 2.30.2-r0\nVulnerability CVE-2022-24765\nSeverity: HIGH\nFixed Version: 2.30.3-r0\nLink: [CVE-2022-24765](https://avd.aquasec.com/nvd/cve-2022-24765)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: git@2.30.2-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29187",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Package: git\nInstalled Version: 2.30.2-r0\nVulnerability CVE-2022-29187\nSeverity: HIGH\nFixed Version: 2.30.5-r0\nLink: [CVE-2022-29187](https://avd.aquasec.com/nvd/cve-2022-29187)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: git@2.30.2-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-39260",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Package: git\nInstalled Version: 2.30.2-r0\nVulnerability CVE-2022-39260\nSeverity: HIGH\nFixed Version: 2.30.6-r0\nLink: [CVE-2022-39260](https://avd.aquasec.com/nvd/cve-2022-39260)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: git@2.30.2-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-39253",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "Package: git\nInstalled Version: 2.30.2-r0\nVulnerability CVE-2022-39253\nSeverity: MEDIUM\nFixed Version: 2.30.6-r0\nLink: [CVE-2022-39253](https://avd.aquasec.com/nvd/cve-2022-39253)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: git@2.30.2-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1l-r0\nVulnerability CVE-2022-0778\nSeverity: HIGH\nFixed Version: 1.1.1n-r0\nLink: [CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcrypto1.1@1.1.1l-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1l-r0\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcrypto1.1@1.1.1l-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32207",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32207\nSeverity: CRITICAL\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32207](https://avd.aquasec.com/nvd/cve-2022-32207)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22576",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-22576\nSeverity: HIGH\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-22576](https://avd.aquasec.com/nvd/cve-2022-22576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27775",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27775\nSeverity: HIGH\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27775](https://avd.aquasec.com/nvd/cve-2022-27775)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27781",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27781\nSeverity: HIGH\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-27781](https://avd.aquasec.com/nvd/cve-2022-27781)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27782",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27782\nSeverity: HIGH\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-27782](https://avd.aquasec.com/nvd/cve-2022-27782)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27774",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27774\nSeverity: MEDIUM\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27774](https://avd.aquasec.com/nvd/cve-2022-27774)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27776",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-27776\nSeverity: MEDIUM\nFixed Version: 7.79.1-r1\nLink: [CVE-2022-27776](https://avd.aquasec.com/nvd/cve-2022-27776)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32205",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32205\nSeverity: MEDIUM\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32205](https://avd.aquasec.com/nvd/cve-2022-32205)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32206",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32206\nSeverity: MEDIUM\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32206](https://avd.aquasec.com/nvd/cve-2022-32206)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32208",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-32208\nSeverity: MEDIUM\nFixed Version: 7.79.1-r2\nLink: [CVE-2022-32208](https://avd.aquasec.com/nvd/cve-2022-32208)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-35252",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.79.1-r0\nVulnerability CVE-2022-35252\nSeverity: LOW\nFixed Version: 7.79.1-r3\nLink: [CVE-2022-35252](https://avd.aquasec.com/nvd/cve-2022-35252)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libcurl@7.79.1-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0778",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1l-r0\nVulnerability CVE-2022-0778\nSeverity: HIGH\nFixed Version: 1.1.1n-r0\nLink: [CVE-2022-0778](https://avd.aquasec.com/nvd/cve-2022-0778)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libssl1.1@1.1.1l-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1l-r0\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://avd.aquasec.com/nvd/cve-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: libssl1.1@1.1.1l-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: ncurses-libs\nInstalled Version: 6.2_p20210109-r0\nVulnerability CVE-2022-29458\nSeverity: HIGH\nFixed Version: 6.2_p20210109-r1\nLink: [CVE-2022-29458](https://avd.aquasec.com/nvd/cve-2022-29458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: ncurses-libs@6.2_p20210109-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29458",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: ncurses-terminfo-base\nInstalled Version: 6.2_p20210109-r0\nVulnerability CVE-2022-29458\nSeverity: HIGH\nFixed Version: 6.2_p20210109-r1\nLink: [CVE-2022-29458](https://avd.aquasec.com/nvd/cve-2022-29458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: ncurses-terminfo-base@6.2_p20210109-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1586",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: pcre2\nInstalled Version: 10.36-r0\nVulnerability CVE-2022-1586\nSeverity: CRITICAL\nFixed Version: 10.36-r1\nLink: [CVE-2022-1586](https://avd.aquasec.com/nvd/cve-2022-1586)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: pcre2@10.36-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1587",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "Package: pcre2\nInstalled Version: 10.36-r0\nVulnerability CVE-2022-1587\nSeverity: CRITICAL\nFixed Version: 10.36-r1\nLink: [CVE-2022-1587](https://avd.aquasec.com/nvd/cve-2022-1587)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: pcre2@10.36-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28391",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.32.1-r7\nVulnerability CVE-2022-28391\nSeverity: HIGH\nFixed Version: 1.32.1-r8\nLink: [CVE-2022-28391](https://avd.aquasec.com/nvd/cve-2022-28391)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: ssl_client@1.32.1-r7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30065",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.32.1-r7\nVulnerability CVE-2022-30065\nSeverity: HIGH\nFixed Version: 1.32.1-r9\nLink: [CVE-2022-30065](https://avd.aquasec.com/nvd/cve-2022-30065)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: ssl_client@1.32.1-r7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "Package: zlib\nInstalled Version: 1.2.11-r3\nVulnerability CVE-2022-37434\nSeverity: CRITICAL\nFixed Version: 1.2.12-r2\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: zlib@1.2.11-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25032",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Package: zlib\nInstalled Version: 1.2.11-r3\nVulnerability CVE-2018-25032\nSeverity: HIGH\nFixed Version: 1.2.12-r0\nLink: [CVE-2018-25032](https://avd.aquasec.com/nvd/cve-2018-25032)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluxcd/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "fluxcd/helm-operator: zlib@1.2.11-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23648",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability CVE-2022-23648\nSeverity: HIGH\nFixed Version: 1.4.13, 1.5.10, 1.6.1\nLink: [CVE-2022-23648](https://avd.aquasec.com/nvd/cve-2022-23648)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23471",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability CVE-2022-23471\nSeverity: MEDIUM\nFixed Version: 1.5.16, 1.6.12\nLink: [CVE-2022-23471](https://avd.aquasec.com/nvd/cve-2022-23471)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31030",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability CVE-2022-31030\nSeverity: MEDIUM\nFixed Version: 1.5.13, 1.6.6\nLink: [CVE-2022-31030](https://avd.aquasec.com/nvd/cve-2022-31030)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25153",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability CVE-2023-25153\nSeverity: MEDIUM\nFixed Version: 1.5.18, 1.6.18\nLink: [CVE-2023-25153](https://avd.aquasec.com/nvd/cve-2023-25153)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25173",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability CVE-2023-25173\nSeverity: MEDIUM\nFixed Version: 1.5.18, 1.6.18\nLink: [CVE-2023-25173](https://avd.aquasec.com/nvd/cve-2023-25173)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-7ww5-4wqc-m92c",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability GHSA-7ww5-4wqc-m92c\nSeverity: MEDIUM\nFixed Version: 1.6.26, 1.7.11\nLink: [GHSA-7ww5-4wqc-m92c](https://github.com/advisories/GHSA-7ww5-4wqc-m92c)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-c9cp-9c75-9v8c",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.12\nVulnerability GHSA-c9cp-9c75-9v8c\nSeverity: LOW\nFixed Version: 1.5.11, 1.6.2\nLink: [GHSA-c9cp-9c75-9v8c](https://github.com/advisories/GHSA-c9cp-9c75-9v8c)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/containerd/containerd@v1.4.12"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-6xv5-86q9-7xr8",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "Package: github.com/cyphar/filepath-securejoin\nInstalled Version: v0.2.2\nVulnerability GHSA-6xv5-86q9-7xr8\nSeverity: MEDIUM\nFixed Version: 0.2.4\nLink: [GHSA-6xv5-86q9-7xr8](https://github.com/advisories/GHSA-6xv5-86q9-7xr8)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/cyphar/filepath-securejoin@v0.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2253",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "Package: github.com/docker/distribution\nInstalled Version: v2.7.0-rc.0+incompatible\nVulnerability CVE-2023-2253\nSeverity: HIGH\nFixed Version: 2.8.2-beta.1\nLink: [CVE-2023-2253](https://avd.aquasec.com/nvd/cve-2023-2253)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/docker/distribution@v2.7.0-rc.0+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-qq97-vm5h-rrhg",
          "ruleIndex": 50,
          "level": "note",
          "message": {
            "text": "Package: github.com/docker/distribution\nInstalled Version: v2.7.0-rc.0+incompatible\nVulnerability GHSA-qq97-vm5h-rrhg\nSeverity: LOW\nFixed Version: 2.8.0\nLink: [GHSA-qq97-vm5h-rrhg](https://github.com/advisories/GHSA-qq97-vm5h-rrhg)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/docker/distribution@v2.7.0-rc.0+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27534",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2020-27534\nSeverity: MEDIUM\nFixed Version: 19.03.9\nLink: [CVE-2020-27534](https://avd.aquasec.com/nvd/cve-2020-27534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21284",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2021-21284\nSeverity: MEDIUM\nFixed Version: 19.3.15, 20.10.3\nLink: [CVE-2021-21284](https://avd.aquasec.com/nvd/cve-2021-21284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21285",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2021-21285\nSeverity: MEDIUM\nFixed Version: 19.3.15, 20.10.3\nLink: [CVE-2021-21285](https://avd.aquasec.com/nvd/cve-2021-21285)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41091",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2021-41091\nSeverity: MEDIUM\nFixed Version: 20.10.9\nLink: [CVE-2021-41091](https://avd.aquasec.com/nvd/cve-2021-41091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24769",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2022-24769\nSeverity: MEDIUM\nFixed Version: 20.10.14\nLink: [CVE-2022-24769](https://avd.aquasec.com/nvd/cve-2022-24769)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-36109",
          "ruleIndex": 56,
          "level": "warning",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2022-36109\nSeverity: MEDIUM\nFixed Version: 20.10.18\nLink: [CVE-2022-36109](https://avd.aquasec.com/nvd/cve-2022-36109)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-vp35-85q5-9f25",
          "ruleIndex": 57,
          "level": "note",
          "message": {
            "text": "Package: github.com/moby/moby\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability GHSA-vp35-85q5-9f25\nSeverity: LOW\nFixed Version: 20.10.20\nLink: [GHSA-vp35-85q5-9f25](https://github.com/advisories/GHSA-vp35-85q5-9f25)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/moby/moby@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-27561",
          "ruleIndex": 58,
          "level": "error",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v1.0.2\nVulnerability CVE-2023-27561\nSeverity: HIGH\nFixed Version: 1.1.5\nLink: [CVE-2023-27561](https://avd.aquasec.com/nvd/cve-2023-27561)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/opencontainers/runc@v1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21626",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v1.0.2\nVulnerability CVE-2024-21626\nSeverity: HIGH\nFixed Version: 1.1.12\nLink: [CVE-2024-21626](https://avd.aquasec.com/nvd/cve-2024-21626)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/opencontainers/runc@v1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43784",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v1.0.2\nVulnerability CVE-2021-43784\nSeverity: MEDIUM\nFixed Version: 1.0.3\nLink: [CVE-2021-43784](https://avd.aquasec.com/nvd/cve-2021-43784)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/opencontainers/runc@v1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29162",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v1.0.2\nVulnerability CVE-2022-29162\nSeverity: MEDIUM\nFixed Version: 1.1.2\nLink: [CVE-2022-29162](https://avd.aquasec.com/nvd/cve-2022-29162)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/opencontainers/runc@v1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28642",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v1.0.2\nVulnerability CVE-2023-28642\nSeverity: MEDIUM\nFixed Version: 1.1.5\nLink: [CVE-2023-28642](https://avd.aquasec.com/nvd/cve-2023-28642)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/opencontainers/runc@v1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25809",
          "ruleIndex": 63,
          "level": "note",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v1.0.2\nVulnerability CVE-2023-25809\nSeverity: LOW\nFixed Version: 1.1.5\nLink: [CVE-2023-25809](https://avd.aquasec.com/nvd/cve-2023-25809)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/opencontainers/runc@v1.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21698",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "Package: github.com/prometheus/client_golang\nInstalled Version: v1.7.1\nVulnerability CVE-2022-21698\nSeverity: HIGH\nFixed Version: 1.11.1\nLink: [CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/prometheus/client_golang@v1.7.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-46402",
          "ruleIndex": 65,
          "level": "error",
          "message": {
            "text": "Package: github.com/whilp/git-urls\nInstalled Version: v0.0.0-20160530060445-31bac0d230fa\nVulnerability CVE-2023-46402\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2023-46402](https://avd.aquasec.com/nvd/cve-2023-46402)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: github.com/whilp/git-urls@v0.0.0-20160530060445-31bac0d230fa"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43565",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20210220033148-5ea612d1eb83\nVulnerability CVE-2021-43565\nSeverity: HIGH\nFixed Version: 0.0.0-20211202192323-5770296d904e\nLink: [CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/crypto@v0.0.0-20210220033148-5ea612d1eb83"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27191",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20210220033148-5ea612d1eb83\nVulnerability CVE-2022-27191\nSeverity: HIGH\nFixed Version: 0.0.0-20220314234659-1baeb1ce4c0b\nLink: [CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/crypto@v0.0.0-20210220033148-5ea612d1eb83"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 68,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20210220033148-5ea612d1eb83\nVulnerability CVE-2023-48795\nSeverity: MEDIUM\nFixed Version: 0.17.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/crypto@v0.0.0-20210220033148-5ea612d1eb83"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33194",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2021-33194\nSeverity: HIGH\nFixed Version: 0.0.0-20210520170846-37e1c6afe023\nLink: [CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 0.0.0-20220906165146-f3363e06e74c\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 0.7.0\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 0.17.0\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525",
          "ruleIndex": 73,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2021-31525\nSeverity: MEDIUM\nFixed Version: 0.0.0-20210428140749-89ef3d95e781\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 0.4.0\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-3978\nSeverity: MEDIUM\nFixed Version: 0.13.0\nLink: [CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 76,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-44487\nSeverity: MEDIUM\nFixed Version: 0.17.0\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 77,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-45288\nSeverity: MEDIUM\nFixed Version: 0.23.0\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 78,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/sys\nInstalled Version: v0.0.0-20210426230700-d19ff857e887\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 0.0.0-20220412211240-33da011f77ad\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/sys@v0.0.0-20210426230700-d19ff857e887"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38561",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/text\nInstalled Version: v0.3.6\nVulnerability CVE-2021-38561\nSeverity: HIGH\nFixed Version: 0.3.7\nLink: [CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/text@v0.3.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32149",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/text\nInstalled Version: v0.3.6\nVulnerability CVE-2022-32149\nSeverity: HIGH\nFixed Version: 0.3.8\nLink: [CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: golang.org/x/text@v0.3.6"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-m425-mq94-257g",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "Package: google.golang.org/grpc\nInstalled Version: v1.27.1\nVulnerability GHSA-m425-mq94-257g\nSeverity: HIGH\nFixed Version: 1.56.3, 1.57.1, 1.58.3\nLink: [GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: google.golang.org/grpc@v1.27.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 76,
          "level": "warning",
          "message": {
            "text": "Package: google.golang.org/grpc\nInstalled Version: v1.27.1\nVulnerability CVE-2023-44487\nSeverity: MEDIUM\nFixed Version: 1.58.3, 1.57.1, 1.56.3\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: google.golang.org/grpc@v1.27.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 82,
          "level": "warning",
          "message": {
            "text": "Package: google.golang.org/protobuf\nInstalled Version: v1.26.0\nVulnerability CVE-2024-24786\nSeverity: MEDIUM\nFixed Version: 1.33.0\nLink: [CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: google.golang.org/protobuf@v1.26.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28948",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "Package: gopkg.in/yaml.v3\nInstalled Version: v3.0.0-20200313102051-9f266ea9e77c\nVulnerability CVE-2022-28948\nSeverity: HIGH\nFixed Version: 3.0.0-20220521103104-8f96da9f5d5e\nLink: [CVE-2022-28948](https://avd.aquasec.com/nvd/cve-2022-28948)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: gopkg.in/yaml.v3@v3.0.0-20200313102051-9f266ea9e77c"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26147",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2024-26147\nSeverity: HIGH\nFixed Version: 3.14.2\nLink: [CVE-2024-26147](https://avd.aquasec.com/nvd/cve-2024-26147)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-25210",
          "ruleIndex": 85,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2019-25210\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2019-25210](https://avd.aquasec.com/nvd/cve-2019-25210)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23524",
          "ruleIndex": 86,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2022-23524\nSeverity: MEDIUM\nFixed Version: 3.10.3\nLink: [CVE-2022-23524](https://avd.aquasec.com/nvd/cve-2022-23524)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23525",
          "ruleIndex": 87,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2022-23525\nSeverity: MEDIUM\nFixed Version: 3.10.3\nLink: [CVE-2022-23525](https://avd.aquasec.com/nvd/cve-2022-23525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23526",
          "ruleIndex": 88,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2022-23526\nSeverity: MEDIUM\nFixed Version: 3.10.3\nLink: [CVE-2022-23526](https://avd.aquasec.com/nvd/cve-2022-23526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-36055",
          "ruleIndex": 89,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2022-36055\nSeverity: MEDIUM\nFixed Version: 3.9.4\nLink: [CVE-2022-36055](https://avd.aquasec.com/nvd/cve-2022-36055)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25165",
          "ruleIndex": 90,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2023-25165\nSeverity: MEDIUM\nFixed Version: 3.11.1\nLink: [CVE-2023-25165](https://avd.aquasec.com/nvd/cve-2023-25165)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25620",
          "ruleIndex": 91,
          "level": "warning",
          "message": {
            "text": "Package: helm.sh/helm/v3\nInstalled Version: v3.6.3\nVulnerability CVE-2024-25620\nSeverity: MEDIUM\nFixed Version: 3.14.1\nLink: [CVE-2024-25620](https://avd.aquasec.com/nvd/cve-2024-25620)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: helm.sh/helm/v3@v3.6.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-23806\nSeverity: CRITICAL\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24538\nSeverity: CRITICAL\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24540\nSeverity: CRITICAL\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-16845",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2020-16845\nSeverity: HIGH\nFixed Version: 1.13.15, 1.14.7\nLink: [CVE-2020-16845](https://avd.aquasec.com/nvd/cve-2020-16845)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28362",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2020-28362\nSeverity: HIGH\nFixed Version: 1.14.12, 1.15.5\nLink: [CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-27918\nSeverity: HIGH\nFixed Version: 1.15.9, 1.16.1\nLink: [CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-33195\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-33196\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-33198\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-39293\nSeverity: HIGH\nFixed Version: 1.16.8, 1.17.1\nLink: [CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-41771\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-41772\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44716",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-44716\nSeverity: HIGH\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-23772\nSeverity: HIGH\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-24675\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-24921\nSeverity: HIGH\nFixed Version: 1.16.15, 1.17.8\nLink: [CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 1.18.6, 1.19.1\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-28131\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-28327\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-2879\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-2880\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-29804\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30580\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30630\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30631\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30632\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30633\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30634\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30635\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-32189\nSeverity: HIGH\nFixed Version: 1.17.13, 1.18.5\nLink: [CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41715\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41716\nSeverity: HIGH\nFixed Version: 1.18.8, 1.19.3\nLink: [CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41720\nSeverity: HIGH\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41722\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41724\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41725\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 127,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24534\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 128,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24536\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24537\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24539\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-29400\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-29403\nSeverity: HIGH\nFixed Version: 1.19.10, 1.20.5\nLink: [CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 1.20.10, 1.21.3\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 133,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-45283\nSeverity: HIGH\nFixed Version: 1.20.11, 1.21.4, 1.20.12, 1.21.5\nLink: [CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 134,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-45287\nSeverity: HIGH\nFixed Version: 1.20.0\nLink: [CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-45288\nSeverity: HIGH\nFixed Version: 1.21.9, 1.22.2\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14039",
          "ruleIndex": 135,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2020-14039\nSeverity: MEDIUM\nFixed Version: 1.13.13, 1.14.5\nLink: [CVE-2020-14039](https://avd.aquasec.com/nvd/cve-2020-14039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15586",
          "ruleIndex": 136,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2020-15586\nSeverity: MEDIUM\nFixed Version: 1.13.13, 1.14.5\nLink: [CVE-2020-15586](https://avd.aquasec.com/nvd/cve-2020-15586)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-24553",
          "ruleIndex": 137,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2020-24553\nSeverity: MEDIUM\nFixed Version: 1.14.8, 1.15.1\nLink: [CVE-2020-24553](https://avd.aquasec.com/nvd/cve-2020-24553)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114",
          "ruleIndex": 138,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-3114\nSeverity: MEDIUM\nFixed Version: 1.14.14, 1.15.7\nLink: [CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525",
          "ruleIndex": 73,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-31525\nSeverity: MEDIUM\nFixed Version: 1.15.12, 1.16.4\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197",
          "ruleIndex": 139,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-33197\nSeverity: MEDIUM\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558",
          "ruleIndex": 140,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-34558\nSeverity: MEDIUM\nFixed Version: 1.15.14, 1.16.6\nLink: [CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221",
          "ruleIndex": 141,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-36221\nSeverity: MEDIUM\nFixed Version: 1.15.15, 1.16.7\nLink: [CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717",
          "ruleIndex": 142,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2021-44717\nSeverity: MEDIUM\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705",
          "ruleIndex": 143,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-1705\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962",
          "ruleIndex": 144,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-1962\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 78,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 1.17.10, 1.18.2\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148",
          "ruleIndex": 145,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-32148\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532",
          "ruleIndex": 146,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-24532\nSeverity: MEDIUM\nFixed Version: 1.19.7, 1.20.2\nLink: [CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 147,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-29406\nSeverity: MEDIUM\nFixed Version: 1.19.11, 1.20.6\nLink: [CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 148,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-29409\nSeverity: MEDIUM\nFixed Version: 1.19.12, 1.20.7, 1.21.0-rc.4\nLink: [CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 149,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-39318\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 150,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-39319\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 151,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-39326\nSeverity: MEDIUM\nFixed Version: 1.20.12, 1.21.5\nLink: [CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 152,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-45284\nSeverity: MEDIUM\nFixed Version: 1.20.11, 1.21.4\nLink: [CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 153,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-45289\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 154,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2023-45290\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 155,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2024-24783\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 156,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2024-24784\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 157,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2024-24785\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629",
          "ruleIndex": 158,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2022-30629\nSeverity: LOW\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 159,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2024-24789\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 160,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.2\nVulnerability CVE-2024-24790\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm-operator",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm-operator: stdlib@1.14.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-23806\nSeverity: CRITICAL\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24538\nSeverity: CRITICAL\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24540\nSeverity: CRITICAL\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28362",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2020-28362\nSeverity: HIGH\nFixed Version: 1.14.12, 1.15.5\nLink: [CVE-2020-28362](https://avd.aquasec.com/nvd/cve-2020-28362)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27918",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-27918\nSeverity: HIGH\nFixed Version: 1.15.9, 1.16.1\nLink: [CVE-2021-27918](https://avd.aquasec.com/nvd/cve-2021-27918)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33195",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-33195\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33195](https://avd.aquasec.com/nvd/cve-2021-33195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33196",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-33196\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33196](https://avd.aquasec.com/nvd/cve-2021-33196)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33198",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-33198\nSeverity: HIGH\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33198](https://avd.aquasec.com/nvd/cve-2021-33198)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-39293\nSeverity: HIGH\nFixed Version: 1.16.8, 1.17.1\nLink: [CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-41771\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-41772\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44716",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-44716\nSeverity: HIGH\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-23772\nSeverity: HIGH\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-24675\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-24921\nSeverity: HIGH\nFixed Version: 1.16.15, 1.17.8\nLink: [CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 1.18.6, 1.19.1\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-28131\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-28327\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-2879\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-2880\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-29804\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30580\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30630\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30631\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30632\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30633\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30634\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30635\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-32189\nSeverity: HIGH\nFixed Version: 1.17.13, 1.18.5\nLink: [CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41715\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41716\nSeverity: HIGH\nFixed Version: 1.18.8, 1.19.3\nLink: [CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41720\nSeverity: HIGH\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41722\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41724\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41725\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 127,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24534\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 128,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24536\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24537\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24539\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-29400\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-29403\nSeverity: HIGH\nFixed Version: 1.19.10, 1.20.5\nLink: [CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 1.20.10, 1.21.3\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 133,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-45283\nSeverity: HIGH\nFixed Version: 1.20.11, 1.21.4, 1.20.12, 1.21.5\nLink: [CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 134,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-45287\nSeverity: HIGH\nFixed Version: 1.20.0\nLink: [CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-45288\nSeverity: HIGH\nFixed Version: 1.21.9, 1.22.2\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3114",
          "ruleIndex": 138,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-3114\nSeverity: MEDIUM\nFixed Version: 1.14.14, 1.15.7\nLink: [CVE-2021-3114](https://avd.aquasec.com/nvd/cve-2021-3114)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525",
          "ruleIndex": 73,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-31525\nSeverity: MEDIUM\nFixed Version: 1.15.12, 1.16.4\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33197",
          "ruleIndex": 139,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-33197\nSeverity: MEDIUM\nFixed Version: 1.15.13, 1.16.5\nLink: [CVE-2021-33197](https://avd.aquasec.com/nvd/cve-2021-33197)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558",
          "ruleIndex": 140,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-34558\nSeverity: MEDIUM\nFixed Version: 1.15.14, 1.16.6\nLink: [CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221",
          "ruleIndex": 141,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-36221\nSeverity: MEDIUM\nFixed Version: 1.15.15, 1.16.7\nLink: [CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717",
          "ruleIndex": 142,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2021-44717\nSeverity: MEDIUM\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705",
          "ruleIndex": 143,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-1705\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962",
          "ruleIndex": 144,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-1962\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 78,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 1.17.10, 1.18.2\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148",
          "ruleIndex": 145,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-32148\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532",
          "ruleIndex": 146,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-24532\nSeverity: MEDIUM\nFixed Version: 1.19.7, 1.20.2\nLink: [CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 147,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-29406\nSeverity: MEDIUM\nFixed Version: 1.19.11, 1.20.6\nLink: [CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 148,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-29409\nSeverity: MEDIUM\nFixed Version: 1.19.12, 1.20.7, 1.21.0-rc.4\nLink: [CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 149,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-39318\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 150,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-39319\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 151,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-39326\nSeverity: MEDIUM\nFixed Version: 1.20.12, 1.21.5\nLink: [CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 152,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-45284\nSeverity: MEDIUM\nFixed Version: 1.20.11, 1.21.4\nLink: [CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 153,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-45289\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 154,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2023-45290\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 155,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2024-24783\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 156,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2024-24784\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 157,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2024-24785\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629",
          "ruleIndex": 158,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2022-30629\nSeverity: LOW\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 159,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2024-24789\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 160,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.14.10\nVulnerability CVE-2024-24790\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm2",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm2: stdlib@1.14.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21235",
          "ruleIndex": 161,
          "level": "error",
          "message": {
            "text": "Package: github.com/Masterminds/vcs\nInstalled Version: v1.13.1\nVulnerability CVE-2022-21235\nSeverity: CRITICAL\nFixed Version: 1.13.2\nLink: [CVE-2022-21235](https://avd.aquasec.com/nvd/cve-2022-21235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/Masterminds/vcs@v1.13.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23648",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2022-23648\nSeverity: HIGH\nFixed Version: 1.4.13, 1.5.10, 1.6.1\nLink: [CVE-2022-23648](https://avd.aquasec.com/nvd/cve-2022-23648)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32760",
          "ruleIndex": 162,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2021-32760\nSeverity: MEDIUM\nFixed Version: 1.4.8, 1.5.4\nLink: [CVE-2021-32760](https://avd.aquasec.com/nvd/cve-2021-32760)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41103",
          "ruleIndex": 163,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2021-41103\nSeverity: MEDIUM\nFixed Version: 1.4.11, 1.5.7\nLink: [CVE-2021-41103](https://avd.aquasec.com/nvd/cve-2021-41103)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23471",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2022-23471\nSeverity: MEDIUM\nFixed Version: 1.5.16, 1.6.12\nLink: [CVE-2022-23471](https://avd.aquasec.com/nvd/cve-2022-23471)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31030",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2022-31030\nSeverity: MEDIUM\nFixed Version: 1.5.13, 1.6.6\nLink: [CVE-2022-31030](https://avd.aquasec.com/nvd/cve-2022-31030)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25153",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2023-25153\nSeverity: MEDIUM\nFixed Version: 1.5.18, 1.6.18\nLink: [CVE-2023-25153](https://avd.aquasec.com/nvd/cve-2023-25153)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25173",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability CVE-2023-25173\nSeverity: MEDIUM\nFixed Version: 1.5.18, 1.6.18\nLink: [CVE-2023-25173](https://avd.aquasec.com/nvd/cve-2023-25173)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-7ww5-4wqc-m92c",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability GHSA-7ww5-4wqc-m92c\nSeverity: MEDIUM\nFixed Version: 1.6.26, 1.7.11\nLink: [GHSA-7ww5-4wqc-m92c](https://github.com/advisories/GHSA-7ww5-4wqc-m92c)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-5j5w-g665-5m35",
          "ruleIndex": 164,
          "level": "note",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability GHSA-5j5w-g665-5m35\nSeverity: LOW\nFixed Version: 1.4.12, 1.5.8\nLink: [GHSA-5j5w-g665-5m35](https://github.com/advisories/GHSA-5j5w-g665-5m35)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-c9cp-9c75-9v8c",
          "ruleIndex": 47,
          "level": "note",
          "message": {
            "text": "Package: github.com/containerd/containerd\nInstalled Version: v1.4.4\nVulnerability GHSA-c9cp-9c75-9v8c\nSeverity: LOW\nFixed Version: 1.5.11, 1.6.2\nLink: [GHSA-c9cp-9c75-9v8c](https://github.com/advisories/GHSA-c9cp-9c75-9v8c)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/containerd/containerd@v1.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-6xv5-86q9-7xr8",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "Package: github.com/cyphar/filepath-securejoin\nInstalled Version: v0.2.2\nVulnerability GHSA-6xv5-86q9-7xr8\nSeverity: MEDIUM\nFixed Version: 0.2.4\nLink: [GHSA-6xv5-86q9-7xr8](https://github.com/advisories/GHSA-6xv5-86q9-7xr8)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/cyphar/filepath-securejoin@v0.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41092",
          "ruleIndex": 165,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/cli\nInstalled Version: v20.10.5+incompatible\nVulnerability CVE-2021-41092\nSeverity: MEDIUM\nFixed Version: 20.10.9\nLink: [CVE-2021-41092](https://avd.aquasec.com/nvd/cve-2021-41092)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/cli@v20.10.5+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-11468",
          "ruleIndex": 166,
          "level": "error",
          "message": {
            "text": "Package: github.com/docker/distribution\nInstalled Version: v0.0.0-20191216044856-a8371794149d\nVulnerability CVE-2017-11468\nSeverity: HIGH\nFixed Version: 2.7.0-rc.0\nLink: [CVE-2017-11468](https://avd.aquasec.com/nvd/cve-2017-11468)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/distribution@v0.0.0-20191216044856-a8371794149d"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2253",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "Package: github.com/docker/distribution\nInstalled Version: v0.0.0-20191216044856-a8371794149d\nVulnerability CVE-2023-2253\nSeverity: HIGH\nFixed Version: 2.8.2-beta.1\nLink: [CVE-2023-2253](https://avd.aquasec.com/nvd/cve-2023-2253)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/distribution@v0.0.0-20191216044856-a8371794149d"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-qq97-vm5h-rrhg",
          "ruleIndex": 50,
          "level": "note",
          "message": {
            "text": "Package: github.com/docker/distribution\nInstalled Version: v0.0.0-20191216044856-a8371794149d\nVulnerability GHSA-qq97-vm5h-rrhg\nSeverity: LOW\nFixed Version: 2.8.0\nLink: [GHSA-qq97-vm5h-rrhg](https://github.com/advisories/GHSA-qq97-vm5h-rrhg)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/distribution@v0.0.0-20191216044856-a8371794149d"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13509",
          "ruleIndex": 167,
          "level": "error",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2019-13509\nSeverity: HIGH\nFixed Version: 18.09.8\nLink: [CVE-2019-13509](https://avd.aquasec.com/nvd/cve-2019-13509)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28840",
          "ruleIndex": 168,
          "level": "error",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2023-28840\nSeverity: HIGH\nFixed Version: 20.10.24, 23.0.3\nLink: [CVE-2023-28840](https://avd.aquasec.com/nvd/cve-2023-28840)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27534",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2020-27534\nSeverity: MEDIUM\nFixed Version: 19.03.9\nLink: [CVE-2020-27534](https://avd.aquasec.com/nvd/cve-2020-27534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41091",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2021-41091\nSeverity: MEDIUM\nFixed Version: 20.10.9\nLink: [CVE-2021-41091](https://avd.aquasec.com/nvd/cve-2021-41091)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24769",
          "ruleIndex": 55,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2022-24769\nSeverity: MEDIUM\nFixed Version: 20.10.14\nLink: [CVE-2022-24769](https://avd.aquasec.com/nvd/cve-2022-24769)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28841",
          "ruleIndex": 169,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2023-28841\nSeverity: MEDIUM\nFixed Version: 20.10.24, 23.0.3\nLink: [CVE-2023-28841](https://avd.aquasec.com/nvd/cve-2023-28841)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28842",
          "ruleIndex": 170,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2023-28842\nSeverity: MEDIUM\nFixed Version: 20.10.24, 23.0.3\nLink: [CVE-2023-28842](https://avd.aquasec.com/nvd/cve-2023-28842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24557",
          "ruleIndex": 171,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2024-24557\nSeverity: MEDIUM\nFixed Version: 25.0.2, 24.0.9\nLink: [CVE-2024-24557](https://avd.aquasec.com/nvd/cve-2024-24557)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29018",
          "ruleIndex": 172,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2024-29018\nSeverity: MEDIUM\nFixed Version: 26.0.0-rc3, 25.0.5, 23.0.11\nLink: [CVE-2024-29018](https://avd.aquasec.com/nvd/cve-2024-29018)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-jq35-85cj-fj4p",
          "ruleIndex": 173,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability GHSA-jq35-85cj-fj4p\nSeverity: MEDIUM\nFixed Version: 24.0.7, 23.0.8, 20.10.27\nLink: [GHSA-jq35-85cj-fj4p](https://github.com/advisories/GHSA-jq35-85cj-fj4p)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-xmmx-7jpf-fx42",
          "ruleIndex": 174,
          "level": "warning",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability GHSA-xmmx-7jpf-fx42\nSeverity: MEDIUM\nFixed Version: 20.10.11\nLink: [GHSA-xmmx-7jpf-fx42](https://github.com/advisories/GHSA-xmmx-7jpf-fx42)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41089",
          "ruleIndex": 175,
          "level": "note",
          "message": {
            "text": "Package: github.com/docker/docker\nInstalled Version: v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible\nVulnerability CVE-2021-41089\nSeverity: LOW\nFixed Version: 20.10.9\nLink: [CVE-2021-41089](https://avd.aquasec.com/nvd/cve-2021-41089)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/docker/docker@v17.12.0-ce-rc1.0.20200618181300-9dc6525e6118+incompatible"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-77vh-xpmg-72qh",
          "ruleIndex": 176,
          "level": "note",
          "message": {
            "text": "Package: github.com/opencontainers/image-spec\nInstalled Version: v1.0.1\nVulnerability GHSA-77vh-xpmg-72qh\nSeverity: LOW\nFixed Version: 1.0.2\nLink: [GHSA-77vh-xpmg-72qh](https://github.com/advisories/GHSA-77vh-xpmg-72qh)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/image-spec@v1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16884",
          "ruleIndex": 177,
          "level": "error",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2019-16884\nSeverity: HIGH\nFixed Version: 1.0.0-rc8.0.20190930145003-cad42f6e0932\nLink: [CVE-2019-16884](https://avd.aquasec.com/nvd/cve-2019-16884)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-30465",
          "ruleIndex": 178,
          "level": "error",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2021-30465\nSeverity: HIGH\nFixed Version: 1.0.0-rc95\nLink: [CVE-2021-30465](https://avd.aquasec.com/nvd/cve-2021-30465)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-9962",
          "ruleIndex": 179,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2016-9962\nSeverity: MEDIUM\nFixed Version: 1.0.0-rc3\nLink: [CVE-2016-9962](https://avd.aquasec.com/nvd/cve-2016-9962)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19921",
          "ruleIndex": 180,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2019-19921\nSeverity: MEDIUM\nFixed Version: 1.0.0-rc9.0.20200122160610-2fc03cc11c77\nLink: [CVE-2019-19921](https://avd.aquasec.com/nvd/cve-2019-19921)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43784",
          "ruleIndex": 60,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2021-43784\nSeverity: MEDIUM\nFixed Version: 1.0.3\nLink: [CVE-2021-43784](https://avd.aquasec.com/nvd/cve-2021-43784)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29162",
          "ruleIndex": 61,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2022-29162\nSeverity: MEDIUM\nFixed Version: 1.1.2\nLink: [CVE-2022-29162](https://avd.aquasec.com/nvd/cve-2022-29162)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28642",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2023-28642\nSeverity: MEDIUM\nFixed Version: 1.1.5\nLink: [CVE-2023-28642](https://avd.aquasec.com/nvd/cve-2023-28642)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25809",
          "ruleIndex": 63,
          "level": "note",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability CVE-2023-25809\nSeverity: LOW\nFixed Version: 1.1.5\nLink: [CVE-2023-25809](https://avd.aquasec.com/nvd/cve-2023-25809)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-g54h-m393-cpwq",
          "ruleIndex": 181,
          "level": "note",
          "message": {
            "text": "Package: github.com/opencontainers/runc\nInstalled Version: v0.1.1\nVulnerability GHSA-g54h-m393-cpwq\nSeverity: LOW\nFixed Version: 1.0.0-rc91\nLink: [GHSA-g54h-m393-cpwq](https://github.com/advisories/GHSA-g54h-m393-cpwq)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/opencontainers/runc@v0.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21698",
          "ruleIndex": 64,
          "level": "error",
          "message": {
            "text": "Package: github.com/prometheus/client_golang\nInstalled Version: v1.7.1\nVulnerability CVE-2022-21698\nSeverity: HIGH\nFixed Version: 1.11.1\nLink: [CVE-2022-21698](https://avd.aquasec.com/nvd/cve-2022-21698)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: github.com/prometheus/client_golang@v1.7.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43565",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20210220033148-5ea612d1eb83\nVulnerability CVE-2021-43565\nSeverity: HIGH\nFixed Version: 0.0.0-20211202192323-5770296d904e\nLink: [CVE-2021-43565](https://avd.aquasec.com/nvd/cve-2021-43565)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/crypto@v0.0.0-20210220033148-5ea612d1eb83"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27191",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20210220033148-5ea612d1eb83\nVulnerability CVE-2022-27191\nSeverity: HIGH\nFixed Version: 0.0.0-20220314234659-1baeb1ce4c0b\nLink: [CVE-2022-27191](https://avd.aquasec.com/nvd/cve-2022-27191)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/crypto@v0.0.0-20210220033148-5ea612d1eb83"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 68,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/crypto\nInstalled Version: v0.0.0-20210220033148-5ea612d1eb83\nVulnerability CVE-2023-48795\nSeverity: MEDIUM\nFixed Version: 0.17.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/crypto@v0.0.0-20210220033148-5ea612d1eb83"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33194",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2021-33194\nSeverity: HIGH\nFixed Version: 0.0.0-20210520170846-37e1c6afe023\nLink: [CVE-2021-33194](https://avd.aquasec.com/nvd/cve-2021-33194)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 0.0.0-20220906165146-f3363e06e74c\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 0.7.0\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 0.17.0\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-31525",
          "ruleIndex": 73,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2021-31525\nSeverity: MEDIUM\nFixed Version: 0.0.0-20210428140749-89ef3d95e781\nLink: [CVE-2021-31525](https://avd.aquasec.com/nvd/cve-2021-31525)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 0.4.0\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3978",
          "ruleIndex": 75,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-3978\nSeverity: MEDIUM\nFixed Version: 0.13.0\nLink: [CVE-2023-3978](https://avd.aquasec.com/nvd/cve-2023-3978)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 76,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-44487\nSeverity: MEDIUM\nFixed Version: 0.17.0\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 77,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/net\nInstalled Version: v0.0.0-20210224082022-3d97a244fca7\nVulnerability CVE-2023-45288\nSeverity: MEDIUM\nFixed Version: 0.23.0\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/net@v0.0.0-20210224082022-3d97a244fca7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 78,
          "level": "warning",
          "message": {
            "text": "Package: golang.org/x/sys\nInstalled Version: v0.0.0-20210225134936-a50acf3fe073\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 0.0.0-20220412211240-33da011f77ad\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/sys@v0.0.0-20210225134936-a50acf3fe073"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38561",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/text\nInstalled Version: v0.3.4\nVulnerability CVE-2021-38561\nSeverity: HIGH\nFixed Version: 0.3.7\nLink: [CVE-2021-38561](https://avd.aquasec.com/nvd/cve-2021-38561)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/text@v0.3.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32149",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "Package: golang.org/x/text\nInstalled Version: v0.3.4\nVulnerability CVE-2022-32149\nSeverity: HIGH\nFixed Version: 0.3.8\nLink: [CVE-2022-32149](https://avd.aquasec.com/nvd/cve-2022-32149)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: golang.org/x/text@v0.3.4"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-m425-mq94-257g",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "Package: google.golang.org/grpc\nInstalled Version: v1.27.1\nVulnerability GHSA-m425-mq94-257g\nSeverity: HIGH\nFixed Version: 1.56.3, 1.57.1, 1.58.3\nLink: [GHSA-m425-mq94-257g](https://github.com/advisories/GHSA-m425-mq94-257g)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: google.golang.org/grpc@v1.27.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44487",
          "ruleIndex": 76,
          "level": "warning",
          "message": {
            "text": "Package: google.golang.org/grpc\nInstalled Version: v1.27.1\nVulnerability CVE-2023-44487\nSeverity: MEDIUM\nFixed Version: 1.58.3, 1.57.1, 1.56.3\nLink: [CVE-2023-44487](https://avd.aquasec.com/nvd/cve-2023-44487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: google.golang.org/grpc@v1.27.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24786",
          "ruleIndex": 82,
          "level": "warning",
          "message": {
            "text": "Package: google.golang.org/protobuf\nInstalled Version: v1.25.0\nVulnerability CVE-2024-24786\nSeverity: MEDIUM\nFixed Version: 1.33.0\nLink: [CVE-2024-24786](https://avd.aquasec.com/nvd/cve-2024-24786)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: google.golang.org/protobuf@v1.25.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28948",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "Package: gopkg.in/yaml.v3\nInstalled Version: v3.0.0-20200313102051-9f266ea9e77c\nVulnerability CVE-2022-28948\nSeverity: HIGH\nFixed Version: 3.0.0-20220521103104-8f96da9f5d5e\nLink: [CVE-2022-28948](https://avd.aquasec.com/nvd/cve-2022-28948)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: gopkg.in/yaml.v3@v3.0.0-20200313102051-9f266ea9e77c"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23806",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-23806\nSeverity: CRITICAL\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23806](https://avd.aquasec.com/nvd/cve-2022-23806)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24538\nSeverity: CRITICAL\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24538](https://avd.aquasec.com/nvd/cve-2023-24538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24540\nSeverity: CRITICAL\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24540](https://avd.aquasec.com/nvd/cve-2023-24540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39293",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-39293\nSeverity: HIGH\nFixed Version: 1.16.8, 1.17.1\nLink: [CVE-2021-39293](https://avd.aquasec.com/nvd/cve-2021-39293)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-41771\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41771](https://avd.aquasec.com/nvd/cve-2021-41771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-41772\nSeverity: HIGH\nFixed Version: 1.16.10, 1.17.3\nLink: [CVE-2021-41772](https://avd.aquasec.com/nvd/cve-2021-41772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44716",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-44716\nSeverity: HIGH\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44716](https://avd.aquasec.com/nvd/cve-2021-44716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-23772\nSeverity: HIGH\nFixed Version: 1.16.14, 1.17.7\nLink: [CVE-2022-23772](https://avd.aquasec.com/nvd/cve-2022-23772)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-24675\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-24675](https://avd.aquasec.com/nvd/cve-2022-24675)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-24921\nSeverity: HIGH\nFixed Version: 1.16.15, 1.17.8\nLink: [CVE-2022-24921](https://avd.aquasec.com/nvd/cve-2022-24921)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27664",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-27664\nSeverity: HIGH\nFixed Version: 1.18.6, 1.19.1\nLink: [CVE-2022-27664](https://avd.aquasec.com/nvd/cve-2022-27664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-28131\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-28131](https://avd.aquasec.com/nvd/cve-2022-28131)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-28327\nSeverity: HIGH\nFixed Version: 1.17.9, 1.18.1\nLink: [CVE-2022-28327](https://avd.aquasec.com/nvd/cve-2022-28327)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-2879\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2879](https://avd.aquasec.com/nvd/cve-2022-2879)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-2880\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-2880](https://avd.aquasec.com/nvd/cve-2022-2880)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-29804\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-29804](https://avd.aquasec.com/nvd/cve-2022-29804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30580\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30580](https://avd.aquasec.com/nvd/cve-2022-30580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30630\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30630](https://avd.aquasec.com/nvd/cve-2022-30630)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30631\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30631](https://avd.aquasec.com/nvd/cve-2022-30631)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30632\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30632](https://avd.aquasec.com/nvd/cve-2022-30632)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30633\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30633](https://avd.aquasec.com/nvd/cve-2022-30633)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30634\nSeverity: HIGH\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30634](https://avd.aquasec.com/nvd/cve-2022-30634)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30635\nSeverity: HIGH\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-30635](https://avd.aquasec.com/nvd/cve-2022-30635)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-32189\nSeverity: HIGH\nFixed Version: 1.17.13, 1.18.5\nLink: [CVE-2022-32189](https://avd.aquasec.com/nvd/cve-2022-32189)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715",
          "ruleIndex": 121,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41715\nSeverity: HIGH\nFixed Version: 1.18.7, 1.19.2\nLink: [CVE-2022-41715](https://avd.aquasec.com/nvd/cve-2022-41715)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716",
          "ruleIndex": 122,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41716\nSeverity: HIGH\nFixed Version: 1.18.8, 1.19.3\nLink: [CVE-2022-41716](https://avd.aquasec.com/nvd/cve-2022-41716)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720",
          "ruleIndex": 123,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41720\nSeverity: HIGH\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41720](https://avd.aquasec.com/nvd/cve-2022-41720)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41722\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41722](https://avd.aquasec.com/nvd/cve-2022-41722)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41723",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41723\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41723](https://avd.aquasec.com/nvd/cve-2022-41723)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41724\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41724](https://avd.aquasec.com/nvd/cve-2022-41724)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725",
          "ruleIndex": 126,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41725\nSeverity: HIGH\nFixed Version: 1.19.6, 1.20.1\nLink: [CVE-2022-41725](https://avd.aquasec.com/nvd/cve-2022-41725)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534",
          "ruleIndex": 127,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24534\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24534](https://avd.aquasec.com/nvd/cve-2023-24534)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536",
          "ruleIndex": 128,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24536\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24536](https://avd.aquasec.com/nvd/cve-2023-24536)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537",
          "ruleIndex": 129,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24537\nSeverity: HIGH\nFixed Version: 1.19.8, 1.20.3\nLink: [CVE-2023-24537](https://avd.aquasec.com/nvd/cve-2023-24537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539",
          "ruleIndex": 130,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24539\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-24539](https://avd.aquasec.com/nvd/cve-2023-24539)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400",
          "ruleIndex": 131,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-29400\nSeverity: HIGH\nFixed Version: 1.19.9, 1.20.4\nLink: [CVE-2023-29400](https://avd.aquasec.com/nvd/cve-2023-29400)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403",
          "ruleIndex": 132,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-29403\nSeverity: HIGH\nFixed Version: 1.19.10, 1.20.5\nLink: [CVE-2023-29403](https://avd.aquasec.com/nvd/cve-2023-29403)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39325",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-39325\nSeverity: HIGH\nFixed Version: 1.20.10, 1.21.3\nLink: [CVE-2023-39325](https://avd.aquasec.com/nvd/cve-2023-39325)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283",
          "ruleIndex": 133,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-45283\nSeverity: HIGH\nFixed Version: 1.20.11, 1.21.4, 1.20.12, 1.21.5\nLink: [CVE-2023-45283](https://avd.aquasec.com/nvd/cve-2023-45283)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287",
          "ruleIndex": 134,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-45287\nSeverity: HIGH\nFixed Version: 1.20.0\nLink: [CVE-2023-45287](https://avd.aquasec.com/nvd/cve-2023-45287)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-45288\nSeverity: HIGH\nFixed Version: 1.21.9, 1.22.2\nLink: [CVE-2023-45288](https://avd.aquasec.com/nvd/cve-2023-45288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34558",
          "ruleIndex": 140,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-34558\nSeverity: MEDIUM\nFixed Version: 1.15.14, 1.16.6\nLink: [CVE-2021-34558](https://avd.aquasec.com/nvd/cve-2021-34558)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36221",
          "ruleIndex": 141,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-36221\nSeverity: MEDIUM\nFixed Version: 1.15.15, 1.16.7\nLink: [CVE-2021-36221](https://avd.aquasec.com/nvd/cve-2021-36221)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717",
          "ruleIndex": 142,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2021-44717\nSeverity: MEDIUM\nFixed Version: 1.16.12, 1.17.5\nLink: [CVE-2021-44717](https://avd.aquasec.com/nvd/cve-2021-44717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705",
          "ruleIndex": 143,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-1705\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1705](https://avd.aquasec.com/nvd/cve-2022-1705)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962",
          "ruleIndex": 144,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-1962\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-1962](https://avd.aquasec.com/nvd/cve-2022-1962)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29526",
          "ruleIndex": 78,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-29526\nSeverity: MEDIUM\nFixed Version: 1.17.10, 1.18.2\nLink: [CVE-2022-29526](https://avd.aquasec.com/nvd/cve-2022-29526)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148",
          "ruleIndex": 145,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-32148\nSeverity: MEDIUM\nFixed Version: 1.17.12, 1.18.4\nLink: [CVE-2022-32148](https://avd.aquasec.com/nvd/cve-2022-32148)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41717",
          "ruleIndex": 74,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-41717\nSeverity: MEDIUM\nFixed Version: 1.18.9, 1.19.4\nLink: [CVE-2022-41717](https://avd.aquasec.com/nvd/cve-2022-41717)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532",
          "ruleIndex": 146,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-24532\nSeverity: MEDIUM\nFixed Version: 1.19.7, 1.20.2\nLink: [CVE-2023-24532](https://avd.aquasec.com/nvd/cve-2023-24532)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406",
          "ruleIndex": 147,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-29406\nSeverity: MEDIUM\nFixed Version: 1.19.11, 1.20.6\nLink: [CVE-2023-29406](https://avd.aquasec.com/nvd/cve-2023-29406)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409",
          "ruleIndex": 148,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-29409\nSeverity: MEDIUM\nFixed Version: 1.19.12, 1.20.7, 1.21.0-rc.4\nLink: [CVE-2023-29409](https://avd.aquasec.com/nvd/cve-2023-29409)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318",
          "ruleIndex": 149,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-39318\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39318](https://avd.aquasec.com/nvd/cve-2023-39318)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319",
          "ruleIndex": 150,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-39319\nSeverity: MEDIUM\nFixed Version: 1.20.8, 1.21.1\nLink: [CVE-2023-39319](https://avd.aquasec.com/nvd/cve-2023-39319)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326",
          "ruleIndex": 151,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-39326\nSeverity: MEDIUM\nFixed Version: 1.20.12, 1.21.5\nLink: [CVE-2023-39326](https://avd.aquasec.com/nvd/cve-2023-39326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284",
          "ruleIndex": 152,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-45284\nSeverity: MEDIUM\nFixed Version: 1.20.11, 1.21.4\nLink: [CVE-2023-45284](https://avd.aquasec.com/nvd/cve-2023-45284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45289",
          "ruleIndex": 153,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-45289\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45289](https://avd.aquasec.com/nvd/cve-2023-45289)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45290",
          "ruleIndex": 154,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2023-45290\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2023-45290](https://avd.aquasec.com/nvd/cve-2023-45290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24783",
          "ruleIndex": 155,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2024-24783\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24783](https://avd.aquasec.com/nvd/cve-2024-24783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24784",
          "ruleIndex": 156,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2024-24784\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24784](https://avd.aquasec.com/nvd/cve-2024-24784)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24785",
          "ruleIndex": 157,
          "level": "warning",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2024-24785\nSeverity: MEDIUM\nFixed Version: 1.21.8, 1.22.1\nLink: [CVE-2024-24785](https://avd.aquasec.com/nvd/cve-2024-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629",
          "ruleIndex": 158,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2022-30629\nSeverity: LOW\nFixed Version: 1.17.11, 1.18.3\nLink: [CVE-2022-30629](https://avd.aquasec.com/nvd/cve-2022-30629)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24789",
          "ruleIndex": 159,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2024-24789\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24789](https://avd.aquasec.com/nvd/cve-2024-24789)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24790",
          "ruleIndex": 160,
          "level": "note",
          "message": {
            "text": "Package: stdlib\nInstalled Version: 1.16.5\nVulnerability CVE-2024-24790\nSeverity: UNKNOWN\nFixed Version: 1.21.11, 1.22.4\nLink: [CVE-2024-24790](https://avd.aquasec.com/nvd/cve-2024-24790)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/bin/helm3",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/bin/helm3: stdlib@1.16.5"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageName": "fluxcd/helm-operator:1.4.1",
        "repoDigests": [
          "fluxcd/helm-operator@sha256:73cbe96cdc8c7a1af04ad7ce255bf42d17f86d05851937af74b97b7f8433920f"
        ],
        "repoTags": [
          "fluxcd/helm-operator:1.4.1"
        ]
      }
    }
  ]
}