{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2023-42363",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42363",
              "help": {
                "text": "Vulnerability CVE-2023-42363\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r17\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)\nA use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "**Vulnerability CVE-2023-42363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r17|[CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)|\n\nA use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-42364",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42364",
              "help": {
                "text": "Vulnerability CVE-2023-42364\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)\nA use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "**Vulnerability CVE-2023-42364**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r19|[CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)|\n\nA use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-42365",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox:  use-after-free"
              },
              "fullDescription": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42365",
              "help": {
                "text": "Vulnerability CVE-2023-42365\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)\nA use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "**Vulnerability CVE-2023-42365**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r19|[CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)|\n\nA use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-42366",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: A heap-buffer-overflow"
              },
              "fullDescription": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-42366",
              "help": {
                "text": "Vulnerability CVE-2023-42366\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.36.1-r16\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "**Vulnerability CVE-2023-42366**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.36.1-r16|[CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)|\n\nA heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-4603",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Excessive time spent checking DSA keys and parameters"
              },
              "fullDescription": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4603",
              "help": {
                "text": "Vulnerability CVE-2024-4603\nSeverity: MEDIUM\nPackage: libssl3\nFixed Version: 3.1.5-r0\nLink: [CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)\nIssue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-4603**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libssl3|3.1.5-r0|[CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)|\n\nIssue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-2511",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Unbounded memory growth with session handling in TLSv1.3"
              },
              "fullDescription": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-2511",
              "help": {
                "text": "Vulnerability CVE-2024-2511\nSeverity: LOW\nPackage: libssl3\nFixed Version: 3.1.4-r6\nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-2511**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libssl3|3.1.4-r6|[CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)|\n\nIssue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-45133",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "babel: arbitrary code execution"
              },
              "fullDescription": {
                "text": "Babel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \u0026#34;polyfill provider\u0026#34; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45133",
              "help": {
                "text": "Vulnerability CVE-2023-45133\nSeverity: CRITICAL\nPackage: @babel/traverse\nFixed Version: 7.23.2, 8.0.0-alpha.4\nLink: [CVE-2023-45133](https://avd.aquasec.com/nvd/cve-2023-45133)\nBabel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3.",
                "markdown": "**Vulnerability CVE-2023-45133**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|@babel/traverse|7.23.2, 8.0.0-alpha.4|[CVE-2023-45133](https://avd.aquasec.com/nvd/cve-2023-45133)|\n\nBabel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "GHSA-qm7x-rc44-rrqw",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Cross-site Scripting Vulnerability in GraphQL Playground (distributed by Apollo Server)"
              },
              "fullDescription": {
                "text": "### Impact\nIn certain configurations, Apollo Server serves the client-side web app \u0026#34;GraphQL Playground\u0026#34; from the same web server that executes GraphQL operations. This web app has access to cookies and other credentials associated with the web server\u0026#39;s operations. There is a cross-site scripting vulnerability in GraphQL Playground that allows for arbitrary JavaScript code execution in your web server\u0026#39;s origin. If a user clicks a specially crafted link to your GraphQL Playground page served by Apollo Server, an attacker can steal cookies and other private browser data.\n\nDetails of the underlying GraphQL Playground vulnerability are available in [this `graphql-playground` advisory](https://github.com/graphql/graphql-playground/security/advisories/GHSA-59r9-6jp6-jcm7). (A [similar vulnerability](https://github.com/graphql/graphiql/security/advisories/GHSA-x4r7-m2q9-69c8) exists in the related `graphiql` project.) This advisory focuses on identifying whether *Apollo Server* installations are vulnerable and mitigating the vulnerability in Apollo Server; see the other advisories for details on the XSS vulnerability itself.\n\nThe impact of this vulnerability is more severe if (as is common) your GraphQL server\u0026#39;s origin URL is an origin that is used to store sensitive data such as cookies.\n\nIn order for this vulnerability to affect your Apollo Server installation, it must actually serve GraphQL Playground. The integration between Apollo Server and GraphQL Playground is different in Apollo Server 2 and Apollo Server 3. You can tell which version of Apollo Server you are running by looking at the version of the [package from which you import the `ApolloServer` class](https://www.apollographql.com/docs/apollo-server/integrations/middleware/): this may be `apollo-server`, `apollo-server-express`, `apollo-server-lambda`, etc.\n\n#### Apollo Server 3\n\nApollo Server 3 does not serve GraphQL Playground by default. It has a [landing page plugin system](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) and the default plugin is a simple splash page that is not vulnerable to this exploit, linking to Apollo Sandbox Explorer. (We chose to change the default because GraphQL Playground is not actively maintained.)\n\nIf you are running Apollo Server 3, then you are *only* vulnerable if you *explicitly* import the [`ApolloServerPluginLandingPageGraphQLPlayground`](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page) plugin and pass it to your `ApolloServer`\u0026#39;s constructor in the `plugins` array. Otherwise, this advisory does not apply to your server.\n\n#### Apollo Server 2\n\nApollo Server 2 serves GraphQL Playground by default, unless the `NODE_ENV` environment variable is set to `production`, or if you explicitly configure it via the `playground` option to the `ApolloServer` constructor.\n\nYour Apollo Server 2 installation is vulnerable if *any* of the following is true:\n- You pass `playground: true` to the `ApolloServer` constructor\n- You pass some other object like `playground: {title: \u0026#34;Title\u0026#34;}` to the `ApolloServer` constructor\n- You do *not* pass any `playground` option to the `ApolloServer` constructor, *and* the `NODE_ENV` environment variable is *not* set to `production`\n\n#### Apollo Server 1\n\nApollo Server 1 included `graphiql` instead of `graphql-playground`. `graphiql` isn\u0026#39;t automatically enabled in Apollo Server 1: you have to explicitly call a function such as `graphiqlExpress` to enable it. Because Apollo Server 1 is not commonly used, we have not done a detailed examination of whether the integration between Apollo Server 1 and `graphiql` is vulnerable to a similar exploit. If you are still using Apollo Server 1, we recommend you disable `graphiql` by removing the `graphiqlExpress` call, and then upgrade to a newer version of Apollo Server.\n\n### Patches and workarounds\n\nThere are several approaches you can take to ensure that your server is not vulnerable to this issue.\n\n#### Upgrade Apollo Server\n\nThe vulnerability has been patched in Apollo Server 2.25.3 and Apollo Server 3.4.1. To get the patch, upgrade your [Apollo Server entry point package](https://www.apollographql.com/docs/apollo-server/integrations/middleware/) to one of the fixed versions; this package may be `apollo-server`, `apollo-server-express`, `apollo-server-lambda`, etc. Additionally, if you depend directly on `apollo-server-core` in your `package.json`, make sure that you upgrade it to the same version.\n\n#### Upgrade Playground version only\n\nIf upgrading to the latest version of Apollo Server 2 or 3 quickly will be challenging, you can configure your current version of Apollo Server to serve the latest version of the GraphQL Playground app. This will pin your app to serve a specific version of GraphQL Playground and you will not receive updates to it when you upgrade Apollo Server later, but this may be acceptable because GraphQL Playground is not actively maintained.\n\nThe way to do this depends on what version of Apollo Server you\u0026#39;re using and if you\u0026#39;re already configuring GraphQL Playground.\n\n- **Apollo Server 3**: If you are using Apollo Server 3, then you are only vulnerable if your serve explicitly calls [`ApolloServerPluginLandingPageGraphQLPlayground`](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page) and passes it to the Apollo Server constructor in the `plugins` array. Add the option `version: \u0026#39;1.7.42\u0026#39;` to this call, so it looks like:\n```\nplugins: [ApolloServerPluginLandingPageGraphQLPlayground({version: \u0026#39;1.7.42\u0026#39;})]\n```\n- **Apollo Server 2 with no explicit `playground` option**: If you are using Apollo Server 2 and do not currently pass the `playground` option to `new ApolloServer`, add a `playground` option like so: \n```\nnew ApolloServer({ playground: process.env.NODE_ENV === \u0026#39;production\u0026#39; ? false : { version: \u0026#39;1.7.42\u0026#39; } })\n```\n- **Apollo Server 2 with `playground: true` or `playground: {x, y, z}`**: If you are using Apollo Server 2 and currently pass `true` or an object to `new ApolloServer`, pass the `version` option under the `playground` option like so:\n```\nnew ApolloServer({ playground: { version: \u0026#39;1.7.42\u0026#39;, x, y, z } })\n```\n\n#### Disable GraphQL Playground\n\nIf upgrading Apollo Server or GraphQL Playground is challenging, you can also disable GraphQL Playground.\n\nIn Apollo Server 3, remove the call to `ApolloServerPluginLandingPageGraphQLPlayground` from your `ApolloServer` constructor\u0026#39;s `plugins` array. This will replace GraphQL Playground with a simple splash page. See [the landing page plugins docs](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) for details.\n\nIn Apollo Server 2, add `playground: false` to your `ApolloServer` constructor: `new ApolloServer({ playground: false })`. This will replace GraphQL Playground with an attempt to execute a GraphQL operation, which will likely display an error in the browser.\n\nIf you disable GraphQL Playground, any users who rely on it to execute GraphQL operations will need an alternative, such as the [Apollo Studio Explorer\u0026#39;s account-free Sandbox](https://www.apollographql.com/docs/studio/explorer/#account-free-sandbox).\n\n### Credit\n\nThis vulnerability was discovered by @Ry0taK. Thank you!\n\nThe fix to GraphQL Playground was developed by @acao and @glasser with help from @imolorhe, @divyenduz, and @benjie.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Read the [`graphql-playground` advisory](https://github.com/graphql/graphql-playground/security/advisories/GHSA-59r9-6jp6-jcm7)\n* Open an issue in [the `apollo-server` repo](https://github.com/apollographql/apollo-server/)\n* If the issue involves confidential information, email us at [security@apollographql.com](mailto:security@apollographql.com)\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/advisories/GHSA-qm7x-rc44-rrqw",
              "help": {
                "text": "Vulnerability GHSA-qm7x-rc44-rrqw\nSeverity: HIGH\nPackage: apollo-server\nFixed Version: 2.25.3, 3.4.1\nLink: [GHSA-qm7x-rc44-rrqw](https://github.com/advisories/GHSA-qm7x-rc44-rrqw)\n### Impact\nIn certain configurations, Apollo Server serves the client-side web app \"GraphQL Playground\" from the same web server that executes GraphQL operations. This web app has access to cookies and other credentials associated with the web server's operations. There is a cross-site scripting vulnerability in GraphQL Playground that allows for arbitrary JavaScript code execution in your web server's origin. If a user clicks a specially crafted link to your GraphQL Playground page served by Apollo Server, an attacker can steal cookies and other private browser data.\n\nDetails of the underlying GraphQL Playground vulnerability are available in [this `graphql-playground` advisory](https://github.com/graphql/graphql-playground/security/advisories/GHSA-59r9-6jp6-jcm7). (A [similar vulnerability](https://github.com/graphql/graphiql/security/advisories/GHSA-x4r7-m2q9-69c8) exists in the related `graphiql` project.) This advisory focuses on identifying whether *Apollo Server* installations are vulnerable and mitigating the vulnerability in Apollo Server; see the other advisories for details on the XSS vulnerability itself.\n\nThe impact of this vulnerability is more severe if (as is common) your GraphQL server's origin URL is an origin that is used to store sensitive data such as cookies.\n\nIn order for this vulnerability to affect your Apollo Server installation, it must actually serve GraphQL Playground. The integration between Apollo Server and GraphQL Playground is different in Apollo Server 2 and Apollo Server 3. You can tell which version of Apollo Server you are running by looking at the version of the [package from which you import the `ApolloServer` class](https://www.apollographql.com/docs/apollo-server/integrations/middleware/): this may be `apollo-server`, `apollo-server-express`, `apollo-server-lambda`, etc.\n\n#### Apollo Server 3\n\nApollo Server 3 does not serve GraphQL Playground by default. It has a [landing page plugin system](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) and the default plugin is a simple splash page that is not vulnerable to this exploit, linking to Apollo Sandbox Explorer. (We chose to change the default because GraphQL Playground is not actively maintained.)\n\nIf you are running Apollo Server 3, then you are *only* vulnerable if you *explicitly* import the [`ApolloServerPluginLandingPageGraphQLPlayground`](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page) plugin and pass it to your `ApolloServer`'s constructor in the `plugins` array. Otherwise, this advisory does not apply to your server.\n\n#### Apollo Server 2\n\nApollo Server 2 serves GraphQL Playground by default, unless the `NODE_ENV` environment variable is set to `production`, or if you explicitly configure it via the `playground` option to the `ApolloServer` constructor.\n\nYour Apollo Server 2 installation is vulnerable if *any* of the following is true:\n- You pass `playground: true` to the `ApolloServer` constructor\n- You pass some other object like `playground: {title: \"Title\"}` to the `ApolloServer` constructor\n- You do *not* pass any `playground` option to the `ApolloServer` constructor, *and* the `NODE_ENV` environment variable is *not* set to `production`\n\n#### Apollo Server 1\n\nApollo Server 1 included `graphiql` instead of `graphql-playground`. `graphiql` isn't automatically enabled in Apollo Server 1: you have to explicitly call a function such as `graphiqlExpress` to enable it. Because Apollo Server 1 is not commonly used, we have not done a detailed examination of whether the integration between Apollo Server 1 and `graphiql` is vulnerable to a similar exploit. If you are still using Apollo Server 1, we recommend you disable `graphiql` by removing the `graphiqlExpress` call, and then upgrade to a newer version of Apollo Server.\n\n### Patches and workarounds\n\nThere are several approaches you can take to ensure that your server is not vulnerable to this issue.\n\n#### Upgrade Apollo Server\n\nThe vulnerability has been patched in Apollo Server 2.25.3 and Apollo Server 3.4.1. To get the patch, upgrade your [Apollo Server entry point package](https://www.apollographql.com/docs/apollo-server/integrations/middleware/) to one of the fixed versions; this package may be `apollo-server`, `apollo-server-express`, `apollo-server-lambda`, etc. Additionally, if you depend directly on `apollo-server-core` in your `package.json`, make sure that you upgrade it to the same version.\n\n#### Upgrade Playground version only\n\nIf upgrading to the latest version of Apollo Server 2 or 3 quickly will be challenging, you can configure your current version of Apollo Server to serve the latest version of the GraphQL Playground app. This will pin your app to serve a specific version of GraphQL Playground and you will not receive updates to it when you upgrade Apollo Server later, but this may be acceptable because GraphQL Playground is not actively maintained.\n\nThe way to do this depends on what version of Apollo Server you're using and if you're already configuring GraphQL Playground.\n\n- **Apollo Server 3**: If you are using Apollo Server 3, then you are only vulnerable if your serve explicitly calls [`ApolloServerPluginLandingPageGraphQLPlayground`](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page) and passes it to the Apollo Server constructor in the `plugins` array. Add the option `version: '1.7.42'` to this call, so it looks like:\n```\nplugins: [ApolloServerPluginLandingPageGraphQLPlayground({version: '1.7.42'})]\n```\n- **Apollo Server 2 with no explicit `playground` option**: If you are using Apollo Server 2 and do not currently pass the `playground` option to `new ApolloServer`, add a `playground` option like so: \n```\nnew ApolloServer({ playground: process.env.NODE_ENV === 'production' ? false : { version: '1.7.42' } })\n```\n- **Apollo Server 2 with `playground: true` or `playground: {x, y, z}`**: If you are using Apollo Server 2 and currently pass `true` or an object to `new ApolloServer`, pass the `version` option under the `playground` option like so:\n```\nnew ApolloServer({ playground: { version: '1.7.42', x, y, z } })\n```\n\n#### Disable GraphQL Playground\n\nIf upgrading Apollo Server or GraphQL Playground is challenging, you can also disable GraphQL Playground.\n\nIn Apollo Server 3, remove the call to `ApolloServerPluginLandingPageGraphQLPlayground` from your `ApolloServer` constructor's `plugins` array. This will replace GraphQL Playground with a simple splash page. See [the landing page plugins docs](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) for details.\n\nIn Apollo Server 2, add `playground: false` to your `ApolloServer` constructor: `new ApolloServer({ playground: false })`. This will replace GraphQL Playground with an attempt to execute a GraphQL operation, which will likely display an error in the browser.\n\nIf you disable GraphQL Playground, any users who rely on it to execute GraphQL operations will need an alternative, such as the [Apollo Studio Explorer's account-free Sandbox](https://www.apollographql.com/docs/studio/explorer/#account-free-sandbox).\n\n### Credit\n\nThis vulnerability was discovered by @Ry0taK. Thank you!\n\nThe fix to GraphQL Playground was developed by @acao and @glasser with help from @imolorhe, @divyenduz, and @benjie.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Read the [`graphql-playground` advisory](https://github.com/graphql/graphql-playground/security/advisories/GHSA-59r9-6jp6-jcm7)\n* Open an issue in [the `apollo-server` repo](https://github.com/apollographql/apollo-server/)\n* If the issue involves confidential information, email us at [security@apollographql.com](mailto:security@apollographql.com)\n",
                "markdown": "**Vulnerability GHSA-qm7x-rc44-rrqw**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|apollo-server|2.25.3, 3.4.1|[GHSA-qm7x-rc44-rrqw](https://github.com/advisories/GHSA-qm7x-rc44-rrqw)|\n\n### Impact\nIn certain configurations, Apollo Server serves the client-side web app \"GraphQL Playground\" from the same web server that executes GraphQL operations. This web app has access to cookies and other credentials associated with the web server's operations. There is a cross-site scripting vulnerability in GraphQL Playground that allows for arbitrary JavaScript code execution in your web server's origin. If a user clicks a specially crafted link to your GraphQL Playground page served by Apollo Server, an attacker can steal cookies and other private browser data.\n\nDetails of the underlying GraphQL Playground vulnerability are available in [this `graphql-playground` advisory](https://github.com/graphql/graphql-playground/security/advisories/GHSA-59r9-6jp6-jcm7). (A [similar vulnerability](https://github.com/graphql/graphiql/security/advisories/GHSA-x4r7-m2q9-69c8) exists in the related `graphiql` project.) This advisory focuses on identifying whether *Apollo Server* installations are vulnerable and mitigating the vulnerability in Apollo Server; see the other advisories for details on the XSS vulnerability itself.\n\nThe impact of this vulnerability is more severe if (as is common) your GraphQL server's origin URL is an origin that is used to store sensitive data such as cookies.\n\nIn order for this vulnerability to affect your Apollo Server installation, it must actually serve GraphQL Playground. The integration between Apollo Server and GraphQL Playground is different in Apollo Server 2 and Apollo Server 3. You can tell which version of Apollo Server you are running by looking at the version of the [package from which you import the `ApolloServer` class](https://www.apollographql.com/docs/apollo-server/integrations/middleware/): this may be `apollo-server`, `apollo-server-express`, `apollo-server-lambda`, etc.\n\n#### Apollo Server 3\n\nApollo Server 3 does not serve GraphQL Playground by default. It has a [landing page plugin system](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) and the default plugin is a simple splash page that is not vulnerable to this exploit, linking to Apollo Sandbox Explorer. (We chose to change the default because GraphQL Playground is not actively maintained.)\n\nIf you are running Apollo Server 3, then you are *only* vulnerable if you *explicitly* import the [`ApolloServerPluginLandingPageGraphQLPlayground`](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page) plugin and pass it to your `ApolloServer`'s constructor in the `plugins` array. Otherwise, this advisory does not apply to your server.\n\n#### Apollo Server 2\n\nApollo Server 2 serves GraphQL Playground by default, unless the `NODE_ENV` environment variable is set to `production`, or if you explicitly configure it via the `playground` option to the `ApolloServer` constructor.\n\nYour Apollo Server 2 installation is vulnerable if *any* of the following is true:\n- You pass `playground: true` to the `ApolloServer` constructor\n- You pass some other object like `playground: {title: \"Title\"}` to the `ApolloServer` constructor\n- You do *not* pass any `playground` option to the `ApolloServer` constructor, *and* the `NODE_ENV` environment variable is *not* set to `production`\n\n#### Apollo Server 1\n\nApollo Server 1 included `graphiql` instead of `graphql-playground`. `graphiql` isn't automatically enabled in Apollo Server 1: you have to explicitly call a function such as `graphiqlExpress` to enable it. Because Apollo Server 1 is not commonly used, we have not done a detailed examination of whether the integration between Apollo Server 1 and `graphiql` is vulnerable to a similar exploit. If you are still using Apollo Server 1, we recommend you disable `graphiql` by removing the `graphiqlExpress` call, and then upgrade to a newer version of Apollo Server.\n\n### Patches and workarounds\n\nThere are several approaches you can take to ensure that your server is not vulnerable to this issue.\n\n#### Upgrade Apollo Server\n\nThe vulnerability has been patched in Apollo Server 2.25.3 and Apollo Server 3.4.1. To get the patch, upgrade your [Apollo Server entry point package](https://www.apollographql.com/docs/apollo-server/integrations/middleware/) to one of the fixed versions; this package may be `apollo-server`, `apollo-server-express`, `apollo-server-lambda`, etc. Additionally, if you depend directly on `apollo-server-core` in your `package.json`, make sure that you upgrade it to the same version.\n\n#### Upgrade Playground version only\n\nIf upgrading to the latest version of Apollo Server 2 or 3 quickly will be challenging, you can configure your current version of Apollo Server to serve the latest version of the GraphQL Playground app. This will pin your app to serve a specific version of GraphQL Playground and you will not receive updates to it when you upgrade Apollo Server later, but this may be acceptable because GraphQL Playground is not actively maintained.\n\nThe way to do this depends on what version of Apollo Server you're using and if you're already configuring GraphQL Playground.\n\n- **Apollo Server 3**: If you are using Apollo Server 3, then you are only vulnerable if your serve explicitly calls [`ApolloServerPluginLandingPageGraphQLPlayground`](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page) and passes it to the Apollo Server constructor in the `plugins` array. Add the option `version: '1.7.42'` to this call, so it looks like:\n```\nplugins: [ApolloServerPluginLandingPageGraphQLPlayground({version: '1.7.42'})]\n```\n- **Apollo Server 2 with no explicit `playground` option**: If you are using Apollo Server 2 and do not currently pass the `playground` option to `new ApolloServer`, add a `playground` option like so: \n```\nnew ApolloServer({ playground: process.env.NODE_ENV === 'production' ? false : { version: '1.7.42' } })\n```\n- **Apollo Server 2 with `playground: true` or `playground: {x, y, z}`**: If you are using Apollo Server 2 and currently pass `true` or an object to `new ApolloServer`, pass the `version` option under the `playground` option like so:\n```\nnew ApolloServer({ playground: { version: '1.7.42', x, y, z } })\n```\n\n#### Disable GraphQL Playground\n\nIf upgrading Apollo Server or GraphQL Playground is challenging, you can also disable GraphQL Playground.\n\nIn Apollo Server 3, remove the call to `ApolloServerPluginLandingPageGraphQLPlayground` from your `ApolloServer` constructor's `plugins` array. This will replace GraphQL Playground with a simple splash page. See [the landing page plugins docs](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) for details.\n\nIn Apollo Server 2, add `playground: false` to your `ApolloServer` constructor: `new ApolloServer({ playground: false })`. This will replace GraphQL Playground with an attempt to execute a GraphQL operation, which will likely display an error in the browser.\n\nIf you disable GraphQL Playground, any users who rely on it to execute GraphQL operations will need an alternative, such as the [Apollo Studio Explorer's account-free Sandbox](https://www.apollographql.com/docs/studio/explorer/#account-free-sandbox).\n\n### Credit\n\nThis vulnerability was discovered by @Ry0taK. Thank you!\n\nThe fix to GraphQL Playground was developed by @acao and @glasser with help from @imolorhe, @divyenduz, and @benjie.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Read the [`graphql-playground` advisory](https://github.com/graphql/graphql-playground/security/advisories/GHSA-59r9-6jp6-jcm7)\n* Open an issue in [the `apollo-server` repo](https://github.com/apollographql/apollo-server/)\n* If the issue involves confidential information, email us at [security@apollographql.com](mailto:security@apollographql.com)\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-2p3c-p3qw-69r4",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The graphql-upload library included in Apollo Server 2 is vulnerable to CSRF mutations"
              },
              "fullDescription": {
                "text": "### Impact\nThe [graphql-upload](https://www.npmjs.com/package/graphql-upload) npm package can execute GraphQL operations contained in `content-type: multipart/form-data` POST requests. Because they are POST requests, they can contain GraphQL mutations. Because they use `content-type: multipart/form-data`, they can be \u0026#34;simple requests\u0026#34; which are not preflighted by browsers.\n\nIf your GraphQL server uses `graphql-upload` and uses `SameSite=None` cookies for authentication, then JS on any origin can cause browsers to send cookie-authenticated mutations to your GraphQL server, which will be executed without checking your CORS policy first. (The attack won\u0026#39;t be able to see the response to the mutation if your CORS policy is set up properly, but the side effects of the mutation will still happen.)\n\nAdditionally, if your GraphQL server uses `graphql-upload` and relies on network properties for security (whether by explicitly looking at the client\u0026#39;s IP address or by only being available on a private network), then JS on any origin can cause browsers (which may be on a private network or have an allowed IP address) to send mutations to your GraphQL server, which will be executed without checking your CORS policy first. (This attack does not require your server to use cookies. It is in some cases prevented by some browsers such as Chrome.)\n\nApollo Server 2 bundled `graphql-upload` and enabled it by default, so by default, Apollo Server 2 servers are vulnerable to these CSRF attacks.  (Apollo Server 1 did not bundle `graphql-upload`. Apollo Server 3 no longer bundles `graphql-upload`, although AS3\u0026#39;s docs do document how to manually integrate with `graphql-upload`.) It is enabled even if your server makes no use of the upload functionality.\n\nIf you are running Apollo Server 2 (older than v2.25.4) and do not specify `uploads: false` to `new ApolloServer`, then you are vulnerable to this CSRF mutation attack.\n\nWe recently introduced an opt-in CSRF prevention feature in Apollo Server 3.7.  This feature successfully protects against CSRF even if you have manually integrated your AS3.7 server with `graphql-upload`. However, this feature is not available for Apollo Server 2.\n\n### Patches\nIf you are using Apollo Server 2 and do *not* actually use uploads in your schema (ie, the `Upload` scalar is not used as the argument to any field or in any input object definition, and you do not specify `uploads` to `new ApolloServer`), then upgrading to Apollo Server 2.25.4 will automatically disable `graphql-upload` in your server.  This will fix the CSRF mutation vulnerability.\n\nUpgrading to v2.25.4 does still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations. To protect yourself against these potentially lower impact CSRF attack, we encourage upgrading to Apollo Server v3.7 and enabling CSRF prevention. See [the Apollo Server 3 migration guide](https://www.apollographql.com/docs/apollo-server/migration/) and the [CSRF prevention docs](https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf) for details.\n\nIf you are actively using the uploads feature with Apollo Server 2, then upgrading to v2.25.4 will not disable the feature and you will still be vulnerable. You should instead upgrade to v3.7 and enable the CSRF prevention feature.\n\nIf you are manually integrating the `graphql-upload` package with any version of Apollo Server (or any Node GraphQL server) and need to continue using the feature, then you must enable some sort of CSRF prevention feature to fix this vulnerability. We recommend the CSRF prevention feature in Apollo Server 3.7.\n\n### Workarounds\nInstead of upgrading your Apollo Server 2 server, you can specify `uploads: false` to `new ApolloServer` to disable the `graphql-upload` integration and protect against CSRF mutations. (Only do this if you do not actually use the uploads feature in your server!) This will still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations; you need to upgrade to v3.7 and enable CSRF prevention to protect against these attacks.\n\n### Related work\n- [PR adding a Security section to the GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-2p3c-p3qw-69r4",
              "help": {
                "text": "Vulnerability GHSA-2p3c-p3qw-69r4\nSeverity: MEDIUM\nPackage: apollo-server\nFixed Version: 2.25.4\nLink: [GHSA-2p3c-p3qw-69r4](https://github.com/advisories/GHSA-2p3c-p3qw-69r4)\n### Impact\nThe [graphql-upload](https://www.npmjs.com/package/graphql-upload) npm package can execute GraphQL operations contained in `content-type: multipart/form-data` POST requests. Because they are POST requests, they can contain GraphQL mutations. Because they use `content-type: multipart/form-data`, they can be \"simple requests\" which are not preflighted by browsers.\n\nIf your GraphQL server uses `graphql-upload` and uses `SameSite=None` cookies for authentication, then JS on any origin can cause browsers to send cookie-authenticated mutations to your GraphQL server, which will be executed without checking your CORS policy first. (The attack won't be able to see the response to the mutation if your CORS policy is set up properly, but the side effects of the mutation will still happen.)\n\nAdditionally, if your GraphQL server uses `graphql-upload` and relies on network properties for security (whether by explicitly looking at the client's IP address or by only being available on a private network), then JS on any origin can cause browsers (which may be on a private network or have an allowed IP address) to send mutations to your GraphQL server, which will be executed without checking your CORS policy first. (This attack does not require your server to use cookies. It is in some cases prevented by some browsers such as Chrome.)\n\nApollo Server 2 bundled `graphql-upload` and enabled it by default, so by default, Apollo Server 2 servers are vulnerable to these CSRF attacks.  (Apollo Server 1 did not bundle `graphql-upload`. Apollo Server 3 no longer bundles `graphql-upload`, although AS3's docs do document how to manually integrate with `graphql-upload`.) It is enabled even if your server makes no use of the upload functionality.\n\nIf you are running Apollo Server 2 (older than v2.25.4) and do not specify `uploads: false` to `new ApolloServer`, then you are vulnerable to this CSRF mutation attack.\n\nWe recently introduced an opt-in CSRF prevention feature in Apollo Server 3.7.  This feature successfully protects against CSRF even if you have manually integrated your AS3.7 server with `graphql-upload`. However, this feature is not available for Apollo Server 2.\n\n### Patches\nIf you are using Apollo Server 2 and do *not* actually use uploads in your schema (ie, the `Upload` scalar is not used as the argument to any field or in any input object definition, and you do not specify `uploads` to `new ApolloServer`), then upgrading to Apollo Server 2.25.4 will automatically disable `graphql-upload` in your server.  This will fix the CSRF mutation vulnerability.\n\nUpgrading to v2.25.4 does still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations. To protect yourself against these potentially lower impact CSRF attack, we encourage upgrading to Apollo Server v3.7 and enabling CSRF prevention. See [the Apollo Server 3 migration guide](https://www.apollographql.com/docs/apollo-server/migration/) and the [CSRF prevention docs](https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf) for details.\n\nIf you are actively using the uploads feature with Apollo Server 2, then upgrading to v2.25.4 will not disable the feature and you will still be vulnerable. You should instead upgrade to v3.7 and enable the CSRF prevention feature.\n\nIf you are manually integrating the `graphql-upload` package with any version of Apollo Server (or any Node GraphQL server) and need to continue using the feature, then you must enable some sort of CSRF prevention feature to fix this vulnerability. We recommend the CSRF prevention feature in Apollo Server 3.7.\n\n### Workarounds\nInstead of upgrading your Apollo Server 2 server, you can specify `uploads: false` to `new ApolloServer` to disable the `graphql-upload` integration and protect against CSRF mutations. (Only do this if you do not actually use the uploads feature in your server!) This will still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations; you need to upgrade to v3.7 and enable CSRF prevention to protect against these attacks.\n\n### Related work\n- [PR adding a Security section to the GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64)",
                "markdown": "**Vulnerability GHSA-2p3c-p3qw-69r4**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|apollo-server|2.25.4|[GHSA-2p3c-p3qw-69r4](https://github.com/advisories/GHSA-2p3c-p3qw-69r4)|\n\n### Impact\nThe [graphql-upload](https://www.npmjs.com/package/graphql-upload) npm package can execute GraphQL operations contained in `content-type: multipart/form-data` POST requests. Because they are POST requests, they can contain GraphQL mutations. Because they use `content-type: multipart/form-data`, they can be \"simple requests\" which are not preflighted by browsers.\n\nIf your GraphQL server uses `graphql-upload` and uses `SameSite=None` cookies for authentication, then JS on any origin can cause browsers to send cookie-authenticated mutations to your GraphQL server, which will be executed without checking your CORS policy first. (The attack won't be able to see the response to the mutation if your CORS policy is set up properly, but the side effects of the mutation will still happen.)\n\nAdditionally, if your GraphQL server uses `graphql-upload` and relies on network properties for security (whether by explicitly looking at the client's IP address or by only being available on a private network), then JS on any origin can cause browsers (which may be on a private network or have an allowed IP address) to send mutations to your GraphQL server, which will be executed without checking your CORS policy first. (This attack does not require your server to use cookies. It is in some cases prevented by some browsers such as Chrome.)\n\nApollo Server 2 bundled `graphql-upload` and enabled it by default, so by default, Apollo Server 2 servers are vulnerable to these CSRF attacks.  (Apollo Server 1 did not bundle `graphql-upload`. Apollo Server 3 no longer bundles `graphql-upload`, although AS3's docs do document how to manually integrate with `graphql-upload`.) It is enabled even if your server makes no use of the upload functionality.\n\nIf you are running Apollo Server 2 (older than v2.25.4) and do not specify `uploads: false` to `new ApolloServer`, then you are vulnerable to this CSRF mutation attack.\n\nWe recently introduced an opt-in CSRF prevention feature in Apollo Server 3.7.  This feature successfully protects against CSRF even if you have manually integrated your AS3.7 server with `graphql-upload`. However, this feature is not available for Apollo Server 2.\n\n### Patches\nIf you are using Apollo Server 2 and do *not* actually use uploads in your schema (ie, the `Upload` scalar is not used as the argument to any field or in any input object definition, and you do not specify `uploads` to `new ApolloServer`), then upgrading to Apollo Server 2.25.4 will automatically disable `graphql-upload` in your server.  This will fix the CSRF mutation vulnerability.\n\nUpgrading to v2.25.4 does still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations. To protect yourself against these potentially lower impact CSRF attack, we encourage upgrading to Apollo Server v3.7 and enabling CSRF prevention. See [the Apollo Server 3 migration guide](https://www.apollographql.com/docs/apollo-server/migration/) and the [CSRF prevention docs](https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf) for details.\n\nIf you are actively using the uploads feature with Apollo Server 2, then upgrading to v2.25.4 will not disable the feature and you will still be vulnerable. You should instead upgrade to v3.7 and enable the CSRF prevention feature.\n\nIf you are manually integrating the `graphql-upload` package with any version of Apollo Server (or any Node GraphQL server) and need to continue using the feature, then you must enable some sort of CSRF prevention feature to fix this vulnerability. We recommend the CSRF prevention feature in Apollo Server 3.7.\n\n### Workarounds\nInstead of upgrading your Apollo Server 2 server, you can specify `uploads: false` to `new ApolloServer` to disable the `graphql-upload` integration and protect against CSRF mutations. (Only do this if you do not actually use the uploads feature in your server!) This will still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations; you need to upgrade to v3.7 and enable CSRF prevention to protect against these attacks.\n\n### Related work\n- [PR adding a Security section to the GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45857",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "axios: exposure of confidential data stored in cookies"
              },
              "fullDescription": {
                "text": "An issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45857",
              "help": {
                "text": "Vulnerability CVE-2023-45857\nSeverity: MEDIUM\nPackage: axios\nFixed Version: 1.6.0, 0.28.0\nLink: [CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)\nAn issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information.",
                "markdown": "**Vulnerability CVE-2023-45857**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|axios|1.6.0, 0.28.0|[CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)|\n\nAn issue discovered in Axios 1.5.1 inadvertently reveals the confidential XSRF-TOKEN stored in cookies by including it in the HTTP header X-XSRF-TOKEN for every request made to any host allowing attackers to view sensitive information."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-4068",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "braces: fails to limit the number of characters it can handle"
              },
              "fullDescription": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \u0026#34;imbalanced braces\u0026#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4068",
              "help": {
                "text": "Vulnerability CVE-2024-4068\nSeverity: HIGH\nPackage: braces\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "**Vulnerability CVE-2024-4068**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|braces|3.0.3|[CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)|\n\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-1365",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "cross-fetch: Exposure of Private Personal Information to an Unauthorized Actor"
              },
              "fullDescription": {
                "text": "Exposure of Private Personal Information to an Unauthorized Actor in GitHub repository lquixada/cross-fetch prior to 3.1.5."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-1365",
              "help": {
                "text": "Vulnerability CVE-2022-1365\nSeverity: MEDIUM\nPackage: cross-fetch\nFixed Version: 3.1.5, 2.2.6\nLink: [CVE-2022-1365](https://avd.aquasec.com/nvd/cve-2022-1365)\nExposure of Private Personal Information to an Unauthorized Actor in GitHub repository lquixada/cross-fetch prior to 3.1.5.",
                "markdown": "**Vulnerability CVE-2022-1365**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|cross-fetch|3.1.5, 2.2.6|[CVE-2022-1365](https://avd.aquasec.com/nvd/cve-2022-1365)|\n\nExposure of Private Personal Information to an Unauthorized Actor in GitHub repository lquixada/cross-fetch prior to 3.1.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-33587",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-css-what: does not ensure that attribute parsing has linear time complexity relative to the size of the input"
              },
              "fullDescription": {
                "text": "The css-what package 4.0.0 through 5.0.0 for Node.js does not ensure that attribute parsing has Linear Time Complexity relative to the size of the input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33587",
              "help": {
                "text": "Vulnerability CVE-2021-33587\nSeverity: HIGH\nPackage: css-what\nFixed Version: 5.0.1\nLink: [CVE-2021-33587](https://avd.aquasec.com/nvd/cve-2021-33587)\nThe css-what package 4.0.0 through 5.0.0 for Node.js does not ensure that attribute parsing has Linear Time Complexity relative to the size of the input.",
                "markdown": "**Vulnerability CVE-2021-33587**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|css-what|5.0.1|[CVE-2021-33587](https://avd.aquasec.com/nvd/cve-2021-33587)|\n\nThe css-what package 4.0.0 through 5.0.0 for Node.js does not ensure that attribute parsing has Linear Time Complexity relative to the size of the input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-16137",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-debug: Regular expression Denial of Service"
              },
              "fullDescription": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-16137",
              "help": {
                "text": "Vulnerability CVE-2017-16137\nSeverity: LOW\nPackage: debug\nFixed Version: 2.6.9, 3.1.0, 3.2.7, 4.3.1\nLink: [CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)\nThe debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "**Vulnerability CVE-2017-16137**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|debug|2.6.9, 3.1.0, 3.2.7, 4.3.1|[CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)|\n\nThe debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-24434",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "dicer: nodejs service crash by sending a crafted payload"
              },
              "fullDescription": {
                "text": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24434",
              "help": {
                "text": "Vulnerability CVE-2022-24434\nSeverity: HIGH\nPackage: dicer\nFixed Version: \nLink: [CVE-2022-24434](https://avd.aquasec.com/nvd/cve-2022-24434)\nThis affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
                "markdown": "**Vulnerability CVE-2022-24434**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|dicer||[CVE-2022-24434](https://avd.aquasec.com/nvd/cve-2022-24434)|\n\nThis affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-29041",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: cause malformed URLs to be evaluated"
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29041",
              "help": {
                "text": "Vulnerability CVE-2024-29041\nSeverity: MEDIUM\nPackage: express\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
                "markdown": "**Vulnerability CVE-2024-29041**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|express|4.19.2, 5.0.0-beta.3|[CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)|\n\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-984p-xq9m-4rjw",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Rate Limiting Bypass in express-brute"
              },
              "fullDescription": {
                "text": "All versions of `express-brute` are vulnerable to Rate Limiting Bypass. Concurrent requests may lead to race conditions that cause the package to incorrectly count requests. This may allow an attacker to bypass the rate limiting provided by the package and execute requests without limiting.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative module until a fix is made available."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-984p-xq9m-4rjw",
              "help": {
                "text": "Vulnerability GHSA-984p-xq9m-4rjw\nSeverity: MEDIUM\nPackage: express-brute\nFixed Version: \nLink: [GHSA-984p-xq9m-4rjw](https://github.com/advisories/GHSA-984p-xq9m-4rjw)\nAll versions of `express-brute` are vulnerable to Rate Limiting Bypass. Concurrent requests may lead to race conditions that cause the package to incorrectly count requests. This may allow an attacker to bypass the rate limiting provided by the package and execute requests without limiting.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative module until a fix is made available.",
                "markdown": "**Vulnerability GHSA-984p-xq9m-4rjw**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|express-brute||[GHSA-984p-xq9m-4rjw](https://github.com/advisories/GHSA-984p-xq9m-4rjw)|\n\nAll versions of `express-brute` are vulnerable to Rate Limiting Bypass. Concurrent requests may lead to race conditions that cause the package to incorrectly count requests. This may allow an attacker to bypass the rate limiting provided by the package and execute requests without limiting.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative module until a fix is made available."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-36313",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "file-type: a malformed MKV file could cause the file type detector to get caught in an infinite loop"
              },
              "fullDescription": {
                "text": "An issue was discovered in the file-type package before 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-36313",
              "help": {
                "text": "Vulnerability CVE-2022-36313\nSeverity: HIGH\nPackage: file-type\nFixed Version: 16.5.4, 17.1.3\nLink: [CVE-2022-36313](https://avd.aquasec.com/nvd/cve-2022-36313)\nAn issue was discovered in the file-type package before 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack.",
                "markdown": "**Vulnerability CVE-2022-36313**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|file-type|16.5.4, 17.1.3|[CVE-2022-36313](https://avd.aquasec.com/nvd/cve-2022-36313)|\n\nAn issue was discovered in the file-type package before 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-7wwv-vh3v-89cq",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ReDOS vulnerabities: multiple grammars"
              },
              "fullDescription": {
                "text": "### Impact: Potential ReDOS vulnerabilities (exponential and polynomial RegEx backtracking)\n\n[oswasp](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS): \n\n\u0026gt; The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\n\nIf are you are using Highlight.js to highlight user-provided data you are possibly vulnerable.  On the client-side (in a browser or Electron environment) risks could include lengthy freezes or crashes... On the server-side infinite freezes could occur... effectively preventing users from accessing your app or service (ie, Denial of Service).\n\nThis is an issue with grammars shipped with the parser (and potentially 3rd party grammars also), not the parser itself. If you are using Highlight.js with any of the following grammars you are vulnerable.  If you are using `highlightAuto` to detect the language (and have any of these grammars registered) you are vulnerable. Exponential grammars (C, Perl, JavaScript) are auto-registered when using the common grammar subset/library `require(\u0026#39;highlight.js/lib/common\u0026#39;)` as of 10.4.0 - see https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.0/build/highlight.js\n\nAll versions prior to 10.4.1 are vulnerable, including version 9.18.5. \n\n**Grammars with exponential backtracking issues:**\n\n  - c-like (c, cpp, arduino)\n  - handlebars (htmlbars)\n  - gams\n  - perl\n  - jboss-cli\n  - r\n  - erlang-repl\n  - powershell\n  - routeros\n  - livescript (10.4.0 and 9.18.5 included this fix)\n  - javascript \u0026amp; typescript (10.4.0 included partial fixes)\n\nAnd of course any aliases of those languages have the same issue. ie: `hpp` is no safer than `cpp`.\n\n**Grammars with polynomial backtracking issues:**\n\n- kotlin\n- gcode\n- d\n- aspectj\n- moonscript\n- coffeescript/livescript\n- csharp\n- scilab\n- crystal\n- elixir\n- basic\n- ebnf\n- ruby\n- fortran/irpf90\n- livecodeserver\n- yaml\n- x86asm\n- dsconfig\n- markdown\n- ruleslanguage\n- xquery\n- sqf\n\nAnd again: any aliases of those languages have the same issue. ie: `ruby` and `rb` share the same ruby issues.\n\n\n### Patches\n\n- Version 10.4.1 resolves these vulnerabilities.  Please upgrade.\n\n### Workarounds / Mitigations\n\n- Discontinue use the affected grammars. (or perhaps use only those with poly vs exponential issues)\n- Attempt cherry-picking the grammar fixes into older versions...\n- Attempt using newer CDN versions of any affected languages.  (ie using an older CDN version of the library with newer CDN grammars).  Your mileage may vary.\n\n### References\n\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue: https://github.com/highlightjs/highlight.js/issues\n* Email us at [security@highlightjs.com](mailto:security@highlightjs.com)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-7wwv-vh3v-89cq",
              "help": {
                "text": "Vulnerability GHSA-7wwv-vh3v-89cq\nSeverity: MEDIUM\nPackage: highlight.js\nFixed Version: 10.4.1\nLink: [GHSA-7wwv-vh3v-89cq](https://github.com/advisories/GHSA-7wwv-vh3v-89cq)\n### Impact: Potential ReDOS vulnerabilities (exponential and polynomial RegEx backtracking)\n\n[oswasp](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS): \n\n\u003e The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\n\nIf are you are using Highlight.js to highlight user-provided data you are possibly vulnerable.  On the client-side (in a browser or Electron environment) risks could include lengthy freezes or crashes... On the server-side infinite freezes could occur... effectively preventing users from accessing your app or service (ie, Denial of Service).\n\nThis is an issue with grammars shipped with the parser (and potentially 3rd party grammars also), not the parser itself. If you are using Highlight.js with any of the following grammars you are vulnerable.  If you are using `highlightAuto` to detect the language (and have any of these grammars registered) you are vulnerable. Exponential grammars (C, Perl, JavaScript) are auto-registered when using the common grammar subset/library `require('highlight.js/lib/common')` as of 10.4.0 - see https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.0/build/highlight.js\n\nAll versions prior to 10.4.1 are vulnerable, including version 9.18.5. \n\n**Grammars with exponential backtracking issues:**\n\n  - c-like (c, cpp, arduino)\n  - handlebars (htmlbars)\n  - gams\n  - perl\n  - jboss-cli\n  - r\n  - erlang-repl\n  - powershell\n  - routeros\n  - livescript (10.4.0 and 9.18.5 included this fix)\n  - javascript \u0026 typescript (10.4.0 included partial fixes)\n\nAnd of course any aliases of those languages have the same issue. ie: `hpp` is no safer than `cpp`.\n\n**Grammars with polynomial backtracking issues:**\n\n- kotlin\n- gcode\n- d\n- aspectj\n- moonscript\n- coffeescript/livescript\n- csharp\n- scilab\n- crystal\n- elixir\n- basic\n- ebnf\n- ruby\n- fortran/irpf90\n- livecodeserver\n- yaml\n- x86asm\n- dsconfig\n- markdown\n- ruleslanguage\n- xquery\n- sqf\n\nAnd again: any aliases of those languages have the same issue. ie: `ruby` and `rb` share the same ruby issues.\n\n\n### Patches\n\n- Version 10.4.1 resolves these vulnerabilities.  Please upgrade.\n\n### Workarounds / Mitigations\n\n- Discontinue use the affected grammars. (or perhaps use only those with poly vs exponential issues)\n- Attempt cherry-picking the grammar fixes into older versions...\n- Attempt using newer CDN versions of any affected languages.  (ie using an older CDN version of the library with newer CDN grammars).  Your mileage may vary.\n\n### References\n\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue: https://github.com/highlightjs/highlight.js/issues\n* Email us at [security@highlightjs.com](mailto:security@highlightjs.com)",
                "markdown": "**Vulnerability GHSA-7wwv-vh3v-89cq**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|highlight.js|10.4.1|[GHSA-7wwv-vh3v-89cq](https://github.com/advisories/GHSA-7wwv-vh3v-89cq)|\n\n### Impact: Potential ReDOS vulnerabilities (exponential and polynomial RegEx backtracking)\n\n[oswasp](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS): \n\n\u003e The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\n\nIf are you are using Highlight.js to highlight user-provided data you are possibly vulnerable.  On the client-side (in a browser or Electron environment) risks could include lengthy freezes or crashes... On the server-side infinite freezes could occur... effectively preventing users from accessing your app or service (ie, Denial of Service).\n\nThis is an issue with grammars shipped with the parser (and potentially 3rd party grammars also), not the parser itself. If you are using Highlight.js with any of the following grammars you are vulnerable.  If you are using `highlightAuto` to detect the language (and have any of these grammars registered) you are vulnerable. Exponential grammars (C, Perl, JavaScript) are auto-registered when using the common grammar subset/library `require('highlight.js/lib/common')` as of 10.4.0 - see https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.0/build/highlight.js\n\nAll versions prior to 10.4.1 are vulnerable, including version 9.18.5. \n\n**Grammars with exponential backtracking issues:**\n\n  - c-like (c, cpp, arduino)\n  - handlebars (htmlbars)\n  - gams\n  - perl\n  - jboss-cli\n  - r\n  - erlang-repl\n  - powershell\n  - routeros\n  - livescript (10.4.0 and 9.18.5 included this fix)\n  - javascript \u0026 typescript (10.4.0 included partial fixes)\n\nAnd of course any aliases of those languages have the same issue. ie: `hpp` is no safer than `cpp`.\n\n**Grammars with polynomial backtracking issues:**\n\n- kotlin\n- gcode\n- d\n- aspectj\n- moonscript\n- coffeescript/livescript\n- csharp\n- scilab\n- crystal\n- elixir\n- basic\n- ebnf\n- ruby\n- fortran/irpf90\n- livecodeserver\n- yaml\n- x86asm\n- dsconfig\n- markdown\n- ruleslanguage\n- xquery\n- sqf\n\nAnd again: any aliases of those languages have the same issue. ie: `ruby` and `rb` share the same ruby issues.\n\n\n### Patches\n\n- Version 10.4.1 resolves these vulnerabilities.  Please upgrade.\n\n### Workarounds / Mitigations\n\n- Discontinue use the affected grammars. (or perhaps use only those with poly vs exponential issues)\n- Attempt cherry-picking the grammar fixes into older versions...\n- Attempt using newer CDN versions of any affected languages.  (ie using an older CDN version of the library with newer CDN grammars).  Your mileage may vary.\n\n### References\n\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue: https://github.com/highlightjs/highlight.js/issues\n* Email us at [security@highlightjs.com](mailto:security@highlightjs.com)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-20066",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jsdom: improper loading of local resources"
              },
              "fullDescription": {
                "text": "JSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-20066",
              "help": {
                "text": "Vulnerability CVE-2021-20066\nSeverity: MEDIUM\nPackage: jsdom\nFixed Version: 16.5.0\nLink: [CVE-2021-20066](https://avd.aquasec.com/nvd/cve-2021-20066)\nJSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled.",
                "markdown": "**Vulnerability CVE-2021-20066**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jsdom|16.5.0|[CVE-2021-20066](https://avd.aquasec.com/nvd/cve-2021-20066)|\n\nJSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-46175",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "json5: Prototype Pollution in JSON5 via Parse Method"
              },
              "fullDescription": {
                "text": "JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-46175",
              "help": {
                "text": "Vulnerability CVE-2022-46175\nSeverity: HIGH\nPackage: json5\nFixed Version: 2.2.2, 1.0.2\nLink: [CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)\nJSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later.",
                "markdown": "**Vulnerability CVE-2022-46175**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|json5|2.2.2, 1.0.2|[CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)|\n\nJSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-28243",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "KaTeX is a JavaScript library for TeX math rendering on the web. KaTeX ..."
              },
              "fullDescription": {
                "text": "KaTeX is a JavaScript library for TeX math rendering on the web. KaTeX users who render untrusted mathematical expressions could encounter malicious input using `\\edef` that causes a near-infinite loop, despite setting `maxExpand` to avoid such loops. This can be used as an availability attack, where e.g. a client rendering another user\u0026#39;s KaTeX input will be unable to use the site due to memory overflow, tying up the main thread, or stack overflow. Upgrade to KaTeX v0.16.10 to remove this vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28243",
              "help": {
                "text": "Vulnerability CVE-2024-28243\nSeverity: MEDIUM\nPackage: katex\nFixed Version: 0.16.10\nLink: [CVE-2024-28243](https://avd.aquasec.com/nvd/cve-2024-28243)\nKaTeX is a JavaScript library for TeX math rendering on the web. KaTeX users who render untrusted mathematical expressions could encounter malicious input using `\\edef` that causes a near-infinite loop, despite setting `maxExpand` to avoid such loops. This can be used as an availability attack, where e.g. a client rendering another user's KaTeX input will be unable to use the site due to memory overflow, tying up the main thread, or stack overflow. Upgrade to KaTeX v0.16.10 to remove this vulnerability.",
                "markdown": "**Vulnerability CVE-2024-28243**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|katex|0.16.10|[CVE-2024-28243](https://avd.aquasec.com/nvd/cve-2024-28243)|\n\nKaTeX is a JavaScript library for TeX math rendering on the web. KaTeX users who render untrusted mathematical expressions could encounter malicious input using `\\edef` that causes a near-infinite loop, despite setting `maxExpand` to avoid such loops. This can be used as an availability attack, where e.g. a client rendering another user's KaTeX input will be unable to use the site due to memory overflow, tying up the main thread, or stack overflow. Upgrade to KaTeX v0.16.10 to remove this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28245",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "KaTeX is a JavaScript library for TeX math rendering on the web. KaTeX ..."
              },
              "fullDescription": {
                "text": "KaTeX is a JavaScript library for TeX math rendering on the web. KaTeX users who render untrusted mathematical expressions could encounter malicious input using `\\includegraphics` that runs arbitrary JavaScript, or generate invalid HTML. Upgrade to KaTeX v0.16.10 to remove this vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28245",
              "help": {
                "text": "Vulnerability CVE-2024-28245\nSeverity: MEDIUM\nPackage: katex\nFixed Version: 0.16.10\nLink: [CVE-2024-28245](https://avd.aquasec.com/nvd/cve-2024-28245)\nKaTeX is a JavaScript library for TeX math rendering on the web. KaTeX users who render untrusted mathematical expressions could encounter malicious input using `\\includegraphics` that runs arbitrary JavaScript, or generate invalid HTML. Upgrade to KaTeX v0.16.10 to remove this vulnerability.",
                "markdown": "**Vulnerability CVE-2024-28245**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|katex|0.16.10|[CVE-2024-28245](https://avd.aquasec.com/nvd/cve-2024-28245)|\n\nKaTeX is a JavaScript library for TeX math rendering on the web. KaTeX users who render untrusted mathematical expressions could encounter malicious input using `\\includegraphics` that runs arbitrary JavaScript, or generate invalid HTML. Upgrade to KaTeX v0.16.10 to remove this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28246",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "KaTeX is a JavaScript library for TeX math rendering on the web. Code  ..."
              },
              "fullDescription": {
                "text": "KaTeX is a JavaScript library for TeX math rendering on the web. Code that uses KaTeX\u0026#39;s `trust` option, specifically that provides a function to blacklist certain URL protocols, can be fooled by URLs in malicious inputs that use uppercase characters in the protocol. In particular, this can allow for malicious input to generate `javascript:` links in the output, even if the `trust` function tries to forbid this protocol via `trust: (context) =\u0026gt; context.protocol !== \u0026#39;javascript\u0026#39;`. Upgrade to KaTeX v0.16.10 to remove this vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28246",
              "help": {
                "text": "Vulnerability CVE-2024-28246\nSeverity: MEDIUM\nPackage: katex\nFixed Version: 0.16.10\nLink: [CVE-2024-28246](https://avd.aquasec.com/nvd/cve-2024-28246)\nKaTeX is a JavaScript library for TeX math rendering on the web. Code that uses KaTeX's `trust` option, specifically that provides a function to blacklist certain URL protocols, can be fooled by URLs in malicious inputs that use uppercase characters in the protocol. In particular, this can allow for malicious input to generate `javascript:` links in the output, even if the `trust` function tries to forbid this protocol via `trust: (context) =\u003e context.protocol !== 'javascript'`. Upgrade to KaTeX v0.16.10 to remove this vulnerability.",
                "markdown": "**Vulnerability CVE-2024-28246**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|katex|0.16.10|[CVE-2024-28246](https://avd.aquasec.com/nvd/cve-2024-28246)|\n\nKaTeX is a JavaScript library for TeX math rendering on the web. Code that uses KaTeX's `trust` option, specifically that provides a function to blacklist certain URL protocols, can be fooled by URLs in malicious inputs that use uppercase characters in the protocol. In particular, this can allow for malicious input to generate `javascript:` links in the output, even if the `trust` function tries to forbid this protocol via `trust: (context) =\u003e context.protocol !== 'javascript'`. Upgrade to KaTeX v0.16.10 to remove this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2016-20018",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Knex.js has a limited SQL injection vulnerability"
              },
              "fullDescription": {
                "text": "Knex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-20018",
              "help": {
                "text": "Vulnerability CVE-2016-20018\nSeverity: HIGH\nPackage: knex\nFixed Version: 2.4.0\nLink: [CVE-2016-20018](https://avd.aquasec.com/nvd/cve-2016-20018)\nKnex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query.",
                "markdown": "**Vulnerability CVE-2016-20018**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|knex|2.4.0|[CVE-2016-20018](https://avd.aquasec.com/nvd/cve-2016-20018)|\n\nKnex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-22467",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "luxon: Inefficient regular expression complexity in luxon.js"
              },
              "fullDescription": {
                "text": "Luxon is a library for working with dates and times in JavaScript. On the 1.x branch prior to 1.38.1, the 2.x branch prior to 2.5.2, and the 3.x branch on 3.2.1, Luxon\u0026#39;s `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks. This issue also appears in Moment as CVE-2022-31129. Versions 1.38.1, 2.5.2, and 3.2.1 contain patches for this issue. As a workaround, limit the length of the input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-22467",
              "help": {
                "text": "Vulnerability CVE-2023-22467\nSeverity: HIGH\nPackage: luxon\nFixed Version: 1.28.1, 2.5.2, 3.2.1\nLink: [CVE-2023-22467](https://avd.aquasec.com/nvd/cve-2023-22467)\nLuxon is a library for working with dates and times in JavaScript. On the 1.x branch prior to 1.38.1, the 2.x branch prior to 2.5.2, and the 3.x branch on 3.2.1, Luxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks. This issue also appears in Moment as CVE-2022-31129. Versions 1.38.1, 2.5.2, and 3.2.1 contain patches for this issue. As a workaround, limit the length of the input.",
                "markdown": "**Vulnerability CVE-2023-22467**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|luxon|1.28.1, 2.5.2, 3.2.1|[CVE-2023-22467](https://avd.aquasec.com/nvd/cve-2023-22467)|\n\nLuxon is a library for working with dates and times in JavaScript. On the 1.x branch prior to 1.38.1, the 2.x branch prior to 2.5.2, and the 3.x branch on 3.2.1, Luxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks. This issue also appears in Moment as CVE-2022-31129. Versions 1.38.1, 2.5.2, and 3.2.1 contain patches for this issue. As a workaround, limit the length of the input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-21670",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "markdown-it is a Markdown parser. Prior to version 1.3.2, special patt ..."
              },
              "fullDescription": {
                "text": "markdown-it is a Markdown parser. Prior to version 1.3.2, special patterns with length greater than 50 thousand characterss could slow down the parser significantly. Users should upgrade to version 12.3.2 to receive a patch. There are no known workarounds aside from upgrading."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21670",
              "help": {
                "text": "Vulnerability CVE-2022-21670\nSeverity: MEDIUM\nPackage: markdown-it\nFixed Version: 12.3.2\nLink: [CVE-2022-21670](https://avd.aquasec.com/nvd/cve-2022-21670)\nmarkdown-it is a Markdown parser. Prior to version 1.3.2, special patterns with length greater than 50 thousand characterss could slow down the parser significantly. Users should upgrade to version 12.3.2 to receive a patch. There are no known workarounds aside from upgrading.",
                "markdown": "**Vulnerability CVE-2022-21670**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|markdown-it|12.3.2|[CVE-2022-21670](https://avd.aquasec.com/nvd/cve-2022-21670)|\n\nmarkdown-it is a Markdown parser. Prior to version 1.3.2, special patterns with length greater than 50 thousand characterss could slow down the parser significantly. Users should upgrade to version 12.3.2 to receive a patch. There are no known workarounds aside from upgrading."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-28459",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "markdown-it-decorate vulnerable to cross-site scripting (XSS)"
              },
              "fullDescription": {
                "text": "This affects all versions of package markdown-it-decorate. An attacker can add an event handler or use javascript:xxx for the link."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28459",
              "help": {
                "text": "Vulnerability CVE-2020-28459\nSeverity: MEDIUM\nPackage: markdown-it-decorate\nFixed Version: \nLink: [CVE-2020-28459](https://avd.aquasec.com/nvd/cve-2020-28459)\nThis affects all versions of package markdown-it-decorate. An attacker can add an event handler or use javascript:xxx for the link.",
                "markdown": "**Vulnerability CVE-2020-28459**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|markdown-it-decorate||[CVE-2020-28459](https://avd.aquasec.com/nvd/cve-2020-28459)|\n\nThis affects all versions of package markdown-it-decorate. An attacker can add an event handler or use javascript:xxx for the link."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-32050",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Some MongoDB Drivers may erroneously publish events containing authent ..."
              },
              "fullDescription": {
                "text": "Some MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-32050",
              "help": {
                "text": "Vulnerability CVE-2021-32050\nSeverity: MEDIUM\nPackage: mongodb\nFixed Version: 3.6.10, 4.17.0, 5.8.0\nLink: [CVE-2021-32050](https://avd.aquasec.com/nvd/cve-2021-32050)\nSome MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n",
                "markdown": "**Vulnerability CVE-2021-32050**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mongodb|3.6.10, 4.17.0, 5.8.0|[CVE-2021-32050](https://avd.aquasec.com/nvd/cve-2021-32050)|\n\nSome MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-21508",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql2: Remote Code Execution"
              },
              "fullDescription": {
                "text": "Versions of the package mysql2 before 3.9.4 are vulnerable to Remote Code Execution (RCE) via the readCodeFor function due to improper validation of the supportBigNumbers and bigNumberStrings values."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21508",
              "help": {
                "text": "Vulnerability CVE-2024-21508\nSeverity: CRITICAL\nPackage: mysql2\nFixed Version: 3.9.4\nLink: [CVE-2024-21508](https://avd.aquasec.com/nvd/cve-2024-21508)\nVersions of the package mysql2 before 3.9.4 are vulnerable to Remote Code Execution (RCE) via the readCodeFor function due to improper validation of the supportBigNumbers and bigNumberStrings values.",
                "markdown": "**Vulnerability CVE-2024-21508**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|mysql2|3.9.4|[CVE-2024-21508](https://avd.aquasec.com/nvd/cve-2024-21508)|\n\nVersions of the package mysql2 before 3.9.4 are vulnerable to Remote Code Execution (RCE) via the readCodeFor function due to improper validation of the supportBigNumbers and bigNumberStrings values."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-21511",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql2: Arbitrary Code Injection due to improper sanitization of the timezone parameter"
              },
              "fullDescription": {
                "text": "Versions of the package mysql2 before 3.9.7 are vulnerable to Arbitrary Code Injection due to improper sanitization of the timezone parameter in the readCodeFor function by calling a native MySQL Server date/time function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21511",
              "help": {
                "text": "Vulnerability CVE-2024-21511\nSeverity: CRITICAL\nPackage: mysql2\nFixed Version: 3.9.7\nLink: [CVE-2024-21511](https://avd.aquasec.com/nvd/cve-2024-21511)\nVersions of the package mysql2 before 3.9.7 are vulnerable to Arbitrary Code Injection due to improper sanitization of the timezone parameter in the readCodeFor function by calling a native MySQL Server date/time function.",
                "markdown": "**Vulnerability CVE-2024-21511**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|mysql2|3.9.7|[CVE-2024-21511](https://avd.aquasec.com/nvd/cve-2024-21511)|\n\nVersions of the package mysql2 before 3.9.7 are vulnerable to Arbitrary Code Injection due to improper sanitization of the timezone parameter in the readCodeFor function by calling a native MySQL Server date/time function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-21512",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql2:vulnerable to Prototype Pollution due to improper user input sanitization"
              },
              "fullDescription": {
                "text": "Versions of the package mysql2 before 3.9.8 are vulnerable to Prototype Pollution due to improper user input sanitization passed to fields and tables when using nestTables."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21512",
              "help": {
                "text": "Vulnerability CVE-2024-21512\nSeverity: HIGH\nPackage: mysql2\nFixed Version: 3.9.8\nLink: [CVE-2024-21512](https://avd.aquasec.com/nvd/cve-2024-21512)\nVersions of the package mysql2 before 3.9.8 are vulnerable to Prototype Pollution due to improper user input sanitization passed to fields and tables when using nestTables.",
                "markdown": "**Vulnerability CVE-2024-21512**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|mysql2|3.9.8|[CVE-2024-21512](https://avd.aquasec.com/nvd/cve-2024-21512)|\n\nVersions of the package mysql2 before 3.9.8 are vulnerable to Prototype Pollution due to improper user input sanitization passed to fields and tables when using nestTables."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-21507",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql2: Improper Input Validation"
              },
              "fullDescription": {
                "text": "Versions of the package mysql2 before 3.9.3 are vulnerable to Improper Input Validation through the keyFromFields function, resulting in cache poisoning. An attacker can inject a colon (:) character within a value of the attacker-crafted key."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21507",
              "help": {
                "text": "Vulnerability CVE-2024-21507\nSeverity: MEDIUM\nPackage: mysql2\nFixed Version: 3.9.3\nLink: [CVE-2024-21507](https://avd.aquasec.com/nvd/cve-2024-21507)\nVersions of the package mysql2 before 3.9.3 are vulnerable to Improper Input Validation through the keyFromFields function, resulting in cache poisoning. An attacker can inject a colon (:) character within a value of the attacker-crafted key.",
                "markdown": "**Vulnerability CVE-2024-21507**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mysql2|3.9.3|[CVE-2024-21507](https://avd.aquasec.com/nvd/cve-2024-21507)|\n\nVersions of the package mysql2 before 3.9.3 are vulnerable to Improper Input Validation through the keyFromFields function, resulting in cache poisoning. An attacker can inject a colon (:) character within a value of the attacker-crafted key."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-21509",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "mysql2: Prototype Poisoning"
              },
              "fullDescription": {
                "text": "Versions of the package mysql2 before 3.9.4 are vulnerable to Prototype Poisoning due to insecure results object creation and improper user input sanitization passed through parserFn in text_parser.js and binary_parser.js."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-21509",
              "help": {
                "text": "Vulnerability CVE-2024-21509\nSeverity: MEDIUM\nPackage: mysql2\nFixed Version: 3.9.4\nLink: [CVE-2024-21509](https://avd.aquasec.com/nvd/cve-2024-21509)\nVersions of the package mysql2 before 3.9.4 are vulnerable to Prototype Poisoning due to insecure results object creation and improper user input sanitization passed through parserFn in text_parser.js and binary_parser.js.",
                "markdown": "**Vulnerability CVE-2024-21509**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|mysql2|3.9.4|[CVE-2024-21509](https://avd.aquasec.com/nvd/cve-2024-21509)|\n\nVersions of the package mysql2 before 3.9.4 are vulnerable to Prototype Poisoning due to insecure results object creation and improper user input sanitization passed through parserFn in text_parser.js and binary_parser.js."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-0235",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-fetch: exposure of sensitive information to an unauthorized actor"
              },
              "fullDescription": {
                "text": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-0235",
              "help": {
                "text": "Vulnerability CVE-2022-0235\nSeverity: HIGH\nPackage: node-fetch\nFixed Version: 3.1.1, 2.6.7\nLink: [CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)\nnode-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
                "markdown": "**Vulnerability CVE-2022-0235**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|node-fetch|3.1.1, 2.6.7|[CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)|\n\nnode-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-15168",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-fetch: size of data after fetch() JS thread leads to DoS"
              },
              "fullDescription": {
                "text": "node-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don\u0026#39;t double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-15168",
              "help": {
                "text": "Vulnerability CVE-2020-15168\nSeverity: LOW\nPackage: node-fetch\nFixed Version: 2.6.1, 3.0.0-beta.9\nLink: [CVE-2020-15168](https://avd.aquasec.com/nvd/cve-2020-15168)\nnode-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.",
                "markdown": "**Vulnerability CVE-2020-15168**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|node-fetch|2.6.1, 3.0.0-beta.9|[CVE-2020-15168](https://avd.aquasec.com/nvd/cve-2020-15168)|\n\nnode-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2015-8851",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-node-uuid: insecure entropy source - Math.random()"
              },
              "fullDescription": {
                "text": "node-uuid before 1.4.4 uses insufficiently random data to create a GUID, which could make it easier for attackers to have unspecified impact via brute force guessing."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2015-8851",
              "help": {
                "text": "Vulnerability CVE-2015-8851\nSeverity: MEDIUM\nPackage: node-uuid\nFixed Version: \u003e=1.4.4\nLink: [CVE-2015-8851](https://avd.aquasec.com/nvd/cve-2015-8851)\nnode-uuid before 1.4.4 uses insufficiently random data to create a GUID, which could make it easier for attackers to have unspecified impact via brute force guessing.",
                "markdown": "**Vulnerability CVE-2015-8851**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|node-uuid|\u003e=1.4.4|[CVE-2015-8851](https://avd.aquasec.com/nvd/cve-2015-8851)|\n\nnode-uuid before 1.4.4 uses insufficiently random data to create a GUID, which could make it easier for attackers to have unspecified impact via brute force guessing."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-9h6g-pr28-7cqp",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodemailer ReDoS when trying to send a specially crafted email"
              },
              "fullDescription": {
                "text": "### Summary\nA ReDoS vulnerability occurs when nodemailer tries to parse img files with the parameter `attachDataUrls` set, causing the stuck of event loop. \nAnother flaw was found when nodemailer tries to parse an attachments with a embedded file, causing the stuck of event loop. \n\n### Details\n\nRegex: /^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/\n\nPath: compile -\u0026gt; getAttachments -\u0026gt; _processDataUrl\n\nRegex: /(\u0026lt;img\\b[^\u0026gt;]* src\\s*=[\\s\u0026#34;\u0026#39;]*)(data:([^;]+);[^\u0026#34;\u0026#39;\u0026gt;\\s]+)/\n\nPath: _convertDataImages\n\n### PoC\n\nhttps://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\nhttps://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\n\n### Impact\n\nReDoS causes the event loop to stuck a specially crafted evil email can cause this problem.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-9h6g-pr28-7cqp",
              "help": {
                "text": "Vulnerability GHSA-9h6g-pr28-7cqp\nSeverity: MEDIUM\nPackage: nodemailer\nFixed Version: 6.9.9\nLink: [GHSA-9h6g-pr28-7cqp](https://github.com/advisories/GHSA-9h6g-pr28-7cqp)\n### Summary\nA ReDoS vulnerability occurs when nodemailer tries to parse img files with the parameter `attachDataUrls` set, causing the stuck of event loop. \nAnother flaw was found when nodemailer tries to parse an attachments with a embedded file, causing the stuck of event loop. \n\n### Details\n\nRegex: /^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/\n\nPath: compile -\u003e getAttachments -\u003e _processDataUrl\n\nRegex: /(\u003cimg\\b[^\u003e]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'\u003e\\s]+)/\n\nPath: _convertDataImages\n\n### PoC\n\nhttps://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\nhttps://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\n\n### Impact\n\nReDoS causes the event loop to stuck a specially crafted evil email can cause this problem.\n",
                "markdown": "**Vulnerability GHSA-9h6g-pr28-7cqp**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|nodemailer|6.9.9|[GHSA-9h6g-pr28-7cqp](https://github.com/advisories/GHSA-9h6g-pr28-7cqp)|\n\n### Summary\nA ReDoS vulnerability occurs when nodemailer tries to parse img files with the parameter `attachDataUrls` set, causing the stuck of event loop. \nAnother flaw was found when nodemailer tries to parse an attachments with a embedded file, causing the stuck of event loop. \n\n### Details\n\nRegex: /^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/\n\nPath: compile -\u003e getAttachments -\u003e _processDataUrl\n\nRegex: /(\u003cimg\\b[^\u003e]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'\u003e\\s]+)/\n\nPath: _convertDataImages\n\n### PoC\n\nhttps://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\nhttps://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\n\n### Impact\n\nReDoS causes the event loop to stuck a specially crafted evil email can cause this problem.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-25896",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "passport: incorrect session regeneration"
              },
              "fullDescription": {
                "text": "This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25896",
              "help": {
                "text": "Vulnerability CVE-2022-25896\nSeverity: MEDIUM\nPackage: passport\nFixed Version: 0.6.0\nLink: [CVE-2022-25896](https://avd.aquasec.com/nvd/cve-2022-25896)\nThis affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.",
                "markdown": "**Vulnerability CVE-2022-25896**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|passport|0.6.0|[CVE-2022-25896](https://avd.aquasec.com/nvd/cve-2022-25896)|\n\nThis affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-41580",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Improper Access Control in passport-oauth2"
              },
              "fullDescription": {
                "text": "The passport-oauth2 package before 1.6.1 for Node.js mishandles the error condition of failure to obtain an access token. This is exploitable in certain use cases where an OAuth identity provider uses an HTTP 200 status code for authentication-failure error reports, and an application grants authorization upon simply receiving the access token (i.e., does not try to use the token). NOTE: the passport-oauth2 vendor does not consider this a passport-oauth2 vulnerability"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-41580",
              "help": {
                "text": "Vulnerability CVE-2021-41580\nSeverity: MEDIUM\nPackage: passport-oauth2\nFixed Version: 1.6.1\nLink: [CVE-2021-41580](https://avd.aquasec.com/nvd/cve-2021-41580)\nThe passport-oauth2 package before 1.6.1 for Node.js mishandles the error condition of failure to obtain an access token. This is exploitable in certain use cases where an OAuth identity provider uses an HTTP 200 status code for authentication-failure error reports, and an application grants authorization upon simply receiving the access token (i.e., does not try to use the token). NOTE: the passport-oauth2 vendor does not consider this a passport-oauth2 vulnerability",
                "markdown": "**Vulnerability CVE-2021-41580**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|passport-oauth2|1.6.1|[CVE-2021-41580](https://avd.aquasec.com/nvd/cve-2021-41580)|\n\nThe passport-oauth2 package before 1.6.1 for Node.js mishandles the error condition of failure to obtain an access token. This is exploitable in certain use cases where an OAuth identity provider uses an HTTP 200 status code for authentication-failure error reports, and an application grants authorization upon simply receiving the access token (i.e., does not try to use the token). NOTE: the passport-oauth2 vendor does not consider this a passport-oauth2 vulnerability"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-36361",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Pug allows JavaScript code execution if an application accepts untrusted input"
              },
              "fullDescription": {
                "text": "Pug through 3.0.2 allows JavaScript code execution if an application accepts untrusted input for the name option of the compileClient, compileFileClient, or compileClientWithDependenciesTracked function. NOTE: these functions are for compiling Pug templates into JavaScript, and there would typically be no reason to allow untrusted callers."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-36361",
              "help": {
                "text": "Vulnerability CVE-2024-36361\nSeverity: HIGH\nPackage: pug-code-gen\nFixed Version: 3.0.3\nLink: [CVE-2024-36361](https://avd.aquasec.com/nvd/cve-2024-36361)\nPug through 3.0.2 allows JavaScript code execution if an application accepts untrusted input for the name option of the compileClient, compileFileClient, or compileClientWithDependenciesTracked function. NOTE: these functions are for compiling Pug templates into JavaScript, and there would typically be no reason to allow untrusted callers.",
                "markdown": "**Vulnerability CVE-2024-36361**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|pug-code-gen|3.0.3|[CVE-2024-36361](https://avd.aquasec.com/nvd/cve-2024-36361)|\n\nPug through 3.0.2 allows JavaScript code execution if an application accepts untrusted input for the name option of the compileClient, compileFileClient, or compileClientWithDependenciesTracked function. NOTE: these functions are for compiling Pug templates into JavaScript, and there would typically be no reason to allow untrusted callers."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-28155",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The Request package through 2.88.1 for Node.js allows a bypass of SSRF ..."
              },
              "fullDescription": {
                "text": "The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-28155",
              "help": {
                "text": "Vulnerability CVE-2023-28155\nSeverity: MEDIUM\nPackage: request\nFixed Version: \nLink: [CVE-2023-28155](https://avd.aquasec.com/nvd/cve-2023-28155)\nThe Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "**Vulnerability CVE-2023-28155**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|request||[CVE-2023-28155](https://avd.aquasec.com/nvd/cve-2023-28155)|\n\nThe Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-25883",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-semver: Regular expression denial of service"
              },
              "fullDescription": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25883",
              "help": {
                "text": "Vulnerability CVE-2022-25883\nSeverity: MEDIUM\nPackage: semver\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)\nVersions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r",
                "markdown": "**Vulnerability CVE-2022-25883**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|semver|7.5.2, 6.3.1, 5.7.2|[CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)|\n\nVersions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-43441",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "A code execution vulnerability exists in the Statement Bindings functi ..."
              },
              "fullDescription": {
                "text": "A code execution vulnerability exists in the Statement Bindings functionality of Ghost Foundation node-sqlite3 5.1.1. A specially-crafted Javascript file can lead to arbitrary code execution. An attacker can provide malicious input to trigger this vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-43441",
              "help": {
                "text": "Vulnerability CVE-2022-43441\nSeverity: HIGH\nPackage: sqlite3\nFixed Version: 5.1.5\nLink: [CVE-2022-43441](https://avd.aquasec.com/nvd/cve-2022-43441)\nA code execution vulnerability exists in the Statement Bindings functionality of Ghost Foundation node-sqlite3 5.1.1. A specially-crafted Javascript file can lead to arbitrary code execution. An attacker can provide malicious input to trigger this vulnerability.",
                "markdown": "**Vulnerability CVE-2022-43441**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|sqlite3|5.1.5|[CVE-2022-43441](https://avd.aquasec.com/nvd/cve-2022-43441)|\n\nA code execution vulnerability exists in the Statement Bindings functionality of Ghost Foundation node-sqlite3 5.1.1. A specially-crafted Javascript file can lead to arbitrary code execution. An attacker can provide malicious input to trigger this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-28863",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no  ..."
              },
              "fullDescription": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28863",
              "help": {
                "text": "Vulnerability CVE-2024-28863\nSeverity: MEDIUM\nPackage: tar\nFixed Version: 6.2.1\nLink: [CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)\nnode-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "**Vulnerability CVE-2024-28863**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|tar|6.2.1|[CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)|\n\nnode-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-26136",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "tough-cookie: prototype pollution in cookie memstore"
              },
              "fullDescription": {
                "text": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-26136",
              "help": {
                "text": "Vulnerability CVE-2023-26136\nSeverity: MEDIUM\nPackage: tough-cookie\nFixed Version: 4.1.3\nLink: [CVE-2023-26136](https://avd.aquasec.com/nvd/cve-2023-26136)\nVersions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "**Vulnerability CVE-2023-26136**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|tough-cookie|4.1.3|[CVE-2023-26136](https://avd.aquasec.com/nvd/cve-2023-26136)|\n\nVersions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-23358",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-underscore: Arbitrary code execution via the template function"
              },
              "fullDescription": {
                "text": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23358",
              "help": {
                "text": "Vulnerability CVE-2021-23358\nSeverity: CRITICAL\nPackage: underscore\nFixed Version: 1.12.1\nLink: [CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)\nThe package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
                "markdown": "**Vulnerability CVE-2021-23358**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|underscore|1.12.1|[CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)|\n\nThe package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-32640",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-ws: Specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server"
              },
              "fullDescription": {
                "text": "ws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-32640",
              "help": {
                "text": "Vulnerability CVE-2021-32640\nSeverity: MEDIUM\nPackage: ws\nFixed Version: 7.4.6, 6.2.2, 5.2.3\nLink: [CVE-2021-32640](https://avd.aquasec.com/nvd/cve-2021-32640)\nws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.",
                "markdown": "**Vulnerability CVE-2021-32640**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ws|7.4.6, 6.2.2, 5.2.3|[CVE-2021-32640](https://avd.aquasec.com/nvd/cve-2021-32640)|\n\nws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-0842",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-xml2js: xml2js is vulnerable to prototype pollution"
              },
              "fullDescription": {
                "text": "xml2js version 0.4.23 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the __proto__ property to be edited."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0842",
              "help": {
                "text": "Vulnerability CVE-2023-0842\nSeverity: MEDIUM\nPackage: xml2js\nFixed Version: 0.5.0\nLink: [CVE-2023-0842](https://avd.aquasec.com/nvd/cve-2023-0842)\nxml2js version 0.4.23 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the __proto__ property to be edited.",
                "markdown": "**Vulnerability CVE-2023-0842**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|xml2js|0.5.0|[CVE-2023-0842](https://avd.aquasec.com/nvd/cve-2023-0842)|\n\nxml2js version 0.4.23 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the __proto__ property to be edited."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.52.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2023-42363",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42363\nSeverity: MEDIUM\nFixed Version: 1.36.1-r17\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42364\nSeverity: MEDIUM\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42365\nSeverity: MEDIUM\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.36.1-r16\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42363\nSeverity: MEDIUM\nFixed Version: 1.36.1-r17\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox-binsh@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42364\nSeverity: MEDIUM\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox-binsh@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42365\nSeverity: MEDIUM\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox-binsh@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: busybox-binsh\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.36.1-r16\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: busybox-binsh@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-4603\nSeverity: MEDIUM\nFixed Version: 3.1.5-r0\nLink: [CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: libcrypto3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Package: libcrypto3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-2511\nSeverity: LOW\nFixed Version: 3.1.4-r6\nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: libcrypto3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: libssl3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-4603\nSeverity: MEDIUM\nFixed Version: 3.1.5-r0\nLink: [CVE-2024-4603](https://avd.aquasec.com/nvd/cve-2024-4603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: libssl3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Package: libssl3\nInstalled Version: 3.1.4-r5\nVulnerability CVE-2024-2511\nSeverity: LOW\nFixed Version: 3.1.4-r6\nLink: [CVE-2024-2511](https://avd.aquasec.com/nvd/cve-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: libssl3@3.1.4-r5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42363\nSeverity: MEDIUM\nFixed Version: 1.36.1-r17\nLink: [CVE-2023-42363](https://avd.aquasec.com/nvd/cve-2023-42363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: ssl_client@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42364\nSeverity: MEDIUM\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42364](https://avd.aquasec.com/nvd/cve-2023-42364)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: ssl_client@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42365\nSeverity: MEDIUM\nFixed Version: 1.36.1-r19\nLink: [CVE-2023-42365](https://avd.aquasec.com/nvd/cve-2023-42365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: ssl_client@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.36.1-r15\nVulnerability CVE-2023-42366\nSeverity: MEDIUM\nFixed Version: 1.36.1-r16\nLink: [CVE-2023-42366](https://avd.aquasec.com/nvd/cve-2023-42366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requarks/wiki",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "requarks/wiki: ssl_client@1.36.1-r15"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45133",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: @babel/traverse\nInstalled Version: 7.12.13\nVulnerability CVE-2023-45133\nSeverity: CRITICAL\nFixed Version: 7.23.2, 8.0.0-alpha.4\nLink: [CVE-2023-45133](https://avd.aquasec.com/nvd/cve-2023-45133)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/@graphql-tools/graphql-tag-pluck/node_modules/@babel/traverse/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/@graphql-tools/graphql-tag-pluck/node_modules/@babel/traverse/package.json: @babel/traverse@7.12.13"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-qm7x-rc44-rrqw",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: apollo-server\nInstalled Version: 2.25.2\nVulnerability GHSA-qm7x-rc44-rrqw\nSeverity: HIGH\nFixed Version: 2.25.3, 3.4.1\nLink: [GHSA-qm7x-rc44-rrqw](https://github.com/advisories/GHSA-qm7x-rc44-rrqw)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/apollo-server/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/apollo-server/package.json: apollo-server@2.25.2"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-2p3c-p3qw-69r4",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: apollo-server\nInstalled Version: 2.25.2\nVulnerability GHSA-2p3c-p3qw-69r4\nSeverity: MEDIUM\nFixed Version: 2.25.4\nLink: [GHSA-2p3c-p3qw-69r4](https://github.com/advisories/GHSA-2p3c-p3qw-69r4)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/apollo-server/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/apollo-server/package.json: apollo-server@2.25.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45857",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: axios\nInstalled Version: 0.21.4\nVulnerability CVE-2023-45857\nSeverity: MEDIUM\nFixed Version: 1.6.0, 0.28.0\nLink: [CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/adal-node/node_modules/axios/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/adal-node/node_modules/axios/package.json: axios@0.21.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45857",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: axios\nInstalled Version: 0.27.2\nVulnerability CVE-2023-45857\nSeverity: MEDIUM\nFixed Version: 1.6.0, 0.28.0\nLink: [CVE-2023-45857](https://avd.aquasec.com/nvd/cve-2023-45857)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/axios/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/axios/package.json: axios@0.27.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: braces\nInstalled Version: 2.3.2\nVulnerability CVE-2024-4068\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/findup-sync/node_modules/braces/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/findup-sync/node_modules/braces/package.json: braces@2.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1365",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: cross-fetch\nInstalled Version: 1.1.1\nVulnerability CVE-2022-1365\nSeverity: MEDIUM\nFixed Version: 3.1.5, 2.2.6\nLink: [CVE-2022-1365](https://avd.aquasec.com/nvd/cve-2022-1365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/apollo-fetch/node_modules/cross-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/apollo-fetch/node_modules/cross-fetch/package.json: cross-fetch@1.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1365",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: cross-fetch\nInstalled Version: 3.0.6\nVulnerability CVE-2022-1365\nSeverity: MEDIUM\nFixed Version: 3.1.5, 2.2.6\nLink: [CVE-2022-1365](https://avd.aquasec.com/nvd/cve-2022-1365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/cross-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/cross-fetch/package.json: cross-fetch@3.0.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1365",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: cross-fetch\nInstalled Version: 3.1.4\nVulnerability CVE-2022-1365\nSeverity: MEDIUM\nFixed Version: 3.1.5, 2.2.6\nLink: [CVE-2022-1365](https://avd.aquasec.com/nvd/cve-2022-1365)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/@graphql-tools/url-loader/node_modules/cross-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/@graphql-tools/url-loader/node_modules/cross-fetch/package.json: cross-fetch@3.1.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33587",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: css-what\nInstalled Version: 4.0.0\nVulnerability CVE-2021-33587\nSeverity: HIGH\nFixed Version: 5.0.1\nLink: [CVE-2021-33587](https://avd.aquasec.com/nvd/cve-2021-33587)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/css-what/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/css-what/package.json: css-what@4.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Package: debug\nInstalled Version: 4.1.1\nVulnerability CVE-2017-16137\nSeverity: LOW\nFixed Version: 2.6.9, 3.1.0, 3.2.7, 4.3.1\nLink: [CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/knex/node_modules/debug/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/knex/node_modules/debug/package.json: debug@4.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24434",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: dicer\nInstalled Version: 0.2.5\nVulnerability CVE-2022-24434\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2022-24434](https://avd.aquasec.com/nvd/cve-2022-24434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/dicer/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/dicer/package.json: dicer@0.2.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24434",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: dicer\nInstalled Version: 0.3.0\nVulnerability CVE-2022-24434\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2022-24434](https://avd.aquasec.com/nvd/cve-2022-24434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/@apollographql/graphql-upload-8-fork/node_modules/dicer/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/@apollographql/graphql-upload-8-fork/node_modules/dicer/package.json: dicer@0.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Package: express\nInstalled Version: 4.18.2\nVulnerability CVE-2024-29041\nSeverity: MEDIUM\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/express/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/express/package.json: express@4.18.2"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-984p-xq9m-4rjw",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Package: express-brute\nInstalled Version: 1.0.1\nVulnerability GHSA-984p-xq9m-4rjw\nSeverity: MEDIUM\nFixed Version: \nLink: [GHSA-984p-xq9m-4rjw](https://github.com/advisories/GHSA-984p-xq9m-4rjw)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/express-brute/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/express-brute/package.json: express-brute@1.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-36313",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Package: file-type\nInstalled Version: 15.0.1\nVulnerability CVE-2022-36313\nSeverity: HIGH\nFixed Version: 16.5.4, 17.1.3\nLink: [CVE-2022-36313](https://avd.aquasec.com/nvd/cve-2022-36313)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/file-type/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/file-type/package.json: file-type@15.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-7wwv-vh3v-89cq",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: highlight.js\nInstalled Version: 10.2.1\nVulnerability GHSA-7wwv-vh3v-89cq\nSeverity: MEDIUM\nFixed Version: 10.4.1\nLink: [GHSA-7wwv-vh3v-89cq](https://github.com/advisories/GHSA-7wwv-vh3v-89cq)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/diff2html/node_modules/highlight.js/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/diff2html/node_modules/highlight.js/package.json: highlight.js@10.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-7wwv-vh3v-89cq",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: highlight.js\nInstalled Version: 10.3.1\nVulnerability GHSA-7wwv-vh3v-89cq\nSeverity: MEDIUM\nFixed Version: 10.4.1\nLink: [GHSA-7wwv-vh3v-89cq](https://github.com/advisories/GHSA-7wwv-vh3v-89cq)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/highlight.js/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/highlight.js/package.json: highlight.js@10.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20066",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: jsdom\nInstalled Version: 16.4.0\nVulnerability CVE-2021-20066\nSeverity: MEDIUM\nFixed Version: 16.5.0\nLink: [CVE-2021-20066](https://avd.aquasec.com/nvd/cve-2021-20066)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/jsdom/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/jsdom/package.json: jsdom@16.4.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-46175",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "Package: json5\nInstalled Version: 2.0.0\nVulnerability CVE-2022-46175\nSeverity: HIGH\nFixed Version: 2.2.2, 1.0.2\nLink: [CVE-2022-46175](https://avd.aquasec.com/nvd/cve-2022-46175)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/i18next-node-fs-backend/node_modules/json5/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/i18next-node-fs-backend/node_modules/json5/package.json: json5@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28243",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "Package: katex\nInstalled Version: 0.12.0\nVulnerability CVE-2024-28243\nSeverity: MEDIUM\nFixed Version: 0.16.10\nLink: [CVE-2024-28243](https://avd.aquasec.com/nvd/cve-2024-28243)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/katex/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/katex/package.json: katex@0.12.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28245",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "Package: katex\nInstalled Version: 0.12.0\nVulnerability CVE-2024-28245\nSeverity: MEDIUM\nFixed Version: 0.16.10\nLink: [CVE-2024-28245](https://avd.aquasec.com/nvd/cve-2024-28245)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/katex/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/katex/package.json: katex@0.12.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28246",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "Package: katex\nInstalled Version: 0.12.0\nVulnerability CVE-2024-28246\nSeverity: MEDIUM\nFixed Version: 0.16.10\nLink: [CVE-2024-28246](https://avd.aquasec.com/nvd/cve-2024-28246)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/katex/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/katex/package.json: katex@0.12.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-20018",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: knex\nInstalled Version: 0.21.21\nVulnerability CVE-2016-20018\nSeverity: HIGH\nFixed Version: 2.4.0\nLink: [CVE-2016-20018](https://avd.aquasec.com/nvd/cve-2016-20018)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/connect-session-knex/node_modules/knex/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/connect-session-knex/node_modules/knex/package.json: knex@0.21.21"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-20018",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: knex\nInstalled Version: 0.21.7\nVulnerability CVE-2016-20018\nSeverity: HIGH\nFixed Version: 2.4.0\nLink: [CVE-2016-20018](https://avd.aquasec.com/nvd/cve-2016-20018)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/knex/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/knex/package.json: knex@0.21.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22467",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: luxon\nInstalled Version: 1.25.0\nVulnerability CVE-2023-22467\nSeverity: HIGH\nFixed Version: 1.28.1, 2.5.2, 3.2.1\nLink: [CVE-2023-22467](https://avd.aquasec.com/nvd/cve-2023-22467)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/luxon/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/luxon/package.json: luxon@1.25.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21670",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "Package: markdown-it\nInstalled Version: 11.0.1\nVulnerability CVE-2022-21670\nSeverity: MEDIUM\nFixed Version: 12.3.2\nLink: [CVE-2022-21670](https://avd.aquasec.com/nvd/cve-2022-21670)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/markdown-it/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/markdown-it/package.json: markdown-it@11.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28459",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "Package: markdown-it-decorate\nInstalled Version: 1.2.2\nVulnerability CVE-2020-28459\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2020-28459](https://avd.aquasec.com/nvd/cve-2020-28459)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/markdown-it-decorate/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/markdown-it-decorate/package.json: markdown-it-decorate@1.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32050",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Package: mongodb\nInstalled Version: 3.6.5\nVulnerability CVE-2021-32050\nSeverity: MEDIUM\nFixed Version: 3.6.10, 4.17.0, 5.8.0\nLink: [CVE-2021-32050](https://avd.aquasec.com/nvd/cve-2021-32050)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/mongodb/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/mongodb/package.json: mongodb@3.6.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21508",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: mysql2\nInstalled Version: 3.1.0\nVulnerability CVE-2024-21508\nSeverity: CRITICAL\nFixed Version: 3.9.4\nLink: [CVE-2024-21508](https://avd.aquasec.com/nvd/cve-2024-21508)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/mysql2/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/mysql2/package.json: mysql2@3.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21511",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Package: mysql2\nInstalled Version: 3.1.0\nVulnerability CVE-2024-21511\nSeverity: CRITICAL\nFixed Version: 3.9.7\nLink: [CVE-2024-21511](https://avd.aquasec.com/nvd/cve-2024-21511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/mysql2/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/mysql2/package.json: mysql2@3.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21512",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Package: mysql2\nInstalled Version: 3.1.0\nVulnerability CVE-2024-21512\nSeverity: HIGH\nFixed Version: 3.9.8\nLink: [CVE-2024-21512](https://avd.aquasec.com/nvd/cve-2024-21512)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/mysql2/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/mysql2/package.json: mysql2@3.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21507",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "Package: mysql2\nInstalled Version: 3.1.0\nVulnerability CVE-2024-21507\nSeverity: MEDIUM\nFixed Version: 3.9.3\nLink: [CVE-2024-21507](https://avd.aquasec.com/nvd/cve-2024-21507)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/mysql2/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/mysql2/package.json: mysql2@3.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21509",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "Package: mysql2\nInstalled Version: 3.1.0\nVulnerability CVE-2024-21509\nSeverity: MEDIUM\nFixed Version: 3.9.4\nLink: [CVE-2024-21509](https://avd.aquasec.com/nvd/cve-2024-21509)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/mysql2/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/mysql2/package.json: mysql2@3.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0235",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: node-fetch\nInstalled Version: 1.7.3\nVulnerability CVE-2022-0235\nSeverity: HIGH\nFixed Version: 3.1.1, 2.6.7\nLink: [CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/apollo-fetch/node_modules/node-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/apollo-fetch/node_modules/node-fetch/package.json: node-fetch@1.7.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15168",
          "ruleIndex": 35,
          "level": "note",
          "message": {
            "text": "Package: node-fetch\nInstalled Version: 1.7.3\nVulnerability CVE-2020-15168\nSeverity: LOW\nFixed Version: 2.6.1, 3.0.0-beta.9\nLink: [CVE-2020-15168](https://avd.aquasec.com/nvd/cve-2020-15168)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/apollo-fetch/node_modules/node-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/apollo-fetch/node_modules/node-fetch/package.json: node-fetch@1.7.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0235",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: node-fetch\nInstalled Version: 2.6.1\nVulnerability CVE-2022-0235\nSeverity: HIGH\nFixed Version: 3.1.1, 2.6.7\nLink: [CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/@graphql-tools/url-loader/node_modules/node-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/@graphql-tools/url-loader/node_modules/node-fetch/package.json: node-fetch@2.6.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0235",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "Package: node-fetch\nInstalled Version: 2.6.1\nVulnerability CVE-2022-0235\nSeverity: HIGH\nFixed Version: 3.1.1, 2.6.7\nLink: [CVE-2022-0235](https://avd.aquasec.com/nvd/cve-2022-0235)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/cross-fetch/node_modules/node-fetch/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/cross-fetch/node_modules/node-fetch/package.json: node-fetch@2.6.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8851",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "Package: node-uuid\nInstalled Version: 1.4.1\nVulnerability CVE-2015-8851\nSeverity: MEDIUM\nFixed Version: \u003e=1.4.4\nLink: [CVE-2015-8851](https://avd.aquasec.com/nvd/cve-2015-8851)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/node-uuid/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/node-uuid/package.json: node-uuid@1.4.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-9h6g-pr28-7cqp",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "Package: nodemailer\nInstalled Version: 6.9.1\nVulnerability GHSA-9h6g-pr28-7cqp\nSeverity: MEDIUM\nFixed Version: 6.9.9\nLink: [GHSA-9h6g-pr28-7cqp](https://github.com/advisories/GHSA-9h6g-pr28-7cqp)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/nodemailer/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/nodemailer/package.json: nodemailer@6.9.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25896",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: passport\nInstalled Version: 0.4.1\nVulnerability CVE-2022-25896\nSeverity: MEDIUM\nFixed Version: 0.6.0\nLink: [CVE-2022-25896](https://avd.aquasec.com/nvd/cve-2022-25896)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/passport/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/passport/package.json: passport@0.4.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41580",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "Package: passport-oauth2\nInstalled Version: 1.2.0\nVulnerability CVE-2021-41580\nSeverity: MEDIUM\nFixed Version: 1.6.1\nLink: [CVE-2021-41580](https://avd.aquasec.com/nvd/cve-2021-41580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/passport-microsoft/node_modules/passport-oauth2/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/passport-microsoft/node_modules/passport-oauth2/package.json: passport-oauth2@1.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-36361",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Package: pug\nInstalled Version: 3.0.2\nVulnerability CVE-2024-36361\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-36361](https://avd.aquasec.com/nvd/cve-2024-36361)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/pug/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/pug/package.json: pug@3.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-36361",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Package: pug-code-gen\nInstalled Version: 3.0.2\nVulnerability CVE-2024-36361\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-36361](https://avd.aquasec.com/nvd/cve-2024-36361)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/pug-code-gen/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/pug-code-gen/package.json: pug-code-gen@3.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "Package: request\nInstalled Version: 2.88.2\nVulnerability CVE-2023-28155\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2023-28155](https://avd.aquasec.com/nvd/cve-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/request/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/request/package.json: request@2.88.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: semver\nInstalled Version: 4.3.2\nVulnerability CVE-2022-25883\nSeverity: MEDIUM\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/pg-pubsub/node_modules/semver/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/pg-pubsub/node_modules/semver/package.json: semver@4.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "Package: semver\nInstalled Version: 7.3.8\nVulnerability CVE-2022-25883\nSeverity: MEDIUM\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/semver/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/semver/package.json: semver@7.3.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-43441",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "Package: sqlite3\nInstalled Version: 5.1.4\nVulnerability CVE-2022-43441\nSeverity: HIGH\nFixed Version: 5.1.5\nLink: [CVE-2022-43441](https://avd.aquasec.com/nvd/cve-2022-43441)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/sqlite3/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/sqlite3/package.json: sqlite3@5.1.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: tar\nInstalled Version: 6.2.0\nVulnerability CVE-2024-28863\nSeverity: MEDIUM\nFixed Version: 6.2.1\nLink: [CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/local/lib/node_modules/npm/node_modules/tar/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/local/lib/node_modules/npm/node_modules/tar/package.json: tar@6.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: tough-cookie\nInstalled Version: 2.5.0\nVulnerability CVE-2023-26136\nSeverity: MEDIUM\nFixed Version: 4.1.3\nLink: [CVE-2023-26136](https://avd.aquasec.com/nvd/cve-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/tough-cookie/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/tough-cookie/package.json: tough-cookie@2.5.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Package: tough-cookie\nInstalled Version: 3.0.1\nVulnerability CVE-2023-26136\nSeverity: MEDIUM\nFixed Version: 4.1.3\nLink: [CVE-2023-26136](https://avd.aquasec.com/nvd/cve-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/jsdom/node_modules/tough-cookie/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/jsdom/node_modules/tough-cookie/package.json: tough-cookie@3.0.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Package: underscore\nInstalled Version: 1.6.0\nVulnerability CVE-2021-23358\nSeverity: CRITICAL\nFixed Version: 1.12.1\nLink: [CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/passport-cas/node_modules/underscore/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/passport-cas/node_modules/underscore/package.json: underscore@1.6.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Package: underscore\nInstalled Version: 1.8.3\nVulnerability CVE-2021-23358\nSeverity: CRITICAL\nFixed Version: 1.12.1\nLink: [CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/express-brute/node_modules/underscore/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/express-brute/node_modules/underscore/package.json: underscore@1.8.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32640",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "Package: ws\nInstalled Version: 7.4.5\nVulnerability CVE-2021-32640\nSeverity: MEDIUM\nFixed Version: 7.4.6, 6.2.2, 5.2.3\nLink: [CVE-2021-32640](https://avd.aquasec.com/nvd/cve-2021-32640)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/@graphql-tools/url-loader/node_modules/ws/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/@graphql-tools/url-loader/node_modules/ws/package.json: ws@7.4.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32640",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "Package: ws\nInstalled Version: 7.4.5\nVulnerability CVE-2021-32640\nSeverity: MEDIUM\nFixed Version: 7.4.6, 6.2.2, 5.2.3\nLink: [CVE-2021-32640](https://avd.aquasec.com/nvd/cve-2021-32640)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/isomorphic-ws/node_modules/ws/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/isomorphic-ws/node_modules/ws/package.json: ws@7.4.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0842",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "Package: xml2js\nInstalled Version: 0.4.19\nVulnerability CVE-2023-0842\nSeverity: MEDIUM\nFixed Version: 0.5.0\nLink: [CVE-2023-0842](https://avd.aquasec.com/nvd/cve-2023-0842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/aws-sdk/node_modules/xml2js/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/aws-sdk/node_modules/xml2js/package.json: xml2js@0.4.19"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0842",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "Package: xml2js\nInstalled Version: 0.4.23\nVulnerability CVE-2023-0842\nSeverity: MEDIUM\nFixed Version: 0.5.0\nLink: [CVE-2023-0842](https://avd.aquasec.com/nvd/cve-2023-0842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/passport-saml/node_modules/xml2js/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/passport-saml/node_modules/xml2js/package.json: xml2js@0.4.23"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0842",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "Package: xml2js\nInstalled Version: 0.4.4\nVulnerability CVE-2023-0842\nSeverity: MEDIUM\nFixed Version: 0.5.0\nLink: [CVE-2023-0842](https://avd.aquasec.com/nvd/cve-2023-0842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wiki/node_modules/passport-cas/node_modules/xml2js/package.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "wiki/node_modules/passport-cas/node_modules/xml2js/package.json: xml2js@0.4.4"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageName": "requarks/wiki:canary-2.5.0-dev.359",
        "repoDigests": [
          "requarks/wiki@sha256:4b3a25866c30379e9bf632adcfbe42e6f6b9cc5b9995354106b2126df9552e13"
        ],
        "repoTags": [
          "requarks/wiki:canary-2.5.0-dev.359"
        ]
      }
    }
  ]
}