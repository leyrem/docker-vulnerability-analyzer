{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2021-36159",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libfetch: an out of boundary read while libfetch uses strtol to parse the relevant numbers into address bytes leads to information leak or crash"
              },
              "fullDescription": {
                "text": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the \u0026#39;\\0\u0026#39; terminator one byte too late."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-36159",
              "help": {
                "text": "Vulnerability CVE-2021-36159\nSeverity: CRITICAL\nPackage: apk-tools\nFixed Version: 2.10.7-r0\nLink: [CVE-2021-36159](https://avd.aquasec.com/nvd/cve-2021-36159)\nlibfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
                "markdown": "**Vulnerability CVE-2021-36159**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|apk-tools|2.10.7-r0|[CVE-2021-36159](https://avd.aquasec.com/nvd/cve-2021-36159)|\n\nlibfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-30139",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": ""
              },
              "fullDescription": {
                "text": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-30139",
              "help": {
                "text": "Vulnerability CVE-2021-30139\nSeverity: HIGH\nPackage: apk-tools\nFixed Version: 2.10.6-r0\nLink: [CVE-2021-30139](https://avd.aquasec.com/nvd/cve-2021-30139)\nIn Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
                "markdown": "**Vulnerability CVE-2021-30139**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|apk-tools|2.10.6-r0|[CVE-2021-30139](https://avd.aquasec.com/nvd/cve-2021-30139)|\n\nIn Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28831",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: invalid free or segmentation fault via malformed gzip data"
              },
              "fullDescription": {
                "text": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28831",
              "help": {
                "text": "Vulnerability CVE-2021-28831\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r10\nLink: [CVE-2021-28831](https://avd.aquasec.com/nvd/cve-2021-28831)\ndecompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
                "markdown": "**Vulnerability CVE-2021-28831**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r10|[CVE-2021-28831](https://avd.aquasec.com/nvd/cve-2021-28831)|\n\ndecompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42378",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42378",
              "help": {
                "text": "Vulnerability CVE-2021-42378\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42378](https://avd.aquasec.com/nvd/cve-2021-42378)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
                "markdown": "**Vulnerability CVE-2021-42378**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42378](https://avd.aquasec.com/nvd/cve-2021-42378)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42379",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42379",
              "help": {
                "text": "Vulnerability CVE-2021-42379\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42379](https://avd.aquasec.com/nvd/cve-2021-42379)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
                "markdown": "**Vulnerability CVE-2021-42379**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42379](https://avd.aquasec.com/nvd/cve-2021-42379)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42380",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42380",
              "help": {
                "text": "Vulnerability CVE-2021-42380\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42380](https://avd.aquasec.com/nvd/cve-2021-42380)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
                "markdown": "**Vulnerability CVE-2021-42380**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42380](https://avd.aquasec.com/nvd/cve-2021-42380)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42381",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42381",
              "help": {
                "text": "Vulnerability CVE-2021-42381\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42381](https://avd.aquasec.com/nvd/cve-2021-42381)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
                "markdown": "**Vulnerability CVE-2021-42381**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42381](https://avd.aquasec.com/nvd/cve-2021-42381)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42382",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42382",
              "help": {
                "text": "Vulnerability CVE-2021-42382\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42382](https://avd.aquasec.com/nvd/cve-2021-42382)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
                "markdown": "**Vulnerability CVE-2021-42382**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42382](https://avd.aquasec.com/nvd/cve-2021-42382)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42383",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42383",
              "help": {
                "text": "Vulnerability CVE-2021-42383\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42383](https://avd.aquasec.com/nvd/cve-2021-42383)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "**Vulnerability CVE-2021-42383**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42383](https://avd.aquasec.com/nvd/cve-2021-42383)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42384",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42384",
              "help": {
                "text": "Vulnerability CVE-2021-42384\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42384](https://avd.aquasec.com/nvd/cve-2021-42384)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
                "markdown": "**Vulnerability CVE-2021-42384**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42384](https://avd.aquasec.com/nvd/cve-2021-42384)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42385",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42385",
              "help": {
                "text": "Vulnerability CVE-2021-42385\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42385](https://avd.aquasec.com/nvd/cve-2021-42385)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
                "markdown": "**Vulnerability CVE-2021-42385**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42385](https://avd.aquasec.com/nvd/cve-2021-42385)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42386",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()"
              },
              "fullDescription": {
                "text": "A use-after-free in Busybox\u0026#39;s awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42386",
              "help": {
                "text": "Vulnerability CVE-2021-42386\nSeverity: HIGH\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42386](https://avd.aquasec.com/nvd/cve-2021-42386)\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
                "markdown": "**Vulnerability CVE-2021-42386**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ssl_client|1.31.1-r11|[CVE-2021-42386](https://avd.aquasec.com/nvd/cve-2021-42386)|\n\nA use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-42374",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "busybox: out-of-bounds read in unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed"
              },
              "fullDescription": {
                "text": "An out-of-bounds heap read in Busybox\u0026#39;s unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42374",
              "help": {
                "text": "Vulnerability CVE-2021-42374\nSeverity: MEDIUM\nPackage: ssl_client\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42374](https://avd.aquasec.com/nvd/cve-2021-42374)\nAn out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that",
                "markdown": "**Vulnerability CVE-2021-42374**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ssl_client|1.31.1-r11|[CVE-2021-42374](https://avd.aquasec.com/nvd/cve-2021-42374)|\n\nAn out-of-bounds heap read in Busybox's unlzma applet leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3672",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "c-ares: Missing input validation of host names may lead to domain hijacking"
              },
              "fullDescription": {
                "text": "A flaw was found in c-ares library, where a missing input validation check of host names returned by DNS (Domain Name Servers) can lead to output of wrong hostnames which might potentially lead to Domain Hijacking. The highest threat from this vulnerability is to confidentiality and integrity as well as system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3672",
              "help": {
                "text": "Vulnerability CVE-2021-3672\nSeverity: MEDIUM\nPackage: nodejs\nFixed Version: 12.22.5-r0\nLink: [CVE-2021-3672](https://avd.aquasec.com/nvd/cve-2021-3672)\nA flaw was found in c-ares library, where a missing input validation check of host names returned by DNS (Domain Name Servers) can lead to output of wrong hostnames which might potentially lead to Domain Hijacking. The highest threat from this vulnerability is to confidentiality and integrity as well as system availability.",
                "markdown": "**Vulnerability CVE-2021-3672**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|nodejs|12.22.5-r0|[CVE-2021-3672](https://avd.aquasec.com/nvd/cve-2021-3672)|\n\nA flaw was found in c-ares library, where a missing input validation check of host names returned by DNS (Domain Name Servers) can lead to output of wrong hostnames which might potentially lead to Domain Hijacking. The highest threat from this vulnerability is to confidentiality and integrity as well as system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22945",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: use-after-free and double-free in MQTT sending"
              },
              "fullDescription": {
                "text": "When sending data to an MQTT server, libcurl \u0026lt;= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22945",
              "help": {
                "text": "Vulnerability CVE-2021-22945\nSeverity: CRITICAL\nPackage: libcurl\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22945](https://avd.aquasec.com/nvd/cve-2021-22945)\nWhen sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
                "markdown": "**Vulnerability CVE-2021-22945**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|libcurl|7.79.0-r0|[CVE-2021-22945](https://avd.aquasec.com/nvd/cve-2021-22945)|\n\nWhen sending data to an MQTT server, libcurl \u003c= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-22926",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: CURLOPT_SSLCERT mixup with Secure Transport"
              },
              "fullDescription": {
                "text": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22926",
              "help": {
                "text": "Vulnerability CVE-2021-22926\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.67.0-r5\nLink: [CVE-2021-22926](https://avd.aquasec.com/nvd/cve-2021-22926)\nlibcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
                "markdown": "**Vulnerability CVE-2021-22926**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.67.0-r5|[CVE-2021-22926](https://avd.aquasec.com/nvd/cve-2021-22926)|\n\nlibcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-22946",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Requirement to use TLS not properly enforced for IMAP, POP3, and FTP protocols"
              },
              "fullDescription": {
                "text": "A user can tell curl \u0026gt;= 7.20.0 and \u0026lt;= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22946",
              "help": {
                "text": "Vulnerability CVE-2021-22946\nSeverity: HIGH\nPackage: libcurl\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22946](https://avd.aquasec.com/nvd/cve-2021-22946)\nA user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
                "markdown": "**Vulnerability CVE-2021-22946**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libcurl|7.79.0-r0|[CVE-2021-22946](https://avd.aquasec.com/nvd/cve-2021-22946)|\n\nA user can tell curl \u003e= 7.20.0 and \u003c= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-22923",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Metalink download sends credentials"
              },
              "fullDescription": {
                "text": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user\u0026#39;s expectations and intentions and without telling the user it happened."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22923",
              "help": {
                "text": "Vulnerability CVE-2021-22923\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22923](https://avd.aquasec.com/nvd/cve-2021-22923)\nWhen curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
                "markdown": "**Vulnerability CVE-2021-22923**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.0-r0|[CVE-2021-22923](https://avd.aquasec.com/nvd/cve-2021-22923)|\n\nWhen curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22925",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Incorrect fix for CVE-2021-22898 TELNET stack contents disclosure"
              },
              "fullDescription": {
                "text": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22925",
              "help": {
                "text": "Vulnerability CVE-2021-22925\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.67.0-r5\nLink: [CVE-2021-22925](https://avd.aquasec.com/nvd/cve-2021-22925)\ncurl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
                "markdown": "**Vulnerability CVE-2021-22925**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.67.0-r5|[CVE-2021-22925](https://avd.aquasec.com/nvd/cve-2021-22925)|\n\ncurl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22947",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: Server responses received before STARTTLS processed after TLS handshake"
              },
              "fullDescription": {
                "text": "When curl \u0026gt;= 7.20.0 and \u0026lt;= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker\u0026#39;s injected data comes from the TLS-protected server."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22947",
              "help": {
                "text": "Vulnerability CVE-2021-22947\nSeverity: MEDIUM\nPackage: libcurl\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22947](https://avd.aquasec.com/nvd/cve-2021-22947)\nWhen curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
                "markdown": "**Vulnerability CVE-2021-22947**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libcurl|7.79.0-r0|[CVE-2021-22947](https://avd.aquasec.com/nvd/cve-2021-22947)|\n\nWhen curl \u003e= 7.20.0 and \u003c= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-8284",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: FTP PASV command response can cause curl to connect to arbitrary host"
              },
              "fullDescription": {
                "text": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8284",
              "help": {
                "text": "Vulnerability CVE-2020-8284\nSeverity: LOW\nPackage: libcurl\nFixed Version: 7.79.0-r0\nLink: [CVE-2020-8284](https://avd.aquasec.com/nvd/cve-2020-8284)\nA malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
                "markdown": "**Vulnerability CVE-2020-8284**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcurl|7.79.0-r0|[CVE-2020-8284](https://avd.aquasec.com/nvd/cve-2020-8284)|\n\nA malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-22898",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "curl: TELNET stack contents disclosure"
              },
              "fullDescription": {
                "text": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22898",
              "help": {
                "text": "Vulnerability CVE-2021-22898\nSeverity: LOW\nPackage: libcurl\nFixed Version: 7.67.0-r4\nLink: [CVE-2021-22898](https://avd.aquasec.com/nvd/cve-2021-22898)\ncurl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
                "markdown": "**Vulnerability CVE-2021-22898**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|libcurl|7.67.0-r4|[CVE-2021-22898](https://avd.aquasec.com/nvd/cve-2021-22898)|\n\ncurl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-21300",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "git: remote code execution during clone operation on case-insensitive filesystems"
              },
              "fullDescription": {
                "text": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won\u0026#39;t work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-21300",
              "help": {
                "text": "Vulnerability CVE-2021-21300\nSeverity: HIGH\nPackage: git\nFixed Version: 2.24.4-r0\nLink: [CVE-2021-21300](https://avd.aquasec.com/nvd/cve-2021-21300)\nGit is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
                "markdown": "**Vulnerability CVE-2021-21300**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|git|2.24.4-r0|[CVE-2021-21300](https://avd.aquasec.com/nvd/cve-2021-21300)|\n\nGit is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3711",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: SM2 Decryption Buffer Overflow"
              },
              "fullDescription": {
                "text": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \u0026#34;out\u0026#34; parameter can be NULL and, on exit, the \u0026#34;outlen\u0026#34; parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \u0026#34;out\u0026#34; parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3711",
              "help": {
                "text": "Vulnerability CVE-2021-3711\nSeverity: CRITICAL\nPackage: openssl\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3711](https://avd.aquasec.com/nvd/cve-2021-3711)\nIn order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
                "markdown": "**Vulnerability CVE-2021-3711**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|openssl|1.1.1l-r0|[CVE-2021-3711](https://avd.aquasec.com/nvd/cve-2021-3711)|\n\nIn order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-23840",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: integer overflow in CipherUpdate"
              },
              "fullDescription": {
                "text": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23840",
              "help": {
                "text": "Vulnerability CVE-2021-23840\nSeverity: HIGH\nPackage: openssl\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)\nCalls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "**Vulnerability CVE-2021-23840**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl|1.1.1j-r0|[CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)|\n\nCalls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3450",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT"
              },
              "fullDescription": {
                "text": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \u0026#34;purpose\u0026#34; has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \u0026#34;purpose\u0026#34; values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3450",
              "help": {
                "text": "Vulnerability CVE-2021-3450\nSeverity: HIGH\nPackage: openssl\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)\nThe X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
                "markdown": "**Vulnerability CVE-2021-3450**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl|1.1.1k-r0|[CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)|\n\nThe X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3712",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: Read buffer overruns processing ASN.1 strings"
              },
              "fullDescription": {
                "text": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL\u0026#39;s own \u0026#34;d2i\u0026#34; functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \u0026#34;data\u0026#34; and \u0026#34;length\u0026#34; fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \u0026#34;data\u0026#34; field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3712",
              "help": {
                "text": "Vulnerability CVE-2021-3712\nSeverity: HIGH\nPackage: openssl\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)\nASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
                "markdown": "**Vulnerability CVE-2021-3712**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openssl|1.1.1l-r0|[CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)|\n\nASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-23841",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: NULL pointer dereference in X509_issuer_and_serial_hash()"
              },
              "fullDescription": {
                "text": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23841",
              "help": {
                "text": "Vulnerability CVE-2021-23841\nSeverity: MEDIUM\nPackage: openssl\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)\nThe OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
                "markdown": "**Vulnerability CVE-2021-23841**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl|1.1.1j-r0|[CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)|\n\nThe OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3449",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: NULL pointer dereference in signature_algorithms processing"
              },
              "fullDescription": {
                "text": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j)."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3449",
              "help": {
                "text": "Vulnerability CVE-2021-3449\nSeverity: MEDIUM\nPackage: openssl\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)\nAn OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
                "markdown": "**Vulnerability CVE-2021-3449**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openssl|1.1.1k-r0|[CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)|\n\nAn OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-23839",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openssl: incorrect SSLv2 rollback protection"
              },
              "fullDescription": {
                "text": "OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x)."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23839",
              "help": {
                "text": "Vulnerability CVE-2021-23839\nSeverity: LOW\nPackage: openssl\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23839](https://avd.aquasec.com/nvd/cve-2021-23839)\nOpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x).",
                "markdown": "**Vulnerability CVE-2021-23839**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|openssl|1.1.1j-r0|[CVE-2021-23839](https://avd.aquasec.com/nvd/cve-2021-23839)|\n\nOpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-33560",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libgcrypt: mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm"
              },
              "fullDescription": {
                "text": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33560",
              "help": {
                "text": "Vulnerability CVE-2021-33560\nSeverity: HIGH\nPackage: libgcrypt\nFixed Version: 1.8.8-r0\nLink: [CVE-2021-33560](https://avd.aquasec.com/nvd/cve-2021-33560)\nLibgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
                "markdown": "**Vulnerability CVE-2021-33560**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libgcrypt|1.8.8-r0|[CVE-2021-33560](https://avd.aquasec.com/nvd/cve-2021-33560)|\n\nLibgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-40528",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libgcrypt: ElGamal implementation allows plaintext recovery"
              },
              "fullDescription": {
                "text": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver\u0026#39;s public key, the generator defined by the receiver\u0026#39;s public key, and the sender\u0026#39;s ephemeral exponents can lead to a cross-configuration attack against OpenPGP."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-40528",
              "help": {
                "text": "Vulnerability CVE-2021-40528\nSeverity: MEDIUM\nPackage: libgcrypt\nFixed Version: 1.8.8-r1\nLink: [CVE-2021-40528](https://avd.aquasec.com/nvd/cve-2021-40528)\nThe ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
                "markdown": "**Vulnerability CVE-2021-40528**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libgcrypt|1.8.8-r1|[CVE-2021-40528](https://avd.aquasec.com/nvd/cve-2021-40528)|\n\nThe ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-6363",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "In the GD Graphics Library (aka LibGD) through 2.2.5, there is a heap- ..."
              },
              "fullDescription": {
                "text": "In the GD Graphics Library (aka LibGD) through 2.2.5, there is a heap-based buffer over-read in tiffWriter in gd_tiff.c. NOTE: the vendor says \u0026#34;In my opinion this issue should not have a CVE, since the GD and GD2 formats are documented to be \u0026#39;obsolete, and should only be used for development and testing purposes.\u0026#39;"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-6363",
              "help": {
                "text": "Vulnerability CVE-2017-6363\nSeverity: HIGH\nPackage: libgd\nFixed Version: 2.2.5-r4\nLink: [CVE-2017-6363](https://avd.aquasec.com/nvd/cve-2017-6363)\nIn the GD Graphics Library (aka LibGD) through 2.2.5, there is a heap-based buffer over-read in tiffWriter in gd_tiff.c. NOTE: the vendor says \"In my opinion this issue should not have a CVE, since the GD and GD2 formats are documented to be 'obsolete, and should only be used for development and testing purposes.'",
                "markdown": "**Vulnerability CVE-2017-6363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libgd|2.2.5-r4|[CVE-2017-6363](https://avd.aquasec.com/nvd/cve-2017-6363)|\n\nIn the GD Graphics Library (aka LibGD) through 2.2.5, there is a heap-based buffer over-read in tiffWriter in gd_tiff.c. NOTE: the vendor says \"In my opinion this issue should not have a CVE, since the GD and GD2 formats are documented to be 'obsolete, and should only be used for development and testing purposes.'"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-40145",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "gdImageGd2Ptr in gd_gd2.c in the GD Graphics Library (aka LibGD) throu ..."
              },
              "fullDescription": {
                "text": "gdImageGd2Ptr in gd_gd2.c in the GD Graphics Library (aka LibGD) through 2.3.2 has a double free. NOTE: the vendor\u0026#39;s position is \u0026#34;The GD2 image format is a proprietary image format of libgd. It has to be regarded as being obsolete, and should only be used for development and testing purposes."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-40145",
              "help": {
                "text": "Vulnerability CVE-2021-40145\nSeverity: HIGH\nPackage: libgd\nFixed Version: 2.2.5-r4\nLink: [CVE-2021-40145](https://avd.aquasec.com/nvd/cve-2021-40145)\ngdImageGd2Ptr in gd_gd2.c in the GD Graphics Library (aka LibGD) through 2.3.2 has a double free. NOTE: the vendor's position is \"The GD2 image format is a proprietary image format of libgd. It has to be regarded as being obsolete, and should only be used for development and testing purposes.",
                "markdown": "**Vulnerability CVE-2021-40145**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libgd|2.2.5-r4|[CVE-2021-40145](https://avd.aquasec.com/nvd/cve-2021-40145)|\n\ngdImageGd2Ptr in gd_gd2.c in the GD Graphics Library (aka LibGD) through 2.3.2 has a double free. NOTE: the vendor's position is \"The GD2 image format is a proprietary image format of libgd. It has to be regarded as being obsolete, and should only be used for development and testing purposes."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-38115",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "read_header_tga in gd_tga.c in the GD Graphics Library (aka LibGD) thr ..."
              },
              "fullDescription": {
                "text": "read_header_tga in gd_tga.c in the GD Graphics Library (aka LibGD) through 2.3.2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-38115",
              "help": {
                "text": "Vulnerability CVE-2021-38115\nSeverity: MEDIUM\nPackage: libgd\nFixed Version: 2.2.5-r4\nLink: [CVE-2021-38115](https://avd.aquasec.com/nvd/cve-2021-38115)\nread_header_tga in gd_tga.c in the GD Graphics Library (aka LibGD) through 2.3.2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file.",
                "markdown": "**Vulnerability CVE-2021-38115**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libgd|2.2.5-r4|[CVE-2021-38115](https://avd.aquasec.com/nvd/cve-2021-38115)|\n\nread_header_tga in gd_tga.c in the GD Graphics Library (aka LibGD) through 2.3.2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3517",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libxml2: Heap-based buffer overflow in xmlEncodeEntitiesInternal() in entities.c"
              },
              "fullDescription": {
                "text": "There is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3517",
              "help": {
                "text": "Vulnerability CVE-2021-3517\nSeverity: HIGH\nPackage: libxml2\nFixed Version: 2.9.10-r5\nLink: [CVE-2021-3517](https://avd.aquasec.com/nvd/cve-2021-3517)\nThere is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application.",
                "markdown": "**Vulnerability CVE-2021-3517**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libxml2|2.9.10-r5|[CVE-2021-3517](https://avd.aquasec.com/nvd/cve-2021-3517)|\n\nThere is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3518",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libxml2: Use-after-free in xmlXIncludeDoProcess() in xinclude.c"
              },
              "fullDescription": {
                "text": "There\u0026#39;s a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3518",
              "help": {
                "text": "Vulnerability CVE-2021-3518\nSeverity: HIGH\nPackage: libxml2\nFixed Version: 2.9.10-r5\nLink: [CVE-2021-3518](https://avd.aquasec.com/nvd/cve-2021-3518)\nThere's a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability.",
                "markdown": "**Vulnerability CVE-2021-3518**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|libxml2|2.9.10-r5|[CVE-2021-3518](https://avd.aquasec.com/nvd/cve-2021-3518)|\n\nThere's a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-3537",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libxml2: NULL pointer dereference when post-validating mixed content parsed in recovery mode"
              },
              "fullDescription": {
                "text": "A vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3537",
              "help": {
                "text": "Vulnerability CVE-2021-3537\nSeverity: MEDIUM\nPackage: libxml2\nFixed Version: 2.9.10-r5\nLink: [CVE-2021-3537](https://avd.aquasec.com/nvd/cve-2021-3537)\nA vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability.",
                "markdown": "**Vulnerability CVE-2021-3537**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libxml2|2.9.10-r5|[CVE-2021-3537](https://avd.aquasec.com/nvd/cve-2021-3537)|\n\nA vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3541",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libxml2: Exponential entity expansion attack bypasses all existing protection mechanisms"
              },
              "fullDescription": {
                "text": "A flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3541",
              "help": {
                "text": "Vulnerability CVE-2021-3541\nSeverity: MEDIUM\nPackage: libxml2\nFixed Version: 2.9.12-r0\nLink: [CVE-2021-3541](https://avd.aquasec.com/nvd/cve-2021-3541)\nA flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service.",
                "markdown": "**Vulnerability CVE-2021-3541**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|libxml2|2.9.12-r0|[CVE-2021-3541](https://avd.aquasec.com/nvd/cve-2021-3541)|\n\nA flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-7774",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-y18n: prototype pollution vulnerability"
              },
              "fullDescription": {
                "text": "The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-7774",
              "help": {
                "text": "Vulnerability CVE-2020-7774\nSeverity: CRITICAL\nPackage: nodejs\nFixed Version: 12.22.1-r0\nLink: [CVE-2020-7774](https://avd.aquasec.com/nvd/cve-2020-7774)\nThe package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",
                "markdown": "**Vulnerability CVE-2020-7774**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|nodejs|12.22.1-r0|[CVE-2020-7774](https://avd.aquasec.com/nvd/cve-2020-7774)|\n\nThe package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-22930",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: Use-after-free on close http2 on stream canceling"
              },
              "fullDescription": {
                "text": "Node.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to a use after free attack where an attacker might be able to exploit the memory corruption, to change process behavior."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22930",
              "help": {
                "text": "Vulnerability CVE-2021-22930\nSeverity: CRITICAL\nPackage: nodejs\nFixed Version: 12.22.4-r0\nLink: [CVE-2021-22930](https://avd.aquasec.com/nvd/cve-2021-22930)\nNode.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to a use after free attack where an attacker might be able to exploit the memory corruption, to change process behavior.",
                "markdown": "**Vulnerability CVE-2021-22930**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|nodejs|12.22.4-r0|[CVE-2021-22930](https://avd.aquasec.com/nvd/cve-2021-22930)|\n\nNode.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to a use after free attack where an attacker might be able to exploit the memory corruption, to change process behavior."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-22931",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: Improper handling of untypical characters in domain names"
              },
              "fullDescription": {
                "text": "Node.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to Remote Code Execution, XSS, Application crashes due to missing input validation of host names returned by Domain Name Servers in Node.js dns library which can lead to output of wrong hostnames (leading to Domain Hijacking) and injection vulnerabilities in applications using the library."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22931",
              "help": {
                "text": "Vulnerability CVE-2021-22931\nSeverity: CRITICAL\nPackage: nodejs\nFixed Version: 12.22.5-r0\nLink: [CVE-2021-22931](https://avd.aquasec.com/nvd/cve-2021-22931)\nNode.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to Remote Code Execution, XSS, Application crashes due to missing input validation of host names returned by Domain Name Servers in Node.js dns library which can lead to output of wrong hostnames (leading to Domain Hijacking) and injection vulnerabilities in applications using the library.",
                "markdown": "**Vulnerability CVE-2021-22931**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|nodejs|12.22.5-r0|[CVE-2021-22931](https://avd.aquasec.com/nvd/cve-2021-22931)|\n\nNode.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to Remote Code Execution, XSS, Application crashes due to missing input validation of host names returned by Domain Name Servers in Node.js dns library which can lead to output of wrong hostnames (leading to Domain Hijacking) and injection vulnerabilities in applications using the library."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-11080",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nghttp2: overly large SETTINGS frames can lead to DoS"
              },
              "fullDescription": {
                "text": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., \u0026gt; 32), then drop the connection."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-11080",
              "help": {
                "text": "Vulnerability CVE-2020-11080\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-11080](https://avd.aquasec.com/nvd/cve-2020-11080)\nIn nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., \u003e 32), then drop the connection.",
                "markdown": "**Vulnerability CVE-2020-11080**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-11080](https://avd.aquasec.com/nvd/cve-2020-11080)|\n\nIn nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., \u003e 32), then drop the connection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8172",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: TLS session reuse can lead to hostname verification bypass"
              },
              "fullDescription": {
                "text": "TLS session reuse can lead to host certificate verification bypass in node version \u0026lt; 12.18.0 and \u0026lt; 14.4.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8172",
              "help": {
                "text": "Vulnerability CVE-2020-8172\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8172](https://avd.aquasec.com/nvd/cve-2020-8172)\nTLS session reuse can lead to host certificate verification bypass in node version \u003c 12.18.0 and \u003c 14.4.0.",
                "markdown": "**Vulnerability CVE-2020-8172**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-8172](https://avd.aquasec.com/nvd/cve-2020-8172)|\n\nTLS session reuse can lead to host certificate verification bypass in node version \u003c 12.18.0 and \u003c 14.4.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8174",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: memory corruption in napi_get_value_string_* functions"
              },
              "fullDescription": {
                "text": "napi_get_value_string_*() allows various kinds of memory corruption in node \u0026lt; 10.21.0, 12.18.0, and \u0026lt; 14.4.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8174",
              "help": {
                "text": "Vulnerability CVE-2020-8174\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8174](https://avd.aquasec.com/nvd/cve-2020-8174)\nnapi_get_value_string_*() allows various kinds of memory corruption in node \u003c 10.21.0, 12.18.0, and \u003c 14.4.0.",
                "markdown": "**Vulnerability CVE-2020-8174**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-8174](https://avd.aquasec.com/nvd/cve-2020-8174)|\n\nnapi_get_value_string_*() allows various kinds of memory corruption in node \u003c 10.21.0, 12.18.0, and \u003c 14.4.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8201",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: HTTP request smuggling due to CR-to-Hyphen conversion"
              },
              "fullDescription": {
                "text": "Node.js \u0026lt; 12.18.4 and \u0026lt; 14.11 can be exploited to perform HTTP desync attacks and deliver malicious payloads to unsuspecting users. The payloads can be crafted by an attacker to hijack user sessions, poison cookies, perform clickjacking, and a multitude of other attacks depending on the architecture of the underlying system. The attack was possible due to a bug in processing of carrier-return symbols in the HTTP header names."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8201",
              "help": {
                "text": "Vulnerability CVE-2020-8201\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8201](https://avd.aquasec.com/nvd/cve-2020-8201)\nNode.js \u003c 12.18.4 and \u003c 14.11 can be exploited to perform HTTP desync attacks and deliver malicious payloads to unsuspecting users. The payloads can be crafted by an attacker to hijack user sessions, poison cookies, perform clickjacking, and a multitude of other attacks depending on the architecture of the underlying system. The attack was possible due to a bug in processing of carrier-return symbols in the HTTP header names.",
                "markdown": "**Vulnerability CVE-2020-8201**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-8201](https://avd.aquasec.com/nvd/cve-2020-8201)|\n\nNode.js \u003c 12.18.4 and \u003c 14.11 can be exploited to perform HTTP desync attacks and deliver malicious payloads to unsuspecting users. The payloads can be crafted by an attacker to hijack user sessions, poison cookies, perform clickjacking, and a multitude of other attacks depending on the architecture of the underlying system. The attack was possible due to a bug in processing of carrier-return symbols in the HTTP header names."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8252",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libuv: buffer overflow in realpath"
              },
              "fullDescription": {
                "text": "The implementation of realpath in libuv \u0026lt; 10.22.1, \u0026lt; 12.18.4, and \u0026lt; 14.9.0 used within Node.js incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8252",
              "help": {
                "text": "Vulnerability CVE-2020-8252\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8252](https://avd.aquasec.com/nvd/cve-2020-8252)\nThe implementation of realpath in libuv \u003c 10.22.1, \u003c 12.18.4, and \u003c 14.9.0 used within Node.js incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes.",
                "markdown": "**Vulnerability CVE-2020-8252**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-8252](https://avd.aquasec.com/nvd/cve-2020-8252)|\n\nThe implementation of realpath in libuv \u003c 10.22.1, \u003c 12.18.4, and \u003c 14.9.0 used within Node.js incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8265",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: use-after-free in the TLS implementation"
              },
              "fullDescription": {
                "text": "Node.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 are vulnerable to a use-after-free bug in its TLS implementation. When writing to a TLS enabled socket, node::StreamBase::Write calls node::TLSWrap::DoWrite with a freshly allocated WriteWrap object as first argument. If the DoWrite method does not return an error, this object is passed back to the caller as part of a StreamWriteResult structure. This may be exploited to corrupt memory leading to a Denial of Service or potentially other exploits."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8265",
              "help": {
                "text": "Vulnerability CVE-2020-8265\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8265](https://avd.aquasec.com/nvd/cve-2020-8265)\nNode.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 are vulnerable to a use-after-free bug in its TLS implementation. When writing to a TLS enabled socket, node::StreamBase::Write calls node::TLSWrap::DoWrite with a freshly allocated WriteWrap object as first argument. If the DoWrite method does not return an error, this object is passed back to the caller as part of a StreamWriteResult structure. This may be exploited to corrupt memory leading to a Denial of Service or potentially other exploits.",
                "markdown": "**Vulnerability CVE-2020-8265**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-8265](https://avd.aquasec.com/nvd/cve-2020-8265)|\n\nNode.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 are vulnerable to a use-after-free bug in its TLS implementation. When writing to a TLS enabled socket, node::StreamBase::Write calls node::TLSWrap::DoWrite with a freshly allocated WriteWrap object as first argument. If the DoWrite method does not return an error, this object is passed back to the caller as part of a StreamWriteResult structure. This may be exploited to corrupt memory leading to a Denial of Service or potentially other exploits."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8277",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "c-ares: ares_parse_{a,aaaa}_reply() insufficient naddrttls validation DoS"
              },
              "fullDescription": {
                "text": "A Node.js application that allows an attacker to trigger a DNS request for a host of their choice could trigger a Denial of Service in versions \u0026lt; 15.2.1, \u0026lt; 14.15.1, and \u0026lt; 12.19.1 by getting the application to resolve a DNS record with a larger number of responses. This is fixed in 15.2.1, 14.15.1, and 12.19.1."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8277",
              "help": {
                "text": "Vulnerability CVE-2020-8277\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8277](https://avd.aquasec.com/nvd/cve-2020-8277)\nA Node.js application that allows an attacker to trigger a DNS request for a host of their choice could trigger a Denial of Service in versions \u003c 15.2.1, \u003c 14.15.1, and \u003c 12.19.1 by getting the application to resolve a DNS record with a larger number of responses. This is fixed in 15.2.1, 14.15.1, and 12.19.1.",
                "markdown": "**Vulnerability CVE-2020-8277**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.20.1-r0|[CVE-2020-8277](https://avd.aquasec.com/nvd/cve-2020-8277)|\n\nA Node.js application that allows an attacker to trigger a DNS request for a host of their choice could trigger a Denial of Service in versions \u003c 15.2.1, \u003c 14.15.1, and \u003c 12.19.1 by getting the application to resolve a DNS record with a larger number of responses. This is fixed in 15.2.1, 14.15.1, and 12.19.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-22883",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: HTTP2 \u0026#39;unknownProtocol\u0026#39; cause DoS by resource exhaustion"
              },
              "fullDescription": {
                "text": "Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to a denial of service attack when too many connection attempts with an \u0026#39;unknownProtocol\u0026#39; are established. This leads to a leak of file descriptors. If a file descriptor limit is configured on the system, then the server is unable to accept new connections and prevent the process also from opening, e.g. a file. If no file descriptor limit is configured, then this lead to an excessive memory usage and cause the system to run out of memory."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22883",
              "help": {
                "text": "Vulnerability CVE-2021-22883\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.21.0-r0\nLink: [CVE-2021-22883](https://avd.aquasec.com/nvd/cve-2021-22883)\nNode.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to a denial of service attack when too many connection attempts with an 'unknownProtocol' are established. This leads to a leak of file descriptors. If a file descriptor limit is configured on the system, then the server is unable to accept new connections and prevent the process also from opening, e.g. a file. If no file descriptor limit is configured, then this lead to an excessive memory usage and cause the system to run out of memory.",
                "markdown": "**Vulnerability CVE-2021-22883**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.21.0-r0|[CVE-2021-22883](https://avd.aquasec.com/nvd/cve-2021-22883)|\n\nNode.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to a denial of service attack when too many connection attempts with an 'unknownProtocol' are established. This leads to a leak of file descriptors. If a file descriptor limit is configured on the system, then the server is unable to accept new connections and prevent the process also from opening, e.g. a file. If no file descriptor limit is configured, then this lead to an excessive memory usage and cause the system to run out of memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-22884",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: DNS rebinding in --inspect"
              },
              "fullDescription": {
                "text": "Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim\u0026#39;s DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22884",
              "help": {
                "text": "Vulnerability CVE-2021-22884\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.21.0-r0\nLink: [CVE-2021-22884](https://avd.aquasec.com/nvd/cve-2021-22884)\nNode.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.",
                "markdown": "**Vulnerability CVE-2021-22884**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.21.0-r0|[CVE-2021-22884](https://avd.aquasec.com/nvd/cve-2021-22884)|\n\nNode.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37701",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Insufficient symlink protection due to directory cache poisoning using symbolic links allowing arbitrary file creation and overwrite"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37701",
              "help": {
                "text": "Vulnerability CVE-2021-37701\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-37701](https://avd.aquasec.com/nvd/cve-2021-37701)\nThe npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.",
                "markdown": "**Vulnerability CVE-2021-37701**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.22.6-r0|[CVE-2021-37701](https://avd.aquasec.com/nvd/cve-2021-37701)|\n\nThe npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37712",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Insufficient symlink protection due to directory cache poisoning using symbolic links allowing arbitrary file creation and overwrite"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \u0026#34;short path\u0026#34; counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37712",
              "help": {
                "text": "Vulnerability CVE-2021-37712\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-37712](https://avd.aquasec.com/nvd/cve-2021-37712)\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
                "markdown": "**Vulnerability CVE-2021-37712**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.22.6-r0|[CVE-2021-37712](https://avd.aquasec.com/nvd/cve-2021-37712)|\n\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37713",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37713",
              "help": {
                "text": "Vulnerability CVE-2021-37713\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-37713](https://avd.aquasec.com/nvd/cve-2021-37713)\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "markdown": "**Vulnerability CVE-2021-37713**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.22.6-r0|[CVE-2021-37713](https://avd.aquasec.com/nvd/cve-2021-37713)|\n\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-39134",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-arborist: symlink following vulnerability"
              },
              "fullDescription": {
                "text": "`@npmcli/arborist`, the library that calculates dependency trees and manages the `node_modules` folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is, in part, accomplished by resolving dependency specifiers defined in `package.json` manifests for dependencies with a specific name, and nesting folders to resolve conflicting dependencies. When multiple dependencies differ only in the case of their name, Arborist\u0026#39;s internal data structure saw them as separate items that could coexist within the same level in the `node_modules` hierarchy. However, on case-insensitive file systems (such as macOS and Windows), this is not the case. Combined with a symlink dependency such as `file:/some/path`, this allowed an attacker to create a situation in which arbitrary contents could be written to any location on the filesystem. For example, a package `pwn-a` could define a dependency in their `package.json` file such as `\u0026#34;foo\u0026#34;: \u0026#34;file:/some/path\u0026#34;`. Another package, `pwn-b` could define a dependency such as `FOO: \u0026#34;file:foo.tgz\u0026#34;`. On case-insensitive file systems, if `pwn-a` was installed, and then `pwn-b` was installed afterwards, the contents of `foo.tgz` would be written to `/some/path`, and any existing contents of `/some/path` would be removed. Anyone using npm v7.20.6 or earlier on a case-insensitive filesystem is potentially affected. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-39134",
              "help": {
                "text": "Vulnerability CVE-2021-39134\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-39134](https://avd.aquasec.com/nvd/cve-2021-39134)\n`@npmcli/arborist`, the library that calculates dependency trees and manages the `node_modules` folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is, in part, accomplished by resolving dependency specifiers defined in `package.json` manifests for dependencies with a specific name, and nesting folders to resolve conflicting dependencies. When multiple dependencies differ only in the case of their name, Arborist's internal data structure saw them as separate items that could coexist within the same level in the `node_modules` hierarchy. However, on case-insensitive file systems (such as macOS and Windows), this is not the case. Combined with a symlink dependency such as `file:/some/path`, this allowed an attacker to create a situation in which arbitrary contents could be written to any location on the filesystem. For example, a package `pwn-a` could define a dependency in their `package.json` file such as `\"foo\": \"file:/some/path\"`. Another package, `pwn-b` could define a dependency such as `FOO: \"file:foo.tgz\"`. On case-insensitive file systems, if `pwn-a` was installed, and then `pwn-b` was installed afterwards, the contents of `foo.tgz` would be written to `/some/path`, and any existing contents of `/some/path` would be removed. Anyone using npm v7.20.6 or earlier on a case-insensitive filesystem is potentially affected. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above.",
                "markdown": "**Vulnerability CVE-2021-39134**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.22.6-r0|[CVE-2021-39134](https://avd.aquasec.com/nvd/cve-2021-39134)|\n\n`@npmcli/arborist`, the library that calculates dependency trees and manages the `node_modules` folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is, in part, accomplished by resolving dependency specifiers defined in `package.json` manifests for dependencies with a specific name, and nesting folders to resolve conflicting dependencies. When multiple dependencies differ only in the case of their name, Arborist's internal data structure saw them as separate items that could coexist within the same level in the `node_modules` hierarchy. However, on case-insensitive file systems (such as macOS and Windows), this is not the case. Combined with a symlink dependency such as `file:/some/path`, this allowed an attacker to create a situation in which arbitrary contents could be written to any location on the filesystem. For example, a package `pwn-a` could define a dependency in their `package.json` file such as `\"foo\": \"file:/some/path\"`. Another package, `pwn-b` could define a dependency such as `FOO: \"file:foo.tgz\"`. On case-insensitive file systems, if `pwn-a` was installed, and then `pwn-b` was installed afterwards, the contents of `foo.tgz` would be written to `/some/path`, and any existing contents of `/some/path` would be removed. Anyone using npm v7.20.6 or earlier on a case-insensitive filesystem is potentially affected. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-39135",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-arborist: symlink following vulnerability"
              },
              "fullDescription": {
                "text": "`@npmcli/arborist`, the library that calculates dependency trees and manages the node_modules folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is accomplished by extracting package contents into a project\u0026#39;s `node_modules` folder. If the `node_modules` folder of the root project or any of its dependencies is somehow replaced with a symbolic link, it could allow Arborist to write package dependencies to any arbitrary location on the file system. Note that symbolic links contained within package artifact contents are filtered out, so another means of creating a `node_modules` symbolic link would have to be employed. 1. A `preinstall` script could replace `node_modules` with a symlink. (This is prevented by using `--ignore-scripts`.) 2. An attacker could supply the target with a git repository, instructing them to run `npm install --ignore-scripts` in the root. This may be successful, because `npm install --ignore-scripts` is typically not capable of making changes outside of the project directory, so it may be deemed safe. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above. For more information including workarounds please see the referenced GHSA-gmw6-94gg-2rc2."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-39135",
              "help": {
                "text": "Vulnerability CVE-2021-39135\nSeverity: HIGH\nPackage: nodejs\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-39135](https://avd.aquasec.com/nvd/cve-2021-39135)\n`@npmcli/arborist`, the library that calculates dependency trees and manages the node_modules folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is accomplished by extracting package contents into a project's `node_modules` folder. If the `node_modules` folder of the root project or any of its dependencies is somehow replaced with a symbolic link, it could allow Arborist to write package dependencies to any arbitrary location on the file system. Note that symbolic links contained within package artifact contents are filtered out, so another means of creating a `node_modules` symbolic link would have to be employed. 1. A `preinstall` script could replace `node_modules` with a symlink. (This is prevented by using `--ignore-scripts`.) 2. An attacker could supply the target with a git repository, instructing them to run `npm install --ignore-scripts` in the root. This may be successful, because `npm install --ignore-scripts` is typically not capable of making changes outside of the project directory, so it may be deemed safe. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above. For more information including workarounds please see the referenced GHSA-gmw6-94gg-2rc2.",
                "markdown": "**Vulnerability CVE-2021-39135**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nodejs|12.22.6-r0|[CVE-2021-39135](https://avd.aquasec.com/nvd/cve-2021-39135)|\n\n`@npmcli/arborist`, the library that calculates dependency trees and manages the node_modules folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is accomplished by extracting package contents into a project's `node_modules` folder. If the `node_modules` folder of the root project or any of its dependencies is somehow replaced with a symbolic link, it could allow Arborist to write package dependencies to any arbitrary location on the file system. Note that symbolic links contained within package artifact contents are filtered out, so another means of creating a `node_modules` symbolic link would have to be employed. 1. A `preinstall` script could replace `node_modules` with a symlink. (This is prevented by using `--ignore-scripts`.) 2. An attacker could supply the target with a git repository, instructing them to run `npm install --ignore-scripts` in the root. This may be successful, because `npm install --ignore-scripts` is typically not capable of making changes outside of the project directory, so it may be deemed safe. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above. For more information including workarounds please see the referenced GHSA-gmw6-94gg-2rc2."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-8287",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: HTTP request smuggling via two copies of a header field in an http request"
              },
              "fullDescription": {
                "text": "Node.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 allow two copies of a header field in an HTTP request (for example, two Transfer-Encoding header fields). In this case, Node.js identifies the first header field and ignores the second. This can lead to HTTP Request Smuggling."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-8287",
              "help": {
                "text": "Vulnerability CVE-2020-8287\nSeverity: MEDIUM\nPackage: nodejs\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8287](https://avd.aquasec.com/nvd/cve-2020-8287)\nNode.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 allow two copies of a header field in an HTTP request (for example, two Transfer-Encoding header fields). In this case, Node.js identifies the first header field and ignores the second. This can lead to HTTP Request Smuggling.",
                "markdown": "**Vulnerability CVE-2020-8287**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|nodejs|12.20.1-r0|[CVE-2020-8287](https://avd.aquasec.com/nvd/cve-2020-8287)|\n\nNode.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 allow two copies of a header field in an HTTP request (for example, two Transfer-Encoding header fields). In this case, Node.js identifies the first header field and ignores the second. This can lead to HTTP Request Smuggling."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22918",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "libuv: out-of-bounds read in uv__idna_toascii() can lead to information disclosures or crashes"
              },
              "fullDescription": {
                "text": "Node.js before 16.4.1, 14.17.2, 12.22.2 is vulnerable to an out-of-bounds read when uv__idna_toascii() is used to convert strings to ASCII. The pointer p is read and increased without checking whether it is beyond pe, with the latter holding a pointer to the end of the buffer. This can lead to information disclosures or crashes. This function can be triggered via uv_getaddrinfo()."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22918",
              "help": {
                "text": "Vulnerability CVE-2021-22918\nSeverity: MEDIUM\nPackage: nodejs\nFixed Version: 12.22.2-r0\nLink: [CVE-2021-22918](https://avd.aquasec.com/nvd/cve-2021-22918)\nNode.js before 16.4.1, 14.17.2, 12.22.2 is vulnerable to an out-of-bounds read when uv__idna_toascii() is used to convert strings to ASCII. The pointer p is read and increased without checking whether it is beyond pe, with the latter holding a pointer to the end of the buffer. This can lead to information disclosures or crashes. This function can be triggered via uv_getaddrinfo().",
                "markdown": "**Vulnerability CVE-2021-22918**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|nodejs|12.22.2-r0|[CVE-2021-22918](https://avd.aquasec.com/nvd/cve-2021-22918)|\n\nNode.js before 16.4.1, 14.17.2, 12.22.2 is vulnerable to an out-of-bounds read when uv__idna_toascii() is used to convert strings to ASCII. The pointer p is read and increased without checking whether it is beyond pe, with the latter holding a pointer to the end of the buffer. This can lead to information disclosures or crashes. This function can be triggered via uv_getaddrinfo()."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-22939",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "nodejs: Incomplete validation of tls rejectUnauthorized parameter"
              },
              "fullDescription": {
                "text": "If the Node.js https API was used incorrectly and \u0026#34;undefined\u0026#34; was in passed for the \u0026#34;rejectUnauthorized\u0026#34; parameter, no error was returned and connections to servers with an expired certificate would have been accepted."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-22939",
              "help": {
                "text": "Vulnerability CVE-2021-22939\nSeverity: MEDIUM\nPackage: nodejs\nFixed Version: 12.22.5-r0\nLink: [CVE-2021-22939](https://avd.aquasec.com/nvd/cve-2021-22939)\nIf the Node.js https API was used incorrectly and \"undefined\" was in passed for the \"rejectUnauthorized\" parameter, no error was returned and connections to servers with an expired certificate would have been accepted.",
                "markdown": "**Vulnerability CVE-2021-22939**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|nodejs|12.22.5-r0|[CVE-2021-22939](https://avd.aquasec.com/nvd/cve-2021-22939)|\n\nIf the Node.js https API was used incorrectly and \"undefined\" was in passed for the \"rejectUnauthorized\" parameter, no error was returned and connections to servers with an expired certificate would have been accepted."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-27814",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openjpeg: heap-buffer-overflow in lib/openjp2/mqc.c could result in DoS"
              },
              "fullDescription": {
                "text": "A heap-buffer overflow was found in the way openjpeg2 handled certain PNG format files. An attacker could use this flaw to cause an application crash or in some cases execute arbitrary code with the permission of the user running such an application."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-27814",
              "help": {
                "text": "Vulnerability CVE-2020-27814\nSeverity: HIGH\nPackage: openjpeg\nFixed Version: 2.3.1-r5\nLink: [CVE-2020-27814](https://avd.aquasec.com/nvd/cve-2020-27814)\nA heap-buffer overflow was found in the way openjpeg2 handled certain PNG format files. An attacker could use this flaw to cause an application crash or in some cases execute arbitrary code with the permission of the user running such an application.",
                "markdown": "**Vulnerability CVE-2020-27814**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openjpeg|2.3.1-r5|[CVE-2020-27814](https://avd.aquasec.com/nvd/cve-2020-27814)|\n\nA heap-buffer overflow was found in the way openjpeg2 handled certain PNG format files. An attacker could use this flaw to cause an application crash or in some cases execute arbitrary code with the permission of the user running such an application."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-27823",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openjpeg: heap-buffer-overflow write in opj_tcd_dc_level_shift_encode()"
              },
              "fullDescription": {
                "text": "A flaw was found in OpenJPEG’s encoder. This flaw allows an attacker to pass specially crafted x,y offset input to OpenJPEG to use during encoding. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-27823",
              "help": {
                "text": "Vulnerability CVE-2020-27823\nSeverity: HIGH\nPackage: openjpeg\nFixed Version: 2.3.1-r5\nLink: [CVE-2020-27823](https://avd.aquasec.com/nvd/cve-2020-27823)\nA flaw was found in OpenJPEG’s encoder. This flaw allows an attacker to pass specially crafted x,y offset input to OpenJPEG to use during encoding. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.",
                "markdown": "**Vulnerability CVE-2020-27823**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openjpeg|2.3.1-r5|[CVE-2020-27823](https://avd.aquasec.com/nvd/cve-2020-27823)|\n\nA flaw was found in OpenJPEG’s encoder. This flaw allows an attacker to pass specially crafted x,y offset input to OpenJPEG to use during encoding. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-27844",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openjpeg: heap-based buffer overflow in opj_t2_encode_packet function in openjp2/t2.c"
              },
              "fullDescription": {
                "text": "A flaw was found in openjpeg\u0026#39;s src/lib/openjp2/t2.c in versions prior to 2.4.0. This flaw allows an attacker to provide crafted input to openjpeg during conversion and encoding, causing an out-of-bounds write. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-27844",
              "help": {
                "text": "Vulnerability CVE-2020-27844\nSeverity: HIGH\nPackage: openjpeg\nFixed Version: 2.4.0-r0\nLink: [CVE-2020-27844](https://avd.aquasec.com/nvd/cve-2020-27844)\nA flaw was found in openjpeg's src/lib/openjp2/t2.c in versions prior to 2.4.0. This flaw allows an attacker to provide crafted input to openjpeg during conversion and encoding, causing an out-of-bounds write. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.",
                "markdown": "**Vulnerability CVE-2020-27844**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|openjpeg|2.4.0-r0|[CVE-2020-27844](https://avd.aquasec.com/nvd/cve-2020-27844)|\n\nA flaw was found in openjpeg's src/lib/openjp2/t2.c in versions prior to 2.4.0. This flaw allows an attacker to provide crafted input to openjpeg during conversion and encoding, causing an out-of-bounds write. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-27824",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openjpeg: global-buffer-overflow read in opj_dwt_calc_explicit_stepsizes()"
              },
              "fullDescription": {
                "text": "A flaw was found in OpenJPEG’s encoder in the opj_dwt_calc_explicit_stepsizes() function. This flaw allows an attacker who can supply crafted input to decomposition levels to cause a buffer overflow. The highest threat from this vulnerability is to system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-27824",
              "help": {
                "text": "Vulnerability CVE-2020-27824\nSeverity: MEDIUM\nPackage: openjpeg\nFixed Version: 2.3.1-r5\nLink: [CVE-2020-27824](https://avd.aquasec.com/nvd/cve-2020-27824)\nA flaw was found in OpenJPEG’s encoder in the opj_dwt_calc_explicit_stepsizes() function. This flaw allows an attacker who can supply crafted input to decomposition levels to cause a buffer overflow. The highest threat from this vulnerability is to system availability.",
                "markdown": "**Vulnerability CVE-2020-27824**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openjpeg|2.3.1-r5|[CVE-2020-27824](https://avd.aquasec.com/nvd/cve-2020-27824)|\n\nA flaw was found in OpenJPEG’s encoder in the opj_dwt_calc_explicit_stepsizes() function. This flaw allows an attacker who can supply crafted input to decomposition levels to cause a buffer overflow. The highest threat from this vulnerability is to system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-29338",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "openjpeg: out-of-bounds write due to an integer overflow in opj_compress.c"
              },
              "fullDescription": {
                "text": "Integer Overflow in OpenJPEG v2.4.0 allows remote attackers to crash the application, causing a Denial of Service (DoS). This occurs when the attacker uses the command line option \u0026#34;-ImgDir\u0026#34; on a directory that contains 1048576 files."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-29338",
              "help": {
                "text": "Vulnerability CVE-2021-29338\nSeverity: MEDIUM\nPackage: openjpeg\nFixed Version: 2.4.0-r1\nLink: [CVE-2021-29338](https://avd.aquasec.com/nvd/cve-2021-29338)\nInteger Overflow in OpenJPEG v2.4.0 allows remote attackers to crash the application, causing a Denial of Service (DoS). This occurs when the attacker uses the command line option \"-ImgDir\" on a directory that contains 1048576 files.",
                "markdown": "**Vulnerability CVE-2021-29338**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|openjpeg|2.4.0-r1|[CVE-2021-29338](https://avd.aquasec.com/nvd/cve-2021-29338)|\n\nInteger Overflow in OpenJPEG v2.4.0 allows remote attackers to crash the application, causing a Denial of Service (DoS). This occurs when the attacker uses the command line option \"-ImgDir\" on a directory that contains 1048576 files."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-20193",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "tar: Memory leak in read_header() in list.c"
              },
              "fullDescription": {
                "text": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-20193",
              "help": {
                "text": "Vulnerability CVE-2021-20193\nSeverity: MEDIUM\nPackage: tar\nFixed Version: 1.32-r2\nLink: [CVE-2021-20193](https://avd.aquasec.com/nvd/cve-2021-20193)\nA flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
                "markdown": "**Vulnerability CVE-2021-20193**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|tar|1.32-r2|[CVE-2021-20193](https://avd.aquasec.com/nvd/cve-2021-20193)|\n\nA flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2018-18384",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "unzip: Buffer overflow in list.c resulting in a denial of service"
              },
              "fullDescription": {
                "text": "Info-ZIP UnZip 6.0 has a buffer overflow in list.c, when a ZIP archive has a crafted relationship between the compressed-size value and the uncompressed-size value, because a buffer size is 10 and is supposed to be 12."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2018-18384",
              "help": {
                "text": "Vulnerability CVE-2018-18384\nSeverity: MEDIUM\nPackage: unzip\nFixed Version: 6.0-r7\nLink: [CVE-2018-18384](https://avd.aquasec.com/nvd/cve-2018-18384)\nInfo-ZIP UnZip 6.0 has a buffer overflow in list.c, when a ZIP archive has a crafted relationship between the compressed-size value and the uncompressed-size value, because a buffer size is 10 and is supposed to be 12.",
                "markdown": "**Vulnerability CVE-2018-18384**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|unzip|6.0-r7|[CVE-2018-18384](https://avd.aquasec.com/nvd/cve-2018-18384)|\n\nInfo-ZIP UnZip 6.0 has a buffer overflow in list.c, when a ZIP archive has a crafted relationship between the compressed-size value and the uncompressed-size value, because a buffer size is 10 and is supposed to be 12."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-37434",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field"
              },
              "fullDescription": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-37434",
              "help": {
                "text": "Vulnerability CVE-2022-37434\nSeverity: CRITICAL\nPackage: zlib\nFixed Version: 1.2.11-r4\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "**Vulnerability CVE-2022-37434**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|zlib|1.2.11-r4|[CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)|\n\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-25287",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Out-of-bounds read in J2K image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_graya_la."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25287",
              "help": {
                "text": "Vulnerability CVE-2021-25287\nSeverity: CRITICAL\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-25287](https://avd.aquasec.com/nvd/cve-2021-25287)\nAn issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.",
                "markdown": "**Vulnerability CVE-2021-25287**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|Pillow|8.2.0|[CVE-2021-25287](https://avd.aquasec.com/nvd/cve-2021-25287)|\n\nAn issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_graya_la."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-25288",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Out-of-bounds read in J2K image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_gray_i."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25288",
              "help": {
                "text": "Vulnerability CVE-2021-25288\nSeverity: CRITICAL\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-25288](https://avd.aquasec.com/nvd/cve-2021-25288)\nAn issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.",
                "markdown": "**Vulnerability CVE-2021-25288**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|Pillow|8.2.0|[CVE-2021-25288](https://avd.aquasec.com/nvd/cve-2021-25288)|\n\nAn issue was discovered in Pillow before 8.2.0. There is an out-of-bounds read in J2kDecode, in j2ku_gray_i."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-34552",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Buffer overflow in image convert function"
              },
              "fullDescription": {
                "text": "Pillow through 8.2.0 and PIL (aka Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-34552",
              "help": {
                "text": "Vulnerability CVE-2021-34552\nSeverity: CRITICAL\nPackage: Pillow\nFixed Version: 8.3.0\nLink: [CVE-2021-34552](https://avd.aquasec.com/nvd/cve-2021-34552)\nPillow through 8.2.0 and PIL (aka Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c.",
                "markdown": "**Vulnerability CVE-2021-34552**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|Pillow|8.3.0|[CVE-2021-34552](https://avd.aquasec.com/nvd/cve-2021-34552)|\n\nPillow through 8.2.0 and PIL (aka Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-22817",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: PIL.ImageMath.eval allows evaluation of arbitrary expressions"
              },
              "fullDescription": {
                "text": "PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A lambda expression could also be used."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22817",
              "help": {
                "text": "Vulnerability CVE-2022-22817\nSeverity: CRITICAL\nPackage: Pillow\nFixed Version: 9.0.1\nLink: [CVE-2022-22817](https://avd.aquasec.com/nvd/cve-2022-22817)\nPIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A lambda expression could also be used.",
                "markdown": "**Vulnerability CVE-2022-22817**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|Pillow|9.0.1|[CVE-2022-22817](https://avd.aquasec.com/nvd/cve-2022-22817)|\n\nPIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A lambda expression could also be used."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2022-24303",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: temporary directory with a space character allows removal of unrelated file after im.show() and related actions"
              },
              "fullDescription": {
                "text": "Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24303",
              "help": {
                "text": "Vulnerability CVE-2022-24303\nSeverity: CRITICAL\nPackage: Pillow\nFixed Version: 9.0.1\nLink: [CVE-2022-24303](https://avd.aquasec.com/nvd/cve-2022-24303)\nPillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.",
                "markdown": "**Vulnerability CVE-2022-24303**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|Pillow|9.0.1|[CVE-2022-24303](https://avd.aquasec.com/nvd/cve-2022-24303)|\n\nPillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-10379",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: two buffer overflows in libImaging/TiffDecode.c due to small buffers allocated in ImagingLibTiffDecode()"
              },
              "fullDescription": {
                "text": "In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-10379",
              "help": {
                "text": "Vulnerability CVE-2020-10379\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 7.1.0\nLink: [CVE-2020-10379](https://avd.aquasec.com/nvd/cve-2020-10379)\nIn Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c.",
                "markdown": "**Vulnerability CVE-2020-10379**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|7.1.0|[CVE-2020-10379](https://avd.aquasec.com/nvd/cve-2020-10379)|\n\nIn Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-11538",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: out-of-bounds reads/writes in the parsing of SGI image files in expandrow/expandrow2"
              },
              "fullDescription": {
                "text": "In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-11538",
              "help": {
                "text": "Vulnerability CVE-2020-11538\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 7.1.0\nLink: [CVE-2020-11538](https://avd.aquasec.com/nvd/cve-2020-11538)\nIn libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311.",
                "markdown": "**Vulnerability CVE-2020-11538**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|7.1.0|[CVE-2020-11538](https://avd.aquasec.com/nvd/cve-2020-11538)|\n\nIn libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-35653",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Buffer over-read in PCX image reader"
              },
              "fullDescription": {
                "text": "In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-35653",
              "help": {
                "text": "Vulnerability CVE-2020-35653\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.0\nLink: [CVE-2020-35653](https://avd.aquasec.com/nvd/cve-2020-35653)\nIn Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations.",
                "markdown": "**Vulnerability CVE-2020-35653**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.0|[CVE-2020-35653](https://avd.aquasec.com/nvd/cve-2020-35653)|\n\nIn Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-35654",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: decoding crafted YCbCr files could result in heap-based buffer overflow"
              },
              "fullDescription": {
                "text": "In Pillow before 8.1.0, TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-35654",
              "help": {
                "text": "Vulnerability CVE-2020-35654\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.0\nLink: [CVE-2020-35654](https://avd.aquasec.com/nvd/cve-2020-35654)\nIn Pillow before 8.1.0, TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode.",
                "markdown": "**Vulnerability CVE-2020-35654**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.0|[CVE-2020-35654](https://avd.aquasec.com/nvd/cve-2020-35654)|\n\nIn Pillow before 8.1.0, TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-23437",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: possible ReDoS via the getrgb function"
              },
              "fullDescription": {
                "text": "The package pillow 5.2.0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23437",
              "help": {
                "text": "Vulnerability CVE-2021-23437\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.3.2\nLink: [CVE-2021-23437](https://avd.aquasec.com/nvd/cve-2021-23437)\nThe package pillow 5.2.0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.",
                "markdown": "**Vulnerability CVE-2021-23437**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.3.2|[CVE-2021-23437](https://avd.aquasec.com/nvd/cve-2021-23437)|\n\nThe package pillow 5.2.0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-25290",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Negative-offset memcpy in TIFF image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is a negative-offset memcpy with an invalid size."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25290",
              "help": {
                "text": "Vulnerability CVE-2021-25290\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.1\nLink: [CVE-2021-25290](https://avd.aquasec.com/nvd/cve-2021-25290)\nAn issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is a negative-offset memcpy with an invalid size.",
                "markdown": "**Vulnerability CVE-2021-25290**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.1|[CVE-2021-25290](https://avd.aquasec.com/nvd/cve-2021-25290)|\n\nAn issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is a negative-offset memcpy with an invalid size."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-25291",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: out-of-bounds read in TiffReadRGBATile in TiffDecode.c"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25291",
              "help": {
                "text": "Vulnerability CVE-2021-25291\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-25291](https://avd.aquasec.com/nvd/cve-2021-25291)\nAn issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.",
                "markdown": "**Vulnerability CVE-2021-25291**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.2.0|[CVE-2021-25291](https://avd.aquasec.com/nvd/cve-2021-25291)|\n\nAn issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-25293",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Out-of-bounds read in SGI RLE image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.1.1. There is an out-of-bounds read in SGIRleDecode.c."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25293",
              "help": {
                "text": "Vulnerability CVE-2021-25293\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.1\nLink: [CVE-2021-25293](https://avd.aquasec.com/nvd/cve-2021-25293)\nAn issue was discovered in Pillow before 8.1.1. There is an out-of-bounds read in SGIRleDecode.c.",
                "markdown": "**Vulnerability CVE-2021-25293**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.1|[CVE-2021-25293](https://avd.aquasec.com/nvd/cve-2021-25293)|\n\nAn issue was discovered in Pillow before 8.1.1. There is an out-of-bounds read in SGIRleDecode.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-27921",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Excessive memory allocation in BLP image reader"
              },
              "fullDescription": {
                "text": "Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27921",
              "help": {
                "text": "Vulnerability CVE-2021-27921\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.1\nLink: [CVE-2021-27921](https://avd.aquasec.com/nvd/cve-2021-27921)\nPillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.",
                "markdown": "**Vulnerability CVE-2021-27921**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.1|[CVE-2021-27921](https://avd.aquasec.com/nvd/cve-2021-27921)|\n\nPillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-27922",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Excessive memory allocation in ICNS image reader"
              },
              "fullDescription": {
                "text": "Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27922",
              "help": {
                "text": "Vulnerability CVE-2021-27922\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.1\nLink: [CVE-2021-27922](https://avd.aquasec.com/nvd/cve-2021-27922)\nPillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.",
                "markdown": "**Vulnerability CVE-2021-27922**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.1|[CVE-2021-27922](https://avd.aquasec.com/nvd/cve-2021-27922)|\n\nPillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-27923",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Excessive memory allocation in ICO image reader"
              },
              "fullDescription": {
                "text": "Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27923",
              "help": {
                "text": "Vulnerability CVE-2021-27923\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.1.1\nLink: [CVE-2021-27923](https://avd.aquasec.com/nvd/cve-2021-27923)\nPillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large.",
                "markdown": "**Vulnerability CVE-2021-27923**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.1.1|[CVE-2021-27923](https://avd.aquasec.com/nvd/cve-2021-27923)|\n\nPillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28676",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Infinite loop in FLI image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.2.0. For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28676",
              "help": {
                "text": "Vulnerability CVE-2021-28676\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-28676](https://avd.aquasec.com/nvd/cve-2021-28676)\nAn issue was discovered in Pillow before 8.2.0. For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.",
                "markdown": "**Vulnerability CVE-2021-28676**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.2.0|[CVE-2021-28676](https://avd.aquasec.com/nvd/cve-2021-28676)|\n\nAn issue was discovered in Pillow before 8.2.0. For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28677",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Excessive CPU use in EPS image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.2.0. For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \\r and \\n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28677",
              "help": {
                "text": "Vulnerability CVE-2021-28677\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-28677](https://avd.aquasec.com/nvd/cve-2021-28677)\nAn issue was discovered in Pillow before 8.2.0. For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \\r and \\n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.",
                "markdown": "**Vulnerability CVE-2021-28677**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|8.2.0|[CVE-2021-28677](https://avd.aquasec.com/nvd/cve-2021-28677)|\n\nAn issue was discovered in Pillow before 8.2.0. For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \\r and \\n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-45198",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Pillow before 9.2.0 performs Improper Handling of Highly Compressed GI ..."
              },
              "fullDescription": {
                "text": "Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-45198",
              "help": {
                "text": "Vulnerability CVE-2022-45198\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 9.2.0\nLink: [CVE-2022-45198](https://avd.aquasec.com/nvd/cve-2022-45198)\nPillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).",
                "markdown": "**Vulnerability CVE-2022-45198**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|9.2.0|[CVE-2022-45198](https://avd.aquasec.com/nvd/cve-2022-45198)|\n\nPillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-44271",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: uncontrolled resource consumption when textlength in an ImageDraw instance operates on a long text argument"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-44271",
              "help": {
                "text": "Vulnerability CVE-2023-44271\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 10.0.0\nLink: [CVE-2023-44271](https://avd.aquasec.com/nvd/cve-2023-44271)\nAn issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.",
                "markdown": "**Vulnerability CVE-2023-44271**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|10.0.0|[CVE-2023-44271](https://avd.aquasec.com/nvd/cve-2023-44271)|\n\nAn issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-4863",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "libwebp: Heap buffer overflow in WebP Codec"
              },
              "fullDescription": {
                "text": "Heap buffer overflow in libwebp in Google Chrome prior to 116.0.5845.187 and libwebp 1.3.2 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: Critical)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-4863",
              "help": {
                "text": "Vulnerability CVE-2023-4863\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 10.0.1\nLink: [CVE-2023-4863](https://avd.aquasec.com/nvd/cve-2023-4863)\nHeap buffer overflow in libwebp in Google Chrome prior to 116.0.5845.187 and libwebp 1.3.2 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: Critical)",
                "markdown": "**Vulnerability CVE-2023-4863**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|10.0.1|[CVE-2023-4863](https://avd.aquasec.com/nvd/cve-2023-4863)|\n\nHeap buffer overflow in libwebp in Google Chrome prior to 116.0.5845.187 and libwebp 1.3.2 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: Critical)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-50447",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pillow:Arbitrary Code Execution via the environment parameter"
              },
              "fullDescription": {
                "text": "Pillow through 10.1.0 allows PIL.ImageMath.eval Arbitrary Code Execution via the environment parameter, a different vulnerability than CVE-2022-22817 (which was about the expression parameter)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-50447",
              "help": {
                "text": "Vulnerability CVE-2023-50447\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 10.2.0\nLink: [CVE-2023-50447](https://avd.aquasec.com/nvd/cve-2023-50447)\nPillow through 10.1.0 allows PIL.ImageMath.eval Arbitrary Code Execution via the environment parameter, a different vulnerability than CVE-2022-22817 (which was about the expression parameter).",
                "markdown": "**Vulnerability CVE-2023-50447**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|10.2.0|[CVE-2023-50447](https://avd.aquasec.com/nvd/cve-2023-50447)|\n\nPillow through 10.1.0 allows PIL.ImageMath.eval Arbitrary Code Execution via the environment parameter, a different vulnerability than CVE-2022-22817 (which was about the expression parameter)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "GHSA-56pw-mpj4-fxww",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Bundled libwebp in Pillow vulnerable"
              },
              "fullDescription": {
                "text": "Pillow versions before v10.0.1 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-5129 (previously CVE-2023-4863). Pillow v10.0.1 upgrades the bundled libwebp binary to v1.3.2."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/advisories/GHSA-56pw-mpj4-fxww",
              "help": {
                "text": "Vulnerability GHSA-56pw-mpj4-fxww\nSeverity: HIGH\nPackage: Pillow\nFixed Version: 10.0.1\nLink: [GHSA-56pw-mpj4-fxww](https://github.com/advisories/GHSA-56pw-mpj4-fxww)\nPillow versions before v10.0.1 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-5129 (previously CVE-2023-4863). Pillow v10.0.1 upgrades the bundled libwebp binary to v1.3.2.",
                "markdown": "**Vulnerability GHSA-56pw-mpj4-fxww**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|Pillow|10.0.1|[GHSA-56pw-mpj4-fxww](https://github.com/advisories/GHSA-56pw-mpj4-fxww)|\n\nPillow versions before v10.0.1 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-5129 (previously CVE-2023-4863). Pillow v10.0.1 upgrades the bundled libwebp binary to v1.3.2."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-10177",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: multiple out-of-bounds reads in libImaging/FliDecode.c"
              },
              "fullDescription": {
                "text": "Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-10177",
              "help": {
                "text": "Vulnerability CVE-2020-10177\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 7.1.0\nLink: [CVE-2020-10177](https://avd.aquasec.com/nvd/cve-2020-10177)\nPillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.",
                "markdown": "**Vulnerability CVE-2020-10177**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|7.1.0|[CVE-2020-10177](https://avd.aquasec.com/nvd/cve-2020-10177)|\n\nPillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-10378",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: an out-of-bounds read in libImaging/PcxDecode.c can occur when reading PCX files"
              },
              "fullDescription": {
                "text": "In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state-\u0026gt;shuffle is instructed to read beyond state-\u0026gt;buffer."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-10378",
              "help": {
                "text": "Vulnerability CVE-2020-10378\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 7.1.0\nLink: [CVE-2020-10378](https://avd.aquasec.com/nvd/cve-2020-10378)\nIn libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state-\u003eshuffle is instructed to read beyond state-\u003ebuffer.",
                "markdown": "**Vulnerability CVE-2020-10378**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|7.1.0|[CVE-2020-10378](https://avd.aquasec.com/nvd/cve-2020-10378)|\n\nIn libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state-\u003eshuffle is instructed to read beyond state-\u003ebuffer."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-10994",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: multiple out-of-bounds reads via a crafted JP2 file"
              },
              "fullDescription": {
                "text": "In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-10994",
              "help": {
                "text": "Vulnerability CVE-2020-10994\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 7.1.0\nLink: [CVE-2020-10994](https://avd.aquasec.com/nvd/cve-2020-10994)\nIn libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file.",
                "markdown": "**Vulnerability CVE-2020-10994**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|7.1.0|[CVE-2020-10994](https://avd.aquasec.com/nvd/cve-2020-10994)|\n\nIn libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-35655",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Buffer over-read in SGI RLE image reader"
              },
              "fullDescription": {
                "text": "In Pillow before 8.1.0, SGIRleDecode has a 4-byte buffer over-read when decoding crafted SGI RLE image files because offsets and length tables are mishandled."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-35655",
              "help": {
                "text": "Vulnerability CVE-2020-35655\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 8.1.0\nLink: [CVE-2020-35655](https://avd.aquasec.com/nvd/cve-2020-35655)\nIn Pillow before 8.1.0, SGIRleDecode has a 4-byte buffer over-read when decoding crafted SGI RLE image files because offsets and length tables are mishandled.",
                "markdown": "**Vulnerability CVE-2020-35655**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|8.1.0|[CVE-2020-35655](https://avd.aquasec.com/nvd/cve-2020-35655)|\n\nIn Pillow before 8.1.0, SGIRleDecode has a 4-byte buffer over-read when decoding crafted SGI RLE image files because offsets and length tables are mishandled."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-25292",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Regular expression DoS in PDF format parser"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-25292",
              "help": {
                "text": "Vulnerability CVE-2021-25292\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 8.1.1\nLink: [CVE-2021-25292](https://avd.aquasec.com/nvd/cve-2021-25292)\nAn issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.",
                "markdown": "**Vulnerability CVE-2021-25292**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|8.1.1|[CVE-2021-25292](https://avd.aquasec.com/nvd/cve-2021-25292)|\n\nAn issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-28675",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Excessive memory allocation in PSD image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28675",
              "help": {
                "text": "Vulnerability CVE-2021-28675\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-28675](https://avd.aquasec.com/nvd/cve-2021-28675)\nAn issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.",
                "markdown": "**Vulnerability CVE-2021-28675**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|8.2.0|[CVE-2021-28675](https://avd.aquasec.com/nvd/cve-2021-28675)|\n\nAn issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-28678",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: Excessive looping in BLP image reader"
              },
              "fullDescription": {
                "text": "An issue was discovered in Pillow before 8.2.0. For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28678",
              "help": {
                "text": "Vulnerability CVE-2021-28678\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 8.2.0\nLink: [CVE-2021-28678](https://avd.aquasec.com/nvd/cve-2021-28678)\nAn issue was discovered in Pillow before 8.2.0. For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.",
                "markdown": "**Vulnerability CVE-2021-28678**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|8.2.0|[CVE-2021-28678](https://avd.aquasec.com/nvd/cve-2021-28678)|\n\nAn issue was discovered in Pillow before 8.2.0. For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22815",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: improperly initializes ImagePath.Path in path_getbbox() in path.c"
              },
              "fullDescription": {
                "text": "path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22815",
              "help": {
                "text": "Vulnerability CVE-2022-22815\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 9.0.0\nLink: [CVE-2022-22815](https://avd.aquasec.com/nvd/cve-2022-22815)\npath_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.",
                "markdown": "**Vulnerability CVE-2022-22815**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|9.0.0|[CVE-2022-22815](https://avd.aquasec.com/nvd/cve-2022-22815)|\n\npath_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-22816",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: buffer over-read during initialization of ImagePath.Path in path_getbbox() in path.c"
              },
              "fullDescription": {
                "text": "path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-22816",
              "help": {
                "text": "Vulnerability CVE-2022-22816\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 9.0.0\nLink: [CVE-2022-22816](https://avd.aquasec.com/nvd/cve-2022-22816)\npath_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.",
                "markdown": "**Vulnerability CVE-2022-22816**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|9.0.0|[CVE-2022-22816](https://avd.aquasec.com/nvd/cve-2022-22816)|\n\npath_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-28219",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pillow: buffer overflow in _imagingcms.c"
              },
              "fullDescription": {
                "text": "In _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28219",
              "help": {
                "text": "Vulnerability CVE-2024-28219\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 10.3.0\nLink: [CVE-2024-28219](https://avd.aquasec.com/nvd/cve-2024-28219)\nIn _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy.",
                "markdown": "**Vulnerability CVE-2024-28219**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|10.3.0|[CVE-2024-28219](https://avd.aquasec.com/nvd/cve-2024-28219)|\n\nIn _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-jgpv-4h4c-xhw3",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Uncontrolled Resource Consumption in pillow"
              },
              "fullDescription": {
                "text": "### Impact\n_Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large._\n\n### Patches\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._\n\n### Workarounds\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-27921\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-jgpv-4h4c-xhw3",
              "help": {
                "text": "Vulnerability GHSA-jgpv-4h4c-xhw3\nSeverity: MEDIUM\nPackage: Pillow\nFixed Version: 8.1.2\nLink: [GHSA-jgpv-4h4c-xhw3](https://github.com/advisories/GHSA-jgpv-4h4c-xhw3)\n### Impact\n_Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large._\n\n### Patches\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._\n\n### Workarounds\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-27921\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)",
                "markdown": "**Vulnerability GHSA-jgpv-4h4c-xhw3**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|Pillow|8.1.2|[GHSA-jgpv-4h4c-xhw3](https://github.com/advisories/GHSA-jgpv-4h4c-xhw3)|\n\n### Impact\n_Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large._\n\n### Patches\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._\n\n### Workarounds\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-27921\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-4fx9-vc88-q2xc",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Infinite loop in Pillow"
              },
              "fullDescription": {
                "text": "JpegImagePlugin may append an EOF marker to the end of a truncated file, so that the last segment of the data will still be processed by the decoder.\n\nIf the EOF marker is not detected as such however, this could lead to an infinite loop where JpegImagePlugin keeps trying to end the file."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-4fx9-vc88-q2xc",
              "help": {
                "text": "Vulnerability GHSA-4fx9-vc88-q2xc\nSeverity: LOW\nPackage: Pillow\nFixed Version: 9.0.0\nLink: [GHSA-4fx9-vc88-q2xc](https://github.com/advisories/GHSA-4fx9-vc88-q2xc)\nJpegImagePlugin may append an EOF marker to the end of a truncated file, so that the last segment of the data will still be processed by the decoder.\n\nIf the EOF marker is not detected as such however, this could lead to an infinite loop where JpegImagePlugin keeps trying to end the file.",
                "markdown": "**Vulnerability GHSA-4fx9-vc88-q2xc**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|Pillow|9.0.0|[GHSA-4fx9-vc88-q2xc](https://github.com/advisories/GHSA-4fx9-vc88-q2xc)|\n\nJpegImagePlugin may append an EOF marker to the end of a truncated file, so that the last segment of the data will still be processed by the decoder.\n\nIf the EOF marker is not detected as such however, this could lead to an infinite loop where JpegImagePlugin keeps trying to end the file."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-24859",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "PyPDF2: infinite loop vulnerability"
              },
              "fullDescription": {
                "text": "PyPDF2 is an open source python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. In versions prior to 1.27.5 an attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 if the code attempts to get the content stream. The reason is that the last while-loop in `ContentStream._readInlineImage` only terminates when it finds the `EI` token, but never actually checks if the stream has already ended. This issue has been resolved in version `1.27.5`. Users unable to upgrade should validate and PDFs prior to iterating over their content stream."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24859",
              "help": {
                "text": "Vulnerability CVE-2022-24859\nSeverity: MEDIUM\nPackage: PyPDF2\nFixed Version: 1.27.5\nLink: [CVE-2022-24859](https://avd.aquasec.com/nvd/cve-2022-24859)\nPyPDF2 is an open source python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. In versions prior to 1.27.5 an attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 if the code attempts to get the content stream. The reason is that the last while-loop in `ContentStream._readInlineImage` only terminates when it finds the `EI` token, but never actually checks if the stream has already ended. This issue has been resolved in version `1.27.5`. Users unable to upgrade should validate and PDFs prior to iterating over their content stream.",
                "markdown": "**Vulnerability CVE-2022-24859**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|PyPDF2|1.27.5|[CVE-2022-24859](https://avd.aquasec.com/nvd/cve-2022-24859)|\n\nPyPDF2 is an open source python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. In versions prior to 1.27.5 an attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 if the code attempts to get the content stream. The reason is that the last while-loop in `ContentStream._readInlineImage` only terminates when it finds the `EI` token, but never actually checks if the stream has already ended. This issue has been resolved in version `1.27.5`. Users unable to upgrade should validate and PDFs prior to iterating over their content stream."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-36810",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pypdf is a pure-python PDF library capable of splitting, merging, crop ..."
              },
              "fullDescription": {
                "text": "pypdf is a pure-python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. An attacker who uses this vulnerability can craft a PDF which leads to unexpected long runtime. This quadratic runtime blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. This issue has been addressed in PR 808 and versions from 1.27.9 include this fix. Users are advised to upgrade. There are no known workarounds for this vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-36810",
              "help": {
                "text": "Vulnerability CVE-2023-36810\nSeverity: MEDIUM\nPackage: PyPDF2\nFixed Version: 1.27.9\nLink: [CVE-2023-36810](https://avd.aquasec.com/nvd/cve-2023-36810)\npypdf is a pure-python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. An attacker who uses this vulnerability can craft a PDF which leads to unexpected long runtime. This quadratic runtime blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. This issue has been addressed in PR 808 and versions from 1.27.9 include this fix. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "**Vulnerability CVE-2023-36810**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|PyPDF2|1.27.9|[CVE-2023-36810](https://avd.aquasec.com/nvd/cve-2023-36810)|\n\npypdf is a pure-python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. An attacker who uses this vulnerability can craft a PDF which leads to unexpected long runtime. This quadratic runtime blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. This issue has been addressed in PR 808 and versions from 1.27.9 include this fix. Users are advised to upgrade. There are no known workarounds for this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-37920",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: Removal of e-Tugra root certificate"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \u0026#34;e-Tugra\u0026#34; root certificates. e-Tugra\u0026#39;s root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \u0026#34;e-Tugra\u0026#34; from the root store."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-37920",
              "help": {
                "text": "Vulnerability CVE-2023-37920\nSeverity: HIGH\nPackage: certifi\nFixed Version: 2023.7.22\nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store.",
                "markdown": "**Vulnerability CVE-2023-37920**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|certifi|2023.7.22|[CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi prior to version 2023.07.22 recognizes \"e-Tugra\" root certificates. e-Tugra's root certificates were subject to an investigation prompted by reporting of security issues in their systems. Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-23491",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-certifi: untrusted root certificates"
              },
              "fullDescription": {
                "text": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \u0026#34;TrustCor\u0026#34; from the root store. These are in the process of being removed from Mozilla\u0026#39;s trust store. TrustCor\u0026#39;s root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor\u0026#39;s ownership also operated a business that produced spyware. Conclusions of Mozilla\u0026#39;s investigation can be found in the linked google group discussion."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-23491",
              "help": {
                "text": "Vulnerability CVE-2022-23491\nSeverity: MEDIUM\nPackage: certifi\nFixed Version: 2022.12.07\nLink: [CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.",
                "markdown": "**Vulnerability CVE-2022-23491**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|certifi|2022.12.07|[CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)|\n\nCertifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-36242",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-cryptography: Large inputs for symmetric encryption can trigger integer overflow leading to buffer overflow"
              },
              "fullDescription": {
                "text": "In the cryptography package before 3.3.2 for Python, certain sequences of update calls to symmetrically encrypt multi-GB values could result in an integer overflow and buffer overflow, as demonstrated by the Fernet class."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-36242",
              "help": {
                "text": "Vulnerability CVE-2020-36242\nSeverity: CRITICAL\nPackage: cryptography\nFixed Version: 3.3.2\nLink: [CVE-2020-36242](https://avd.aquasec.com/nvd/cve-2020-36242)\nIn the cryptography package before 3.3.2 for Python, certain sequences of update calls to symmetrically encrypt multi-GB values could result in an integer overflow and buffer overflow, as demonstrated by the Fernet class.",
                "markdown": "**Vulnerability CVE-2020-36242**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|cryptography|3.3.2|[CVE-2020-36242](https://avd.aquasec.com/nvd/cve-2020-36242)|\n\nIn the cryptography package before 3.3.2 for Python, certain sequences of update calls to symmetrically encrypt multi-GB values could result in an integer overflow and buffer overflow, as demonstrated by the Fernet class."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-0286",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "openssl: X.400 address type confusion in X.509 GeneralName"
              },
              "fullDescription": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-0286",
              "help": {
                "text": "Vulnerability CVE-2023-0286\nSeverity: HIGH\nPackage: cryptography\nFixed Version: 39.0.1\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)\nThere is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n",
                "markdown": "**Vulnerability CVE-2023-0286**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|cryptography|39.0.1|[CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)|\n\nThere is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-50782",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-cryptography: Bleichenbacher timing oracle attack against RSA decryption - incomplete fix for CVE-2020-25659"
              },
              "fullDescription": {
                "text": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-50782",
              "help": {
                "text": "Vulnerability CVE-2023-50782\nSeverity: HIGH\nPackage: cryptography\nFixed Version: 42.0.0\nLink: [CVE-2023-50782](https://avd.aquasec.com/nvd/cve-2023-50782)\nA flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.",
                "markdown": "**Vulnerability CVE-2023-50782**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|cryptography|42.0.0|[CVE-2023-50782](https://avd.aquasec.com/nvd/cve-2023-50782)|\n\nA flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-23931",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-cryptography: memory corruption via immutable objects"
              },
              "fullDescription": {
                "text": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. In affected versions `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This now correctly raises an exception. This issue has been present since `update_into` was originally introduced in cryptography 1.8."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-23931",
              "help": {
                "text": "Vulnerability CVE-2023-23931\nSeverity: MEDIUM\nPackage: cryptography\nFixed Version: 39.0.1\nLink: [CVE-2023-23931](https://avd.aquasec.com/nvd/cve-2023-23931)\ncryptography is a package designed to expose cryptographic primitives and recipes to Python developers. In affected versions `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This now correctly raises an exception. This issue has been present since `update_into` was originally introduced in cryptography 1.8.",
                "markdown": "**Vulnerability CVE-2023-23931**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|cryptography|39.0.1|[CVE-2023-23931](https://avd.aquasec.com/nvd/cve-2023-23931)|\n\ncryptography is a package designed to expose cryptographic primitives and recipes to Python developers. In affected versions `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This now correctly raises an exception. This issue has been present since `update_into` was originally introduced in cryptography 1.8."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-49083",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-cryptography: NULL-dereference when loading PKCS7 certificates"
              },
              "fullDescription": {
                "text": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Calling `load_pem_pkcs7_certificates` or `load_der_pkcs7_certificates` could lead to a NULL-pointer dereference and segfault. Exploitation of this vulnerability poses a serious risk of Denial of Service (DoS) for any application attempting to deserialize a PKCS7 blob/certificate. The consequences extend to potential disruptions in system availability and stability. This vulnerability has been patched in version 41.0.6."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-49083",
              "help": {
                "text": "Vulnerability CVE-2023-49083\nSeverity: MEDIUM\nPackage: cryptography\nFixed Version: 41.0.6\nLink: [CVE-2023-49083](https://avd.aquasec.com/nvd/cve-2023-49083)\ncryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Calling `load_pem_pkcs7_certificates` or `load_der_pkcs7_certificates` could lead to a NULL-pointer dereference and segfault. Exploitation of this vulnerability poses a serious risk of Denial of Service (DoS) for any application attempting to deserialize a PKCS7 blob/certificate. The consequences extend to potential disruptions in system availability and stability. This vulnerability has been patched in version 41.0.6.",
                "markdown": "**Vulnerability CVE-2023-49083**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|cryptography|41.0.6|[CVE-2023-49083](https://avd.aquasec.com/nvd/cve-2023-49083)|\n\ncryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Calling `load_pem_pkcs7_certificates` or `load_der_pkcs7_certificates` could lead to a NULL-pointer dereference and segfault. Exploitation of this vulnerability poses a serious risk of Denial of Service (DoS) for any application attempting to deserialize a PKCS7 blob/certificate. The consequences extend to potential disruptions in system availability and stability. This vulnerability has been patched in version 41.0.6."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-0727",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "openssl: denial of service via null dereference"
              },
              "fullDescription": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-0727",
              "help": {
                "text": "Vulnerability CVE-2024-0727\nSeverity: MEDIUM\nPackage: cryptography\nFixed Version: 42.0.2\nLink: [CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)\nIssue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-0727**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|cryptography|42.0.2|[CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)|\n\nIssue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-5cpq-8wj7-hf2v",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Vulnerable OpenSSL included in cryptography wheels"
              },
              "fullDescription": {
                "text": "pyca/cryptography\u0026#39;s wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.5-40.0.2 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://www.openssl.org/news/secadv/20230530.txt.\n\nIf you are building cryptography source (\u0026#34;sdist\u0026#34;) then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-5cpq-8wj7-hf2v",
              "help": {
                "text": "Vulnerability GHSA-5cpq-8wj7-hf2v\nSeverity: LOW\nPackage: cryptography\nFixed Version: 41.0.0\nLink: [GHSA-5cpq-8wj7-hf2v](https://github.com/advisories/GHSA-5cpq-8wj7-hf2v)\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.5-40.0.2 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://www.openssl.org/news/secadv/20230530.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.",
                "markdown": "**Vulnerability GHSA-5cpq-8wj7-hf2v**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|cryptography|41.0.0|[GHSA-5cpq-8wj7-hf2v](https://github.com/advisories/GHSA-5cpq-8wj7-hf2v)|\n\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.5-40.0.2 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://www.openssl.org/news/secadv/20230530.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "GHSA-jm77-qphf-c4w8",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyca/cryptography\u0026#39;s wheels include vulnerable OpenSSL"
              },
              "fullDescription": {
                "text": "pyca/cryptography\u0026#39;s wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8-41.0.2 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230731.txt, https://www.openssl.org/news/secadv/20230719.txt, and https://www.openssl.org/news/secadv/20230714.txt.\n\nIf you are building cryptography source (\u0026#34;sdist\u0026#34;) then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-jm77-qphf-c4w8",
              "help": {
                "text": "Vulnerability GHSA-jm77-qphf-c4w8\nSeverity: LOW\nPackage: cryptography\nFixed Version: 41.0.3\nLink: [GHSA-jm77-qphf-c4w8](https://github.com/advisories/GHSA-jm77-qphf-c4w8)\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8-41.0.2 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230731.txt, https://www.openssl.org/news/secadv/20230719.txt, and https://www.openssl.org/news/secadv/20230714.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.",
                "markdown": "**Vulnerability GHSA-jm77-qphf-c4w8**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|cryptography|41.0.3|[GHSA-jm77-qphf-c4w8](https://github.com/advisories/GHSA-jm77-qphf-c4w8)|\n\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8-41.0.2 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230731.txt, https://www.openssl.org/news/secadv/20230719.txt, and https://www.openssl.org/news/secadv/20230714.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "GHSA-v8gr-m533-ghj9",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Vulnerable OpenSSL included in cryptography wheels"
              },
              "fullDescription": {
                "text": "pyca/cryptography\u0026#39;s wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 2.5-41.0.3 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230908.txt.\n\nIf you are building cryptography source (\u0026#34;sdist\u0026#34;) then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://github.com/advisories/GHSA-v8gr-m533-ghj9",
              "help": {
                "text": "Vulnerability GHSA-v8gr-m533-ghj9\nSeverity: LOW\nPackage: cryptography\nFixed Version: 41.0.4\nLink: [GHSA-v8gr-m533-ghj9](https://github.com/advisories/GHSA-v8gr-m533-ghj9)\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 2.5-41.0.3 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230908.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.",
                "markdown": "**Vulnerability GHSA-v8gr-m533-ghj9**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|cryptography|41.0.4|[GHSA-v8gr-m533-ghj9](https://github.com/advisories/GHSA-v8gr-m533-ghj9)|\n\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 2.5-41.0.3 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230908.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-3651",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-idna: potential DoS via resource consumption via specially crafted inputs to idna.encode()"
              },
              "fullDescription": {
                "text": "A flaw was found in the python-idna library. A malicious argument was sent to the idna.encode() function can trigger an uncontrolled resource consumption, resulting in a denial of service."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-3651",
              "help": {
                "text": "Vulnerability CVE-2024-3651\nSeverity: MEDIUM\nPackage: idna\nFixed Version: 3.7\nLink: [CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)\nA flaw was found in the python-idna library. A malicious argument was sent to the idna.encode() function can trigger an uncontrolled resource consumption, resulting in a denial of service.",
                "markdown": "**Vulnerability CVE-2024-3651**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|idna|3.7|[CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)|\n\nA flaw was found in the python-idna library. A malicious argument was sent to the idna.encode() function can trigger an uncontrolled resource consumption, resulting in a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-43818",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-lxml: HTML Cleaner allows crafted and SVG embedded scripts to pass through"
              },
              "fullDescription": {
                "text": "lxml is a library for processing XML and HTML in the Python language. Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch. There are no known workarounds available."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-43818",
              "help": {
                "text": "Vulnerability CVE-2021-43818\nSeverity: HIGH\nPackage: lxml\nFixed Version: 4.6.5\nLink: [CVE-2021-43818](https://avd.aquasec.com/nvd/cve-2021-43818)\nlxml is a library for processing XML and HTML in the Python language. Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch. There are no known workarounds available.",
                "markdown": "**Vulnerability CVE-2021-43818**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|lxml|4.6.5|[CVE-2021-43818](https://avd.aquasec.com/nvd/cve-2021-43818)|\n\nlxml is a library for processing XML and HTML in the Python language. Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch. There are no known workarounds available."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28957",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-lxml: Missing input sanitization for formaction HTML5 attributes may lead to XSS"
              },
              "fullDescription": {
                "text": "An XSS vulnerability was discovered in python-lxml\u0026#39;s clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formaction attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in lxml 4.6.3."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28957",
              "help": {
                "text": "Vulnerability CVE-2021-28957\nSeverity: MEDIUM\nPackage: lxml\nFixed Version: 4.6.3\nLink: [CVE-2021-28957](https://avd.aquasec.com/nvd/cve-2021-28957)\nAn XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formaction attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in lxml 4.6.3.",
                "markdown": "**Vulnerability CVE-2021-28957**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|lxml|4.6.3|[CVE-2021-28957](https://avd.aquasec.com/nvd/cve-2021-28957)|\n\nAn XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formaction attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in lxml 4.6.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-2309",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "lxml: NULL Pointer Dereference in lxml"
              },
              "fullDescription": {
                "text": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn\u0026#39;t be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-2309",
              "help": {
                "text": "Vulnerability CVE-2022-2309\nSeverity: MEDIUM\nPackage: lxml\nFixed Version: 4.9.1\nLink: [CVE-2022-2309](https://avd.aquasec.com/nvd/cve-2022-2309)\nNULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.",
                "markdown": "**Vulnerability CVE-2022-2309**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|lxml|4.9.1|[CVE-2022-2309](https://avd.aquasec.com/nvd/cve-2022-2309)|\n\nNULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-48795",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "ssh: Prefix truncation attack on Binary Packet Protocol (BPP)"
              },
              "fullDescription": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH\u0026#39;s use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-48795",
              "help": {
                "text": "Vulnerability CVE-2023-48795\nSeverity: MEDIUM\nPackage: paramiko\nFixed Version: 3.4.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)\nThe SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "**Vulnerability CVE-2023-48795**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|paramiko|3.4.0|[CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)|\n\nThe SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3572",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-pip: Incorrect handling of unicode separators in git references"
              },
              "fullDescription": {
                "text": "A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3572",
              "help": {
                "text": "Vulnerability CVE-2021-3572\nSeverity: MEDIUM\nPackage: pip\nFixed Version: 21.1\nLink: [CVE-2021-3572](https://avd.aquasec.com/nvd/cve-2021-3572)\nA flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.",
                "markdown": "**Vulnerability CVE-2021-3572**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|pip|21.1|[CVE-2021-3572](https://avd.aquasec.com/nvd/cve-2021-3572)|\n\nA flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-5752",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pip: Mercurial configuration injectable in repo revision when installing via pip"
              },
              "fullDescription": {
                "text": "When installing a package from a Mercurial VCS URL  (ie \u0026#34;pip install \nhg+...\u0026#34;) with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \u0026#34;hg clone\u0026#34; \ncall (ie \u0026#34;--config\u0026#34;). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren\u0026#39;t installing from Mercurial.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-5752",
              "help": {
                "text": "Vulnerability CVE-2023-5752\nSeverity: MEDIUM\nPackage: pip\nFixed Version: 23.3\nLink: [CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)\nWhen installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.\n",
                "markdown": "**Vulnerability CVE-2023-5752**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|pip|23.3|[CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)|\n\nWhen installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-32681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-requests: Unintended leak of Proxy-Authorization header"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-32681",
              "help": {
                "text": "Vulnerability CVE-2023-32681\nSeverity: MEDIUM\nPackage: requests\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)\nRequests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n",
                "markdown": "**Vulnerability CVE-2023-32681**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|requests|2.31.0|[CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)|\n\nRequests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use `rebuild_proxies` to reattach the `Proxy-Authorization` header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-35195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "requests: subsequent requests to the same host ignore cert verification"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-35195",
              "help": {
                "text": "Vulnerability CVE-2024-35195\nSeverity: MEDIUM\nPackage: requests\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
                "markdown": "**Vulnerability CVE-2024-35195**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|requests|2.32.0|[CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)|\n\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-40897",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pypa-setuptools: Regular Expression Denial of Service (ReDoS) in package_index.py"
              },
              "fullDescription": {
                "text": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-40897",
              "help": {
                "text": "Vulnerability CVE-2022-40897\nSeverity: HIGH\nPackage: setuptools\nFixed Version: 65.5.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)\nPython Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.",
                "markdown": "**Vulnerability CVE-2022-40897**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|setuptools|65.5.1|[CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)|\n\nPython Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33503",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: ReDoS in the parsing of authority part of URL"
              },
              "fullDescription": {
                "text": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33503",
              "help": {
                "text": "Vulnerability CVE-2021-33503\nSeverity: HIGH\nPackage: urllib3\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
                "markdown": "**Vulnerability CVE-2021-33503**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|urllib3|1.26.5|[CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)|\n\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-28363",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: HTTPS proxy host name not validated when using default SSLContext"
              },
              "fullDescription": {
                "text": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn\u0026#39;t given via proxy_config) doesn\u0026#39;t verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-28363",
              "help": {
                "text": "Vulnerability CVE-2021-28363\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 1.26.4\nLink: [CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)\nThe urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
                "markdown": "**Vulnerability CVE-2021-28363**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|1.26.4|[CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)|\n\nThe urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-43804",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-urllib3: Cookie request header isn\u0026#39;t stripped during cross-origin redirects"
              },
              "fullDescription": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn\u0026#39;t treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn\u0026#39;t disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-43804",
              "help": {
                "text": "Vulnerability CVE-2023-43804\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 2.0.6, 1.26.17\nLink: [CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)\nurllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
                "markdown": "**Vulnerability CVE-2023-43804**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|2.0.6, 1.26.17|[CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)|\n\nurllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.9",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-45803",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "urllib3: Request body not stripped after redirect from 303 status changes request method to GET"
              },
              "fullDescription": {
                "text": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn\u0026#39;t remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren\u0026#39;t putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn\u0026#39;t exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren\u0026#39;t expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45803",
              "help": {
                "text": "Vulnerability CVE-2023-45803\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 2.0.7, 1.26.18\nLink: [CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)\nurllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n",
                "markdown": "**Vulnerability CVE-2023-45803**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|2.0.7, 1.26.18|[CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)|\n\nurllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "0.52.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2021-36159",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: apk-tools\nInstalled Version: 2.10.5-r0\nVulnerability CVE-2021-36159\nSeverity: CRITICAL\nFixed Version: 2.10.7-r0\nLink: [CVE-2021-36159](https://avd.aquasec.com/nvd/cve-2021-36159)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: apk-tools@2.10.5-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-30139",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Package: apk-tools\nInstalled Version: 2.10.5-r0\nVulnerability CVE-2021-30139\nSeverity: HIGH\nFixed Version: 2.10.6-r0\nLink: [CVE-2021-30139](https://avd.aquasec.com/nvd/cve-2021-30139)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: apk-tools@2.10.5-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-28831\nSeverity: HIGH\nFixed Version: 1.31.1-r10\nLink: [CVE-2021-28831](https://avd.aquasec.com/nvd/cve-2021-28831)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42378\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42378](https://avd.aquasec.com/nvd/cve-2021-42378)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42379\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42379](https://avd.aquasec.com/nvd/cve-2021-42379)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42380\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42380](https://avd.aquasec.com/nvd/cve-2021-42380)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42381\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42381](https://avd.aquasec.com/nvd/cve-2021-42381)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42382\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42382](https://avd.aquasec.com/nvd/cve-2021-42382)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42383\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42383](https://avd.aquasec.com/nvd/cve-2021-42383)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42384\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42384](https://avd.aquasec.com/nvd/cve-2021-42384)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42385\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42385](https://avd.aquasec.com/nvd/cve-2021-42385)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42386\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42386](https://avd.aquasec.com/nvd/cve-2021-42386)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: busybox\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42374\nSeverity: MEDIUM\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42374](https://avd.aquasec.com/nvd/cve-2021-42374)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: busybox@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3672",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: c-ares\nInstalled Version: 1.15.0-r0\nVulnerability CVE-2021-3672\nSeverity: MEDIUM\nFixed Version: 1.17.2-r0\nLink: [CVE-2021-3672](https://avd.aquasec.com/nvd/cve-2021-3672)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: c-ares@1.15.0-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22945\nSeverity: CRITICAL\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22945](https://avd.aquasec.com/nvd/cve-2021-22945)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22926\nSeverity: HIGH\nFixed Version: 7.67.0-r5\nLink: [CVE-2021-22926](https://avd.aquasec.com/nvd/cve-2021-22926)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22946\nSeverity: HIGH\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22946](https://avd.aquasec.com/nvd/cve-2021-22946)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22923\nSeverity: MEDIUM\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22923](https://avd.aquasec.com/nvd/cve-2021-22923)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22925\nSeverity: MEDIUM\nFixed Version: 7.67.0-r5\nLink: [CVE-2021-22925](https://avd.aquasec.com/nvd/cve-2021-22925)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22947\nSeverity: MEDIUM\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22947](https://avd.aquasec.com/nvd/cve-2021-22947)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2020-8284\nSeverity: LOW\nFixed Version: 7.79.0-r0\nLink: [CVE-2020-8284](https://avd.aquasec.com/nvd/cve-2020-8284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: curl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22898\nSeverity: LOW\nFixed Version: 7.67.0-r4\nLink: [CVE-2021-22898](https://avd.aquasec.com/nvd/cve-2021-22898)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: curl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21300",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: git\nInstalled Version: 2.24.3-r0\nVulnerability CVE-2021-21300\nSeverity: HIGH\nFixed Version: 2.24.4-r0\nLink: [CVE-2021-21300](https://avd.aquasec.com/nvd/cve-2021-21300)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: git@2.24.3-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3711",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3711\nSeverity: CRITICAL\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3711](https://avd.aquasec.com/nvd/cve-2021-3711)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23840",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23840\nSeverity: HIGH\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3450",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3450\nSeverity: HIGH\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3712",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3712\nSeverity: HIGH\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23841",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23841\nSeverity: MEDIUM\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3449",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3449\nSeverity: MEDIUM\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23839",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23839\nSeverity: LOW\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23839](https://avd.aquasec.com/nvd/cve-2021-23839)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcrypto1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22945",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22945\nSeverity: CRITICAL\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22945](https://avd.aquasec.com/nvd/cve-2021-22945)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22926",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22926\nSeverity: HIGH\nFixed Version: 7.67.0-r5\nLink: [CVE-2021-22926](https://avd.aquasec.com/nvd/cve-2021-22926)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22946",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22946\nSeverity: HIGH\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22946](https://avd.aquasec.com/nvd/cve-2021-22946)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22923",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22923\nSeverity: MEDIUM\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22923](https://avd.aquasec.com/nvd/cve-2021-22923)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22925",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22925\nSeverity: MEDIUM\nFixed Version: 7.67.0-r5\nLink: [CVE-2021-22925](https://avd.aquasec.com/nvd/cve-2021-22925)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22947",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22947\nSeverity: MEDIUM\nFixed Version: 7.79.0-r0\nLink: [CVE-2021-22947](https://avd.aquasec.com/nvd/cve-2021-22947)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8284",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2020-8284\nSeverity: LOW\nFixed Version: 7.79.0-r0\nLink: [CVE-2020-8284](https://avd.aquasec.com/nvd/cve-2020-8284)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22898",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: libcurl\nInstalled Version: 7.67.0-r3\nVulnerability CVE-2021-22898\nSeverity: LOW\nFixed Version: 7.67.0-r4\nLink: [CVE-2021-22898](https://avd.aquasec.com/nvd/cve-2021-22898)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libcurl@7.67.0-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33560",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Package: libgcrypt\nInstalled Version: 1.8.5-r0\nVulnerability CVE-2021-33560\nSeverity: HIGH\nFixed Version: 1.8.8-r0\nLink: [CVE-2021-33560](https://avd.aquasec.com/nvd/cve-2021-33560)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libgcrypt@1.8.5-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-40528",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "Package: libgcrypt\nInstalled Version: 1.8.5-r0\nVulnerability CVE-2021-40528\nSeverity: MEDIUM\nFixed Version: 1.8.8-r1\nLink: [CVE-2021-40528](https://avd.aquasec.com/nvd/cve-2021-40528)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libgcrypt@1.8.5-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-6363",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Package: libgd\nInstalled Version: 2.2.5-r3\nVulnerability CVE-2017-6363\nSeverity: HIGH\nFixed Version: 2.2.5-r4\nLink: [CVE-2017-6363](https://avd.aquasec.com/nvd/cve-2017-6363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libgd@2.2.5-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-40145",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Package: libgd\nInstalled Version: 2.2.5-r3\nVulnerability CVE-2021-40145\nSeverity: HIGH\nFixed Version: 2.2.5-r4\nLink: [CVE-2021-40145](https://avd.aquasec.com/nvd/cve-2021-40145)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libgd@2.2.5-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38115",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "Package: libgd\nInstalled Version: 2.2.5-r3\nVulnerability CVE-2021-38115\nSeverity: MEDIUM\nFixed Version: 2.2.5-r4\nLink: [CVE-2021-38115](https://avd.aquasec.com/nvd/cve-2021-38115)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libgd@2.2.5-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3711",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3711\nSeverity: CRITICAL\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3711](https://avd.aquasec.com/nvd/cve-2021-3711)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23840",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23840\nSeverity: HIGH\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3450",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3450\nSeverity: HIGH\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3712",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3712\nSeverity: HIGH\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23841",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23841\nSeverity: MEDIUM\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3449",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3449\nSeverity: MEDIUM\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23839",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Package: libssl1.1\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23839\nSeverity: LOW\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23839](https://avd.aquasec.com/nvd/cve-2021-23839)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libssl1.1@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3517",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: libxml2\nInstalled Version: 2.9.10-r4\nVulnerability CVE-2021-3517\nSeverity: HIGH\nFixed Version: 2.9.10-r5\nLink: [CVE-2021-3517](https://avd.aquasec.com/nvd/cve-2021-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libxml2@2.9.10-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3518",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: libxml2\nInstalled Version: 2.9.10-r4\nVulnerability CVE-2021-3518\nSeverity: HIGH\nFixed Version: 2.9.10-r5\nLink: [CVE-2021-3518](https://avd.aquasec.com/nvd/cve-2021-3518)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libxml2@2.9.10-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3537",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "Package: libxml2\nInstalled Version: 2.9.10-r4\nVulnerability CVE-2021-3537\nSeverity: MEDIUM\nFixed Version: 2.9.10-r5\nLink: [CVE-2021-3537](https://avd.aquasec.com/nvd/cve-2021-3537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libxml2@2.9.10-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3541",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "Package: libxml2\nInstalled Version: 2.9.10-r4\nVulnerability CVE-2021-3541\nSeverity: MEDIUM\nFixed Version: 2.9.12-r0\nLink: [CVE-2021-3541](https://avd.aquasec.com/nvd/cve-2021-3541)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: libxml2@2.9.10-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-7774\nSeverity: CRITICAL\nFixed Version: 12.22.1-r0\nLink: [CVE-2020-7774](https://avd.aquasec.com/nvd/cve-2020-7774)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22930",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-22930\nSeverity: CRITICAL\nFixed Version: 12.22.4-r0\nLink: [CVE-2021-22930](https://avd.aquasec.com/nvd/cve-2021-22930)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22931",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-22931\nSeverity: CRITICAL\nFixed Version: 12.22.5-r0\nLink: [CVE-2021-22931](https://avd.aquasec.com/nvd/cve-2021-22931)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11080",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-11080\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-11080](https://avd.aquasec.com/nvd/cve-2020-11080)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8172",
          "ruleIndex": 43,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8172\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8172](https://avd.aquasec.com/nvd/cve-2020-8172)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8174",
          "ruleIndex": 44,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8174\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8174](https://avd.aquasec.com/nvd/cve-2020-8174)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8201",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8201\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8201](https://avd.aquasec.com/nvd/cve-2020-8201)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8252",
          "ruleIndex": 46,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8252\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8252](https://avd.aquasec.com/nvd/cve-2020-8252)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8265",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8265\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8265](https://avd.aquasec.com/nvd/cve-2020-8265)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8277",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8277\nSeverity: HIGH\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8277](https://avd.aquasec.com/nvd/cve-2020-8277)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22883",
          "ruleIndex": 49,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-22883\nSeverity: HIGH\nFixed Version: 12.21.0-r0\nLink: [CVE-2021-22883](https://avd.aquasec.com/nvd/cve-2021-22883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22884",
          "ruleIndex": 50,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-22884\nSeverity: HIGH\nFixed Version: 12.21.0-r0\nLink: [CVE-2021-22884](https://avd.aquasec.com/nvd/cve-2021-22884)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701",
          "ruleIndex": 51,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-37701\nSeverity: HIGH\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-37701](https://avd.aquasec.com/nvd/cve-2021-37701)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712",
          "ruleIndex": 52,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-37712\nSeverity: HIGH\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-37712](https://avd.aquasec.com/nvd/cve-2021-37712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713",
          "ruleIndex": 53,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-37713\nSeverity: HIGH\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-37713](https://avd.aquasec.com/nvd/cve-2021-37713)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39134",
          "ruleIndex": 54,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-39134\nSeverity: HIGH\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-39134](https://avd.aquasec.com/nvd/cve-2021-39134)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-39135",
          "ruleIndex": 55,
          "level": "error",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-39135\nSeverity: HIGH\nFixed Version: 12.22.6-r0\nLink: [CVE-2021-39135](https://avd.aquasec.com/nvd/cve-2021-39135)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8287",
          "ruleIndex": 56,
          "level": "warning",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2020-8287\nSeverity: MEDIUM\nFixed Version: 12.20.1-r0\nLink: [CVE-2020-8287](https://avd.aquasec.com/nvd/cve-2020-8287)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22918",
          "ruleIndex": 57,
          "level": "warning",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-22918\nSeverity: MEDIUM\nFixed Version: 12.22.2-r0\nLink: [CVE-2021-22918](https://avd.aquasec.com/nvd/cve-2021-22918)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-22939",
          "ruleIndex": 58,
          "level": "warning",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-22939\nSeverity: MEDIUM\nFixed Version: 12.22.5-r0\nLink: [CVE-2021-22939](https://avd.aquasec.com/nvd/cve-2021-22939)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3672",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: nodejs\nInstalled Version: 12.15.0-r1\nVulnerability CVE-2021-3672\nSeverity: MEDIUM\nFixed Version: 12.22.5-r0\nLink: [CVE-2021-3672](https://avd.aquasec.com/nvd/cve-2021-3672)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: nodejs@12.15.0-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27814",
          "ruleIndex": 59,
          "level": "error",
          "message": {
            "text": "Package: openjpeg\nInstalled Version: 2.3.1-r4\nVulnerability CVE-2020-27814\nSeverity: HIGH\nFixed Version: 2.3.1-r5\nLink: [CVE-2020-27814](https://avd.aquasec.com/nvd/cve-2020-27814)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openjpeg@2.3.1-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27823",
          "ruleIndex": 60,
          "level": "error",
          "message": {
            "text": "Package: openjpeg\nInstalled Version: 2.3.1-r4\nVulnerability CVE-2020-27823\nSeverity: HIGH\nFixed Version: 2.3.1-r5\nLink: [CVE-2020-27823](https://avd.aquasec.com/nvd/cve-2020-27823)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openjpeg@2.3.1-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27844",
          "ruleIndex": 61,
          "level": "error",
          "message": {
            "text": "Package: openjpeg\nInstalled Version: 2.3.1-r4\nVulnerability CVE-2020-27844\nSeverity: HIGH\nFixed Version: 2.4.0-r0\nLink: [CVE-2020-27844](https://avd.aquasec.com/nvd/cve-2020-27844)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openjpeg@2.3.1-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-27824",
          "ruleIndex": 62,
          "level": "warning",
          "message": {
            "text": "Package: openjpeg\nInstalled Version: 2.3.1-r4\nVulnerability CVE-2020-27824\nSeverity: MEDIUM\nFixed Version: 2.3.1-r5\nLink: [CVE-2020-27824](https://avd.aquasec.com/nvd/cve-2020-27824)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openjpeg@2.3.1-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-29338",
          "ruleIndex": 63,
          "level": "warning",
          "message": {
            "text": "Package: openjpeg\nInstalled Version: 2.3.1-r4\nVulnerability CVE-2021-29338\nSeverity: MEDIUM\nFixed Version: 2.4.0-r1\nLink: [CVE-2021-29338](https://avd.aquasec.com/nvd/cve-2021-29338)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openjpeg@2.3.1-r4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3711",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3711\nSeverity: CRITICAL\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3711](https://avd.aquasec.com/nvd/cve-2021-3711)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23840",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23840\nSeverity: HIGH\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23840](https://avd.aquasec.com/nvd/cve-2021-23840)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3450",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3450\nSeverity: HIGH\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3450](https://avd.aquasec.com/nvd/cve-2021-3450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3712",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3712\nSeverity: HIGH\nFixed Version: 1.1.1l-r0\nLink: [CVE-2021-3712](https://avd.aquasec.com/nvd/cve-2021-3712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23841",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23841\nSeverity: MEDIUM\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23841](https://avd.aquasec.com/nvd/cve-2021-23841)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3449",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-3449\nSeverity: MEDIUM\nFixed Version: 1.1.1k-r0\nLink: [CVE-2021-3449](https://avd.aquasec.com/nvd/cve-2021-3449)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23839",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Package: openssl\nInstalled Version: 1.1.1i-r0\nVulnerability CVE-2021-23839\nSeverity: LOW\nFixed Version: 1.1.1j-r0\nLink: [CVE-2021-23839](https://avd.aquasec.com/nvd/cve-2021-23839)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: openssl@1.1.1i-r0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28831",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-28831\nSeverity: HIGH\nFixed Version: 1.31.1-r10\nLink: [CVE-2021-28831](https://avd.aquasec.com/nvd/cve-2021-28831)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42378",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42378\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42378](https://avd.aquasec.com/nvd/cve-2021-42378)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42379",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42379\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42379](https://avd.aquasec.com/nvd/cve-2021-42379)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42380",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42380\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42380](https://avd.aquasec.com/nvd/cve-2021-42380)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42381",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42381\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42381](https://avd.aquasec.com/nvd/cve-2021-42381)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42382",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42382\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42382](https://avd.aquasec.com/nvd/cve-2021-42382)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42383",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42383\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42383](https://avd.aquasec.com/nvd/cve-2021-42383)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42384",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42384\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42384](https://avd.aquasec.com/nvd/cve-2021-42384)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42385",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42385\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42385](https://avd.aquasec.com/nvd/cve-2021-42385)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42386",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42386\nSeverity: HIGH\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42386](https://avd.aquasec.com/nvd/cve-2021-42386)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42374",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Package: ssl_client\nInstalled Version: 1.31.1-r9\nVulnerability CVE-2021-42374\nSeverity: MEDIUM\nFixed Version: 1.31.1-r11\nLink: [CVE-2021-42374](https://avd.aquasec.com/nvd/cve-2021-42374)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: ssl_client@1.31.1-r9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20193",
          "ruleIndex": 64,
          "level": "warning",
          "message": {
            "text": "Package: tar\nInstalled Version: 1.32-r1\nVulnerability CVE-2021-20193\nSeverity: MEDIUM\nFixed Version: 1.32-r2\nLink: [CVE-2021-20193](https://avd.aquasec.com/nvd/cve-2021-20193)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: tar@1.32-r1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-18384",
          "ruleIndex": 65,
          "level": "warning",
          "message": {
            "text": "Package: unzip\nInstalled Version: 6.0-r6\nVulnerability CVE-2018-18384\nSeverity: MEDIUM\nFixed Version: 6.0-r7\nLink: [CVE-2018-18384](https://avd.aquasec.com/nvd/cve-2018-18384)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: unzip@6.0-r6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434",
          "ruleIndex": 66,
          "level": "error",
          "message": {
            "text": "Package: zlib\nInstalled Version: 1.2.11-r3\nVulnerability CVE-2022-37434\nSeverity: CRITICAL\nFixed Version: 1.2.11-r4\nLink: [CVE-2022-37434](https://avd.aquasec.com/nvd/cve-2022-37434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "linuxserver/mylar",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "linuxserver/mylar: zlib@1.2.11-r3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25287",
          "ruleIndex": 67,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-25287\nSeverity: CRITICAL\nFixed Version: 8.2.0\nLink: [CVE-2021-25287](https://avd.aquasec.com/nvd/cve-2021-25287)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25288",
          "ruleIndex": 68,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-25288\nSeverity: CRITICAL\nFixed Version: 8.2.0\nLink: [CVE-2021-25288](https://avd.aquasec.com/nvd/cve-2021-25288)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-34552",
          "ruleIndex": 69,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-34552\nSeverity: CRITICAL\nFixed Version: 8.3.0\nLink: [CVE-2021-34552](https://avd.aquasec.com/nvd/cve-2021-34552)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22817",
          "ruleIndex": 70,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2022-22817\nSeverity: CRITICAL\nFixed Version: 9.0.1\nLink: [CVE-2022-22817](https://avd.aquasec.com/nvd/cve-2022-22817)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24303",
          "ruleIndex": 71,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2022-24303\nSeverity: CRITICAL\nFixed Version: 9.0.1\nLink: [CVE-2022-24303](https://avd.aquasec.com/nvd/cve-2022-24303)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10379",
          "ruleIndex": 72,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-10379\nSeverity: HIGH\nFixed Version: 7.1.0\nLink: [CVE-2020-10379](https://avd.aquasec.com/nvd/cve-2020-10379)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11538",
          "ruleIndex": 73,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-11538\nSeverity: HIGH\nFixed Version: 7.1.0\nLink: [CVE-2020-11538](https://avd.aquasec.com/nvd/cve-2020-11538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35653",
          "ruleIndex": 74,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-35653\nSeverity: HIGH\nFixed Version: 8.1.0\nLink: [CVE-2020-35653](https://avd.aquasec.com/nvd/cve-2020-35653)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35654",
          "ruleIndex": 75,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-35654\nSeverity: HIGH\nFixed Version: 8.1.0\nLink: [CVE-2020-35654](https://avd.aquasec.com/nvd/cve-2020-35654)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23437",
          "ruleIndex": 76,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-23437\nSeverity: HIGH\nFixed Version: 8.3.2\nLink: [CVE-2021-23437](https://avd.aquasec.com/nvd/cve-2021-23437)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25290",
          "ruleIndex": 77,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-25290\nSeverity: HIGH\nFixed Version: 8.1.1\nLink: [CVE-2021-25290](https://avd.aquasec.com/nvd/cve-2021-25290)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25291",
          "ruleIndex": 78,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-25291\nSeverity: HIGH\nFixed Version: 8.2.0\nLink: [CVE-2021-25291](https://avd.aquasec.com/nvd/cve-2021-25291)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25293",
          "ruleIndex": 79,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-25293\nSeverity: HIGH\nFixed Version: 8.1.1\nLink: [CVE-2021-25293](https://avd.aquasec.com/nvd/cve-2021-25293)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27921",
          "ruleIndex": 80,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-27921\nSeverity: HIGH\nFixed Version: 8.1.1\nLink: [CVE-2021-27921](https://avd.aquasec.com/nvd/cve-2021-27921)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27922",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-27922\nSeverity: HIGH\nFixed Version: 8.1.1\nLink: [CVE-2021-27922](https://avd.aquasec.com/nvd/cve-2021-27922)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27923",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-27923\nSeverity: HIGH\nFixed Version: 8.1.1\nLink: [CVE-2021-27923](https://avd.aquasec.com/nvd/cve-2021-27923)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28676",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-28676\nSeverity: HIGH\nFixed Version: 8.2.0\nLink: [CVE-2021-28676](https://avd.aquasec.com/nvd/cve-2021-28676)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28677",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-28677\nSeverity: HIGH\nFixed Version: 8.2.0\nLink: [CVE-2021-28677](https://avd.aquasec.com/nvd/cve-2021-28677)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-45198",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2022-45198\nSeverity: HIGH\nFixed Version: 9.2.0\nLink: [CVE-2022-45198](https://avd.aquasec.com/nvd/cve-2022-45198)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-44271",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2023-44271\nSeverity: HIGH\nFixed Version: 10.0.0\nLink: [CVE-2023-44271](https://avd.aquasec.com/nvd/cve-2023-44271)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4863",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2023-4863\nSeverity: HIGH\nFixed Version: 10.0.1\nLink: [CVE-2023-4863](https://avd.aquasec.com/nvd/cve-2023-4863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50447",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2023-50447\nSeverity: HIGH\nFixed Version: 10.2.0\nLink: [CVE-2023-50447](https://avd.aquasec.com/nvd/cve-2023-50447)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-56pw-mpj4-fxww",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability GHSA-56pw-mpj4-fxww\nSeverity: HIGH\nFixed Version: 10.0.1\nLink: [GHSA-56pw-mpj4-fxww](https://github.com/advisories/GHSA-56pw-mpj4-fxww)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10177",
          "ruleIndex": 90,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-10177\nSeverity: MEDIUM\nFixed Version: 7.1.0\nLink: [CVE-2020-10177](https://avd.aquasec.com/nvd/cve-2020-10177)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10378",
          "ruleIndex": 91,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-10378\nSeverity: MEDIUM\nFixed Version: 7.1.0\nLink: [CVE-2020-10378](https://avd.aquasec.com/nvd/cve-2020-10378)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-10994",
          "ruleIndex": 92,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-10994\nSeverity: MEDIUM\nFixed Version: 7.1.0\nLink: [CVE-2020-10994](https://avd.aquasec.com/nvd/cve-2020-10994)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-35655",
          "ruleIndex": 93,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2020-35655\nSeverity: MEDIUM\nFixed Version: 8.1.0\nLink: [CVE-2020-35655](https://avd.aquasec.com/nvd/cve-2020-35655)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-25292",
          "ruleIndex": 94,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-25292\nSeverity: MEDIUM\nFixed Version: 8.1.1\nLink: [CVE-2021-25292](https://avd.aquasec.com/nvd/cve-2021-25292)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28675",
          "ruleIndex": 95,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-28675\nSeverity: MEDIUM\nFixed Version: 8.2.0\nLink: [CVE-2021-28675](https://avd.aquasec.com/nvd/cve-2021-28675)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28678",
          "ruleIndex": 96,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2021-28678\nSeverity: MEDIUM\nFixed Version: 8.2.0\nLink: [CVE-2021-28678](https://avd.aquasec.com/nvd/cve-2021-28678)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22815",
          "ruleIndex": 97,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2022-22815\nSeverity: MEDIUM\nFixed Version: 9.0.0\nLink: [CVE-2022-22815](https://avd.aquasec.com/nvd/cve-2022-22815)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-22816",
          "ruleIndex": 98,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2022-22816\nSeverity: MEDIUM\nFixed Version: 9.0.0\nLink: [CVE-2022-22816](https://avd.aquasec.com/nvd/cve-2022-22816)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28219",
          "ruleIndex": 99,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability CVE-2024-28219\nSeverity: MEDIUM\nFixed Version: 10.3.0\nLink: [CVE-2024-28219](https://avd.aquasec.com/nvd/cve-2024-28219)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-jgpv-4h4c-xhw3",
          "ruleIndex": 100,
          "level": "warning",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability GHSA-jgpv-4h4c-xhw3\nSeverity: MEDIUM\nFixed Version: 8.1.2\nLink: [GHSA-jgpv-4h4c-xhw3](https://github.com/advisories/GHSA-jgpv-4h4c-xhw3)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-4fx9-vc88-q2xc",
          "ruleIndex": 101,
          "level": "note",
          "message": {
            "text": "Package: Pillow\nInstalled Version: 6.2.2\nVulnerability GHSA-4fx9-vc88-q2xc\nSeverity: LOW\nFixed Version: 9.0.0\nLink: [GHSA-4fx9-vc88-q2xc](https://github.com/advisories/GHSA-4fx9-vc88-q2xc)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/Pillow-6.2.2-py2.7.egg-info/PKG-INFO: Pillow@6.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24859",
          "ruleIndex": 102,
          "level": "warning",
          "message": {
            "text": "Package: PyPDF2\nInstalled Version: 1.24\nVulnerability CVE-2022-24859\nSeverity: MEDIUM\nFixed Version: 1.27.5\nLink: [CVE-2022-24859](https://avd.aquasec.com/nvd/cve-2022-24859)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/PyPDF2-1.24-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/PyPDF2-1.24-py2.7.egg-info/PKG-INFO: PyPDF2@1.24"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-36810",
          "ruleIndex": 103,
          "level": "warning",
          "message": {
            "text": "Package: PyPDF2\nInstalled Version: 1.24\nVulnerability CVE-2023-36810\nSeverity: MEDIUM\nFixed Version: 1.27.9\nLink: [CVE-2023-36810](https://avd.aquasec.com/nvd/cve-2023-36810)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/PyPDF2-1.24-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/PyPDF2-1.24-py2.7.egg-info/PKG-INFO: PyPDF2@1.24"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-37920",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "Package: certifi\nInstalled Version: 2020.12.5\nVulnerability CVE-2023-37920\nSeverity: HIGH\nFixed Version: 2023.7.22\nLink: [CVE-2023-37920](https://avd.aquasec.com/nvd/cve-2023-37920)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/certifi-2020.12.5.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/certifi-2020.12.5.dist-info/METADATA: certifi@2020.12.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23491",
          "ruleIndex": 105,
          "level": "warning",
          "message": {
            "text": "Package: certifi\nInstalled Version: 2020.12.5\nVulnerability CVE-2022-23491\nSeverity: MEDIUM\nFixed Version: 2022.12.07\nLink: [CVE-2022-23491](https://avd.aquasec.com/nvd/cve-2022-23491)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/certifi-2020.12.5.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/certifi-2020.12.5.dist-info/METADATA: certifi@2020.12.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-36242",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability CVE-2020-36242\nSeverity: CRITICAL\nFixed Version: 3.3.2\nLink: [CVE-2020-36242](https://avd.aquasec.com/nvd/cve-2020-36242)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 39.0.1\nLink: [CVE-2023-0286](https://avd.aquasec.com/nvd/cve-2023-0286)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50782",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability CVE-2023-50782\nSeverity: HIGH\nFixed Version: 42.0.0\nLink: [CVE-2023-50782](https://avd.aquasec.com/nvd/cve-2023-50782)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-23931",
          "ruleIndex": 109,
          "level": "warning",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability CVE-2023-23931\nSeverity: MEDIUM\nFixed Version: 39.0.1\nLink: [CVE-2023-23931](https://avd.aquasec.com/nvd/cve-2023-23931)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-49083",
          "ruleIndex": 110,
          "level": "warning",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability CVE-2023-49083\nSeverity: MEDIUM\nFixed Version: 41.0.6\nLink: [CVE-2023-49083](https://avd.aquasec.com/nvd/cve-2023-49083)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727",
          "ruleIndex": 111,
          "level": "warning",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability CVE-2024-0727\nSeverity: MEDIUM\nFixed Version: 42.0.2\nLink: [CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-5cpq-8wj7-hf2v",
          "ruleIndex": 112,
          "level": "note",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability GHSA-5cpq-8wj7-hf2v\nSeverity: LOW\nFixed Version: 41.0.0\nLink: [GHSA-5cpq-8wj7-hf2v](https://github.com/advisories/GHSA-5cpq-8wj7-hf2v)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-jm77-qphf-c4w8",
          "ruleIndex": 113,
          "level": "note",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability GHSA-jm77-qphf-c4w8\nSeverity: LOW\nFixed Version: 41.0.3\nLink: [GHSA-jm77-qphf-c4w8](https://github.com/advisories/GHSA-jm77-qphf-c4w8)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-v8gr-m533-ghj9",
          "ruleIndex": 114,
          "level": "note",
          "message": {
            "text": "Package: cryptography\nInstalled Version: 3.3.1\nVulnerability GHSA-v8gr-m533-ghj9\nSeverity: LOW\nFixed Version: 41.0.4\nLink: [GHSA-v8gr-m533-ghj9](https://github.com/advisories/GHSA-v8gr-m533-ghj9)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/cryptography-3.3.1.dist-info/METADATA: cryptography@3.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3651",
          "ruleIndex": 115,
          "level": "warning",
          "message": {
            "text": "Package: idna\nInstalled Version: 2.10\nVulnerability CVE-2024-3651\nSeverity: MEDIUM\nFixed Version: 3.7\nLink: [CVE-2024-3651](https://avd.aquasec.com/nvd/cve-2024-3651)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/idna-2.10.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/idna-2.10.dist-info/METADATA: idna@2.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43818",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "Package: lxml\nInstalled Version: 4.6.2\nVulnerability CVE-2021-43818\nSeverity: HIGH\nFixed Version: 4.6.5\nLink: [CVE-2021-43818](https://avd.aquasec.com/nvd/cve-2021-43818)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/lxml-4.6.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/lxml-4.6.2-py2.7.egg-info/PKG-INFO: lxml@4.6.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28957",
          "ruleIndex": 117,
          "level": "warning",
          "message": {
            "text": "Package: lxml\nInstalled Version: 4.6.2\nVulnerability CVE-2021-28957\nSeverity: MEDIUM\nFixed Version: 4.6.3\nLink: [CVE-2021-28957](https://avd.aquasec.com/nvd/cve-2021-28957)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/lxml-4.6.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/lxml-4.6.2-py2.7.egg-info/PKG-INFO: lxml@4.6.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2309",
          "ruleIndex": 118,
          "level": "warning",
          "message": {
            "text": "Package: lxml\nInstalled Version: 4.6.2\nVulnerability CVE-2022-2309\nSeverity: MEDIUM\nFixed Version: 4.9.1\nLink: [CVE-2022-2309](https://avd.aquasec.com/nvd/cve-2022-2309)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/lxml-4.6.2-py2.7.egg-info/PKG-INFO",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/lxml-4.6.2-py2.7.egg-info/PKG-INFO: lxml@4.6.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795",
          "ruleIndex": 119,
          "level": "warning",
          "message": {
            "text": "Package: paramiko\nInstalled Version: 2.7.2\nVulnerability CVE-2023-48795\nSeverity: MEDIUM\nFixed Version: 3.4.0\nLink: [CVE-2023-48795](https://avd.aquasec.com/nvd/cve-2023-48795)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/paramiko-2.7.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/paramiko-2.7.2.dist-info/METADATA: paramiko@2.7.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3572",
          "ruleIndex": 120,
          "level": "warning",
          "message": {
            "text": "Package: pip\nInstalled Version: 20.3.3\nVulnerability CVE-2021-3572\nSeverity: MEDIUM\nFixed Version: 21.1\nLink: [CVE-2021-3572](https://avd.aquasec.com/nvd/cve-2021-3572)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/pip-20.3.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/pip-20.3.3.dist-info/METADATA: pip@20.3.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5752",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "Package: pip\nInstalled Version: 20.3.3\nVulnerability CVE-2023-5752\nSeverity: MEDIUM\nFixed Version: 23.3\nLink: [CVE-2023-5752](https://avd.aquasec.com/nvd/cve-2023-5752)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/pip-20.3.3.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/pip-20.3.3.dist-info/METADATA: pip@20.3.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-32681",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "Package: requests\nInstalled Version: 2.25.1\nVulnerability CVE-2023-32681\nSeverity: MEDIUM\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://avd.aquasec.com/nvd/cve-2023-32681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/requests-2.25.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/requests-2.25.1.dist-info/METADATA: requests@2.25.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 123,
          "level": "warning",
          "message": {
            "text": "Package: requests\nInstalled Version: 2.25.1\nVulnerability CVE-2024-35195\nSeverity: MEDIUM\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/requests-2.25.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/requests-2.25.1.dist-info/METADATA: requests@2.25.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-40897",
          "ruleIndex": 124,
          "level": "error",
          "message": {
            "text": "Package: setuptools\nInstalled Version: 44.1.1\nVulnerability CVE-2022-40897\nSeverity: HIGH\nFixed Version: 65.5.1\nLink: [CVE-2022-40897](https://avd.aquasec.com/nvd/cve-2022-40897)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/setuptools-44.1.1.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/setuptools-44.1.1.dist-info/METADATA: setuptools@44.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33503",
          "ruleIndex": 125,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.2\nVulnerability CVE-2021-33503\nSeverity: HIGH\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA: urllib3@1.26.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-28363",
          "ruleIndex": 126,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.2\nVulnerability CVE-2021-28363\nSeverity: MEDIUM\nFixed Version: 1.26.4\nLink: [CVE-2021-28363](https://avd.aquasec.com/nvd/cve-2021-28363)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA: urllib3@1.26.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-43804",
          "ruleIndex": 127,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.2\nVulnerability CVE-2023-43804\nSeverity: MEDIUM\nFixed Version: 2.0.6, 1.26.17\nLink: [CVE-2023-43804](https://avd.aquasec.com/nvd/cve-2023-43804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA: urllib3@1.26.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45803",
          "ruleIndex": 128,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.26.2\nVulnerability CVE-2023-45803\nSeverity: MEDIUM\nFixed Version: 2.0.7, 1.26.18\nLink: [CVE-2023-45803](https://avd.aquasec.com/nvd/cve-2023-45803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "usr/lib/python2.7/site-packages/urllib3-1.26.2.dist-info/METADATA: urllib3@1.26.2"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      },
      "properties": {
        "imageName": "linuxserver/mylar:arm64v8-version-94dcfd13",
        "repoDigests": [
          "linuxserver/mylar@sha256:6ee27075852529f92b886d9b372504398bf2401637804c7b43a9d835091623bf"
        ],
        "repoTags": [
          "linuxserver/mylar:arm64v8-version-94dcfd13"
        ]
      }
    }
  ]
}