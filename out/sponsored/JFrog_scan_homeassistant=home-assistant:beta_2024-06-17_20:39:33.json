{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray SCA",
          "rules": [
            {
              "id": "CVE-2022-23806_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-23806] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.1      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2023-24540_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24540] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-48620_3.19:libuv_1.47.0-r0",
              "shortDescription": {
                "text": "[CVE-2022-48620] 3.19:libuv 1.47.0-r0"
              },
              "help": {
                "text": "uev (aka libuev) before 2.4.1 has a buffer overflow in epoll_wait if maxevents is a large number.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-24675_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-24675] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24539_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24539] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-51767_3.19:openssh-client-common_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2023-51767] 3.19:openssh-client-common 9.6_p1-r0"
              },
              "help": {
                "text": "OpenSSH through 9.6, when common types of DRAM are used, might allow row hammer attacks (for authentication bypass) because the integer value of authenticated in mm_answer_authpassword does not resist flips of a single bit. NOTE: this is applicable to a certain threat model of attacker-victim co-location in which the attacker has user privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Applicable       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2023-45287_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-45287] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.0]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-51767_3.19:openssh-client-default_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2023-51767] 3.19:openssh-client-default 9.6_p1-r0"
              },
              "help": {
                "text": "OpenSSH through 9.6, when common types of DRAM are used, might allow row hammer attacks (for authentication bypass) because the integer value of authenticated in mm_answer_authpassword does not resist flips of a single bit. NOTE: this is applicable to a certain threat model of attacker-victim co-location in which the attacker has user privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Applicable       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2022-28327_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-28327] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.9], [1.18.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-24921_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-24921] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.15], [1.17.8]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29400_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29400] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.9], [1.20.4]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2023-51767_3.19:openssh-keygen_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2023-51767] 3.19:openssh-keygen 9.6_p1-r0"
              },
              "help": {
                "text": "OpenSSH through 9.6, when common types of DRAM are used, might allow row hammer attacks (for authentication bypass) because the integer value of authenticated in mm_answer_authpassword does not resist flips of a single bit. NOTE: this is applicable to a certain threat model of attacker-victim co-location in which the attacker has user privileges.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.0      | Applicable       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.0"
              }
            },
            {
              "id": "CVE-2006-5051_3.19:openssh-client-common_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2006-5051] 3.19:openssh-client-common 9.6_p1-r0"
              },
              "help": {
                "text": "Signal handler race condition in OpenSSH before 4.4 allows remote attackers to cause a denial of service (crash), and possibly execute arbitrary code if GSSAPI authentication is enabled, via unspecified vectors that lead to a double-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2018-20225_pip_24.0",
              "shortDescription": {
                "text": "[CVE-2018-20225] pip 24.0"
              },
              "help": {
                "text": "An issue was discovered in pip (all versions) because it installs the version with the highest version number, even if the user had intended to obtain a private package from a private index. This only affects use of the --extra-index-url option, and exploitation requires that the package does not already exist in the public index (and thus the attacker can put the package there with an arbitrary version number). NOTE: it has been reported that this is intended functionality and the user is responsible for using --extra-index-url securely",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Covered       | `sha256__548a4e02f638d724f70a36d709197740dcc1dbd640814f1d6428077dcd40cbd9.tar `\u003cbr/\u003e`sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar `\u003cbr/\u003e`sha256__e0a1096f7b83b83e2bbdbe9d11bc72e02628f112d0a2db2b41ac3a6cbd2545e1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2006-5051_3.19:openssh-client-default_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2006-5051] 3.19:openssh-client-default 9.6_p1-r0"
              },
              "help": {
                "text": "Signal handler race condition in OpenSSH before 4.4 allows remote attackers to cause a denial of service (crash), and possibly execute arbitrary code if GSSAPI authentication is enabled, via unspecified vectors that lead to a double-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2024-23744_3.19:mbedtls_2.28.7-r0",
              "shortDescription": {
                "text": "[CVE-2024-23744] 3.19:mbedtls 2.28.7-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS 3.5.1. There is persistent handshake denial if a client sends a TLS 1.3 ClientHello without extensions.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2006-5051_3.19:openssh-keygen_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2006-5051] 3.19:openssh-keygen 9.6_p1-r0"
              },
              "help": {
                "text": "Signal handler race condition in OpenSSH before 4.4 allows remote attackers to cause a denial of service (crash), and possibly execute arbitrary code if GSSAPI authentication is enabled, via unspecified vectors that lead to a double-free.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2021-45451_3.19:mbedtls_2.28.7-r0",
              "shortDescription": {
                "text": "[CVE-2021-45451] 3.19:mbedtls 2.28.7-r0"
              },
              "help": {
                "text": "In Mbed TLS before 3.1.0, psa_aead_generate_nonce allows policy bypass or oracle-based decryption when the output buffer is at memory locations accessible to an untrusted application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-43666_3.19:mbedtls_2.28.7-r0",
              "shortDescription": {
                "text": "[CVE-2021-43666] 3.19:mbedtls 2.28.7-r0"
              },
              "help": {
                "text": "A Denial of Service vulnerability exists in mbed TLS 3.0.0 and earlier in the mbedtls_pkcs12_derivation function when an input password's length is 0.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2024-33663_python-jose_3.3.0",
              "shortDescription": {
                "text": "[CVE-2024-33663] python-jose 3.3.0"
              },
              "help": {
                "text": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.4      | Not Covered       | `sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.4"
              }
            },
            {
              "id": "CVE-2023-52353_3.19:mbedtls_2.28.7-r0",
              "shortDescription": {
                "text": "[CVE-2023-52353] 3.19:mbedtls 2.28.7-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS through 3.5.1. In mbedtls_ssl_session_reset, the maximum negotiable TLS version is mishandled. For example, if the last connection negotiated TLS 1.2, then 1.2 becomes the new maximum.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-48795_paramiko_3.3.1",
              "shortDescription": {
                "text": "[CVE-2023-48795] paramiko 3.3.1"
              },
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar `       | [3.4.0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-48795_golang.org/x/crypto_0.0.0-20201221181555-eec23a3978ad",
              "shortDescription": {
                "text": "[CVE-2023-48795] golang.org/x/crypto 0.0.0-20201221181555-eec23a3978ad"
              },
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.9      | Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [0.17.0]   |"
              },
              "properties": {
                "security-severity": "5.9"
              }
            },
            {
              "id": "CVE-2023-39742_3.19:giflib_5.2.1-r5",
              "shortDescription": {
                "text": "[CVE-2023-39742] 3.19:giflib 5.2.1-r5"
              },
              "help": {
                "text": "giflib v5.2.1 was discovered to contain a segmentation fault via the component getarg.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__dfa349371c1bf587bc42561045a3d630b728d4de94eb7b9142b656497e9dc735.tar `       | [5.2.2-r0]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-39319_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-39319] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The html/template package does not apply the proper rules for handling occurrences of \"\u003cscript\", \"\u003c!--\", and \"\u003c/script\" within JS literals in \u003cscript\u003e contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2021-36647_3.19:mbedtls_2.28.7-r0",
              "shortDescription": {
                "text": "[CVE-2021-36647] 3.19:mbedtls 2.28.7-r0"
              },
              "help": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.7      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.16.12-r0]   |"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2023-42365_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42366_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-1705_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-1705] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-39326_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-39326] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42364_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-39318_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-39318] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in \u003cscript\u003e contexts. This may cause the template parser to improperly interpret the contents of \u003cscript\u003e contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.1      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.8], [1.21.1]   |"
              },
              "properties": {
                "security-severity": "6.1"
              }
            },
            {
              "id": "CVE-2023-42366_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-24532_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24532] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.7], [1.20.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-45284_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-45284] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases. Reserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local. With fix, IsLocal now correctly reports these names as non-local.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.11], [1.21.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42363_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r17]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r17]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42364_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42364] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.19:busybox-binsh_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.19:busybox-binsh 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2024-0853_3.19:libcurl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.19:libcurl 8.5.0-r0"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-0853_3.19:curl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-0853] 3.19:curl 8.5.0-r0"
              },
              "help": {
                "text": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.6.0-r0]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-42366_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42366] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r16]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42363_3.19:ssl_client_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42363] 3.19:ssl_client 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r17]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-42365_3.19:busybox_1.36.1-r15",
              "shortDescription": {
                "text": "[CVE-2023-42365] 3.19:busybox 1.36.1-r15"
              },
              "help": {
                "text": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [1.36.1-r19]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2021-4214_3.19:libpng_1.6.40-r0",
              "shortDescription": {
                "text": "[CVE-2021-4214] 3.19:libpng 1.6.40-r0"
              },
              "help": {
                "text": "A heap overflow flaw was found in libpngs' pngimage.c program. This flaw allows an attacker with local network access to pass a specially crafted PNG file to the pngimage utility, causing an application to crash, leading to a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2020-12352_3.19:bluez-deprecated_5.70-r0",
              "shortDescription": {
                "text": "[CVE-2020-12352] 3.19:bluez-deprecated 5.70-r0"
              },
              "help": {
                "text": "Improper access control in BlueZ may allow an unauthenticated user to potentially enable information disclosure via adjacent access.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-12352_3.19:bluez_5.70-r0",
              "shortDescription": {
                "text": "[CVE-2020-12352] 3.19:bluez 5.70-r0"
              },
              "help": {
                "text": "Improper access control in BlueZ may allow an unauthenticated user to potentially enable information disclosure via adjacent access.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2020-12352_3.19:bluez-libs_5.70-r0",
              "shortDescription": {
                "text": "[CVE-2020-12352] 3.19:bluez-libs 5.70-r0"
              },
              "help": {
                "text": "Improper access control in BlueZ may allow an unauthenticated user to potentially enable information disclosure via adjacent access.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2009-3767_3.19:libssl3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.19:libssl3 3.1.4-r5"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2009-3767_3.19:libcrypto3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2009-3767] 3.19:libcrypto3 3.1.4-r5"
              },
              "help": {
                "text": "libraries/libldap/tls_o.c in OpenLDAP 2.2 and 2.4, and possibly other versions, when OpenSSL is used, does not properly handle a '\\0' character in a domain name in the subject's Common Name (CN) field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2007-2768_3.19:openssh-client-default_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2007-2768] 3.19:openssh-client-default 9.6_p1-r0"
              },
              "help": {
                "text": "OpenSSH, when using OPIE (One-Time Passwords in Everything) for PAM, allows remote attackers to determine the existence of certain user accounts, which displays a different response if the user account exists and is configured to use one-time passwords (OTP), a similar issue to CVE-2007-2243.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2007-2768_3.19:openssh-client-common_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2007-2768] 3.19:openssh-client-common 9.6_p1-r0"
              },
              "help": {
                "text": "OpenSSH, when using OPIE (One-Time Passwords in Everything) for PAM, allows remote attackers to determine the existence of certain user accounts, which displays a different response if the user account exists and is configured to use one-time passwords (OTP), a similar issue to CVE-2007-2243.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-33664_python-jose_3.3.0",
              "shortDescription": {
                "text": "[CVE-2024-33664] python-jose 3.3.0"
              },
              "help": {
                "text": "python-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Covered       | `sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2007-2768_3.19:openssh-keygen_9.6_p1-r0",
              "shortDescription": {
                "text": "[CVE-2007-2768] 3.19:openssh-keygen 9.6_p1-r0"
              },
              "help": {
                "text": "OpenSSH, when using OPIE (One-Time Passwords in Everything) for PAM, allows remote attackers to determine the existence of certain user accounts, which displays a different response if the user account exists and is configured to use one-time passwords (OTP), a similar issue to CVE-2007-2243.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2022-30629_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30629] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 3.1      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "3.1"
              }
            },
            {
              "id": "CVE-2023-52071_3.19:curl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-52071] 3.19:curl 8.5.0-r0"
              },
              "help": {
                "text": "CVE-2023-52071",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_3.19:libssl3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.19:libssl3 3.1.4-r5"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [3.1.4-r6]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-52071_3.19:libcurl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2023-52071] 3.19:libcurl 8.5.0-r0"
              },
              "help": {
                "text": "CVE-2023-52071",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | No fix available   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.19:curl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.19:curl 8.5.0-r0"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28960_3.19:mbedtls_2.28.7-r0",
              "shortDescription": {
                "text": "[CVE-2024-28960] 3.19:mbedtls 2.28.7-r0"
              },
              "help": {
                "text": "An issue was discovered in Mbed TLS 2.18.0 through 2.28.x before 2.28.8 and 3.x before 3.6.0, and Mbed Crypto. The PSA Crypto API mishandles shared memory.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.28.8-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.19:libblkid_2.39.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.19:libblkid 2.39.3-r0"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4603_3.19:libcrypto3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.19:libcrypto3 3.1.4-r5"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-34397_3.19:glib_2.78.4-r0",
              "shortDescription": {
                "text": "[CVE-2024-34397] 3.19:glib 2.78.4-r0"
              },
              "help": {
                "text": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.78.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.19:curl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.19:curl 8.5.0-r0"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.19:libcurl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.19:libcurl 8.5.0-r0"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-5197_3.19:libvpx_1.13.1-r0",
              "shortDescription": {
                "text": "[CVE-2024-5197] 3.19:libvpx 1.13.1-r0"
              },
              "help": {
                "text": "There exists interger overflows in libvpx in versions prior to 1.14.1. Calling vpx_img_alloc() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned vpx_image_t struct may be invalid. Calling vpx_img_wrap() with a large value of the d_w, d_h, or stride_align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned vpx_image_t struct may be invalid. We recommend upgrading to version 1.14.1 or beyond",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [1.14.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2379_3.19:libcurl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2379] 3.19:libcurl 8.5.0-r0"
              },
              "help": {
                "text": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.19:libuuid_2.39.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.19:libuuid 2.39.3-r0"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__e0a1096f7b83b83e2bbdbe9d11bc72e02628f112d0a2db2b41ac3a6cbd2545e1.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32020_3.19:git_2.43.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-32020] 3.19:git 2.43.0-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.43.4-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-28085_3.19:libmount_2.39.3-r0",
              "shortDescription": {
                "text": "[CVE-2024-28085] 3.19:libmount 2.39.3-r0"
              },
              "help": {
                "text": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.40-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-25629_3.19:c-ares_1.24.0-r1",
              "shortDescription": {
                "text": "[CVE-2024-25629] 3.19:c-ares 1.24.0-r1"
              },
              "help": {
                "text": "c-ares is a C library for asynchronous DNS requests. `ares__read_line()` is used to parse local configuration files such as `/etc/resolv.conf`, `/etc/nsswitch.conf`, the `HOSTALIASES` file, and if using a c-ares version prior to 1.27.0, the `/etc/hosts` file. If any of these configuration files has an embedded `NULL` character as the first character in a new line, it can lead to attempting to read memory prior to the start of the given buffer which may result in a crash. This issue is fixed in c-ares 1.27.0. No known workarounds exist.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.27.0-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2466_3.19:libcurl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2466] 3.19:libcurl 8.5.0-r0"
              },
              "help": {
                "text": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2511_3.19:libcrypto3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2024-2511] 3.19:libcrypto3 3.1.4-r5"
              },
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [3.1.4-r6]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32021_3.19:git_2.43.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-32021] 3.19:git 2.43.0-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.43.4-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.19:curl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.19:curl 8.5.0-r0"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-34459_3.19:libxml2_2.11.7-r0",
              "shortDescription": {
                "text": "[CVE-2024-34459] 3.19:libxml2 2.11.7-r0"
              },
              "help": {
                "text": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [2.11.8-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-4603_3.19:libssl3_3.1.4-r5",
              "shortDescription": {
                "text": "[CVE-2024-4603] 3.19:libssl3 3.1.4-r5"
              },
              "help": {
                "text": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar `       | [3.1.5-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-32465_3.19:git_2.43.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-32465] 3.19:git 2.43.0-r0"
              },
              "help": {
                "text": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.43.4-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2398_3.19:libcurl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2398] 3.19:libcurl 8.5.0-r0"
              },
              "help": {
                "text": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2024-2004_3.19:curl_8.5.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-2004] 3.19:curl 8.5.0-r0"
              },
              "help": {
                "text": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Covered       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [8.7.1-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            },
            {
              "id": "CVE-2023-29405_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29405] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-24538_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24538] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-38297_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2021-38297] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.9], [1.17.2]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2023-29402_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29402] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-32002_3.19:git_2.43.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-32002] 3.19:git 2.43.0-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.0      | Not Applicable       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.43.4-r0]   |"
              },
              "properties": {
                "security-severity": "9.0"
              }
            },
            {
              "id": "CVE-2023-29404_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29404] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 9.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-24806_3.19:libuv_1.47.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-24806] 3.19:libuv 1.47.0-r0"
              },
              "help": {
                "text": "libuv is a multi-platform support library with a focus on asynchronous I/O. The `uv_getaddrinfo` function in `src/unix/getaddrinfo.c` (and its windows counterpart `src/win/getaddrinfo.c`), truncates hostnames to 256 characters before calling `getaddrinfo`. This behavior can be exploited to create addresses like `0x00007f000001`, which are considered valid by `getaddrinfo` and could allow an attacker to craft payloads that resolve to unintended IP addresses, bypassing developer checks. The vulnerability arises due to how the `hostname_ascii` variable (with a length of 256 bytes) is handled in `uv_getaddrinfo` and subsequently in `uv__idna_toascii`. When the hostname exceeds 256 characters, it gets truncated without a terminating null byte. As a result attackers may be able to access internal APIs or for websites (similar to MySpace) that allows users to have `username.example.com` pages. Internal services that crawl or cache these user pages can be exposed to SSRF attacks if a malicious user chooses a long vulnerable username. This issue has been addressed in release version 1.48.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.3      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.48.0-r0]   |"
              },
              "properties": {
                "security-severity": "7.3"
              }
            },
            {
              "id": "CVE-2022-29804_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-29804] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-40633_3.19:giflib_5.2.1-r5",
              "shortDescription": {
                "text": "[CVE-2021-40633] 3.19:giflib 5.2.1-r5"
              },
              "help": {
                "text": "A memory leak (out-of-memory) in gif2rgb in util/gif2rgb.c in giflib 5.1.4 allows remote attackers trigger an out of memory exception or denial of service via a gif format file.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.8      | Not Applicable       | `sha256__dfa349371c1bf587bc42561045a3d630b728d4de94eb7b9142b656497e9dc735.tar `       | [5.2.2-r0]   |"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2022-41720_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-41720] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.18.9], [1.19.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24536_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24536] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30634_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30634] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 \u003c\u003c 32 - 1 bytes.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23773_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-23773] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-48161_3.19:giflib_5.2.1-r5",
              "shortDescription": {
                "text": "[CVE-2023-48161] 3.19:giflib 5.2.1-r5"
              },
              "help": {
                "text": "Buffer Overflow vulnerability in GifLib Project GifLib v.5.2.1 allows a local attacker to obtain sensitive information via the DumpSCreen2RGB function in gif2rgb.c",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.1      | Not Applicable       | `sha256__dfa349371c1bf587bc42561045a3d630b728d4de94eb7b9142b656497e9dc735.tar `       | [5.2.2-r0]   |"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2022-41724_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-41724] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-39323_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-39323] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 8.1      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.9], [1.21.2]   |"
              },
              "properties": {
                "security-severity": "8.1"
              }
            },
            {
              "id": "CVE-2022-28131_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-28131] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30632_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30632] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45285_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-45285] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.12], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41716_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-41716] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.18.8], [1.19.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41772_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2021-41772] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2880_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-2880] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-29403_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29403] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.10], [1.20.5]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2022-30631_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30631] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41722_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-41722] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30635_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30635] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41715_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-41715] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-41725_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-41725] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary ...",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.6], [1.20.1]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30630_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30630] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-43565_golang.org/x/crypto_0.0.0-20201221181555-eec23a3978ad",
              "shortDescription": {
                "text": "[CVE-2021-43565] golang.org/x/crypto 0.0.0-20201221181555-eec23a3978ad"
              },
              "help": {
                "text": "The x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an attacker to panic an SSH server.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [0.0.0-20211202192323-5770296d904e]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-23772_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-23772] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.14], [1.17.7]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-27191_golang.org/x/crypto_0.0.0-20201221181555-eec23a3978ad",
              "shortDescription": {
                "text": "[CVE-2022-27191] golang.org/x/crypto 0.0.0-20201221181555-eec23a3978ad"
              },
              "help": {
                "text": "The golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [0.0.0-20220314234659-1baeb1ce4c0b]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-45283_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-45283] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.20.11], [1.20.12], [1.21.4], [1.21.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-32189_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-32189] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.13], [1.18.5]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-24534_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24534] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30633_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30633] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-2879_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-2879] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.18.7], [1.19.2]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-41771_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2021-41771] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.10], [1.17.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-30580_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-30580] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.11], [1.18.3]   |"
              },
              "properties": {
                "security-severity": "7.8"
              }
            },
            {
              "id": "CVE-2023-24537_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-24537] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 7.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.8], [1.20.3]   |"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-1962_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-1962] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2022-32148_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2022-32148] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.17.12], [1.18.4]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2021-44717_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2021-44717] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 4.8      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.16.12], [1.17.5]   |"
              },
              "properties": {
                "security-severity": "4.8"
              }
            },
            {
              "id": "CVE-2023-29409_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29409] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to \u003c= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.12], [1.20.7], [1.21.0-rc.4]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2023-29406_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-29406] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 6.5      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.19.11], [1.20.6]   |"
              },
              "properties": {
                "security-severity": "6.5"
              }
            },
            {
              "id": "CVE-2023-45288_github.com/golang/go_1.17.1",
              "shortDescription": {
                "text": "[CVE-2023-45288] github.com/golang/go 1.17.1"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 5.3      | Not Applicable       | `sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar `       | [1.21.9], [1.22.2]   |"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-32004_3.19:git_2.43.0-r0",
              "shortDescription": {
                "text": "[CVE-2024-32004] 3.19:git 2.43.0-r0"
              },
              "help": {
                "text": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
                "markdown": "| Severity Score | Contextual Analysis | Direct Dependencies | Fixed Versions     |\n|  :---:  |  :---:  |  :---:  |  :---:  |\n| 0.0      | Not Applicable       | `sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar `       | [2.43.4-r0]   |"
              },
              "properties": {
                "security-severity": "0.0"
              }
            }
          ],
          "version": "3.96.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2022-23806_github.com/golang/go_1.17.1",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23806] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24540_github.com/golang/go_1.17.1",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24540] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-48620_3.19:libuv_1.47.0-r0",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "[CVE-2022-48620] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24675_github.com/golang/go_1.17.1",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24675] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24539_github.com/golang/go_1.17.1",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24539] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-51767_3.19:openssh-client-common_9.6_p1-r0",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "[CVE-2023-51767] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45287_github.com/golang/go_1.17.1",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45287] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-51767_3.19:openssh-client-default_9.6_p1-r0",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "[CVE-2023-51767] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28327_github.com/golang/go_1.17.1",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28327] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24921_github.com/golang/go_1.17.1",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "[CVE-2022-24921] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29400_github.com/golang/go_1.17.1",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29400] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-51767_3.19:openssh-keygen_9.6_p1-r0",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "[CVE-2023-51767] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2006-5051_3.19:openssh-client-common_9.6_p1-r0",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "[CVE-2006-5051] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20225_pip_24.0",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20225] sha256__548a4e02f638d724f70a36d709197740dcc1dbd640814f1d6428077dcd40cbd9.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20225_pip_24.0",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20225] sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20225_pip_24.0",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "[CVE-2018-20225] sha256__e0a1096f7b83b83e2bbdbe9d11bc72e02628f112d0a2db2b41ac3a6cbd2545e1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2006-5051_3.19:openssh-client-default_9.6_p1-r0",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "[CVE-2006-5051] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23744_3.19:mbedtls_2.28.7-r0",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "[CVE-2024-23744] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2006-5051_3.19:openssh-keygen_9.6_p1-r0",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "[CVE-2006-5051] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-45451_3.19:mbedtls_2.28.7-r0",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "[CVE-2021-45451] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43666_3.19:mbedtls_2.28.7-r0",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43666] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33663_python-jose_3.3.0",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "[CVE-2024-33663] sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52353_3.19:mbedtls_2.28.7-r0",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "text": "[CVE-2023-52353] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795_paramiko_3.3.1",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-48795] sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795_golang.org/x/crypto_0.0.0-20201221181555-eec23a3978ad",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-48795] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39742_3.19:giflib_5.2.1-r5",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39742] sha256__dfa349371c1bf587bc42561045a3d630b728d4de94eb7b9142b656497e9dc735.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39319_github.com/golang/go_1.17.1",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39319] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-36647_3.19:mbedtls_2.28.7-r0",
          "ruleIndex": 25,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-36647] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1705_github.com/golang/go_1.17.1",
          "ruleIndex": 29,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1705] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39326_github.com/golang/go_1.17.1",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39326] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.19:busybox_1.36.1-r15",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39318_github.com/golang/go_1.17.1",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-39318] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 33,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24532_github.com/golang/go_1.17.1",
          "ruleIndex": 34,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-24532] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45284_github.com/golang/go_1.17.1",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45284] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.19:busybox_1.36.1-r15",
          "ruleIndex": 36,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 37,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42364_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 38,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42364] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.19:busybox-binsh_1.36.1-r15",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.19:libcurl_8.5.0-r0",
          "ruleIndex": 40,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0853_3.19:curl_8.5.0-r0",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-0853] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42366_3.19:busybox_1.36.1-r15",
          "ruleIndex": 42,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42366] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42363_3.19:ssl_client_1.36.1-r15",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42363] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42365_3.19:busybox_1.36.1-r15",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-42365] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4214_3.19:libpng_1.6.40-r0",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-4214] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-12352_3.19:bluez-deprecated_5.70-r0",
          "ruleIndex": 46,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-12352] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-12352_3.19:bluez_5.70-r0",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-12352] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-12352_3.19:bluez-libs_5.70-r0",
          "ruleIndex": 48,
          "level": "warning",
          "message": {
            "text": "[CVE-2020-12352] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.19:libssl3_3.1.4-r5",
          "ruleIndex": 49,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2009-3767_3.19:libcrypto3_3.1.4-r5",
          "ruleIndex": 50,
          "level": "warning",
          "message": {
            "text": "[CVE-2009-3767] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2007-2768_3.19:openssh-client-default_9.6_p1-r0",
          "ruleIndex": 51,
          "level": "warning",
          "message": {
            "text": "[CVE-2007-2768] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2007-2768_3.19:openssh-client-common_9.6_p1-r0",
          "ruleIndex": 52,
          "level": "warning",
          "message": {
            "text": "[CVE-2007-2768] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33664_python-jose_3.3.0",
          "ruleIndex": 53,
          "level": "warning",
          "message": {
            "text": "[CVE-2024-33664] sha256__6831264440d8b40ad7c053999576f9919e8be4adb8c9edbc48d42f5b899227a1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2007-2768_3.19:openssh-keygen_9.6_p1-r0",
          "ruleIndex": 54,
          "level": "warning",
          "message": {
            "text": "[CVE-2007-2768] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30629_github.com/golang/go_1.17.1",
          "ruleIndex": 55,
          "level": "note",
          "message": {
            "text": "[CVE-2022-30629] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52071_3.19:curl_8.5.0-r0",
          "ruleIndex": 56,
          "level": "none",
          "message": {
            "text": "[CVE-2023-52071] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_3.19:libssl3_3.1.4-r5",
          "ruleIndex": 57,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-52071_3.19:libcurl_8.5.0-r0",
          "ruleIndex": 58,
          "level": "none",
          "message": {
            "text": "[CVE-2023-52071] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.19:curl_8.5.0-r0",
          "ruleIndex": 59,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28960_3.19:mbedtls_2.28.7-r0",
          "ruleIndex": 60,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28960] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.19:libblkid_2.39.3-r0",
          "ruleIndex": 61,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_3.19:libcrypto3_3.1.4-r5",
          "ruleIndex": 62,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4603] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34397_3.19:glib_2.78.4-r0",
          "ruleIndex": 63,
          "level": "none",
          "message": {
            "text": "[CVE-2024-34397] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.19:curl_8.5.0-r0",
          "ruleIndex": 64,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.19:libcurl_8.5.0-r0",
          "ruleIndex": 65,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5197_3.19:libvpx_1.13.1-r0",
          "ruleIndex": 66,
          "level": "none",
          "message": {
            "text": "[CVE-2024-5197] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2379_3.19:libcurl_8.5.0-r0",
          "ruleIndex": 67,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2379] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.19:libuuid_2.39.3-r0",
          "ruleIndex": 68,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__e0a1096f7b83b83e2bbdbe9d11bc72e02628f112d0a2db2b41ac3a6cbd2545e1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32020_3.19:git_2.43.0-r0",
          "ruleIndex": 69,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32020] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28085_3.19:libmount_2.39.3-r0",
          "ruleIndex": 70,
          "level": "none",
          "message": {
            "text": "[CVE-2024-28085] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-25629_3.19:c-ares_1.24.0-r1",
          "ruleIndex": 71,
          "level": "none",
          "message": {
            "text": "[CVE-2024-25629] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2466_3.19:libcurl_8.5.0-r0",
          "ruleIndex": 72,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2466] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511_3.19:libcrypto3_3.1.4-r5",
          "ruleIndex": 73,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2511] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32021_3.19:git_2.43.0-r0",
          "ruleIndex": 74,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32021] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.19:curl_8.5.0-r0",
          "ruleIndex": 75,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34459_3.19:libxml2_2.11.7-r0",
          "ruleIndex": 76,
          "level": "none",
          "message": {
            "text": "[CVE-2024-34459] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603_3.19:libssl3_3.1.4-r5",
          "ruleIndex": 77,
          "level": "none",
          "message": {
            "text": "[CVE-2024-4603] sha256__d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32465_3.19:git_2.43.0-r0",
          "ruleIndex": 78,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32465] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2398_3.19:libcurl_8.5.0-r0",
          "ruleIndex": 79,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2398] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2004_3.19:curl_8.5.0-r0",
          "ruleIndex": 80,
          "level": "none",
          "message": {
            "text": "[CVE-2024-2004] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29405_github.com/golang/go_1.17.1",
          "ruleIndex": 81,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29405] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24538_github.com/golang/go_1.17.1",
          "ruleIndex": 82,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24538] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-38297_github.com/golang/go_1.17.1",
          "ruleIndex": 83,
          "level": "error",
          "message": {
            "text": "[CVE-2021-38297] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29402_github.com/golang/go_1.17.1",
          "ruleIndex": 84,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29402] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32002_3.19:git_2.43.0-r0",
          "ruleIndex": 85,
          "level": "error",
          "message": {
            "text": "[CVE-2024-32002] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29404_github.com/golang/go_1.17.1",
          "ruleIndex": 86,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29404] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24806_3.19:libuv_1.47.0-r0",
          "ruleIndex": 87,
          "level": "error",
          "message": {
            "text": "[CVE-2024-24806] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29804_github.com/golang/go_1.17.1",
          "ruleIndex": 88,
          "level": "error",
          "message": {
            "text": "[CVE-2022-29804] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-40633_3.19:giflib_5.2.1-r5",
          "ruleIndex": 89,
          "level": "error",
          "message": {
            "text": "[CVE-2021-40633] sha256__dfa349371c1bf587bc42561045a3d630b728d4de94eb7b9142b656497e9dc735.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41720_github.com/golang/go_1.17.1",
          "ruleIndex": 90,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41720] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24536_github.com/golang/go_1.17.1",
          "ruleIndex": 91,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24536] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30634_github.com/golang/go_1.17.1",
          "ruleIndex": 92,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30634] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23773_github.com/golang/go_1.17.1",
          "ruleIndex": 93,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23773] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48161_3.19:giflib_5.2.1-r5",
          "ruleIndex": 94,
          "level": "error",
          "message": {
            "text": "[CVE-2023-48161] sha256__dfa349371c1bf587bc42561045a3d630b728d4de94eb7b9142b656497e9dc735.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41724_github.com/golang/go_1.17.1",
          "ruleIndex": 95,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41724] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-39323_github.com/golang/go_1.17.1",
          "ruleIndex": 96,
          "level": "error",
          "message": {
            "text": "[CVE-2023-39323] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-28131_github.com/golang/go_1.17.1",
          "ruleIndex": 97,
          "level": "error",
          "message": {
            "text": "[CVE-2022-28131] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30632_github.com/golang/go_1.17.1",
          "ruleIndex": 98,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30632] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45285_github.com/golang/go_1.17.1",
          "ruleIndex": 99,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45285] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41716_github.com/golang/go_1.17.1",
          "ruleIndex": 100,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41716] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41772_github.com/golang/go_1.17.1",
          "ruleIndex": 101,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41772] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2880_github.com/golang/go_1.17.1",
          "ruleIndex": 102,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2880] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29403_github.com/golang/go_1.17.1",
          "ruleIndex": 103,
          "level": "error",
          "message": {
            "text": "[CVE-2023-29403] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30631_github.com/golang/go_1.17.1",
          "ruleIndex": 104,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30631] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41722_github.com/golang/go_1.17.1",
          "ruleIndex": 105,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41722] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30635_github.com/golang/go_1.17.1",
          "ruleIndex": 106,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30635] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41715_github.com/golang/go_1.17.1",
          "ruleIndex": 107,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41715] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-41725_github.com/golang/go_1.17.1",
          "ruleIndex": 108,
          "level": "error",
          "message": {
            "text": "[CVE-2022-41725] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30630_github.com/golang/go_1.17.1",
          "ruleIndex": 109,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30630] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43565_golang.org/x/crypto_0.0.0-20201221181555-eec23a3978ad",
          "ruleIndex": 110,
          "level": "error",
          "message": {
            "text": "[CVE-2021-43565] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-23772_github.com/golang/go_1.17.1",
          "ruleIndex": 111,
          "level": "error",
          "message": {
            "text": "[CVE-2022-23772] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-27191_golang.org/x/crypto_0.0.0-20201221181555-eec23a3978ad",
          "ruleIndex": 112,
          "level": "error",
          "message": {
            "text": "[CVE-2022-27191] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45283_github.com/golang/go_1.17.1",
          "ruleIndex": 113,
          "level": "error",
          "message": {
            "text": "[CVE-2023-45283] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32189_github.com/golang/go_1.17.1",
          "ruleIndex": 114,
          "level": "error",
          "message": {
            "text": "[CVE-2022-32189] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24534_github.com/golang/go_1.17.1",
          "ruleIndex": 115,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24534] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30633_github.com/golang/go_1.17.1",
          "ruleIndex": 116,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30633] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2879_github.com/golang/go_1.17.1",
          "ruleIndex": 117,
          "level": "error",
          "message": {
            "text": "[CVE-2022-2879] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-41771_github.com/golang/go_1.17.1",
          "ruleIndex": 118,
          "level": "error",
          "message": {
            "text": "[CVE-2021-41771] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-30580_github.com/golang/go_1.17.1",
          "ruleIndex": 119,
          "level": "error",
          "message": {
            "text": "[CVE-2022-30580] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-24537_github.com/golang/go_1.17.1",
          "ruleIndex": 120,
          "level": "error",
          "message": {
            "text": "[CVE-2023-24537] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1962_github.com/golang/go_1.17.1",
          "ruleIndex": 121,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-1962] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-32148_github.com/golang/go_1.17.1",
          "ruleIndex": 122,
          "level": "warning",
          "message": {
            "text": "[CVE-2022-32148] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44717_github.com/golang/go_1.17.1",
          "ruleIndex": 123,
          "level": "warning",
          "message": {
            "text": "[CVE-2021-44717] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29409_github.com/golang/go_1.17.1",
          "ruleIndex": 124,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29409] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-29406_github.com/golang/go_1.17.1",
          "ruleIndex": 125,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-29406] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45288_github.com/golang/go_1.17.1",
          "ruleIndex": 126,
          "level": "warning",
          "message": {
            "text": "[CVE-2023-45288] sha256__8e8fd495039504c029dcccdf30ca0794f8e47e116a4794af3db9cf6b02009a5c.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-32004_3.19:git_2.43.0-r0",
          "ruleIndex": 127,
          "level": "none",
          "message": {
            "text": "[CVE-2024-32004] sha256__84da1a8b272e2a99740db26f71dd5707e7fab16d30c70f02b4886c5fbefeeca1.tar "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file://Package-Descriptor"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Applicability Scanner",
          "rules": [
            {
              "id": "applic_CVE-2022-29804",
              "name": "CVE-2022-29804",
              "shortDescription": {
                "text": "Scanner for CVE-2022-29804"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-38297",
              "name": "CVE-2021-38297",
              "shortDescription": {
                "text": "Scanner for CVE-2021-38297"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41722",
              "name": "CVE-2022-41722",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41722"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41720",
              "name": "CVE-2022-41720",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41720"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called.",
                "markdown": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41716",
              "name": "CVE-2022-41716",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41716"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30634",
              "name": "CVE-2022-30634",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30634"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30580",
              "name": "CVE-2022-30580",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30580"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45283",
              "name": "CVE-2023-45283",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45283"
              },
              "fullDescription": {
                "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.",
                "markdown": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2880",
              "name": "CVE-2022-2880",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2880"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41771",
              "name": "CVE-2021-41771",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41771"
              },
              "fullDescription": {
                "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input.",
                "markdown": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-41772",
              "name": "CVE-2021-41772",
              "shortDescription": {
                "text": "Scanner for CVE-2021-41772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used.",
                "markdown": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-43565",
              "name": "CVE-2021-43565",
              "shortDescription": {
                "text": "Scanner for CVE-2021-43565"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `NewServerConn` is called.",
                "markdown": "The scanner checks whether the vulnerable function `NewServerConn` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-44717",
              "name": "CVE-2021-44717",
              "shortDescription": {
                "text": "Scanner for CVE-2021-44717"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-1962",
              "name": "CVE-2022-1962",
              "shortDescription": {
                "text": "Scanner for CVE-2022-1962"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23772",
              "name": "CVE-2022-23772",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23772"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Rat.SetString` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Rat.SetString` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23806",
              "name": "CVE-2022-23806",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23806"
              },
              "fullDescription": {
                "text": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```",
                "markdown": "The scanner checks if at least one of the following vulnerable functions is called with external output - \n```\ncrypto/elliptic.(*CurveParams).IsOnCurve()\ncrypto/elliptic.p224Curve.IsOnCurve()\ncrypto/elliptic.p521Curve.IsOnCurve()\ncrypto/elliptic.Curve.IsOnCurve()\ncrypto/elliptic.p256Curve.IsOnCurve()\ncrypto/elliptic.(*p224Curve).IsOnCurve()\ncrypto/elliptic.(*p256Curve).IsOnCurve()\ncrypto/elliptic.(*p521Curve).IsOnCurve()\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24675",
              "name": "CVE-2022-24675",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24675"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `pem.Decode` is called.",
                "markdown": "The scanner checks whether the vulnerable function `pem.Decode` is called."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-24921",
              "name": "CVE-2022-24921",
              "shortDescription": {
                "text": "Scanner for CVE-2022-24921"
              },
              "fullDescription": {
                "text": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```",
                "markdown": "The scanner checks whether at least one of the vulnerable functions is called : \n```\nregexp.Match\nregexp.MatchReader \nregexp.MatchString\nregexp.Compile\nregexp.CompilePOSIX \nregexp.MustCompile\nregexp.MustCompilePOSIX\n```"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-27191",
              "name": "CVE-2022-27191",
              "shortDescription": {
                "text": "Scanner for CVE-2022-27191"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28131",
              "name": "CVE-2022-28131",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28131"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-28327",
              "name": "CVE-2022-28327",
              "shortDescription": {
                "text": "Scanner for CVE-2022-28327"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-2879",
              "name": "CVE-2022-2879",
              "shortDescription": {
                "text": "Scanner for CVE-2022-2879"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called.",
                "markdown": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30630",
              "name": "CVE-2022-30630",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30630"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `fs.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `fs.Glob` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30631",
              "name": "CVE-2022-30631",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30631"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `Reader.Read` is called.",
                "markdown": "The scanner checks whether the vulnerable function `Reader.Read` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30632",
              "name": "CVE-2022-30632",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30632"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `filepath.Glob` is called.",
                "markdown": "The scanner checks whether the vulnerable function `filepath.Glob` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30633",
              "name": "CVE-2022-30633",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30633"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32148",
              "name": "CVE-2022-32148",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32148"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-32189",
              "name": "CVE-2022-32189",
              "shortDescription": {
                "text": "Scanner for CVE-2022-32189"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called.",
                "markdown": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41715",
              "name": "CVE-2022-41715",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41715"
              },
              "fullDescription": {
                "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`.",
                "markdown": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41724",
              "name": "CVE-2022-41724",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41724"
              },
              "fullDescription": {
                "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)",
                "markdown": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-41725",
              "name": "CVE-2022-41725",
              "shortDescription": {
                "text": "Scanner for CVE-2022-41725"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24536",
              "name": "CVE-2023-24536",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24536"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24534",
              "name": "CVE-2023-24534",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24534"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24537",
              "name": "CVE-2023-24537",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24537"
              },
              "fullDescription": {
                "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability",
                "markdown": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24538",
              "name": "CVE-2023-24538",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24538"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`",
                "markdown": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24539",
              "name": "CVE-2023-24539",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24539"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-24540",
              "name": "CVE-2023-24540",
              "shortDescription": {
                "text": "Scanner for CVE-2023-24540"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29400",
              "name": "CVE-2023-29400",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29400"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29402",
              "name": "CVE-2023-29402",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29402"
              },
              "fullDescription": {
                "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)",
                "markdown": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29403",
              "name": "CVE-2023-29403",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29403"
              },
              "fullDescription": {
                "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled",
                "markdown": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29406",
              "name": "CVE-2023-29406",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29406"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29409",
              "name": "CVE-2023-29409",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29409"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-39323",
              "name": "CVE-2023-39323",
              "shortDescription": {
                "text": "Scanner for CVE-2023-39323"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-23773",
              "name": "CVE-2022-23773",
              "shortDescription": {
                "text": "Scanner for CVE-2022-23773"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29405",
              "name": "CVE-2023-29405",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29405"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-29404",
              "name": "CVE-2023-29404",
              "shortDescription": {
                "text": "Scanner for CVE-2023-29404"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information).",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45285",
              "name": "CVE-2023-45285",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45285"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction.",
                "markdown": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2021-40633",
              "name": "CVE-2021-40633",
              "shortDescription": {
                "text": "Scanner for CVE-2021-40633"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `gif2rgb` utility exists and if it is executed in a script.",
                "markdown": "The scanner checks whether the `gif2rgb` utility exists and if it is executed in a script."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-48161",
              "name": "CVE-2023-48161",
              "shortDescription": {
                "text": "Scanner for CVE-2023-48161"
              },
              "fullDescription": {
                "text": "The scanner checks whether the `gif2rgb` utility exists and if it is executed in a script.",
                "markdown": "The scanner checks whether the `gif2rgb` utility exists and if it is executed in a script."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45287",
              "name": "CVE-2023-45287",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45287"
              },
              "fullDescription": {
                "text": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`",
                "markdown": "The scanner checks whether any of the following functions are called:\n\n* `Conn.Handshake()`\n\n* `Conn.HandshakeContext()`\n\n* `Conn.Read()`\n\n* `Conn.Write()`\n\n* `Dial()`\n\n* `DialWithDialer()`\n\n* `Dialer.Dial()`\n\n* `Dialer.DialContext()`"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-48795",
              "name": "CVE-2023-48795",
              "shortDescription": {
                "text": "Scanner for CVE-2023-48795"
              },
              "fullDescription": {
                "text": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable).",
                "markdown": "The scanner looks for the OpenSSH/libssh server and client configurations in the following locations:\n\n* `/etc/ssh/sshd_config`\n* `/etc/ssh/ssh_config`\n* `~/.ssh/config`\n* `/root/.ssh/config`\n\nAnd checks if all of the following steps were taken to mitigate the vulnerability:\n\n1. Disabling/overriding the vulnerable `chacha20-poly1305` cipher, which is enabled by default.\n\n2. Turning off `AES-CBC`, unless you combine it with case 3.\n\n3. Disabling/overriding the vulnerable Message Authentication Code (MAC) algorithms, some of which are enabled by default. This is only relevant when `AES-CBC` is enabled.\n\nThe scanner currently only checks for libssh and OpenSSH attack prerequisites, even though other SSH programs may be vulnerable with different prerequisites. Therefore - the scanner either returns an Applicable result (libssh or OpenSSH are applicable) or an Undetermined result (libssh or OpenSSH are not applicable, other SSH programs may be applicable)."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2023-51767",
              "name": "CVE-2023-51767",
              "shortDescription": {
                "text": "Scanner for CVE-2023-51767"
              },
              "fullDescription": {
                "text": "The CVE is always applicable.\n\nNote - The vulnerability is hardware-dependent.",
                "markdown": "The CVE is always applicable.\n\nNote - The vulnerability is hardware-dependent."
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative"
              }
            },
            {
              "id": "applic_CVE-2024-24806",
              "name": "CVE-2024-24806",
              "shortDescription": {
                "text": "Scanner for CVE-2024-24806"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function `uv_getaddrinfo` is called.",
                "markdown": "The scanner checks whether the vulnerable function `uv_getaddrinfo` is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2023-45288",
              "name": "CVE-2023-45288",
              "shortDescription": {
                "text": "Scanner for CVE-2023-45288"
              },
              "fullDescription": {
                "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`.",
                "markdown": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-32002",
              "name": "CVE-2024-32002",
              "shortDescription": {
                "text": "Scanner for CVE-2024-32002"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-32004",
              "name": "CVE-2024-32004",
              "shortDescription": {
                "text": "Scanner for CVE-2024-32004"
              },
              "fullDescription": {
                "text": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`).",
                "markdown": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`)."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2022-30635",
              "name": "CVE-2022-30635",
              "shortDescription": {
                "text": "Scanner for CVE-2022-30635"
              },
              "fullDescription": {
                "text": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called.",
                "markdown": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called."
              },
              "properties": {
                "applicability": "not_applicable",
                "conclusion": "positive",
                "security-severity": "6.9"
              }
            },
            {
              "id": "applic_CVE-2024-2004",
              "name": "CVE-2024-2004",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2004"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39318",
              "name": "CVE-2023-39318",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39318"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42365",
              "name": "CVE-2023-42365",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42365"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32020",
              "name": "CVE-2024-32020",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32020"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52353",
              "name": "CVE-2023-52353",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52353"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-34397",
              "name": "CVE-2024-34397",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-34397"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-1705",
              "name": "CVE-2022-1705",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-1705"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32465",
              "name": "CVE-2024-32465",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32465"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2009-3767",
              "name": "CVE-2009-3767",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2009-3767"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-36647",
              "name": "CVE-2021-36647",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-36647"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-52071",
              "name": "CVE-2023-52071",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-52071"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-24532",
              "name": "CVE-2023-24532",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-24532"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39326",
              "name": "CVE-2023-39326",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39326"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-43666",
              "name": "CVE-2021-43666",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-43666"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2020-12352",
              "name": "CVE-2020-12352",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2020-12352"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2398",
              "name": "CVE-2024-2398",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2398"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39742",
              "name": "CVE-2023-39742",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39742"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-33664",
              "name": "CVE-2024-33664",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-33664"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-30629",
              "name": "CVE-2022-30629",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-30629"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2466",
              "name": "CVE-2024-2466",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2466"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-45451",
              "name": "CVE-2021-45451",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-45451"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2022-48620",
              "name": "CVE-2022-48620",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2022-48620"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-34459",
              "name": "CVE-2024-34459",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-34459"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-25629",
              "name": "CVE-2024-25629",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-25629"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2018-20225",
              "name": "CVE-2018-20225",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2018-20225"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42363",
              "name": "CVE-2023-42363",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42363"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2379",
              "name": "CVE-2024-2379",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2379"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-32021",
              "name": "CVE-2024-32021",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-32021"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42366",
              "name": "CVE-2023-42366",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42366"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2007-2768",
              "name": "CVE-2007-2768",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2007-2768"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2006-5051",
              "name": "CVE-2006-5051",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2006-5051"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-45284",
              "name": "CVE-2023-45284",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-45284"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-0853",
              "name": "CVE-2024-0853",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-0853"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-23744",
              "name": "CVE-2024-23744",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-23744"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2021-4214",
              "name": "CVE-2021-4214",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2021-4214"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-5197",
              "name": "CVE-2024-5197",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-5197"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28085",
              "name": "CVE-2024-28085",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28085"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-28960",
              "name": "CVE-2024-28960",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-28960"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-42364",
              "name": "CVE-2023-42364",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-42364"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-2511",
              "name": "CVE-2024-2511",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-2511"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-33663",
              "name": "CVE-2024-33663",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-33663"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2024-4603",
              "name": "CVE-2024-4603",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2024-4603"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            },
            {
              "id": "applic_CVE-2023-39319",
              "name": "CVE-2023-39319",
              "shortDescription": {
                "text": "Scanner for uncovered CVE-2023-39319"
              },
              "fullDescription": {
                "text": "",
                "markdown": ""
              },
              "properties": {
                "applicability": "not_covered"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718657051-3246802531/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718656773-2702398343/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "applic_CVE-2022-29804",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-38297",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41722",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-41720",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the vulnerable functions `os.dirFS.Open` or  `net/http.Dir.Open` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41716",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30634",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-30580",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-45283",
          "kind": "pass",
          "message": {
            "text": "The vulnerability is only exploitable when running under the Windows OS.\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable."
          }
        },
        {
          "ruleId": "applic_CVE-2022-2880",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2021-41771",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the functions `macho.NewFile()`, `macho.OpenFat()` or `macho.Open()` are called with external input."
          }
        },
        {
          "ruleId": "applic_CVE-2021-41772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/zip.(*Reader).Open` is used."
          }
        },
        {
          "ruleId": "applic_CVE-2021-43565",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `NewServerConn` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2021-44717",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-1962",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-23772",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Rat.SetString` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-23806",
          "message": {
            "text": "At least one of the vulnerable functions (*CurveParams).IsOnCurve, p224Curve.IsOnCurve,\n p521Curve.IsOnCurve, Curve.IsOnCurve, (*p224Curve).IsOnCurve, (*p521Curve).IsOnCurve,\n p256Curve.IsOnCurve, (*p256Curve).IsOnCurve is called with external input"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24675",
          "message": {
            "text": "The vulnerable function pem.Decode is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MustCompile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.Compile is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-24921",
          "message": {
            "text": "The vulnerable function regexp.MatchString is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-27191",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-28131",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Decoder.Skip` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function CurveParams.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256GetScalar is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.CombinedMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarBaseMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-28327",
          "message": {
            "text": "The vulnerable function p256Curve.ScalarMult is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2022-2879",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `archive/tar.(*Reader).Next` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30630",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `fs.Glob` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30631",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `Reader.Read` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30632",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `filepath.Glob` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30633",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-32148",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2022-32189",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable functions `Float.GobDecode()` or `Rat.GobDecode()` are called."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41715",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any function eventually calls the vulnerable function `regexp/syntax.parse`."
          }
        },
        {
          "ruleId": "applic_CVE-2022-41724",
          "kind": "pass",
          "message": {
            "text": "The CVE is never applicable. A closer inspection of the issue shows there are no potential user-controllable paths that allow creating a panic (see also original commit message - https://go.dev/cl/468125)"
          }
        },
        {
          "ruleId": "applic_CVE-2022-41725",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24536",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n- `mime/multipart Reader.ReadForm`\n- `net/http Request.FormFile`\n- `net/http Request.FormValue`\n- `net/http Request.ParseMultipartForm`\n- `net/http Request.PostFormValue`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24534",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-24537",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether one of the following vulnerable functions is called:\n\n- `scanner.Scanner.Scan`\n- `parser.ParseDir`\n- `parser.ParseExpr`\n- `parser.ExprFrom`\n- `parser.ParseFile`\n\nNote that the scanner does not check for the invocation of command-line utilities (such as `go build`) that can indirectly trigger this vulnerability"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24538",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any of the following vulnerable functions are called:\n\n* `Template.Execute`\n\t\n* `Template.ExecuteTemplate`"
          }
        },
        {
          "ruleId": "applic_CVE-2023-24539",
          "message": {
            "text": "The vulnerable function cssValueFilter is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-24540",
          "message": {
            "text": "The vulnerable function nextJSCtx is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29400",
          "message": {
            "text": "The vulnerable function htmlNospaceEscaper is called"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2023-29402",
          "kind": "pass",
          "message": {
            "text": "The scanner looks for Go program binaries that were built with \"cgo\" support (C language bindings)"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29403",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether any Go binaries exist in the image, that have the SETUID or SETGID flags enabled"
          }
        },
        {
          "ruleId": "applic_CVE-2023-29406",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-29409",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2023-39323",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2022-23773",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable, since exploitation depends on the structure of the organization's Git repositories (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29405",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-29404",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue may still not be exploitable (see extended information)."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45285",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `cmd/go` tool is present in the system (the `go` executable).\nNote that even if the `go` executable is present, the issue is only exploitable via user interaction."
          }
        },
        {
          "ruleId": "applic_CVE-2021-40633",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `gif2rgb` utility exists and if it is executed in a script."
          }
        },
        {
          "ruleId": "applic_CVE-2023-48161",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the `gif2rgb` utility exists and if it is executed in a script."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45287",
          "message": {
            "text": "References to the vulnerable functions were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///usr/bin/tempio"
                }
              }
            }
          ]
        },
        {
          "ruleId": "applic_CVE-2024-24806",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function `uv_getaddrinfo` is called."
          }
        },
        {
          "ruleId": "applic_CVE-2023-45288",
          "kind": "pass",
          "message": {
            "text": "The scanner checks if any of the following functions are called:\n\n* `net/http/ServeTLS`\n* `x/net/http2/Server/ServeConn`\n* `x/net/http2/ConfigureServer`\n\nAn additional condition (that the scanner currently does not check) should be verified to determine if the CVE is applicable: `crypto/tls/Config/NextProtos` or `net/http/TLSNextProto` are not used to disable `HTTP/2`."
          }
        },
        {
          "ruleId": "applic_CVE-2024-32002",
          "kind": "pass",
          "message": {
            "text": ""
          }
        },
        {
          "ruleId": "applic_CVE-2024-32004",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether a local git repository contains a `upload-pack` command in its git config file (`repo-name/.git/config`)."
          }
        },
        {
          "ruleId": "applic_CVE-2022-30635",
          "kind": "pass",
          "message": {
            "text": "The scanner checks whether the vulnerable function Decoder.Decode of encoding/gob is called."
          }
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://jfrog.com/help/r/jfrog-security-documentation/jfrog-advanced-security",
          "name": "JFrog Secrets scanner",
          "rules": [
            {
              "id": "REQ.SECRET.GENERIC.TEXT",
              "name": "REQ.SECRET.GENERIC.TEXT",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.TEXT"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.CODE",
              "name": "REQ.SECRET.GENERIC.CODE",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.CODE"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.GENERIC.URL",
              "name": "REQ.SECRET.GENERIC.URL",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.GENERIC.URL"
              },
              "fullDescription": {
                "text": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n",
                "markdown": "Storing hardcoded secrets in your source code or binary artifact could lead to several risks.\n\nIf the secret is associated with a wide scope of privileges, attackers could extract it from the source code or binary artifact and use it maliciously to attack many targets. For example, if the hardcoded password gives high-privilege access to an AWS account, the attackers may be able to query/modify company-wide sensitive data without per-user authentication.\n\n## Best practices\n\nUse safe storage when storing high-privilege secrets such as passwords and tokens, for example -\n\n* ### Environment Variables\n\nEnvironment variables are set outside of the application code, and can be dynamically passed to the application only when needed, for example -\n`SECRET_VAR=MySecret ./my_application`\nThis way, `MySecret` does not have to be hardcoded into `my_application`.\n\nNote that if your entire binary artifact is published (ex. a Docker container published to Docker Hub), the value for the environment variable must not be stored in the artifact itself (ex. inside the `Dockerfile` or one of the container's files) but rather must be passed dynamically, for example in the `docker run` call as an argument.\n\n* ### Secret management services\n\nExternal vendors offer cloud-based secret management services, that provide proper access control to each secret. The given access to each secret can be dynamically modified or even revoked. Some examples include -\n\n* [Hashicorp Vault](https://www.vaultproject.io)\n* [AWS KMS](https://aws.amazon.com/kms) (Key Management Service)\n* [Google Cloud KMS](https://cloud.google.com/security-key-management)\n\n## Least-privilege principle\n\nStoring a secret in a hardcoded manner can be made safer, by making sure the secret grants the least amount of privilege as needed by the application.\nFor example - if the application needs to read a specific table from a specific database, and the secret grants access to perform this operation **only** (meaning - no access to other tables, no write access at all) then the damage from any secret leaks is mitigated.\nThat being said, it is still not recommended to store secrets in a hardcoded manner, since this type of storage does not offer any way to revoke or moderate the usage of the secret.\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            },
            {
              "id": "REQ.SECRET.KEYS",
              "name": "REQ.SECRET.KEYS",
              "shortDescription": {
                "text": "Scanner for REQ.SECRET.KEYS"
              },
              "fullDescription": {
                "text": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n",
                "markdown": "\nStoring an API key in the image could lead to several risks.\n\nIf the key is associated with a wide scope of privileges, attackers could extract it from a single image or firmware and use it maliciously to attack many targets. For example, if the embedded key allows querying/modifying data for all cloud user accounts, without per-user authentication, the attackers who extract it would gain access to system-wide data.\n\nIf the cloud/SaaS provider bills by key usage - for example, every million queries cost the key's owner a fixed sum of money - attackers could use the keys for their own purposes (or just as a form of vandalism), incurring a large cost to the legitimate user or operator.\n\n## Best practices\n\nUse narrow scopes for stored API keys. As much as possible, API keys should be unique per host and require additional authentication with the user's individual credentials for any sensitive actions.\n\nAvoid placing keys whose use incurs costs directly in the image. Store the key with any software or hardware protection available on the host for key storage (such as operating system key-stores, hardware cryptographic storage mechanisms or cloud-managed secure storage services such as [AWS KMS](https://aws.amazon.com/kms/)).\n\nTokens that were detected as exposed should be revoked and replaced -\n\n* [AWS Key Revocation](https://aws.amazon.com/premiumsupport/knowledge-center/delete-access-key/#:~:text=If%20you%20see%20a%20warning,the%20confirmation%20box%2C%20choose%20Deactivate.)\n* [GCP Key Revocation](https://www.trendmicro.com/cloudoneconformity/knowledge-base/gcp/CloudIAM/delete-api-keys.html)\n* [Azure Key Revocation](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops\u0026tabs=Windows#revoke-a-pat)\n* [GitHub Key Revocation](https://docs.github.com/en/rest/apps/oauth-applications#delete-an-app-authorization)\n"
              },
              "properties": {
                "applicability": "applicable",
                "conclusion": "negative",
                "security-severity": "6.9"
              }
            }
          ],
          "version": "1.0"
        }
      },
      "invocations": [
        {
          "arguments": [
            "/root/.jfrog/dependencies/analyzerManager/jas_scanner/jas_scanner",
            "scan",
            "/tmp/jfrog.cli.temp.-1718657051-3246802531/config.yaml"
          ],
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "/tmp/jfrog.cli.temp.-1718656773-2702398343/image.tar"
          }
        }
      ],
      "results": [
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/0BwGwikjFi2MxAGmmM-Zn/PlexAPI-4.15.13.dist-info/METADATA"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 4,
                  "endLine": 186,
                  "endColumn": 4,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/0BwGwikjFi2MxAGmmM-Zn/PlexAPI-4.15.13.dist-info/METADATA"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 84,
                  "endLine": 26,
                  "endColumn": 84,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/0BwGwikjFi2MxAGmmM-Zn/PlexAPI-4.15.13.dist-info/METADATA"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 4,
                  "endLine": 92,
                  "endColumn": 4,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/1LNheOx8ugRLsi22GjOl1/zigpy_znp-0.12.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 85,
                  "endLine": 27,
                  "endColumn": 85,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/2N6gtdZT_IKccgOffZ0ag/georss_generic_client-0.8.dist-info/METADATA"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 103,
                  "endLine": 24,
                  "endColumn": 103,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/2PR3oRPnksC1gJgEUIhQ9/humanfriendly-10.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 90,
                  "endLine": 51,
                  "endColumn": 90,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/32TANtCGKsYVaalowIDU-/dlms_cosem-21.3.2.dist-info/METADATA"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 82,
                  "endLine": 53,
                  "endColumn": 82,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/3Qp4jHjbSDNdF00Pv3MtP/pyrituals-0.0.6.dist-info/METADATA"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 0,
                  "endLine": 69,
                  "endColumn": 0,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/4vpXIszA-USmh7aTiAIXl/pysmartthings-0.7.8.dist-info/METADATA"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 87,
                  "endLine": 26,
                  "endColumn": 87,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7GFIwAGxAR1vqfJDT_Wr7/prometheus_client-0.17.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 4,
                  "endLine": 559,
                  "endColumn": 4,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/8eStLLsutlq8iem-_Zhlp/aiohttp_retry-2.8.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 86,
                  "endLine": 22,
                  "endColumn": 86,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ApJBF7eFc-JZKLHO0xNvl/motionblinds-0.6.23.dist-info/METADATA"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 5,
                  "endLine": 217,
                  "endColumn": 5,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/C1GuHGoyzzXuRFmJk1mXZ/pyombi-0.1.10.dist-info/METADATA"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 4,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/EEm9oTMNh5P1R_WW43zVB/xknx-2.12.2.dist-info/METADATA"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 72,
                  "endLine": 28,
                  "endColumn": 72,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/FOLuiirSbnWY9yrmFlrtX/xknxproject-3.7.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 79,
                  "endLine": 361,
                  "endColumn": 79,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/G-CYjPCRLyW7KLDLPOYDM/python_miio-0.5.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 103,
                  "endLine": 262,
                  "endColumn": 103,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/IQCpAqDO2yVr2dMFA6GFh/bellows-0.39.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 83,
                  "endLine": 28,
                  "endColumn": 83,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ISQTJnWP123xSF0ZCgEhp/aio_geojson_nsw_rfs_incidents-0.7.dist-info/METADATA"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 111,
                  "endLine": 25,
                  "endColumn": 111,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Kq0D9J0irx_KSqfeljijO/p1monitor-3.0.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 99,
                  "endLine": 211,
                  "endColumn": 99,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/MimbAAP6jKj7fozUmY791/sharkiq-1.0.2.dist-info/METADATA"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 79,
                  "endLine": 18,
                  "endColumn": 79,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/NDm6MpAiP2kCUsVbD-WN5/aio_georss_gdacs-0.9.dist-info/METADATA"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 98,
                  "endLine": 24,
                  "endColumn": 98,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/OfATSEE61r8N_jjiok22y/aio_geojson_geonetnz_quakes-0.16.dist-info/METADATA"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 109,
                  "endLine": 25,
                  "endColumn": 109,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/PlcFN2ugeG2DJcpVyBNsj/pyotp-2.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 56,
                  "endLine": 127,
                  "endColumn": 56,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/PlcFN2ugeG2DJcpVyBNsj/pyotp-2.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 56,
                  "endLine": 131,
                  "endColumn": 56,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/PlcFN2ugeG2DJcpVyBNsj/pyotp-2.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 68,
                  "endLine": 138,
                  "endColumn": 68,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/PlcFN2ugeG2DJcpVyBNsj/pyotp-2.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 68,
                  "endLine": 142,
                  "endColumn": 68,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/QgH3L3KKJA718PRCFzeTw/deepdiff-6.7.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 82,
                  "endLine": 38,
                  "endColumn": 82,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/UcOmQoVpzTkiVAWmK27gf/aioairq-0.3.2.dist-info/METADATA"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 0,
                  "endLine": 41,
                  "endColumn": 0,
                  "snippet": {
                    "text": "PAS************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/WLIVk7b8GVa6GbfDLRrFh/odp_amsterdam-6.0.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 103,
                  "endLine": 252,
                  "endColumn": 103,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Xof7Kd6ig3WkoamSx--Fd/python_kasa-0.6.2.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 88,
                  "endLine": 40,
                  "endColumn": 88,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected-0.15.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 96,
                  "endLine": 40,
                  "endColumn": 96,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected/tests/responses/auth/auth_cn_login_pwd.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 9,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected/tests/responses/auth/auth_cn_login_pwd.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 9,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZwStCjowGgPEK0yC9TgoM/pysmartapp-0.3.5.dist-info/METADATA"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 87,
                  "endLine": 25,
                  "endColumn": 87,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Zz2K4hCguhAanjzae5zTq/aio_geojson_geonetnz_volcano-0.9.dist-info/METADATA"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 96,
                  "endLine": 25,
                  "endColumn": 96,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/aScooqstWKzxarH40BBrf/pylast-5.1.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 0,
                  "endLine": 112,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/aScooqstWKzxarH40BBrf/pylast-5.1.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 0,
                  "endLine": 113,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/aavTJ5tEiTo7Cyvd--0qB/python_bsblan-0.5.18.dist-info/METADATA"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 89,
                  "endLine": 205,
                  "endColumn": 89,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/alSRJtxyH9fJtncTX6pV1/websocket_client-1.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 98,
                  "endLine": 44,
                  "endColumn": 98,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/apm_hnQLJgi00BYTESH0k/aio_geojson_client-0.20.dist-info/METADATA"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 100,
                  "endLine": 25,
                  "endColumn": 100,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/bT7QQl6AfoHbxURzBq2-h/redis-5.0.6.dist-info/METADATA"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 79,
                  "endLine": 52,
                  "endColumn": 79,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/bVlOA-tdADXUnT8FdaoZf/PyPasser-0.0.5.dist-info/METADATA"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 2,
                  "endLine": 172,
                  "endColumn": 2,
                  "snippet": {
                    "text": "Rec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/b_vzpAgaC8fUsBSH0YykR/zamg-0.3.6.dist-info/METADATA"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 100,
                  "endLine": 129,
                  "endColumn": 100,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/eZZVVKUiLdPWftJYQVtWe/energyzero-2.1.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 100,
                  "endLine": 236,
                  "endColumn": 100,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/fZJ8a_2lVx5rBzw1XTgHz/Tami4EdgeAPI-2.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 0,
                  "endLine": 38,
                  "endColumn": 0,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/gTWbGWfeDhUrtZjPuC_sw/aioapcaccess-0.4.2.dist-info/METADATA"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 87,
                  "endLine": 21,
                  "endColumn": 87,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/gySl6ri0q4g6V6n3aUurc/asyncsleepiq-1.5.2.dist-info/METADATA"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 0,
                  "endLine": 41,
                  "endColumn": 0,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/h2q9As3b3lxsbu5O7tVki/gridnet-5.0.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 97,
                  "endLine": 217,
                  "endColumn": 97,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/h4SfLieeL3ZwzlWtJM_WX/aiopegelonline-0.0.10.dist-info/METADATA"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 85,
                  "endLine": 24,
                  "endColumn": 85,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/iUGqutbMlQs65xj2Ygy6u/zigpy_xbee-0.20.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 86,
                  "endLine": 21,
                  "endColumn": 86,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/kIXuzXSvoWCp2gOv86k-t/pyvlx-0.2.21.dist-info/METADATA"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 4,
                  "endLine": 48,
                  "endColumn": 4,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/kIXuzXSvoWCp2gOv86k-t/pyvlx-0.2.21.dist-info/METADATA"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 42,
                  "endLine": 77,
                  "endColumn": 42,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/lkYhqyE2nBl4uo1FteQd5/georss_ign_sismologia_client-0.8.dist-info/METADATA"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 110,
                  "endLine": 24,
                  "endColumn": 110,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise-1.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 190,
                  "endLine": 156,
                  "endColumn": 190,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise-1.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 193,
                  "endLine": 200,
                  "endColumn": 193,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/nseH5w1WuL0jHgdWz2kVn/georss_qld_bushfire_alert_client-0.7.dist-info/METADATA"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 114,
                  "endLine": 23,
                  "endColumn": 114,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ot8fgD0X0QQNJyoCdsvyC/titlecase-2.4.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 87,
                  "endLine": 35,
                  "endColumn": 87,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/qQsY_rfvsUUDw9FZcBIB6/geniushub_client-0.7.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 0,
                  "endLine": 68,
                  "endColumn": 0,
                  "snippet": {
                    "text": "HUB************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/qbY-1W43r89T5OxQFgSdq/georss_client-0.17.dist-info/METADATA"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 95,
                  "endLine": 26,
                  "endColumn": 95,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/qf0vNAzfz9yGeGZPapoow/incremental-22.10.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 94,
                  "endLine": 129,
                  "endColumn": 94,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rY31LzPBE10eYGjFdJXyG/aio_georss_client-0.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 99,
                  "endLine": 26,
                  "endColumn": 99,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rgycnBzN053NkusvWzioT/minio-7.1.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 8,
                  "endLine": 73,
                  "endColumn": 8,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rgycnBzN053NkusvWzioT/minio-7.1.12.dist-info/METADATA"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 8,
                  "endLine": 74,
                  "endColumn": 8,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/thg3S5mCItDJGsWlYJmg7/easyenergy-2.1.1.dist-info/METADATA"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 100,
                  "endLine": 230,
                  "endColumn": 100,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/tjVorM6HrTd14NSU7QGbm/aio_geojson_generic_client-0.4.dist-info/METADATA"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 106,
                  "endLine": 26,
                  "endColumn": 106,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/v_2o8NiJw7rWvcX37XiBN/nibe-2.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 77,
                  "endLine": 39,
                  "endColumn": 77,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/x_gliti9yWmuchuJr5HfP/aio_geojson_usgs_earthquakes-0.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 108,
                  "endLine": 24,
                  "endColumn": 108,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/electrasmart/translations/nl.json"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 21,
                  "endLine": 14,
                  "endColumn": 21,
                  "snippet": {
                    "text": "one************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/knx/translations/hu.json"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 21,
                  "endLine": 119,
                  "endColumn": 21,
                  "snippet": {
                    "text": "use************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/knx/translations/hu.json"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 21,
                  "endLine": 321,
                  "endColumn": 21,
                  "snippet": {
                    "text": "use************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.TEXT",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/switchbot/translations/hr.json"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 21,
                  "endLine": 38,
                  "endColumn": 21,
                  "snippet": {
                    "text": "enc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/-t58Yb_EjBjsO3DRYR8ME/sigstore/_internal/oidc/ambient.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 0,
                  "endLine": 35,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_GC************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/0BwGwikjFi2MxAGmmM-Zn/plexapi/server.py"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 65,
                  "endLine": 265,
                  "endColumn": 65,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/3FE1R2lKhHnplPhXBCfvV/gcloud/storage/blob.py"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 16,
                  "endLine": 300,
                  "endColumn": 16,
                  "snippet": {
                    "text": "enc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/3FE1R2lKhHnplPhXBCfvV/gcloud/storage/blob.py"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 16,
                  "endLine": 433,
                  "endColumn": 16,
                  "snippet": {
                    "text": "enc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/4QP_bECGBdCYkxL9FRtn8/scapy/layers/kerberos.py"
                },
                "region": {
                  "startLine": 1665,
                  "startColumn": 63,
                  "endLine": 1665,
                  "endColumn": 63,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/4VSMBDpa7gxNcAThaPhdO/bring_api/const.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5,
                  "endLine": 7,
                  "endColumn": 5,
                  "snippet": {
                    "text": "X-B************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/4q3v5flgDrbm9TAudJPn_/fitbit/api.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 4,
                  "endLine": 25,
                  "endColumn": 4,
                  "snippet": {
                    "text": "req************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/5LlKdxJwtKnzi54IS4wl9/lakeside/__init__.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 4,
                  "endLine": 34,
                  "endColumn": 4,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/5bR2O5fBfa-LYMP6_PITu/pysmappee/config.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 9,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/5bR2O5fBfa-LYMP6_PITu/pysmappee/config.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 9,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/5bR2O5fBfa-LYMP6_PITu/pysmappee/config.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 9,
                  "endLine": 7,
                  "endColumn": 9,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/6PEeu7BmGbuW5XN6GwmSH/pyflick/const.py"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 0,
                  "endLine": 2,
                  "endColumn": 0,
                  "snippet": {
                    "text": "DEF************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 0,
                  "endLine": 4,
                  "endColumn": 0,
                  "snippet": {
                    "text": "MET************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9QNYAyv7di6xfrm6kFgep/oauth2client/__init__.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 0,
                  "endLine": 22,
                  "endColumn": 0,
                  "snippet": {
                    "text": "GOO************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9QNYAyv7di6xfrm6kFgep/oauth2client/__init__.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 0,
                  "endLine": 23,
                  "endColumn": 0,
                  "snippet": {
                    "text": "GOO************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9QNYAyv7di6xfrm6kFgep/oauth2client/clientsecrets.py"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 4,
                  "endLine": 162,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_SE************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth1/rfc5849/parameters.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 12,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth1/rfc5849/parameters.py"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 12,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth2/rfc6749/clients/mobile_application.py"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 17,
                  "endLine": 148,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth2/rfc6749/parameters.py"
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 13,
                  "endLine": 406,
                  "endColumn": 13,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth2/rfc6749/parameters.py"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 13,
                  "endLine": 409,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth2/rfc6749/request_validator.py"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 17,
                  "endLine": 332,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/9XBFrDnDtERgBtpK_hqud/oauthlib/oauth2/rfc6749/request_validator.py"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 17,
                  "endLine": 335,
                  "endColumn": 17,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/AEdTZs7GUH6O53di1d7Jo/anova_wifi/web_socket_containers.py"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 4,
                  "endLine": 71,
                  "endColumn": 4,
                  "snippet": {
                    "text": "AUT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/AZOZsH8yYAtKAGyNmSY0k/acme/_internal/tests/challenges_test.py"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 13,
                  "endLine": 125,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/AZOZsH8yYAtKAGyNmSY0k/acme/_internal/tests/challenges_test.py"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 13,
                  "endLine": 238,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/AZOZsH8yYAtKAGyNmSY0k/acme/_internal/tests/challenges_test.py"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 13,
                  "endLine": 357,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/AZOZsH8yYAtKAGyNmSY0k/acme/_internal/tests/challenges_test.py"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 13,
                  "endLine": 394,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/AZOZsH8yYAtKAGyNmSY0k/acme/_internal/tests/messages_test.py"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 13,
                  "endLine": 363,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth1/rfc5849/authorization_server.py"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 16,
                  "endLine": 221,
                  "endColumn": 16,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth1/rfc5849/authorization_server.py"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 16,
                  "endLine": 222,
                  "endColumn": 16,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth1/rfc5849/authorization_server.py"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 16,
                  "endLine": 83,
                  "endColumn": 16,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth1/rfc5849/parameters.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 12,
                  "endLine": 24,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth1/rfc5849/signature.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 12,
                  "endLine": 34,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth1/rfc5849/signature.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 12,
                  "endLine": 35,
                  "endColumn": 12,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth2/rfc6749/grants/authorization_code.py"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 17,
                  "endLine": 255,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth2/rfc6749/grants/authorization_code.py"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 17,
                  "endLine": 258,
                  "endColumn": 17,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth2/rfc6749/grants/client_credentials.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth2/rfc6749/grants/resource_owner_password_credentials.py"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 17,
                  "endLine": 128,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth2/rfc6749/grants/resource_owner_password_credentials.py"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 17,
                  "endLine": 131,
                  "endColumn": 17,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/BX_iglbL59PGfBKYUBawa/authlib/oauth2/rfc6750/token.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 13,
                  "endLine": 16,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ref************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/CS-LcRO92ODf90CJWl0JX/thermoworks_smoke/thermoworks_smoke.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 13,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ELdSq5JwpEY0nSdUSYtoj/iaqualink/const.py"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 0,
                  "endLine": 3,
                  "endColumn": 0,
                  "snippet": {
                    "text": "AQU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/FB2PdmYzCG0dZFv_eCANi/azure/identity/_credentials/imds.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 0,
                  "endLine": 20,
                  "endColumn": 0,
                  "snippet": {
                    "text": "IMD************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/FjiUNc04MLE9xct8fmNme/pyControl4/account.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 0,
                  "endLine": 17,
                  "endColumn": 0,
                  "snippet": {
                    "text": "APP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/G-CYjPCRLyW7KLDLPOYDM/miio/deviceinfo.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 10,
                  "endLine": 28,
                  "endColumn": 10,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/G-CYjPCRLyW7KLDLPOYDM/miio/tests/test_deviceinfo.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/G-CYjPCRLyW7KLDLPOYDM/miio/tests/test_wifirepeater.py"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 49,
                  "endLine": 173,
                  "endColumn": 49,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/G_u052eKBkW5MydkcZcj0/msal/wstrust_response.py"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 0,
                  "endLine": 37,
                  "endColumn": 0,
                  "snippet": {
                    "text": "SAM************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/G_u052eKBkW5MydkcZcj0/msal/wstrust_response.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 0,
                  "endLine": 38,
                  "endColumn": 0,
                  "snippet": {
                    "text": "SAM************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 13,
                  "endLine": 235,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 13,
                  "endLine": 236,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 13,
                  "endLine": 250,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 13,
                  "endLine": 251,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 13,
                  "endLine": 282,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 13,
                  "endLine": 283,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 13,
                  "endLine": 309,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 13,
                  "endLine": 310,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 13,
                  "endLine": 315,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 13,
                  "endLine": 316,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 13,
                  "endLine": 339,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 13,
                  "endLine": 340,
                  "endColumn": 13,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 9,
                  "endLine": 79,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 91,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 9,
                  "endLine": 92,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 9,
                  "endLine": 98,
                  "endColumn": 9,
                  "snippet": {
                    "text": "oau************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 8,
                  "endLine": 105,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 8,
                  "endLine": 111,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 8,
                  "endLine": 117,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 8,
                  "endLine": 123,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 8,
                  "endLine": 129,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 8,
                  "endLine": 135,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 8,
                  "endLine": 141,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 8,
                  "endLine": 147,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 8,
                  "endLine": 153,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 8,
                  "endLine": 159,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 8,
                  "endLine": 165,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 8,
                  "endLine": 171,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 8,
                  "endLine": 177,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 8,
                  "endLine": 183,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 8,
                  "endLine": 189,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 8,
                  "endLine": 195,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 8,
                  "endLine": 201,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 0,
                  "endLine": 22,
                  "endColumn": 0,
                  "snippet": {
                    "text": "KAM************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 8,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 8,
                  "endLine": 39,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 8,
                  "endLine": 45,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 8,
                  "endLine": 51,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 8,
                  "endLine": 57,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 8,
                  "endLine": 63,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 8,
                  "endLine": 69,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 8,
                  "endLine": 75,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 8,
                  "endLine": 81,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 8,
                  "endLine": 87,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 8,
                  "endLine": 93,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/KL2asQlPqkPvoBql9cCXU/renault_api/const.py"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 8,
                  "endLine": 99,
                  "endColumn": 8,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/MiXFLtzl4l21W99bHry_V/ismartgate/tests/test_init.py"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 48,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/MimbAAP6jKj7fozUmY791/sharkiq/const.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 0,
                  "endLine": 10,
                  "endColumn": 0,
                  "snippet": {
                    "text": "EU_************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/MimbAAP6jKj7fozUmY791/sharkiq/const.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 0,
                  "endLine": 6,
                  "endColumn": 0,
                  "snippet": {
                    "text": "SHA************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Ohj_jHOk_ZQ-wjv6vTkuV/ondilo/ondilo.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 0,
                  "endLine": 9,
                  "endColumn": 0,
                  "snippet": {
                    "text": "END************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Px7brazESqN3fcpEb-0Rx/crownstone_core/protocol/Characteristics.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Ses************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/QP8sCKVd4rCmQiLptvAq5/pyps4_2ndscreen/oauth.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 0,
                  "endLine": 11,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CLI************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/S4oVnyOAxeKnJrrHpmkLb/logi_circle/const.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 0,
                  "endLine": 16,
                  "endColumn": 0,
                  "snippet": {
                    "text": "TOK************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/T0Y8aiJlE7B0bMaT5CEtB/yalesmartalarmclient/const.py"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 0,
                  "endLine": 21,
                  "endColumn": 0,
                  "snippet": {
                    "text": "YAL************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/U1OFTVu57HmHy_KwAif1J/whirlpool/backendselector.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 13,
                  "endLine": 28,
                  "endColumn": 13,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/U1OFTVu57HmHy_KwAif1J/whirlpool/backendselector.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/U1OFTVu57HmHy_KwAif1J/whirlpool/backendselector.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 13,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/U1OFTVu57HmHy_KwAif1J/whirlpool/backendselector.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 13,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Wt6fRIKldyEiU7iZ3DGGf/pyoverkiz/const.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 0,
                  "endLine": 18,
                  "endColumn": 0,
                  "snippet": {
                    "text": "SOM************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/X3eKailNhvJ7lXxs6TIc8/canary/const.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 0,
                  "endLine": 29,
                  "endColumn": 0,
                  "snippet": {
                    "text": "ATT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/XWT0RaCOmLVj4NV-XRNqo/ecdsa/test_ecdh.py"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 0,
                  "endLine": 326,
                  "endColumn": 0,
                  "snippet": {
                    "text": "gsh************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Xof7Kd6ig3WkoamSx--Fd/kasa/aestransport.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 8,
                  "endLine": 123,
                  "endColumn": 8,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected/const.py"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 0,
                  "endLine": 56,
                  "endColumn": 0,
                  "snippet": {
                    "text": "AUT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected/const.py"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 0,
                  "endLine": 58,
                  "endColumn": 0,
                  "snippet": {
                    "text": "AUT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/adobepass.py"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "endLine": 62,
                  "endColumn": 9,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/adobepass.py"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 9,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/adobepass.py"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 9,
                  "endLine": 76,
                  "endColumn": 9,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/aenetworks.py"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_TH************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/americastestkitchen.py"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 17,
                  "endLine": 188,
                  "endColumn": 17,
                  "snippet": {
                    "text": "X-A************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/asobichannel.py"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 25,
                  "endLine": 13,
                  "endColumn": 25,
                  "snippet": {
                    "text": "X-M************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/atvat.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 4,
                  "endLine": 30,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_EN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/berufetv.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 22,
                  "endLine": 28,
                  "endColumn": 22,
                  "snippet": {
                    "text": "X-A************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/bibeltv.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "AUT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/bitchute.py"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 4,
                  "endLine": 215,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_TO************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/cbc.py"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 4,
                  "endLine": 416,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_TO************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/cybrary.py"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 4,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/dailymotion.py"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 13,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/dangalplay.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 4,
                  "endLine": 17,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/dangalplay.py"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 4,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_SE************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/digitalconcerthall.py"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 17,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/espn.py"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 4,
                  "endLine": 333,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/fox.py"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 4,
                  "endLine": 60,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/foxsports.py"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 17,
                  "endLine": 36,
                  "endColumn": 17,
                  "snippet": {
                    "text": "x-a************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/imggaming.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/loom.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 20,
                  "endLine": 93,
                  "endColumn": 20,
                  "snippet": {
                    "text": "vid************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/mzaalo.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 17,
                  "snippet": {
                    "text": "Ocp************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/nationalgeographic.py"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 4,
                  "endLine": 83,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/nfl.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 9,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/nhk.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 26,
                  "endLine": 32,
                  "endColumn": 26,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/npr.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 17,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/polskieradio.py"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 35,
                  "endLine": 262,
                  "endColumn": 35,
                  "snippet": {
                    "text": "x-a************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/prosiebensat1.py"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 4,
                  "endLine": 382,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_EN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/redbee.py"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 4,
                  "endLine": 227,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_GI************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/redbulltv.py"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 17,
                  "endLine": 131,
                  "endColumn": 17,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/scrippsnetworks.py"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AW************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/shahid.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AW************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/shahid.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 17,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/skynewsau.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4,
                  "endLine": 28,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/toutv.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 21,
                  "endLine": 46,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/trunews.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 17,
                  "endLine": 27,
                  "endColumn": 17,
                  "snippet": {
                    "text": "app************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/twitch.py"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 9,
                  "endLine": 52,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Vid************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/videa.py"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 4,
                  "endLine": 78,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_ST************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/viki.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/vimeo.py"
                },
                "region": {
                  "startLine": 1417,
                  "startColumn": 13,
                  "endLine": 1417,
                  "endColumn": 13,
                  "snippet": {
                    "text": "vid************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/vrt.py"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 13,
                  "endLine": 236,
                  "endColumn": 13,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/vtm.py"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 17,
                  "endLine": 47,
                  "endColumn": 17,
                  "snippet": {
                    "text": "x-a************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/weverse.py"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 13,
                  "snippet": {
                    "text": "x-a************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/wykop.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 17,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 9,
                  "endLine": 106,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 9,
                  "endLine": 116,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 9,
                  "endLine": 129,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 9,
                  "endLine": 142,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 9,
                  "endLine": 155,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 9,
                  "endLine": 170,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 9,
                  "endLine": 195,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 9,
                  "endLine": 222,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 9,
                  "endLine": 234,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 9,
                  "endLine": 85,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/youtube.py"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 9,
                  "endLine": 95,
                  "endColumn": 9,
                  "snippet": {
                    "text": "INN************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/zingmp3.py"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 13,
                  "endLine": 65,
                  "endColumn": 13,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/bdADd60pMcz_BMURMEySE/pubnub/endpoints/access/grant_token.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 4,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "GRA************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/bdADd60pMcz_BMURMEySE/pubnub/endpoints/access/revoke_token.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 4,
                  "snippet": {
                    "text": "REV************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/bh0FdCA5S4CpvI0CMOjIv/pylitterbot/session.py"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 4,
                  "endLine": 156,
                  "endColumn": 4,
                  "snippet": {
                    "text": "AUT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/c9SsYPD3sGOw64ZTmSV_L/dbus_fast/signature.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_to************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/cHfmnc5aSnnZqKJfvRWOD/pyezviz/constants.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 0,
                  "endLine": 23,
                  "endColumn": 0,
                  "snippet": {
                    "text": "MQT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/cHfmnc5aSnnZqKJfvRWOD/pyezviz/constants.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 0,
                  "endLine": 24,
                  "endColumn": 0,
                  "snippet": {
                    "text": "APP************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/g3uy7NbFoOnwkDXet6GgJ/jose/jws.py"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 12,
                  "endLine": 65,
                  "endColumn": 12,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/gPZY62AQMvSfxDa0PNIOM/sucks/__init__.py"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 4,
                  "endLine": 119,
                  "endColumn": 4,
                  "snippet": {
                    "text": "SEC************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/gf1zLT7E9JefBuzMLO_Yp/pyicloud/base.py"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 13,
                  "endLine": 399,
                  "endColumn": 13,
                  "snippet": {
                    "text": "X-A************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/kIXuzXSvoWCp2gOv86k-t/test/config_test.py"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 67,
                  "endLine": 31,
                  "endColumn": 67,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/k_PNyB53F5ZWYRnE7Vqto/PyTado/http/http.py"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 17,
                  "endLine": 202,
                  "endColumn": 17,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/k_PNyB53F5ZWYRnE7Vqto/PyTado/http/http.py"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 17,
                  "endLine": 231,
                  "endColumn": 17,
                  "snippet": {
                    "text": "cli************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/lIdTx99IdfLaLKm5ELvAi/prawcore/const.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 0,
                  "endLine": 6,
                  "endColumn": 0,
                  "snippet": {
                    "text": "ACC************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/lIdTx99IdfLaLKm5ELvAi/prawcore/const.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 0,
                  "endLine": 8,
                  "endColumn": 0,
                  "snippet": {
                    "text": "REV************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/m3fIscow85tvhtfGyhmQu/google/auth/_default.py"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 0,
                  "endLine": 63,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_AW************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/m3fIscow85tvhtfGyhmQu/google/auth/aws.py"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 24,
                  "endLine": 644,
                  "endColumn": 24,
                  "snippet": {
                    "text": "imd************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/m3fIscow85tvhtfGyhmQu/google/oauth2/credentials.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 0,
                  "endLine": 51,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_GO************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/m3fIscow85tvhtfGyhmQu/google/oauth2/gdch_credentials.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 0,
                  "endLine": 30,
                  "endColumn": 0,
                  "snippet": {
                    "text": "SER************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/m3fIscow85tvhtfGyhmQu/google/oauth2/service_account.py"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 0,
                  "endLine": 86,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_GO************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mJ9nT1RT5Dz81QQ8PUPJC/lacrosse_view/__init__.py"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 13,
                  "endLine": 164,
                  "endColumn": 13,
                  "snippet": {
                    "text": "fir************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise/plugins/fcm/oauth.py"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 4,
                  "endLine": 66,
                  "endColumn": 4,
                  "snippet": {
                    "text": "def************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise/plugins/office365.py"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 17,
                  "endLine": 438,
                  "endColumn": 17,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise/plugins/twist.py"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 15,
                  "endLine": 340,
                  "endColumn": 15,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ms5LIeX7Efn3-JK6Bkuqo/yalexs/api_common.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 0,
                  "endLine": 28,
                  "endColumn": 0,
                  "snippet": {
                    "text": "HEA************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ms5LIeX7Efn3-JK6Bkuqo/yalexs/api_common.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 0,
                  "endLine": 29,
                  "endColumn": 0,
                  "snippet": {
                    "text": "HEA************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/oDK-n2wYsdKweLYm6sVUD/google_auth_oauthlib/interactive.py"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 13,
                  "endLine": 160,
                  "endColumn": 13,
                  "snippet": {
                    "text": "tok************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rgycnBzN053NkusvWzioT/minio/__init__.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 12,
                  "endLine": 23,
                  "endColumn": 12,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rgycnBzN053NkusvWzioT/minio/__init__.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 12,
                  "endLine": 24,
                  "endColumn": 12,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rgycnBzN053NkusvWzioT/minio/api.py"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 12,
                  "endLine": 100,
                  "endColumn": 12,
                  "snippet": {
                    "text": "sec************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/rgycnBzN053NkusvWzioT/minio/api.py"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 12,
                  "endLine": 99,
                  "endColumn": 12,
                  "snippet": {
                    "text": "acc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/sfXD4XJv_yb2LQ5kUBrqe/pyschlage/auth.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 0,
                  "endLine": 23,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/sfXD4XJv_yb2LQ5kUBrqe/pyschlage/auth.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 0,
                  "endLine": 26,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CLI************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/t2Q6ZQuhXoQbFEmzQAmr_/jaraco/abode/helpers/urls.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 0,
                  "endLine": 6,
                  "endColumn": 0,
                  "snippet": {
                    "text": "OAU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/v1z3mYVe5nOgTKk8H_vaO/vultr/vultr.py"
                },
                "region": {
                  "startLine": 593,
                  "startColumn": 17,
                  "endLine": 593,
                  "endColumn": 17,
                  "snippet": {
                    "text": "def************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/vRidE8gVpPxV9oNWVA-mq/pydrawise/auth.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 0,
                  "endLine": 11,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CLI************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/vmRbeHmLDeAe_NHTNh_lY/deebot_client/authentication.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 0,
                  "endLine": 34,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_CL************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/vmRbeHmLDeAe_NHTNh_lY/deebot_client/authentication.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 0,
                  "endLine": 35,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_AU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/vmRbeHmLDeAe_NHTNh_lY/deebot_client/authentication.py"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 0,
                  "endLine": 36,
                  "endColumn": 0,
                  "snippet": {
                    "text": "_AU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/vuTs0ANhxU3WZ3j1xakSj/pyeconet/api.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 0,
                  "endLine": 25,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CLE************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/xtTA-NzK0ijwBlDBEBmZd/btsmarthub_devicelist/__init__.py"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 17,
                  "endLine": 124,
                  "endColumn": 17,
                  "snippet": {
                    "text": "aut************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/xtTA-NzK0ijwBlDBEBmZd/btsmarthub_devicelist/__init__.py"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 8,
                  "endLine": 148,
                  "endColumn": 8,
                  "snippet": {
                    "text": "pas************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/yorCgOichTdgCeYhWi_YC/pyroute2/netlink/generic/wireguard.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 19,
                  "endLine": 25,
                  "endColumn": 19,
                  "snippet": {
                    "text": "pri************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/auth/mfa_modules/totp.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 0,
                  "endLine": 35,
                  "endColumn": 0,
                  "snippet": {
                    "text": "DUM************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/aladdin_connect/api.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 0,
                  "endLine": 11,
                  "endColumn": 0,
                  "snippet": {
                    "text": "API************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/aladdin_connect/const.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 0,
                  "endLine": 6,
                  "endColumn": 0,
                  "snippet": {
                    "text": "OAU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/google_tasks/const.py"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 0,
                  "endLine": 8,
                  "endColumn": 0,
                  "snippet": {
                    "text": "OAU************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/mix.py"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 8,
                  "endLine": 181,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/mix.py"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 8,
                  "endLine": 210,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/mix.py"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 8,
                  "endLine": 217,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/mix.py"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 8,
                  "endLine": 57,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/mix.py"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 8,
                  "endLine": 72,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/storage.py"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 8,
                  "endLine": 184,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 8,
                  "endLine": 130,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 8,
                  "endLine": 140,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 8,
                  "endLine": 173,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 8,
                  "endLine": 183,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 8,
                  "endLine": 314,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 8,
                  "endLine": 321,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 8,
                  "endLine": 330,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 8,
                  "endLine": 337,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 8,
                  "endLine": 363,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 8,
                  "endLine": 370,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 8,
                  "endLine": 379,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 8,
                  "endLine": 386,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 8,
                  "endLine": 44,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 8,
                  "endLine": 54,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 8,
                  "endLine": 87,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/growatt_server/sensor_types/tlx.py"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 8,
                  "endLine": 97,
                  "endColumn": 8,
                  "snippet": {
                    "text": "api************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/html5/notify.py"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 0,
                  "endLine": 96,
                  "endColumn": 0,
                  "snippet": {
                    "text": "WS_************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/tellduslive/const.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 0,
                  "endLine": 20,
                  "endColumn": 0,
                  "snippet": {
                    "text": "NOT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_js/const.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 4,
                  "snippet": {
                    "text": "_AD************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_js/const.py"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 3,
                  "snippet": {
                    "text": "F_A************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_js/const.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5,
                  "endLine": 22,
                  "endColumn": 5,
                  "snippet": {
                    "text": "ADD************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_js/const.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 0,
                  "endLine": 26,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_js/const.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 0,
                  "endLine": 27,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_js/const.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 0,
                  "endLine": 28,
                  "endColumn": 0,
                  "snippet": {
                    "text": "CON************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/components/zwave_me/config_flow.py"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13,
                  "endLine": 35,
                  "endColumn": 13,
                  "snippet": {
                    "text": "loc************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.CODE",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/usr/src/homeassistant/homeassistant/helpers/config_entry_oauth2_flow.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 0,
                  "endLine": 38,
                  "endColumn": 0,
                  "snippet": {
                    "text": "DAT************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/5qaGqdoh0ZeBT41EbJGp9/bluecurrent_api-1.2.3.dist-info/METADATA"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 25,
                  "endLine": 20,
                  "endColumn": 25,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 2,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 2,
                  "endLine": 11,
                  "endColumn": 2,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 2,
                  "endLine": 9,
                  "endColumn": 2,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 9,
                  "endLine": 239,
                  "endColumn": 9,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 9,
                  "endLine": 241,
                  "endColumn": 9,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 9,
                  "endLine": 254,
                  "endColumn": 9,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Id8a3drvS65TkhgKC__WR/requests_oauthlib/oauth1_session.py"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 5,
                  "endLine": 85,
                  "endColumn": 5,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/americastestkitchen.py"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 20,
                  "endLine": 96,
                  "endColumn": 20,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/blogger.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 16,
                  "endLine": 16,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/clyp.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 16,
                  "endLine": 24,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/espn.py"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 26,
                  "endLine": 302,
                  "endColumn": 26,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/mediaset.py"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 16,
                  "endLine": 108,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/trunews.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 19,
                  "endLine": 20,
                  "endColumn": 19,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/twentythreevideo.py"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 16,
                  "endLine": 21,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/viddler.py"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 16,
                  "endLine": 58,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/zattoo.py"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 16,
                  "endLine": 305,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/zype.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 16,
                  "endLine": 20,
                  "endColumn": 16,
                  "snippet": {
                    "text": "htt************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise-1.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 4,
                  "endLine": 257,
                  "endColumn": 4,
                  "snippet": {
                    "text": "mai************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise-1.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 4,
                  "endLine": 263,
                  "endColumn": 4,
                  "snippet": {
                    "text": "mai************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.GENERIC.URL",
          "message": {
            "text": "Hardcoded secrets were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/mViPcD4SwOgvgHSiF6L0o/apprise-1.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 9,
                  "endLine": 329,
                  "endColumn": 9,
                  "snippet": {
                    "text": "mai************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 154,
                  "endLine": 10,
                  "endColumn": 154,
                  "snippet": {
                    "text": "InR************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 136,
                  "endLine": 10,
                  "endColumn": 136,
                  "snippet": {
                    "text": "Jhb************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 110,
                  "endLine": 11,
                  "endColumn": 110,
                  "snippet": {
                    "text": "InR************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 92,
                  "endLine": 11,
                  "endColumn": 92,
                  "snippet": {
                    "text": "Jhb************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 14,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/7-z6RCC0xbMZuB3dkrA4q/meteofrance_api/const.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 135,
                  "endLine": 9,
                  "endColumn": 135,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/S0a8NctvcQaKIDy_kaXfh/PyJWT-2.8.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 4,
                  "endLine": 90,
                  "endColumn": 4,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected/tests/responses/auth/auth_cn_login_pwd.json"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/Y_YZvtayIn8e4h7dUYGCn/bimmer_connected/tests/responses/auth/auth_cn_login_pwd.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 26,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/adultswim.py"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 30,
                  "endLine": 154,
                  "endColumn": 30,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/shahid.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 19,
                  "endLine": 20,
                  "endColumn": 19,
                  "snippet": {
                    "text": "'2R************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/shahid.py"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 31,
                  "endLine": 39,
                  "endColumn": 31,
                  "snippet": {
                    "text": "AKI************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/ZpgYKRpZ_lGVuc3Dmxkhs/yt_dlp/extractor/shahid.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 30,
                  "snippet": {
                    "text": "'4W************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/g3uy7NbFoOnwkDXet6GgJ/jose/jws.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9,
                  "endLine": 34,
                  "endColumn": 9,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/g3uy7NbFoOnwkDXet6GgJ/jose/jws.py"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 21,
                  "endLine": 65,
                  "endColumn": 21,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/g3uy7NbFoOnwkDXet6GgJ/jose/jwt.py"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 23,
                  "endLine": 110,
                  "endColumn": 23,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/g3uy7NbFoOnwkDXet6GgJ/jose/jwt.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 40,
                  "endColumn": 9,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        },
        {
          "ruleId": "REQ.SECRET.KEYS",
          "message": {
            "text": "Secret keys were found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///tmp/tmpwd0bdyx1/unpacked/filesystem/blobs/sha256/2b4c9de733f17ec4ce87cf718e6d301ba3ad00fe70efae6a8af71e0297b89fdb/root/.cache/uv/archive-v0/g3uy7NbFoOnwkDXet6GgJ/python_jose-3.3.0.dist-info/METADATA"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 6,
                  "endLine": 116,
                  "endColumn": 6,
                  "snippet": {
                    "text": "eyJ************"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
